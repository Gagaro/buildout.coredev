[buildout]
extends = sources.cfg versions.cfg
extensions = mr.developer

develop = src/*
eggs =
find-links = http://dist.repoze.org/zope2/dev
unzip = true

parts =
    instance
    test
    coverage-report
    coverage-test
    dependencies
    zopepy


[environment]
zope_i18n_compile_mo_files = true
zope_i18n_allowed_languages = en


[instance]
recipe = plone.recipe.repoze2instance
debug = True
environment = environment
eggs =
    ${buildout:eggs}
    Plone [test]
    repoze.profile

zcml =
    Products.CMFPlone
    Products.CMFPlone-meta
    Products.CMFPlone-overrides


[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
    Products.ATContentTypes
    Products.ATReferenceBrowserWidget
    Products.Archetypes
    Products.CMFCore
    Products.CMFDefault
    Products.CMFDynamicViewFTI
    Products.CMFFormController
    Products.CMFTestCase
    Products.DCWorkflow
    Products.ExtendedPathIndex
    Products.GenericSetup
    Products.MimetypesRegistry
    Products.PasswordResetTool
    Products.PloneLanguageTool
    Products.PlonePAS
    Products.PloneTestCase
    Products.PluggableAuthService
    Products.PluginRegistry
    Products.PortalTransforms
    Products.ResourceRegistries
    Products.statusmessages
    Products.validation
    borg.localrole
    five.localsitemanager
    plone.app.content
    plone.app.contentmenu
    plone.app.controlpanel
    plone.app.form
    plone.app.i18n
    plone.app.layout
    plone.app.users
    plone.app.viewletmanager
    plone.app.vocabularies
    plone.app.workflow
    plone.browserlayer
    plone.fieldsets
    plone.i18n
    plone.indexer
    plone.intelligenttext
    plone.keyring
    plone.locking
    plone.memoize
    plone.navigation
    plone.protect
    plone.session
    plone.sequencebatch
    plone.theme

environment = environment
defaults = ['-v', '--exit-with-status', '--auto-color', '--auto-progress']


[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']
environment = environment


[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'report')


[dependencies]
recipe = z3c.recipe.depgraph
eggs = Plone
variants = base tred
exclude =
    ClientForm
    docutils
    Markdown
    mechanize
    meld3


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy
