PLIP 9309: Better search for East Asian (multi-byte) languages.
===============================================================

This plip has been implemented as a package successfully.
PLIP ticket: https://dev.plone.org/plone/ticket/9309

Important
---------

This product does NOT require "sitecustomize.py" for Plone 4.
So, this should work simply with Plone 4 out-of-the-box.

But for older Plone use, eg. Plone 2.5, 30, 3.1, 3.2, 3.3,
you might need "sitecustomize.py" in the site-packages directory
of your python path with following two lines included.

import sys
sys.sitedefaultencoding('utf-8')

To do
-----

- More tests with Chinese, Korean, Thai and Japanese languages.

- Integration into Plone 4 core code. Not as a package.


Further ideas
-------------

- Adding some user options for searching,
 For example, the normalization option for Hiragana and Katakana.
 Hiragana is a set of 50 phonetic characters, and Katakana is also
 50 phonetic characters.  Sometimes, we want to see them same.

- Applying this feature to Zope or Plone code directly rather than
 patching.  Making this feature available without any add-on.

- Improving(modifying) ZCTextIndex of Zope


Background Knowledge
--------------------

CJK languages are sharing their part of character codes.  So,each
languages uses their own code area and shared area.  This shared
area is called CJK Unified Ideographs.

Some meay think Chines language has 3 languaes.  Yes, Plone has
zh-cn, zh-hk, zh-tw tanslation files.  Actually, Chinese has far
more variants and only three of them are supported in Plone.  Those
three have different figure of characters, but using same CJK code
space.  All three Chinse languages does not use white-space to
separate words.  So, from the view point of Unicode Splitting and
searching, we deal them as single Chinese language.

Some may think Korean language is using Hangul characters.  Yes,
modern correspondence is written in Hangul, but they also use
Kanji(CJK Unified Ideographs) characters occasionally.  Korean
use white-space to devide a sentence into pieces, but not to
separate to a word.  Also, way of putting a space in a sentence
is different between South Korea and North Korea.

Some may thnk Vietnamese is also a family of CJK.  Yes, it is
specified as CJKV.  But actually, modern Vietnamese use western
alphabets characters and use space for word separtaion.  We
omitted Vietnamese from our scope, since modern Vietnamese are
already covered with original search logic.

Some may think Thai is not a family of CJK.  Yes, they use their
own ideographics and does not share these characters wich CJK
languages. But Thai language does not use space to separate words.
So, white-space based word separation does not work on Thai
languages and we include Thai in the scope.

For covinience, let us call these four languages as CJKT hereafter.


Summary of changes
------------------

- Add-on patch product for better search for East Asian Languages.

- Monkey patching to Products.CMFPlone.UnicodeSplitter.

- Moneky patching to Products.ZCTextIndex.Lexicon.  This changes
 the behaviour of indexing and searching.

- When indexing, process method of Splitetr will be called as
 same as same as the original behaviour.  But after that, the
 processGlob of Splitter will be called and then newly created
 process_post_glob method will be called, instead of process
 method of Splitter is called as original behaviour.

- Inside the splitter, East Asian Languages(CJKT) and other
 languages(non-CJKT) are handled differently.  Code range is
 specified in config.py.  Nothing different for non-CJKT languages,
 so that non-CJKT will be splitted with r'\W'.  For CJKT languages,
 the text will be splitted with Bigram method and the last one
 character will also be counted.

- Affected Languages
   - Chinese(zh-cn, zh-hk, zh-tw)
   - Japanese(ja)
   - Korean(ko)
   - Thai(th)


Needed documentation changes
----------------------------

The old documentation does not need to be changed.  But Now, People
can say Plone has full text search feature for ALL languages as
out-of-the-box.


Backwards compatibility
-----------------------

This plip should work with Plone 3, Plone 2.5 and Plone 2 as well.
This need to be tested and packaged as a classic Product for them.


Credits
-------

Manabu Terada - Leader
Mikio Hokari - Programmer
Takeshi Yamamoto - Documentation and Testing
Naotaka Hotta - Support and Documentation
Jonathan Lewis - Moral support and documentation

