Framework team review of PLIP 12844 (Switch to new version of TinyMCE)
Reviewed by: David Glick
Review date: 12 May 2012

Review steps:
- Ran 4.3 coredev buildout with -c plips/plip12844-tinymce.cfg
- Created site, ran upgrade step for Products.TinyMCE.
- Tested manually in browser.
- Ran automated tests for Products.TinyMCE
- Skimmed through a diff between Products.TinyMCE master and the branch to look
  for anything noteworthy (but I didn't pay attention to upstream changes in tinymce)

Pros:
- Supports IE9, Plone 3
- Already used in production by some
- Resource compressor. I confirmed the JS resources are now served as one minified
  440kb blob. (Some additional items like translation, stylesheets, & settings are
  still loaded separately.) The merging is done by a browser view that fetches items
  via traversal so they can still be overridden as they used to.
- Improved Dexterity compatibility
- Merged Link and Image dialog implementations
- Documentation of how to update from upstream at http://readthedocs.org/docs/productstinymce/en/latest/

Concerns:
- The new link/image dialog implementation seems to function fine and have feature
  parity with the old one, but there are a number of visual glitches which make it
  look jarring and unfinished:
  1. Something is too wide so the Link Browser floats below, mostly off screen.
  2. The text is too big compared to elsewhere in the theme.
  3. A different icon set is used than elsewhere in Plone. We should be consistent.
  4. The standard Plone icons for content types are not aligned with their content
     item.
  5. The buttons are a weird style that is different from elsewhere in Plone. We
     should be consistent. (This is true for all tinymce dialogs, not just the
     custom Plone ones.)
  6. The "Advanced options" page has a blank dropdown of unclear function.

- The old version, 1.2, had support for multiple TinyMCE-enhanced fields on one
  page, with field-specific settings. This was accomplished by storing the settings
  for each field in the 'title' attribute of its textarea. The new version has
  no mechanism for doing this, since the settings are loaded as part of the
  cached tiny_mce_gzip.js. Can we keep the compressed resources but go back to
  the old way of loading the settings? We can put them in a data attribute rather
  than 'title' so that they don't show up when you hover over the field. If I'm
  reading correctly, this will also make it possible to always load
  tiny_mce_gzip.js from the same location (which is good for caching), rather than
  loading it relative to the current context so that context can be used to obtain
  settings.

- The styles dropdown is not working for me. I created a new line of text and
  tried to make it a heading, and that did not work. (Possibly helped by
  https://github.com/collective/tinymce/pull/6 ?)

- The "definition list" feature does not seem to work. It creates the list and
  I can enter the <dt>, but when I hit enter it does not switch to editing a <dd>

- There is a test failure in test_getStyles which should be fixed.

- Upstream tinymce is now up to version 3.5.0.1 but Products.TinyMCE only has
  3.4.7. Is there any reason not to upgrade it further?

- We should probably forward-port https://github.com/plone/Products.TinyMCE/commit/4937f74b8485c5800347c204385c3f0923b45e81
  and https://github.com/plone/Products.TinyMCE/commit/9fb8b4d9a71a7db7089758d570376cf0a52e4b0b from master

- Needs to be updated to not register the old resources when a Plone site is
  created.

- The upgrade step needs to be run from plone.app.upgrade when Plone is upgraded.


Conclusion:
This is promising work, but the concerns listed above should be addressed before
it's ready to merge.  Tom, if you don't have capacity to handle the adjustments
on your own, please feel free to ask for help on plone-developers. It would be
a shame if we can't get this ready to go for 4.3.
