PLIP 8699: Make byline use the publication date if it exists
============================================================

PLIP ticket: https://dev.plone.org/plone/ticket/8699

Review by Alec Mitchell (alecm)

The PLIP was reviewed on Mac OS X 10.7.4 using python 2.7.3 and Chrome 20.0.1132.47

Review steps
------------

- Run tests in modified packages and Products.CMFPlone

- Review commits in GitHub

- Test TTW

Notes and observations
----------------------

- Code quality is good

- I don't have a big issue with the control panel location, since it
  fits well with the "Allow anyone to view 'about' information" that
  is already there.  However, I think it might make more
  sense in the current "Themes" control panel, along with the icons,
  links and overlay stuff.

- I don't like the fact that this hardcodes the "published" state.  It
  should either use a configurable set of states to determine when to
  show this behavior (which published selected by default), or ignore
  the state entirely.  Not all sites will have workflows with a
  "published" state, and it's best to avoid a hard dependency on a
  particular state name in plone core code.  Why is this necessary?

- Why not simply use ``effective()`` and leave it at that?  Perhaps
  only show effective if it is set and if one of a admin selectable
  review states is set, but that may be overkill.

- I like the fact that the modification date is shown only if the
  content has been modified since the pubdate.  However, that may come
  as a surprise in some cases, for some users.

- I believe the use of workflow internals is unnecessary and quite
  possibly problematic.  wf_tool.getInfoFor is a public method, and
  workflow states and transition dates are protected by permissions on
  a per workflow basis.  If viewing the state and/or date is
  restricted by the workflow, then that restriction should be
  respected by the code.  It appears that wf.getInfoFor returns a
  default value if the guard prevents access, that default should be
  used explicitly and the date should not be included if the default
  is returned.  The default plone workflows have no guard expressions
  on the last transition ``time`` or ``review_state``, but workflows that
  provide such guards should be respected.

Conclusion
----------

I believe the implementation should be made more generic as described
above.  It should either allow explicit selection of workflow states,
or simply always show the Effective Date when enabled.  Additionally,
it should avoid using workflow internals, and instead use the
appropriate workflow tool APIs so that explicit guards on the workflow
variables are respected when present.
