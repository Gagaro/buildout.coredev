PLIP 9321: Reimplement the search form with an eye on usability
===============================================================

This plip is ready for review

Plip ticket: https://dev.plone.org/plone/ticket/9321
The final Proposal is https://dev.plone.org/plone/ticket/9321#comment:10

Branches made
-------------

https://svn.plone.org/svn/plone/Plone/branches/plip9321-searchform
https://svn.plone.org/svn/plone/plone.app.controlpanel/branches/plip9321-searchform


Changes
-------

 1. removed categories from advances search if no categories are defined in the site.
 2. remove workflow states for anonymous visitors (configurable)
 3. only list content types and workflow states for which at least one object exists
 4. add display options for sort order and batch size (configurable).
    This required to set different sort orders. Without setting a
    specific sort order, the catalog sorts ascendenting. When sorting
    by date, we want an descendenting sort order.  The search form
    uses the queryCatalog script, that is a hack to compose query form
    the request (also by interpreting request parameters with a
    special format). To get the sort_order into the query, I set the
    request.form['sort_order'] value to descendenting where
    required. Manipulating the request from a page template is not a
    good practice and adding a kwarg to queryCatalog would be cleaner,
    but I choose it to keep it backward compatibile.
 5. remove title and description input boxes, just leave Searchable Text. 
    (Configuration options excist, but are not used atm)
 6. collapse "New Item since", "Item Type", "Author" and "Review State" by 
    default if javascript is enabled, which leaves "Search Text", 
    "Categories", "Sort on" and batch size. (configurable)

 7. If an advanced search happened, the variables are encoded into the link 
    to the advanced search and the user get's back the form with the options 
    he choose. The form get's a clear button (status: not done)
   
 * Control panel work for the points above: All Properties are stored
   in portal_properties/site_properties. There was the option to use
   plone.registry that is used by some other PLIPs now. I choose to
   save it in portal_properties 'cause the two other configuration
   values both are stored there.

    1. status:dropped. (An option is not needed here, I can't think of
       a situation where it brings a usability improvement to show
       it. Fewer Options in the control panel are more valuable.)
    2. status:done
    3. status:dropped. (See 1.)
    4. status:done
    5. status: configuration options added to control pannel, but part
       of the template still commented out.
    6. status:done

 * added a helper view to plone.app.controlpanel.search.SearchFormOptions. 
   It's not really part of the control panel and should be located somwhere else.
   But it's only a helper to get the option defined in the control panel schema.
   Maybe I move it to plone.app.search if this package get's into Plone 4.
 

To do
-----
 * Add a link to the search results page to go back to the advanced search 
   form while retaining the choosen options.  (see 7.)
 * move the javascript code into portal_javascript
 * write tests
 * All ui texts have to be reviewed and many of them have to be turned into msgids.
 * see if there is documention that has to be changes


Changes to documentation
------------------------

The Documentation on Plone.org has to be reviewed and the options in the control 
panel have to be documented.
Technically, the changes should be mostly backwards compatible. There are no new concepts 
introduced into the advanced search form. It should be backward compatible and
customized templates. Customized versions of either search.pt or search_form.pt 
should generally work. The only problem may be that the options in the control panel 
have no effect if search_form is customized, or the sort does not work reliable if 
search.pt is customized.

Further ideas
-------------

 * implement the configuration matrix (enable for logged in|not logged in users) 
   for all fields in the search form.
 * replace categories widget with a more usable javascript driven
 
