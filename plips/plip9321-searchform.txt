PLIP 9321: Reimplement the search form with an eye on usability
===============================================================

This plip is ready for review/merging

Plip ticket: https://dev.plone.org/plone/ticket/9321
The final Proposal is https://dev.plone.org/plone/ticket/9321#comment:10

Branches made
-------------

https://svn.plone.org/svn/plone/Plone/branches/plip9321-searchform
https://svn.plone.org/svn/plone/plone.app.controlpanel/branches/plip9321-searchform


Changes
-------

 1. removed categories from advances search if no categories are
    defined in the site.

 2. remove workflow states for anonymous visitors (configurable)

 3. only list content types and workflow states for which at least one
    object exists

 4. add display options for sort order and batch size (configurable).
    This required to set different sort orders. Without setting a
    specific sort order, the catalog sorts ascendenting. When sorting
    by date, we want an descendenting sort order.  The search form
    uses the queryCatalog script, that is a hack to compose query form
    the request (also by interpreting request parameters with a
    special format). To get the sort_order into the query, I set the
    request.form['sort_order'] value to descendenting where
    required. Manipulating the request from a page template is not a
    good practice and adding a kwarg to queryCatalog would be cleaner,
    but I choose it to keep it backward compatibile.

 5. remove title and description input boxes, just leave Searchable Text. 
    (configurable)

 6. Collapse less often used search options by default if javascript
    is enabled (configurabel) Collapsed are "New Item since", "Item
    Type", "Author" and "Review State" (and "Title" and "Description"
    if they are enabled"). This leaves "Search Text", "Categories",
    "Sort on" and batch size. (configurable)

 7. If an advanced search happened, the variables are encoded into the link 
    to the advanced search. The advanced search form is rendered (hidden) 
    when the search results are displayed. A link "Edit your search options"
    works like a normal link if javascript is not enabled. If javascript is 
    enabled it makes the hidden advanced search form visible without 
    a page reload. (done)
   
 * Control panel work for the points above: All Properties are stored
   in portal_properties/site_properties. There was the option to use
   plone.registry that is used by some other PLIPs now. I choose to
   save it in portal_properties 'cause the two other configuration
   values both are stored there.

    1. status:dropped. (An option is not needed here, I can't think of
       a situation where it brings a usability improvement to show
       it. Fewer Options in the control panel are more valuable.)
    2. status:done
    3. status:dropped. (See 1.)
    4. status:done
    5. status:done
    6. status:done

 * added a helper view to plone.app.controlpanel.search.SearchFormOptions. 
   It's not really part of the control panel and should be located somwhere else.
   But it's only a helper to get the option defined in the control panel schema.
   Maybe I move it to plone.app.search if this package get's into Plone 4.
 

To do
-----
 * write tests for the extended control panel adapter

Changes to documentation
------------------------

No changes to the documentation are necessary.

Further ideas
-------------

 * implement the configuration matrix (enable for logged in|not logged in users) 
   for all fields in the search form.
 * replace categories widget with a more usable javascript driven
 
Review
------

- Category-hiding is great. Bravo. Also love the hiding of unused workflow
  states. This is a significant improvement in clarity with no downside.

- At the moment, a novice user still has to confront the labels of every
  widget. Have you user-tested this new form? Was there an improvement? If the
  aim is to improve clarity through information hiding, it might be better to
  hide all the infrequently used widgets under a single More... (or something)
  section and disclose them all at once.

  > I've choosen to add a subheading "More search options", but keep the
  > labels visible (not collapsed "inside" the subheading)
  > This way the user can distinct the collapsed labels from the rest while
  > he still can see without a further action what options he can have.
  > This also allows to uncollaps only a single option if the user had 
  > submitted the form and choose a value for that option. Cause the option
  > is uncollapsed the user sees that he had choosen an option that is not
  > the default.  
  > I also added a second heading "display options" so the page has overall 
  > more structure.

- In WebKit-based browsers (like Safari 4.0 (5530.17)), when the window is
  narrow enough for the widget descriptions to wrap, the page jumps all over the
  place during the jQuery reveal effect dur to spurious text rewrapping. It's
  distracting.

  > I fixed it by switching to a slide effect which is only a vertical animation
  > and does not lead to problems in Safari (tested with 4.0.3/windows).

- Let's replace "Titles (alphabetically)" in the Sort Results menu with simple
  "Title". What else would Title sort by?

  > Done

- Item Type is never collapsed, though the PLIP says (and I tend to agree) it
  should be.

  > Changed, moved into the "More options" section.

- Why 30, 60, or 90 results per page? It's nitpicky, but I thought they were
  unusual numbers. :-) If any of the search results display PLIPs implement AJAX
  batching (assuming that (1) it's much more responsive than loading the whole
  page and perhaps that (2) it doesn't hide the previous results but instead
  appends to them), we should be able to remove this control altogether.

  > I did not look at the finished implementation of the search results page
  > yet, so if they implemented it I'll remove the duplicated parts.
  > The current hard coded value is 30 so I choose multibles of it. One option 
  > would be to make it configurable. In any way it should be the same in 
  > all standard batches. I did not look into it but guess 25 is more common.

    Configlet
    ---------

    - As stated the "To do" section above, English in widget descriptions
      needs polish: "not logged in users" -> "anonymous users", don't capitalize
      "Visitors", etc. "How to search" should read "how to sort".

      > Done. There is unfortuantely no common vocabulary in the control panes.

    - Group options (in a fieldset?) rather than repeating "Show option to
      this", "Show option to that", "Show option to the other thing".

      > I moved the options to an own fieldset, shortened te labels and added
      > description texts.

    - Rethink required-ness of checkbox widgets. What does it even mean for a
      checkbox widget to be required?

      > removed
