===================================
PLIP 10886 event improvements notes
===================================

NOTE: this plip is not finished yet.

PLIP proposer: Johannes Raggam (svn/git: thet, irc: thetetet)
PLIP Url: http://dev.plone.org/plone/ticket/10886


Introduction
============
The purpose of PLIP10886 is to provide an improved Event content type and
calendaring infrastructure, based on ideas and developments from other packages.
The infrastructure should be compatible with RFC2445 [1] (the iCalendar
specification) as much as possible. This includes also recurrence support with
the ability to define multiple complex recurrence rules.


Please note
===========
We often reference the RFC2445 specification here. It's title is "Internet
Calendaring and Scheduling Core Object Specification (iCalendar)", called the
iCalendar specification. Don't confuse that with Apple's iCal calendaring
client.


Prerequisites
=============

* git - Make sure, you have git installed. We use it for some checkouts from
  github.

* Please note, that if you want to have writeable checkouts from github,
uncomment the "#git ssh" section in the "sources" part and comment-in the
"#git read-only" section. You would need to have an github account for that and
be a member of https://github.com/collective - drop me (thet) or garbas a note
to add you. See also: http://collective.github.com/


How to install and what do do
=============================
* Don't install this plip buildout in an existing buildout. Use a fresh one,
like so:

$ svn co https://svn.plone.org/svn/plone/buildouts/plone-coredev/branches/4.1 plip10886-event-improvements
$ cd plip10886-event-improvements/
$ virtualenv --no-site-packages python26
$ ./python26/bin/python bootstrap.py
$ cd plips/
$ ../bin/buildout -c plip10886-event-improvements.cfg
$ cd ..

Then start your instance
$ ./bin/instance fg

* And point your webbrowser to http://localhost:8080/manage and install a new
Plone site.

* Add an event.
    - End time is an hour ahead of start time
    - When select "Whole Day", time components are hidden


To test event recurrence
------------------------
Since that of time of this writing, the recurrence widget couldn't be completed,
please write the recurrence rules by hand. (but the widget is good on it's way)
Use one of the following:

Simple rule:
RRULE:FREQ=DAILY;INTERVAL=1;COUNT=5

Complex rule:
RRULE:FREQ=DAILY;INTERVAL=1;UNTIL=20101212T000000Z
RDATE:20101220T000000Z
EXRULE:FREQ=DAILY;INTERVAL=2;UNTIL=20101212T000000Z
EXDATE:20101211T000000Z
EXDATE:20101210T000000Z

Please note, that all dates are set as UTC dates here. See the note in section
"Known issues / Notes to consider"

* Publish events. You should see them appear in the events portlet. When the
start date is in the past and a recurrence rule lets the event start now or in
the future, it should also be shown. This is because an index entry is created
for every occurence of the event.

* Go to the event with the simple recurrence rule and download it's iCal file.
Import that in your calendaring client. The complex one might not work, since
calendaring clients possibly do not support multiple recurrence rules like the
one above. Look, if the event is actually recurring. Here, with evolution as
client, it works fine.


Overview of packages and it's features
======================================

plone.app.event
---------------
Integration package for plone. Defines the Archetype content type ATEvent,
browser views and event related portlets.
This ATEvent implementation supports RFC2445 recurrence rules and whole day
events.
Url: https://svn.plone.org/svn/plone/plone.app.event/trunk/


plone.event
-----------
Event related infrastructure. Recurrence calculation tools based on RFC2445 and
timedelta recurrence rules, ical export support, timezone tools and date
conversion tools. Plone.app.event uses RFC2445 recurrence rules only.
Url: https://github.com/collective/plone.event


Products.DateRecurringIndex
---------------------------
A drop-in replacement for Zope's DateIndex. Supports indexing of a list of dates
for one instance. The DateRecurringIndex can be configured to use RFC2445 or
timedelta only recurrence rules. Plone.app.event uses RFC2445 recurrence rules
only.
Url: https://github.com/collective/Products.DateRecurringIndex


archetypes.datetimewidget
-------------------------
A replacement for Archetype's CalendarWidget, based on JQueryTools Dateinput.
The package itself depends on the current plone.app.jquerytools package, which
includes JQueryTools Dateinput.
Url: https://github.com/collective/archetypes.datetimewidget


jquery.recurrenceinput.js
-------------------------
Jquery plugin widget which support the definition of complex recurrence
rulesets.
Url: https://github.com/collective/jquery.recurrenceinput.js


plone.formwidget.recurrence
---------------------------
An archetypes based recurrence widget which makes use of
jquery.recurrenceinput.js. plone.app.event's ATEvent depends on it.
Url: https://github.com/collective/plone.formwidget.recurrence


External Dependencies
=====================
* python-dateutil
Info: http://labix.org/python-dateutil
PyPi: http://pypi.python.org/pypi/python-dateutil


Known issues / Notes to consider
================================
* plone.app.event implements archetypes based ATEvent and depends on
archetypes.datetimewidget. Archetypes dependencies should be seperated from
plone.app.event to simplify migration for Plone5, where Dexterity will be used.

* Recurrence rules are defined as RFC2445 compatible strings, which are parsed
by python-dateutil. Due to a bug in this package, timezones other than UTC based
can't be set in RFC2445 strings - although python-dateutil respects timezones in
python datetime instances. This bug affects primary RDATE components, which
define individual dates to include in the recurrence rule.
e.g. does not work: RDATE;TZID=Europe/Vienna:20101010T090000;
works: RDATE:20101010T090000Z;
This bug is reported. For now, RDATE components shouldn't be used and disabled
in the UI until this bug is fixed.

* Calendaring clients (Evolution, iCal, Outlook, Sunbird, Google Calendar etc.)
might not be fully RFC2445 compatible. This could be an issue for exporting ics
iCalendar files with multiple recurrence rules.

* As we recently found out, there is a new iCalendar (RFC5545, [2])
specification from September 2009 which obsoletes RFC2445. RFC5545 is simpler
than RFC2445. This affects recurrence rules - e.g. it does not support EXRULES
(recurrence exclusion rules) any more and EXDATES and RDATES (exclusion and
inclusion dates) are formated as list of dates.
This might not be too much of a problem for now, since we can disable the
affected recurrence rule parts in the UI and Calendaring clients might still
implement RFC2445. Python-dateutil, on which plone.event depends on, supports
only RFC2445 for now.

* Events and calendar portlets from plone.app.portlets has been moved into
plone.app.event. This change might cause a controversy, but the idea behind is
to have all event related functionality at one place. Furthermore,
plone.app.event can cleanly be uninstalled from Plone, when it's functionality
is not needed - although the portlets do not have a direct dependency on
plone.app.event. This change can easily be reverted if the FWT decides so.

* There are no upgrade steps from now. Upgrade steps needed:
  - Reindexing the whole portal catalog for Products.DateRecurringIndex.
  - Updating IPortletAssignmentSettings for events and calendar portlets in
    plone.app.event.
This work will be done after the PLIP deadline, when FWT accepts this PlIP.

* Whole day events are stored with the start-time 0:00:00 and end-time 23:59:59.
This is set via an event subscriber on object initialization and object editing.

* The GenericSetup registrations of start and end indexes and metadata columns
are moved out of Plone into plone.app.event for two reasons
  - This follows also the convention  "all event related code at one place".
  - DateRecurringIndexes have needs other parameters than DateIndex.
If the FWT is unhappy with that, we move it back into Plone.

* The DateIndex property "index_naive_time_as_local", which is set to True isn't
implemented by DateRecurringIndex for now. Timezone naive times are converted to
UTC dates in our implementation.

* For recurring events, unlimited occurrences are prevented whether through the
recurrence rule itself or through a MAXCOUNT ceiling constant. It is set to
100000 occurrences of an event, which is probably enough. This should be made
configurable somehow (without depending on the plone core, since it's defined
in plone.event).

* Unlimited occurences are still possible with ical export, if there is no UNTIL
or COUNT component in the recurrence rule. This case has to be handled by the
calendaring client then. We could also provide a recurrence rule validity check
on that.


Tests and code checkers
=======================
Every package has it's own tests.
Test it with:

$ ./bin/test -s plone.app.event

$ ./bin/test -s plone.event

(index_timedelta.txt is failing for now)
$ ./bin/test -s Products.DateRecurringIndex -t index.txt

$ ./bin/test -s plone.formwidget.recurrence

$ ./bin/test -s archetypes.datetimewidget

and
$ ./bin/test -s Products.CMFPlone
$ ./bin/test -s plone.app.portlets
$ ./bin/test -s Products.ATContentTypes


* We don't have an code coverage report yet.

* A Benchmark for Products.DateRecurringIndex has been started, but yet not
completed. We expect it to be slower on indexing time, depending on the number
of occurrences, dateutil has to calculate. Querying should be different. Well,
that has still to be proved.


Future plans
============
* Calendar views
* iCal import
* caldav support
* hcal microformat support
* RFC5545 support


Needed documentation changes
============================

* For the UI part, mainly the new wholeDay field and recurrence rules should be
documented.

* For an upgrade document, import changes should be documented.

* For general developer's documentation, an guide how to enable recurrence support
for custom event types could be documented.


Backwards compatibility
=======================

A complete re-index of the portal catalog and fixes to plone.app.portal
assignements should do all migration needs. Migration scripts and tests for that
have still to be written.


Credits
=======

 - Philip Bauer (bauer@starzel.de): Fixing some plone.event / plone.app.event
related tests.

 - Vincent Fretin (vincent.fretin@gmail.com): vs.event merge, Translations,
JQueryUI based collective.calendarwidget.

 - Rok Garbas (rok.garbas@gmail.com): Author of jquery.recurrenceinput.js widget.
PLIP driver and TODO delegation.

 - Tom Gross (itconsense@gmail.com): Merging vs.event into plone.app.event,
Testing infrastructure, plone.formwidget.recurrence.

  - Andreas Jung (lists@zopyx.com): Author of vs.event team, PLIP 9302 leader,
plone.app.event cologne sprint leader.

  - Jens Klein (jens@bluedynamics.com): Author of Products.DateRecurringIndex with
timedelta support.

  - Ryan Northey (ryan@3ca.org.uk): Worked with Vitaliy on iCal export.

 - Simone Orsi (simahawk@gmail.com): Author of archetypes.datetimewidget, a port
of collective.z3cform.datetimewidget to archetypes.

 - Vitaliy Podoba (vitaliypodoba@gmail.com): iCal export in plone.event,
 improving test coverage.

 - Johannes Raggam (johannes@raggam.co.at): PLIP leader, Recurring support in
plone.event, updating Products.DateRecurringIndex for RFC2445 recurrence rules.

  - Lennart Regebro (regebro@gmail.com): Leader of recurring event sprint team
at the Snowsprint2007. Author of dateable.chronos and dateable.kalends packages.

 - Mike Rhodes (mike.rhodes@gmail.com): UI and parsing in
jquery.recurrenceinput.js.

 - Dorneles Tremea (dorneles@tremea.com): Author of demo package
archetypes.recurringdate. UI part of jquery.recurrenceinput.js is based on it.
Benchmarks for P.DateRecurringIndex vs. DateIndex.


References
==========
[1] http://www.ietf.org/rfc/rfc2445.txt
[2] http://www.ietf.org/rfc/rfc5545.txt
