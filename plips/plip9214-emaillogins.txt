PLIP 9214: Support logins using e-mail address instead of user id
=================================================================

This plip is in progress.

Plip ticket: https://dev.plone.org/plone/ticket/9214


To do
-----

- migration: add the use_email_as_login property

- test some scenarios where use_email_as_login is changed

- Take a second look at spots with PLIP9214 in RegistrationTool and
  PasswordResetTool.


Further ideas
-------------

Related ideas that may be nice to incorporate into this plip.

- Make email address case insensitive: you should always use lower
  case.

- In places where user ids are shown ('last modified by a@b.c') avoid
  showing the complete email address; perhaps just show the part
  before the '@' sign.  Also see plip 9305: Use real names instead of
  usernames.

- Offer migration of current login names to email addresses.


Summary of changes
------------------

- Basically the patches from
  http://svn.plone.org/svn/collective/collective.emaillogin/trunk have
  been merged.

- Added site_properties/use_email_as_login; default False.
  This can be set in the security control panel.

- Independent from the use_email_as_login setting we allow the '@'
  sign in login names.  See _ALLOWED_MEMBER_ID_PATTERN in
  Products/CMFPlone/RegistrationTool.py

- When use_email_as_login is true:

  - join form: user name field is not shown

  - join_form_validate.vpy: the filled in email address is added to
    the request as username: context.REQUEST.set('username', email)
    which means this address will be used as the user name and login
    name of the new member.

  - personalize.cpy calls Products.CMFPlone.utils:set_own_login_name
    to change the login name when the email address is changed.  Note
    that the user id never changes, so this is always the same as the
    initial email address.  You can always log in with your login name
    and with your user id.

  - Various labels and error messages are slightly changed, e.g. the
    login form and portlet do not show user name but e-mail.

  - Various methods in PasswordResetTool get the user by login name
    instead of user id.  If you have changed your email address a
    couple of times, then PasswordResetTool can handle requests from
    the first (which is the user id) and the last (which is the
    current login name).

- Tests are in CMFPlone/tests/testEmailLogin.py and
  CMFPlone/tests/emaillogin.txt.  Both are tested by running:
  bin/test -s Products.CMFPlone -m testEmailLogin

- The changes in PasswordResetTool are so light that no extra tests
  in this package are needed I think; password resetting is tested in
  the aforementioned CMFPlone/tests/emaillogin.txt.  All current
  PasswordResetTool tests still pass without changes, so that is good.


Needed documentation changes
----------------------------

Documentation should describe this feature.  Something like this:

You can now allow users to use their email address as login name.
This feature can be switched on in the Security settings control
panel.  The effect is that on the registration form no field is shown
for the user name.  On the login form the user is now asked to fill in
an email address.

Enabling this on a website that already has users may be confusing for
those users.  When logging in they will be asked for their email
address, but these existing users should actually still login with the
login name they have chosen.


Backwards compatibility
-----------------------

The default setting is to *not* use the email address as the login
name, so the default behaviour is the same as in previous Plone
versions.  The exception is that '@' signs are now always allowed in
login names.  (Of course this is my hidden agenda for this plip: allow
myself to pick 'm@urits' as login name. ;-))


Alternatives
------------

- We now change the default member ID pattern in RegistrationTool from
  "^[A-Za-z][A-Za-z0-9_]*$" (CMFCore) to r'^\w[\w\.\-@]+[a-zA-Z]$'
  (CMFPlone).  This has worked fine in a customer site for one and a
  half years.  But we could keep the default and instead update the
  _ALLOWED_MEMBER_ID_PATTERN when the use_email_as_login property is
  changed.  That is what happens when you edit the configure tab of
  portal_registration in the ZMI.  We can use the EMAIL_RE pattern
  that Plone's RegistrationTool is already importing from
  SecureMailHost.


Credits
-------

Maurits van Rees
