PLIP 9327: unified interface for lists of content
=================================================

PLIP ticket: http://dev.plone.org/plone/ticket/9327

Review by Ross Patterson (me@rpatterson.net, zenwryly on irc)

The PLIP was reviewed on Ubuntu 10.10 (Maverick) using python 2.6.6
and Google Chrome 9.0.


Review steps
------------

- Ran the plips/plip9327-contentlisting.cfg buildout.

- Ran "bin/test -s plone.app.contentlisting -s Products.CMFPlone"

- Ran bin/alltests. TODO

- Created a new Plone site and added an event for checking collection
  views.

- Checked the following URLs:

  http://localhost:8080/Plone/folder_contents
  http://localhost:8080/Plone/folder_listing
  http://localhost:8080/Plone/events/aggregator
  http://localhost:8080/Plone/events/aggregator/folder_contents
  http://localhost:8080/Plone/events/aggregator/folder_listing

- Examined code.


Notes and observations
----------------------

- plone.app.contentlisting/README.txt doesn't provide nearly enough of
  a high level description, especially for a package intended for
  re-use such as this.

- "bin/instance fg" fails with the following.  Fixed by removing the
  instance:zcml option in the buildout and letting z3c.autoinclude
  handle it:

  zope.configuration.config.ConfigurationExecutionError: <class 'zope.component.interfaces.ComponentLookupError'>: (<InterfaceClass zope.security.interfaces.IPermission>, 'cmf.ModifyPortalContent')
    in:
    File "/home/xen/src/plone-coredev.svn/src/plone.app.layout/plone/app/layout/viewlets/configure.zcml", line 319.4-325.10
        <browser:viewlet
            name="plone.lockinfo"
            manager=".interfaces.IAboveContent"
            class="plone.locking.browser.info.LockInfoViewlet"
            permission="cmf.ModifyPortalContent"
            for="plone.locking.interfaces.ITTWLockable"
            />

- What is plone.app.contentlisting/docs/summary.txt?  It seems
  unnecessary and like it may be an artifact that should be removed.

- Test coverage is not 100% but looks pretty complete.

- I note that plone.app.contentlisting doesn't include any templates
  which I thought was part of the scope.  Maybe all the template
  changes are in Products.CMFPlone.

- What about plone.portlet.collection?

- What about Products.ATContentTypes' atct_topic_view?  Are we leaving
  that alone in favor of plone.app.collection?

- plone/app/contentlisting/catalog.py is using zLOG.  Isn't this
  deprecated in favor of python's logging module?

- plone/app/contentlisting/catalog.py looks like it's using log level
  INFO for something which might be inside an inner loop.  This should
  probably be DEBUG or else it will be too noisy.

- Definitely needs documentation along the lines of "If you want to
  customize ??? you can do ???".  I would consider this a blocker.

- I can't see any changes in the
  Plone/branches/plip9327-contentlisting history except cleaning up
  whitespace.  Am I missing something?  Is this only used in
  plone.app.search and plone.app.collection for now?

- There are failures for "bin/test -s Products.CMFPlone" that don't
  occur with buildout.cfg.  I'm betting this is because of the
  (possibly empty) branch of Plone and would be fixed on merge:

  Failure in test testDoUpgrades (Products.CMFPlone.tests.testMigrationTool.TestMigrationTool)
  Traceback (most recent call last):
    File "/usr/lib/python2.6/unittest.py", line 279, in run
      testMethod()
    File "plone-coredev.svn/src/Plone/Products/CMFPlone/tests/testMigrationTool.py", line 63, in testDoUpgrades
      self.assertEquals(last, current)
    File "/usr/lib/python2.6/unittest.py", line 350, in failUnlessEqual
      (msg or '%r != %r' % (first, second))
  AssertionError: ('4100',) != (u'4015',)
  
  Failure in test testListUpgradeSteps (Products.CMFPlone.tests.testMigrationTool.TestMigrationTool)
  Traceback (most recent call last):
    File "/usr/lib/python2.6/unittest.py", line 279, in run
      testMethod()
    File "plone-coredev.svn/src/Plone/Products/CMFPlone/tests/testMigrationTool.py", line 37, in testListUpgradeSteps
      self.failUnless(len(upgrades) == 0)
    File "/usr/lib/python2.6/unittest.py", line 325, in failUnless
      if not expr: raise self.failureException, msg
  AssertionError
  
  Error in test testHaveHead (Products.CMFPlone.tests.testS5.TestS5)
  Traceback (most recent call last):
    File "/usr/lib/python2.6/unittest.py", line 279, in run
      testMethod()
    File "plone-coredev.svn/src/Plone/Products/CMFPlone/tests/testS5.py", line 41, in testHaveHead
      del self.app.REQUEST.__annotations__
  AttributeError: HTTPRequest instance has no attribute '__annotations__'
  
  Error in test testNoHead (Products.CMFPlone.tests.testS5.TestS5)
  Traceback (most recent call last):
    File "/usr/lib/python2.6/unittest.py", line 279, in run
      testMethod()
    File "plone-coredev.svn/src/Plone/Products/CMFPlone/tests/testS5.py", line 29, in testNoHead
      del self.app.REQUEST.__annotations__
  AttributeError: HTTPRequest instance has no attribute '__annotations__'
  
      942/948 (99.4%)plone-coredev.svn/src/Plone/Products/CMFPlone/MigrationTool.py:115: UserWarning: Module _imaging was already imported from plone-coredev.svn/lib/python2.6/site-packages/PILwoTk-1.1.6.4-py2.6-linux-i686.egg/_imaging.so, but plone-coredev.svn/lib/python2.6/site-packages/PIL-1.1.7-py2.6-linux-i686.egg is being added to sys.path
    vars['PIL'] = get_dist('PIL').version

Conclusion
----------

I feel like we're in a bit of a pickle here.  

The goals of this PLIP are good but without documentation or switching
folder_contents, folder_listing, and plone.portlet.collection (and
maybe also atct_topic_view) to use these new interfaces, then no one
will be able to use this new integration point.  Furthermore, instead
of *integrating* content listing throughout Plone, we'll have in fact
further fragmented it.  Now you have folder_listing, folder_contents,
plone.portlet.collection, *and* plone.app.contentlisting.  On that
basis alone I would be -1 for merging.

OTOH, PLIPS #9352 "Improved search results" and #10902 "New
collections" are both nifty and sorely needed and depend on this.  I'd
really hate to see those two not merged.

From the FWT discussion, getting the plone.app.contentlisting package
documented is a must have for accepting this PLIP.  Once that is done,
we'd very likely merge this PLIP.  Can you add detailed developer
documentation in the form of "If you want to customize ??? you can do
???".  Can you please also add the missing docstrings and comments
necessary for ongoing maintenance and approachability?
