[buildout]
extends =
    core.cfg

extensions =
    mr.developer

parts -=
    instance
    zopepy
    test
    robot
    alltests
    alltests-at
    checkversions
    flake8
    releaser
    themepreview

parts +=
    eggdeps
    jenkins-package-dependencies
    jenkins-package-dependencies-with-tests
    jenkins-package-dependencies-text
    jenkins-package-dependencies-cmf
    jenkins-package-dependencies-cmf-imports
    jenkins-package-dependencies-pac
    jenkins-package-dependencies-pac-imports
    jenkins-package-dependencies-formlib
    jenkins-package-dependencies-formlib-imports
    jenkins-package-dependencies-grok
    jenkins-package-dependencies-grok-imports
    depspy
    circular-deps

auto-checkout = *

versions = versions

[sources]
Products.MailHost = git ${remotes:zope}/Products.MailHost.git pushurl=${remotes:zope_push}/Products.MailHost.git rev=c531ac4c070e6b65a2424ddd42b0ac7281f385f9

[depspy]
recipe = zc.recipe.egg
eggs =
    networkx
    pydot2
interpreter = depspy
scripts = depspy

[circular-deps]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/eggdeps -xd > total_no_extras.dot
    bin/depspy circular_deps.py
output = bin/circular_deps
mode = 755

[eggdeps]
recipe = zc.recipe.egg
eggs =
    ${instance:eggs}
    ${test:eggs}
    tt.eggdeps


[deps]
data =
    -I archetypes.*
    -I collective.*
    -I five.*
    -I grok.*
    -I python-*
    -I repoze.*
    -I robot*
    -I z3c.*
    -I zc.*
    -I zope.*
    -i accesscontrol
    -i acquisition
    -i argh
    -i argparse
    -i babel
    -i chameleon
    -i cssmin
    -i cssselect
    -i datetime
    -i decorator
    -i diazo
    -i documenttemplate
    -i docutils
    -i extensionclass
    -i feedparser
    -i formencode
    -i future
    -i icalendar
    -i initgroups
    -i lxml
    -i mailinglogger
    -i manuel
    -i markdown
    -i martian
    -i mechanize
    -i missing
    -i mock
    -i mocker
    -i multimapping
    -i pathtools
    -i persistence
    -i pillow
    -i pip
    -i plone.app.openid
    -i plone.app.robotframework
    -i plone.app.testing
    -i plone.app.upgrade
    -i plone.mocktestcase
    -i plone.openid
    -i plone.reload
    -i plone.testing
    -i ply
    -i products.archetypes
    -i products.externalmethod
    -i products.genericsetup
    -i products.i18ntestcase
    -i products.mailhost
    -i products.mimetools
    -i products.ofsp
    -i products.securemailhost
    -i products.standardcachemanagers
    -i products.zsqlmethods
    -i pygments
    -i python
    -i pytz
    -i pyyaml
    -i record
    -i roman
    -i selenium
    -i setuptools
    -i simplejson
    -i six
    -i slimit
    -i sourcecodegen
    -i tempstorage
    -i transaction
    -i tt.eggdeps
    -i unidecode
    -i unittest2
    -i watchdog
    -i webob
    -i wsgi-intercept
    -i wsgiref
    -i zconfig
    -i zdaemon
    -i zexceptions
    -i zlog
    -i zodb3


[jenkins-package-dependencies]
# to play around with the dot information install the following distributions:
# pip install networkx dot_parser pydot2
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ARGS=`echo "${deps:data}" | paste -s -d" "`
    ${buildout:bin-directory}/eggdeps -d --no-extras $ARGS > deps.dot
    sed -i 's/plone\.app\./p\.a\./g' deps.dot
    sed -i 's/plone\./p\./g' deps.dot
    sed -i 's/products\./P\./g' deps.dot
output = ${buildout:directory}/bin/jenkins-package-dependencies
mode = 755


[jenkins-package-dependencies-with-tests]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ARGS=`echo "${deps:data}" | paste -s -d" "`
    ${buildout:bin-directory}/eggdeps -d $ARGS > package-dependencies-with-tests.dot
    sed -i 's/plone\.app\./p\.a\./g' package-dependencies-with-tests.dot
    sed -i 's/plone\./p\./g' package-dependencies-with-tests.dot
    sed -i 's/products\./P\./g' package-dependencies-with-tests.dot
output = ${buildout:directory}/bin/jenkins-package-dependencies-with-tests
mode = 755

[jenkins-package-dependencies-text]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ARGS=`echo "${deps:data}" | paste -s -d" "`
    ${buildout:bin-directory}/eggdeps $ARGS > package-dependencies.txt
output = ${buildout:directory}/bin/jenkins-package-dependencies-text
mode = 755

[package-dependencies-generic]
recipe = collective.recipe.template
input = templates/jenkins-package-dependencies.sh
mode = 755

[package-dependencies-generic-imports]
recipe = collective.recipe.template
input = templates/jenkins-package-dependencies-imports.sh
mode = 755

[jenkins-package-dependencies-cmf]
<= package-dependencies-generic
output = ${buildout:bin-directory}/jenkins-package-dependencies-cmf
distributions = CMFCore CMFDiffTool CMFDynamicViewFTI CMFEditions CMFFormController CMFPlacefulWorkflow CMFQuickInstallerTool CMFUid

[jenkins-package-dependencies-cmf-imports]
<= package-dependencies-generic-imports
output = ${buildout:bin-directory}/jenkins-package-dependencies-cmf-imports
distributions = Products.CMFCore Products.CMFDiffTool Products.CMFDynamicViewFTI Products.CMFEditions Products.CMFFormController Products.CMFPlacefulWorkflow Products.CMFQuickInstallerTool Products.CMFUid

[jenkins-package-dependencies-pac]
<= package-dependencies-generic
output = ${buildout:bin-directory}/jenkins-package-dependencies-pac
distributions = plone.app.contenttypes

[jenkins-package-dependencies-pac-imports]
<= package-dependencies-generic-imports
output = ${buildout:bin-directory}/jenkins-package-dependencies-pac-imports
distributions = plone.app.contenttypes

[jenkins-package-dependencies-formlib]
<= package-dependencies-generic
output = ${buildout:bin-directory}/jenkins-package-dependencies-formlib
distributions = zope.formlib

[jenkins-package-dependencies-formlib-imports]
<= package-dependencies-generic-imports
output = ${buildout:bin-directory}/jenkins-package-dependencies-formlib-imports
distributions = zope.formlib

[jenkins-package-dependencies-grok]
<= package-dependencies-generic
output = ${buildout:bin-directory}/jenkins-package-dependencies-grok
distributions = grokcore.annotation grokcore.component grokcore.formlib grokcore.security grokcore.site grokcore.view grokcore.viewlet martian

[jenkins-package-dependencies-grok-imports]
<= package-dependencies-generic-imports
output = ${buildout:bin-directory}/jenkins-package-dependencies-grok-imports
distributions = grokcore.annotation grokcore.component grokcore.formlib grokcore.security grokcore.site grokcore.view grokcore.viewlet martian
