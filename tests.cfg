[buildout]
parts += robot
test-eggs =
    ${buildout:eggs}
    Products.ATContentTypes [test]
    Products.Archetypes [test]
    Products.CMFCore
    Products.CMFDefault
    Products.CMFDiffTool
    Products.CMFDynamicViewFTI
    Products.CMFEditions
    Products.CMFFormController
    Products.CMFPlacefulWorkflow [test]
    Products.CMFPlone [test]
    Products.CMFQuickInstallerTool
    Products.DCWorkflow
    Products.DateRecurringIndex [test]
    Products.ExtendedPathIndex
    Products.GenericSetup
    Products.Marshall
    Products.MimetypesRegistry
    Products.PasswordResetTool
    Products.PlacelessTranslationService
    Products.PloneLanguageTool
    Products.PlonePAS
    Products.PloneTestCase
    Products.PluggableAuthService
    Products.PluginRegistry
    Products.PortalTransforms
    Products.ResourceRegistries
    Products.ZopeVersionControl
    Products.contentmigration
    Products.i18ntestcase
    Products.statusmessages
    Products.validation
    archetypes.schemaextender
    borg.localrole
    collective.elephantvocabulary
    collective.monkeypatcher
    collective.testcaselayer
    diazo [test]
    five.customerize
    five.formlib
    five.localsitemanager
    five.pt
    grokcore.security [test]
    icalendar [test]
    plone.alterego
    plone.app.blob [test]
    plone.app.caching [test]
    plone.app.collection [test]
    plone.app.content
    plone.app.contentlisting [test]
    plone.app.contentmenu
    plone.app.contentrules
    plone.app.controlpanel [test]
    plone.app.contenttypes [test]
    plone.app.customerize
    plone.app.dexterity
    plone.app.discussion [test]
    plone.app.event [test]
    plone.app.folder
    plone.app.form
    plone.app.i18n
    plone.app.imaging [test]
    plone.app.intid
    plone.app.iterate
    plone.app.jquery [test]
    plone.app.jquerytools [test]
    plone.app.layout [test]
    plone.app.linkintegrity [test]
    plone.app.locales
    plone.app.openid
    plone.app.portlets [test]
    plone.app.querystring
    plone.app.relationfield
    plone.app.redirector
    plone.app.registry
    plone.app.search [test]
    plone.app.testing [test]
    plone.app.textfield [tests]
    plone.app.theming [test]
    plone.app.upgrade [test]
    plone.app.users [test]
    plone.app.uuid
    plone.app.versioningbehavior [tests]
    plone.app.viewletmanager
    plone.app.vocabularies
    plone.app.widgets [test]
    plone.app.workflow
    plone.app.z3cform [tests]
    plone.autoform
    plone.batching
    plone.behavior
    plone.browserlayer
    plone.cachepurging [test]
    plone.caching
    plone.contentrules
    plone.dexterity [test]
    plone.event [test]
    plone.fieldsets
    plone.folder
    plone.formwidget.namedfile
    plone.formwidget.recurrence [archetypes,z3cform,test]
    plone.i18n
    plone.indexer
    plone.intelligenttext
    plone.keyring
    plone.locking
    plone.memoize
    plone.namedfile [blobs]
    plone.openid
    plone.outputfilters [test]
    plone.portlet.collection
    plone.portlet.static
    plone.portlets
    plone.protect
    plone.recipe.zope2instance
    plone.registry
    plone.resource [test]
    plone.rfc822
    plone.scale
    plone.schema
    plone.schemaeditor [test]
    plone.session
    plone.stringinterp
    plone.subrequest [test]
    plone.supermodel [test]
    plone.synchronize
    plone.testing [test]
    plone.theme
    plone.transformchain
    plone.transformchain [test]
    plone.uuid
    plone.z3cform [test]
    plonetheme.barceloneta
    repoze.xmliter
    z3c.form
    z3c.relationfield [test]
    zope.globalrequest

[versions]
# egg versions that are not part of the release, but should still be pinned
# so our development builds are repeatable
collective.recipe.sphinxbuilder = 0.7.1
flake8 = 2.1.0
pep8 = 1.4.6
pyflakes = 0.7.3
mccabe = 0.2.1
autopep8 = 0.9.7
plone.recipe.command = 1.1
unittest-jshint = 1.0

[environment]
BUILDOUT_DIR = ${buildout:directory}

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:test-eggs}
defaults = ['--auto-color', '--auto-progress', '--ignore_dir=bower_components', '--ignore_dir=node_modules']
environment = environment

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:test-eggs}
    Pillow
    plone.app.robotframework[ride,reload,debug]

[package-map]
unittest-jshint = unittest_jshint

[test-groups]
# AT alltests groupa. Those test groups are run via the alltests-at script.
Archetypes =
    Products.Archetypes
    Products.CMFFormController
    Products.Marshall
    Products.MimetypesRegistry
    Products.PortalTransforms
    Products.statusmessages
    Products.validation
ATCT =
    plone.app.folder
    Products.ATContentTypes
CMF =
    Products.CMFDefault
    Products.CMFDynamicViewFTI
    Products.CMFTestCase
    Products.CMFUid
    Products.GenericSetup
    Products.PloneLanguageTool
    Products.PluggableAuthService
    Products.PluginRegistry
    five.customerize
    five.localsitemanager
zope_tests =
    five.formlib
    five.intid
    five.pt
    Products.DateRecurringIndex

# Group for add-ons that are shipped with Plone. In the long term those should
# be moved into the plone_app_testing group.
Add-ons =
    Products.CMFPlacefulWorkflow
    grokcore.view
    grokcore.component
    martian
    plone.app.iterate
    plone.app.openid
    plone.openid

CMFEditions =
    Products.CMFDiffTool
    Products.CMFEditions
plone =
    plone.fieldsets
    plone.i18n
    plone.indexer
    plone.intelligenttext
    plone.locking
    plone.memoize
    plone.protect
    plone.registry
    plone.scale
    plone.uuid
Plone =
    Products.CMFQuickInstallerTool
    Products.PasswordResetTool
    Products.PlacelessTranslationService
    Products.ResourceRegistries
    plone.app.content
    plone.app.contentrules
    plone.app.controlpanel
    plone.app.customerize
    plone.app.form
    plone.app.i18n
    plone.app.upgrade

# The PloneTestCase alltests group contains packages that still use
# Products.CMFTestCase. Those packages should be migrated to
# plone.app.testing.
PloneTestCase =
    plone.app.iterate
    plone.app.portlets
    plone.app.textfield
    plone.app.users
    plone.outputfilters
    borg.localrole
    Products.CMFPlacefulWorkflow
    Products.contentmigration

# The plone_app_testing alltests group contains all packages that use
# plone.app.testing (or at least don't use any of the deprecated testing
# frameworks such as PloneTestCase or c.testcaselayer). In the long term
# all packages should go into that group so that we can finially get rid
# of the alltests recipe alltogether.
plone_app_testing =
    collective.elephantvocabulary
    diazo
    plone.alterego
    plone.app.caching
    plone.app.contentlisting
    plone.app.contentmenu
    plone.app.contenttypes
    plone.app.dexterity
    plone.app.discussion
    plone.app.event
    plone.app.intid
    plone.app.jquery
    plone.app.jquerytools
    plone.app.layout
    plone.app.querystring
    plone.app.redirector
    plone.app.registry
    plone.app.search
    plone.app.testing
    plone.app.theming
    plone.app.uuid
    plone.app.vocabularies
    plone.app.workflow
    plone.app.z3cform
    plone.autoform
    plone.behavior
    plone.browserlayer
    plone.cachepurging
    plone.contentrules
    plone.formwidget.namedfile
    plone.formwidget.recurrence
    plone.portlet.collection
    plone.portlet.static
    plone.portlets
    plone.resource
    plone.resourceeditor
    plone.rfc822
    plone.stringinterp
    plone.subrequest
    plone.synchronize
    plone.testing
    plone.theme
    plone.transformchain
    plone.transformchain
    plone.z3cform
    plonetheme.barceloneta
    Products.CMFPlone
    Products.PlonePAS
    repoze.xmliter
unit_tests =
    collective.monkeypatcher
    icalendar
    plone.app.relationfield
    plone.batching
    plone.caching
    plone.dexterity
    plone.event
    plone.keyring
    plone.schema
    plone.session
    plone.supermodel
    Products.ExtendedPathIndex
    z3c.pt
    z3c.relationfield

# The Dexterity alltests group contains only packages that currently can not be
# moved to the plone_app_testing group because of test isolation problems.
Dexterity =
# Moving plone.folder into the plone_app_testing group leads to test failures with:
# ValueError: undefined property 'content_meta_type'
    plone.folder
# Moving plone.namedfile into the plone_app_testing groups lead to test failures with:
# ValueError: undefined property 'content_meta_type'
    plone.namedfile
# Moving plone.schemaeditor into the plone_app_testing_group leads to test failures.
    plone.schemaeditor


# TEST ISOLATION PROBLEMS
# -----------------------
#
# The packages listed below have serious test isolation problems. Therefore
# we have to run them in full isolation. 
#
# Every package that is included in the test eggs but is not in one of the
# test groups above will run in full isolation.
#
# Therefore we should try to fix those package tests.
#
# Products.DCWorkflow
# plone.app.linkintegrity
# plone.app.referenceablebehavior
# plone.app.viewletmanager  # PloneTestCase
# plone.app.versioningbehavior  # Currently in excludes


[alltests-base]
package-map = package-map
groups = test-groups
exclude-groups =
    Archetypes
    ATCT
    CMF
    zope_tests
exclude =
    AccessControl
    Acquisition
    Babel
    Chameleon
    ClientForm
    DateTime
    DocumentTemplate
    ExtensionClass
    FormEncode
    Markdown
    Missing
    MultiMapping
    Persistence
    Pillow
    Products.BTreeFolder2
    Products.CMFCore
    Products.ExternalEditor
    Products.ExternalMethod
    Products.i18ntestcase
    Products.MailHost
    Products.MIMETools
    Products.OFSP
    Products.PythonScripts
    Products.SecureMailHost
    Products.StandardCacheManagers
    Products.ZCatalog
    Products.ZCTextIndex
    Products.ZopeVersionControl
    Products.ZSQLMethods
    RestrictedPython
    Record
    Unidecode
    WebOb
    ZConfig
    ZODB3
    archetypes.schemaextender
    collective.testcaselayer
    decorator
    docutils
    doctest
    elementtree
    experimental.cssselect
    feedparser
    five.globalrequest
    five.grok
    initgroups
    interlude
    lxml
    argparse
    mailinglogger
    manuel
    markdown
    mechanize
    mock
    mocker
    nt-svcutils
    ordereddict
    persistent
    Plone
    Products.CMFCalendar
    Products.TinyMCE
    plone.app.blob
    plone.app.versioningbehavior
    plone.app.collection
    plone.app.imaging
    plone.app.locales
    plone.formwidget.datetime
    plone.reload
    plonetheme.classic
    plonetheme.sunburst
    Pygments
    python-dateutil
    python-gettext
    python-openid
    pytz
    PyYAML
    robotframework
    robotsuite
    rdflib
    roman
    rwproperty
    selenium
    six
    sourcecodegen
    tempstorage
    transaction
    unittest2
    unittest-jshint
    wsgi-intercept
    zc.lockfile
    zc.relation
    zc.sourcefactory
    z3c.autoinclude
    z3c.caching
    z3c.coverage
    z3c.form
    z3c.objpath
    z3c.ptcompat
    z3c.template
    z3c.zcmlhook
    zdaemon
    zExceptions
    zodbcode
    zope.*
    Zope2
    zLOG
    ZopeUndo
test-script = ${buildout:bin-directory}/test

[alltests-at-base]
<= alltests-base
default-policy = exclude
include-groups = ${alltests-base:exclude-groups}
include =
    archetypes.referencebrowserwidget
    archetypes.schemaextender
    plone.app.blob
    plone.app.collection
    plone.app.imaging


[alltests]
<= alltests-base
recipe = plone.recipe.alltests

[alltests-at]
<= alltests-at-base
recipe = plone.recipe.alltests

[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('coverage', 'report')

[flake8]
recipe = zc.recipe.egg
eggs =
    flake8
    autopep8

