# ----------------------------------------------------------------------------
# JENKINS BUILDOUT FOR PLONE COREDEV
# ----------------------------------------------------------------------------
# Jenkins buildout to run tests and code coverage for buildout.coredev on
# the jenkins.plone.org CI server.
#
#   $ bin/buildout -c jenkins.cfg
#   $ bin/jenkins-alltests
#   $ bin/jenkins-alltests-at
#
# ----------------------------------------------------------------------------
[buildout]
extends =
    core.cfg
    versions-jenkins.cfg
always-accept-server-certificate = true
parts =
    jenkins-test
    jenkins-alltests
    jenkins-alltests-at
    package-in-auto-checkout
    releaser
jenkins-test-eggs = ${buildout:test-eggs}

# On Jenkins we always do a fresh checkout before a build. Though, for build
# pipelines, we have to move buildout directories around and then we have to
# run buildout in order to update some paths. In those scenarios we do not
# want mr.developer to update the checked out sources because it would change
# the code we are testing.
always-checkout = false

[jenkins-test]
recipe = collective.xmltestreport
eggs = ${buildout:jenkins-test-eggs}
script = jenkins-test
environment = jenkins-test-env
relative-paths = true
defaults = ['--auto-color', '--auto-progress', '--xml', '--ignore_dir=bower_components', '--ignore_dir=node_modules']

[jenkins-alltests]
<= alltests-base
recipe = plone.recipe.alltests
test-script = ${buildout:bin-directory}/jenkins-test

[jenkins-test-env]
zope_i18n_compile_mo_files = true
BUILDOUT_DIR = ${buildout:directory}
ROBOTSUITE_APPEND_OUTPUT_XML = 1
ROBOTSUITE_LOGLEVEL = ERROR

[jenkins-alltests-at]
<= alltests-at-base
recipe = plone.recipe.alltests
test-script = ${buildout:bin-directory}/jenkins-test

[releaser]
eggs += esteele.manager
        check-manifest

[package-in-auto-checkout]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  if grep $1 ${buildout:directory}/checkouts.cfg > /dev/null
  then
      echo "Package $1 found in checkouts.cfg"
  else
      echo "Package $1 not found in checkouts.cfg"
      echo "FAIL BUILD"
  fi
output = ${buildout:directory}/bin/package-in-auto-checkout
mode = 755
