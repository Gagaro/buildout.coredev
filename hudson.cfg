[buildout]
extends = buildout.cfg
parts +=
    xmltest
    xmlalltests
    coverage-report
    pylint
    pylint-test
    pyflakes
    pyflakes-test
    zptlint
    zptlint-test

# Keep a list of all locations of actual code. There's no reason to be running
# pyflakes over setup.py and the like.
package-directories = 
    packages/Plone/Products/Plone/
    packages/Products.ATContentTypes/Products/ATContentTypes/
    packages/archetypes.kss/src/archypes/kss/
    packages/archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/
    packages/archetypes.schemaextender/archetypes/schemaextender/
    packages/borg.localrole/borg/localrole/
    packages/collective.monkeypatcher/collective/monkeypatcher/
    packages/five.customerize/src/five/customerize/
    packages/five.formlib/src/five/formlib/
    packages/five.localsitemanager/src/five/localsitemanager/
    packages/kss.core/kss/core/
    packages/kss.demo/kss/demo/
    packages/Products.CMFPlone/Products/CMFPlone/
    packages/plone.app.blob/src/plone/app/blob/
    packages/plone.app.content/plone/app/content/
    packages/plone.app.contentmenu/plone/app/contentmenu/
    packages/plone.app.contentrules/plone/app/contentrules/
    packages/plone.app.controlpanel/plone/app/controlpanel/
    packages/plone.app.customerize/plone/app/customerize/
    packages/plone.app.folder/src/plone/app/folder/
    packages/plone.app.form/plone/app/form/
    packages/plone.app.i18n/plone/app/i18n/
    packages/plone.app.imaging/src/plone/app/imaging/
    packages/plone.app.iterate/plone/app/iterate/
    packages/plone.app.jquerytools/plone/app/jquerytools/
    packages/plone.app.kss/plone/app/kss/
    packages/plone.app.layout/plone/app/layout/
    packages/plone.app.linkintegrity/plone/app/linkintegrity/
    packages/plone.app.locales/plone/app/locales/
    packages/plone.app.openid/plone/app/openid/
    packages/plone.app.portlets/plone/app/portlets/
    packages/plone.app.redirector/plone/app/redirector/
    packages/plone.app.registry/plone/app/registry/
    packages/plone.app.testing/plone/app/testing/
    packages/plone.app.upgrade/plone/app/upgrade/
    packages/plone.app.users/plone/app/users/
    packages/plone.app.uuid/plone/app/uuid/
    packages/plone.app.viewletmanager/plone/app/viewletmanager/
    packages/plone.app.vocabularies/plone/app/vocabularies/
    packages/plone.app.workflow/plone/app/workflow/
    packages/plone.app.z3cform/plone/app/z3cform/
    packages/plone.autoform/plone/autoform/
    packages/plone.browserlayer/plone/browserlayer/
    packages/plone.contentrules/plone/contentrules/
    packages/plone.fieldsets/plone/fieldsets/
    packages/plone.folder/plone/folder/
    packages/plone.i18n/plone/i18n/
    packages/plone.indexer/plone/indexer/
    packages/plone.intelligenttext/plone/intelligenttext/
    packages/plone.keyring/plone/keyring/
    packages/plone.locking/plone/locking/
    packages/plone.memoize/plone/memoize/
    packages/plone.openid/plone/openid/
    packages/plone.outputfilters/plone/outputfilters/
    packages/plone.portlet.collection/plone/portlet/collection/
    packages/plone.portlet.static/plone/portlet/static/
    packages/plone.portlets/plone/portlets/
    packages/plone.protect/plone/protect/
    packages/plone.registry/plone/registry/
    packages/plone.scale/plone/scale/
    packages/plone.session/plone/session/
    packages/plone.stringinterp/plone/stringinterp/
    packages/plone.supermodel/plone/supermodel/
    packages/plone.testing/plone/testing/
    packages/plone.theme/plone/theme/
    packages/plone.uuid/plone/uuid/
    packages/plone.z3cform/plone/z3cform/
    packages/plonetheme.classic/plonetheme/classic/
    packages/plonetheme.sunburst/plonetheme/sunburst/
    packages/Products.Archetypes/Products/Archetypes/
    packages/Products.ATContentTypes/Products/ATContentTypes/
    packages/Products.ATReferenceBrowserWidget/Products/ATReferenceBrowserWidget/
    packages/Products.CMFActionIcons/Products/CMFActionIcons/
    packages/Products.CMFCalendar/Products/CMFCalendar/
    packages/Products.CMFCore/Products/CMFCore/
    packages/Products.CMFDefault/Products/CMFDefault/
    packages/Products.CMFDiffTool/Products/CMFDiffTool/
    packages/Products.CMFDynamicViewFTI/Products/CMFDynamicViewFTI/
    packages/Products.CMFEditions/Products/CMFEditions/
    packages/Products.CMFFormController/Products/CMFFormController/
    packages/Products.CMFPlacefulWorkflow/Products/CMFPlacefulWorkflow/
    packages/Products.CMFQuickInstallerTool/Products/CMFQuickInstallerTool/
    packages/Products.CMFTestCase/Products/CMFTestCase/
    packages/Products.CMFTopic/Products/CMFTopic/
    packages/Products.CMFUid/Products/CMFUid/
    packages/Products.contentmigration/Products/contentmigration/
    packages/Products.DCWorkflow/Products/DCWorkflow/
    packages/Products.ExtendedPathIndex/Products/ExtendedPathIndex/
    packages/Products.ExternalEditor/Products/ExternalEditor/
    packages/Products.GenericSetup/Products/GenericSetup/
    packages/Products.GroupUserFolder/Products/GroupUserFolder/
    packages/Products.i18ntestcase/Products/i18ntestcase/
    packages/Products.kupu/Products/kupu/
    packages/Products.LinguaPlone/Products/LinguaPlone/
    packages/Products.Marshall/Products/Marshall/
    packages/Products.MimetypesRegistry/Products/MimetypesRegistry/
    packages/Products.PasswordResetTool/Products/PasswordResetTool/
    packages/Products.PlacelessTranslationService/Products/PlacelessTranslationService/
    packages/Products.PloneLanguageTool/Products/PloneLanguageTool/
    packages/Products.PlonePAS/Products/PlonePAS/
    packages/Products.PloneTestCase/Products/PloneTestCase/
    packages/Products.PluggableAuthService/Products/PluggableAuthService/
    packages/Products.PluginRegistry/Products/PluginRegistry/
    packages/Products.PortalTransforms/Products/PortalTransforms/
    packages/Products.ResourceRegistries/Products/ResourceRegistries/
    packages/Products.SecureMailHost/Products/SecureMailHost/
    packages/Products.statusmessages/Products/statusmessages/
    packages/Products.TinyMCE/Products/TinyMCE/
    packages/Products.validation/Products/validation/
    packages/Products.ZopeVersionControl/Products/ZopeVersionControl/
    packages/txtfilter
    packages/wicked
    packages/z3c.autoinclude/z3c/autoinclude/
    packages/z3c.form/z3c/form/

[xmltest]
recipe = collective.xmltestreport
eggs =
    ${test:eggs}
defaults = ['--auto-color', '--auto-progress']

[xmlalltests]
recipe = plone.recipe.alltests
package-map = ${alltests:package-map}
groups = ${alltests:groups}
exclude = ${alltests:exclude}
test-script = ${buildout:bin-directory}/xmltest

[pylint]
recipe = zc.recipe.egg
eggs = logilab.pylintinstaller
extra-paths = ${instance:location}/lib/python
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]
arguments = [
    '--output-format=parseable',
    '--zope=y',
    '--reports=y',
    '--disable-msg=E0611,F0401,W0232,E1101,C0103,C0111,R0201,W0201,R0911,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622',
    '--generated-members=objects',
    ] + sys.argv[1:]

# Disable messages:
#
# E0611: No name %r in module %r. Used when a name cannot be found in a module.
# F0401: Unable to import %r (%s). Used when pylint has been unable to import a module.
# W0232: Class has no __init__ method. Used when a class has no __init__ method, neither its parent classes.
# C0103: Invalid name "%s" (should match %s). Used when the name doesn't match the regular expression associated to its type (constant, variable, class...).
# C0111: Message Missing docstring Description Used when a module, function, class or method has no docstring. Some special methods like init don't necessary require a docstring. Explanationâ€¦
# R0201: Method could be a function
# W0201: Attribute %r defined outside __init__
# R0911: Too many return statements (%s/%s)

# E0211: Method has no argument
#        - Reason: raises an error on zope.interface definitions
# E0213 Method should have "self" as first argument
#       - Reason: raises an error on zope.interface definitions
# E1121 Too many positional arguments for function call
#       - Reason: ???
# E1002 Use super on an old style class
#       - Reason: super(CommentsViewlet, self).update() raises an error
# W0622 total_comments: Redefining built-in 'object'
#       - Reason: top level def function will not work (e.g. for catalog indexers)
# ...
# See http://pylint-messages.wikidot.com/all-messages for a full list.

[pylint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pylint.log ]; then
      rm pylint.log
      echo "Old pylint.log file removed"
    fi
    echo "Running pylint"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find -L $pkg -regex ".*\.py" | xargs bin/pylint >> pylint.log
    done
    echo "Finished"
output = ${buildout:directory}/bin/pylint-test
mode = 755

[zptlint]
recipe = zc.recipe.egg
eggs =
   zptlint
entry-points = zptlint=zptlint:run

[zptlint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -e zptlint.log ]; then
      echo "Old zptlint.log file removed"
      rm zptlint.log
    fi
    echo "Running zptlint-test"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find $pkg -regex ".*\.[c|z]?pt" | xargs -r bin/zptlint | perl -p -e 's/\s+$/ /g;s/\s+/ /g;s/\*{3}s?/\n/g' >> zptlint.log
    done
output = ${buildout:directory}/bin/zptlint-test
mode = 755

[pyflakes]
recipe = zc.recipe.egg
eggs =
   pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pyflakes-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pyflakes.log ]; then
      rm pyflakes.log
      echo "Old pyflakes.log file removed"
    fi
    echo "Running pyflakes"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find -L $pkg -regex ".*\.py" | xargs -r bin/pyflakes >> pyflakes.log
    done
output = ${buildout:directory}/bin/pyflakes-test
mode = 755

[ohcount]
# Requires that ohcount be installed on the server.
# See http://pypi.python.org/pypi/ohconvert for more.
recipe = zc.recipe.egg
eggs = ohconvert

[ohcount-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s sloccount.sc ]; then
      rm sloccount.sc
      echo "Old sloccount.sc file removed"
    fi
    echo "Running ohcount"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        bin/ohconvert $pkg >> sloccount.sc
    done
output = ${buildout:directory}/bin/ohcount-test
mode = 755
