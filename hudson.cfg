[buildout]
extends = buildout.cfg
parts +=
    xmltest
    xmlalltests
    coverage-report
    pylint
    pylint-test
    pyflakes
    pyflakes-test
    zptlint
    zptlint-test

# Keep a list of all locations of actual code. There's no reason to be running
# pyflakes over setup.py and the like.
package-directories = 
    packages/Plone/Products/CMFPlone/
    packages/Products.ATContentTypes/P
    packages/archetypes.kss
    packages/archetypes.referencebrowserwidget
    packages/archetypes.schemaextender
    packages/borg.localrole
    packages/collective.monkeypatcher
    packages/five.customerize
    packages/five.formlib
    packages/five.localsitemanager
    packages/kss.core
    packages/kss.demo
    packages/Plone
    packages/plone.app.blob
    packages/plone.app.content
    packages/plone.app.contentmenu
    packages/plone.app.contentrules
    packages/plone.app.controlpanel
    packages/plone.app.customerize
    packages/plone.app.folder
    packages/plone.app.form
    packages/plone.app.i18n
    packages/plone.app.imaging
    packages/plone.app.iterate
    packages/plone.app.jquerytools
    packages/plone.app.kss
    packages/plone.app.layout
    packages/plone.app.linkintegrity
    packages/plone.app.locales
    packages/plone.app.openid
    packages/plone.app.portlets
    packages/plone.app.redirector
    packages/plone.app.registry
    packages/plone.app.testing
    packages/plone.app.upgrade
    packages/plone.app.users
    packages/plone.app.uuid
    packages/plone.app.viewletmanager
    packages/plone.app.vocabularies
    packages/plone.app.workflow
    packages/plone.app.z3cform
    packages/plone.autoform
    packages/plone.browserlayer
    packages/plone.contentrules
    packages/plone.fieldsets
    packages/plone.folder
    packages/plone.i18n
    packages/plone.indexer
    packages/plone.intelligenttext
    packages/plone.keyring
    packages/plone.locking
    packages/plone.memoize
    packages/plone.openid
    packages/plone.outputfilters
    packages/plone.portlet.collection
    packages/plone.portlet.static
    packages/plone.portlets
    packages/plone.protect
    packages/plone.recipe.alltests
    packages/plone.recipe.zeoserver
    packages/plone.recipe.zope2instance
    packages/plone.registry
    packages/plone.reload
    packages/plone.scale
    packages/plone.session
    packages/plone.stringinterp
    packages/plone.supermodel
    packages/plone.testing
    packages/plone.theme
    packages/plone.uuid
    packages/plone.z3cform
    packages/plonetheme.classic
    packages/plonetheme.sunburst
    packages/Products.Archetypes
    packages/Products.ATContentTypes
    packages/Products.ATReferenceBrowserWidget
    packages/Products.CMFActionIcons
    packages/Products.CMFCalendar
    packages/Products.CMFCore
    packages/Products.CMFDefault
    packages/Products.CMFDiffTool
    packages/Products.CMFDynamicViewFTI
    packages/Products.CMFEditions
    packages/Products.CMFFormController
    packages/Products.CMFPlacefulWorkflow
    packages/Products.CMFPlone
    packages/Products.CMFQuickInstallerTool
    packages/Products.CMFTestCase
    packages/Products.CMFTopic
    packages/Products.CMFUid
    packages/Products.contentmigration
    packages/Products.DCWorkflow
    packages/Products.ExtendedPathIndex
    packages/Products.ExternalEditor
    packages/Products.GenericSetup
    packages/Products.GroupUserFolder
    packages/Products.i18ntestcase
    packages/Products.kupu
    packages/Products.LinguaPlone
    packages/Products.Marshall
    packages/Products.MimetypesRegistry
    packages/Products.PasswordResetTool
    packages/Products.PlacelessTranslationService
    packages/Products.PloneLanguageTool
    packages/Products.PlonePAS
    packages/Products.PloneTestCase
    packages/Products.PluggableAuthService
    packages/Products.PluginRegistry
    packages/Products.PortalTransforms
    packages/Products.ResourceRegistries
    packages/Products.SecureMailHost
    packages/Products.statusmessages
    packages/Products.TinyMCE
    packages/Products.validation
    packages/Products.ZopeVersionControl
    packages/txtfilter
    packages/wicked
    packages/z3c.autoinclude
    packages/z3c.form

[xmltest]
recipe = collective.xmltestreport
eggs =
    ${test:eggs}
defaults = ['--auto-color', '--auto-progress']

[xmlalltests]
recipe = plone.recipe.alltests
package-map = ${alltests:package-map}
groups = ${alltests:groups}
exclude = ${alltests:exclude}
test-script = ${buildout:bin-directory}/xmltest

[pylint]
recipe = zc.recipe.egg
eggs = logilab.pylintinstaller
extra-paths = ${instance:location}/lib/python
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]
arguments = [
    '--output-format=parseable',
    '--zope=y',
    '--reports=y',
    '--disable-msg=E0611,F0401,W0232,E1101,C0103,C0111,R0201,W0201,R0911,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622',
    '--generated-members=objects',
    ] + sys.argv[1:]

# Disable messages:
#
# E0611: No name %r in module %r. Used when a name cannot be found in a module.
# F0401: Unable to import %r (%s). Used when pylint has been unable to import a module.
# W0232: Class has no __init__ method. Used when a class has no __init__ method, neither its parent classes.
# C0103: Invalid name "%s" (should match %s). Used when the name doesn't match the regular expression associated to its type (constant, variable, class...).
# C0111: Message Missing docstring Description Used when a module, function, class or method has no docstring. Some special methods like init don't necessary require a docstring. Explanationâ€¦
# R0201: Method could be a function
# W0201: Attribute %r defined outside __init__
# R0911: Too many return statements (%s/%s)

# E0211: Method has no argument
#        - Reason: raises an error on zope.interface definitions
# E0213 Method should have "self" as first argument
#       - Reason: raises an error on zope.interface definitions
# E1121 Too many positional arguments for function call
#       - Reason: ???
# E1002 Use super on an old style class
#       - Reason: super(CommentsViewlet, self).update() raises an error
# W0622 total_comments: Redefining built-in 'object'
#       - Reason: top level def function will not work (e.g. for catalog indexers)
# ...
# See http://pylint-messages.wikidot.com/all-messages for a full list.

[pylint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pylint.log ]; then
      rm pylint.log
      echo "Old pylint.log file removed"
    fi
    echo "Running pylint"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find -L $pkg -regex ".*\.py" | xargs bin/pylint >> pylint.log
    done
    echo "Finished"
output = ${buildout:directory}/bin/pylint-test
mode = 755

[zptlint]
recipe = zc.recipe.egg
eggs =
   zptlint
entry-points = zptlint=zptlint:run

[zptlint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -e zptlint.log ]; then
      echo "Old zptlint.log file removed"
      rm zptlint.log
    fi
    echo "Running zptlint-test"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find $pkg -regex ".*\.[c|z]?pt" | xargs -r bin/zptlint | perl -p -e 's/\s+$/ /g;s/\s+/ /g;s/\*{3}s?/\n/g' >> zptlint.log
    done
output = ${buildout:directory}/bin/zptlint-test
mode = 755

[pyflakes]
recipe = zc.recipe.egg
eggs =
   pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pyflakes-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pyflakes.log ]; then
      rm pyflakes.log
      echo "Old pyflakes.log file removed"
    fi
    echo "Running pyflakes"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find -L $pkg -regex ".*\.py" | xargs -r bin/pyflakes >> pyflakes.log
    done
output = ${buildout:directory}/bin/pyflakes-test
mode = 755

[ohcount]
# Requires that ohcount be installed on the server.
# See http://pypi.python.org/pypi/ohconvert for more.
recipe = zc.recipe.egg
eggs = ohconvert

[ohcount-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s sloccount.sc ]; then
      rm sloccount.sc
      echo "Old sloccount.sc file removed"
    fi
    echo "Running ohcount"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        bin/ohconvert $pkg >> sloccount.sc
    done
output = ${buildout:directory}/bin/ohcount-test
mode = 755
