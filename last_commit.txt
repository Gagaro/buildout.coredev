Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-19T10:35:14-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/42ac72e02d7d365462dbf8ae6ae86f903f5f3949

Respect @@site_controlpanel configuration to show publication date in document_byline

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6d7fd29..713fa1b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.5.15 (unreleased)
 -------------------
 
+- Respect @@site_controlpanel configuration to show publication date
+  in document_byline (closes `#1037`_).
+  [rodfersou]
+
 - Fuzzy dates for document_byline (closes `#1000`_).
   [rodfersou]
 
@@ -1596,3 +1600,4 @@ Changelog
 
 .. _`#741`: https://github.com/plone/Products.CMFPlone/issues/741
 .. _`#1000`: https://github.com/plone/Products.CMFPlone/issues/1000
+.. _`#1037`: https://github.com/plone/Products.CMFPlone/issues/1037
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index d4ac86e..615d78f 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -143,10 +143,12 @@ def pub_date(self):
         or if Effective Date is not set on object.
         """
         # check if we are allowed to display publication date
-        properties = getToolByName(self.context, 'portal_properties')
-        site_properties = getattr(properties, 'site_properties')
-        if not site_properties.getProperty('displayPublicationDateInByline',
-           False):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        if not settings.display_publication_date_in_byline:
             return None
 
         # check if we have Effective Date set
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index 0a766c6..eddd8d8 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -1,7 +1,8 @@
 from DateTime import DateTime
-from plone.app.layout.viewlets.tests.base import ViewletsTestCase
-from plone.app.layout.viewlets.content import HistoryByLineView
 from plone.app.layout.viewlets.content import ContentRelatedItems
+from plone.app.layout.viewlets.content import DocumentBylineViewlet
+from plone.app.layout.viewlets.content import HistoryByLineView
+from plone.app.layout.viewlets.tests.base import ViewletsTestCase
 from plone.locking.interfaces import ILockable
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import ISecuritySchema
@@ -25,7 +26,6 @@ class IMyDexterityItem(Interface):
         """ Dexterity test type
         """
 
-
 class TestDocumentBylineViewletView(ViewletsTestCase):
     """
     Test the document by line viewlet
@@ -42,6 +42,71 @@ def afterSetUp(self):
 
     def _get_viewlet(self):
         request = self.app.REQUEST
+        viewlet = DocumentBylineViewlet(self.context, request, None, None)
+        viewlet.update()
+        return viewlet
+
+    def test_anonymous_locked_icon(self):
+        viewlet = self._get_viewlet()
+        ILockable(self.context).lock()
+        self.logout()
+        viewlet = self._get_viewlet()
+        self.assertEqual(viewlet.locked_icon(), '')
+
+    def test_locked_icon(self):
+        viewlet = self._get_viewlet()
+        self.assertEqual(viewlet.locked_icon(), "")
+        ILockable(self.context).lock()
+        lockIconUrl = (
+            '<img src="http://nohost/plone/lock_icon.png" alt="" '
+            'title="Locked" height="16" width="16" />'
+        )
+        self.assertEqual(viewlet.locked_icon(), lockIconUrl)
+
+    def test_pub_date(self):
+        # configure our portal to enable publication date on pages globally on
+        # the site
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        settings.display_publication_date_in_byline = True
+
+        self.logout()
+        viewlet = self._get_viewlet()
+
+        # publication date should be None as there is not Effective date set
+        # for our document yet
+        self.assertEqual(viewlet.pub_date(), None)
+
+        # now set effective date for our document
+        effective = DateTime()
+        self.context.setEffectiveDate(effective)
+        self.assertEqual(viewlet.pub_date(), DateTime(effective.ISO8601()))
+
+        # now switch off publication date globally on the site and see if
+        # viewlet returns None for publication date
+        settings.display_publication_date_in_byline = False
+        self.assertEqual(viewlet.pub_date(), None)
+
+
+class TestHistoryBylineViewletView(ViewletsTestCase):
+    """
+    Test the document by line viewlet
+    """
+    def afterSetUp(self):
+        self.folder.invokeFactory('Document', 'doc1', title='Document 1')
+        self.context = self.folder['doc1']
+
+        registry = getUtility(IRegistry)
+        self.security_settings = registry.forInterface(
+            ISecuritySchema,
+            prefix='plone',
+        )
+
+    def _get_viewlet(self):
+        request = self.app.REQUEST
         viewlet = HistoryByLineView(self.context, request)
         viewlet.update()
         return viewlet


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-19T10:57:24-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/dd1f14dd40026a1501ca7e3af07994a7f1c25441

Merge pull request #62 from plone/issue_1037

Issue 1037 - Respect @@site_controlpanel configuration to show publication date inâ€¦

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6d7fd29..713fa1b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.5.15 (unreleased)
 -------------------
 
+- Respect @@site_controlpanel configuration to show publication date
+  in document_byline (closes `#1037`_).
+  [rodfersou]
+
 - Fuzzy dates for document_byline (closes `#1000`_).
   [rodfersou]
 
@@ -1596,3 +1600,4 @@ Changelog
 
 .. _`#741`: https://github.com/plone/Products.CMFPlone/issues/741
 .. _`#1000`: https://github.com/plone/Products.CMFPlone/issues/1000
+.. _`#1037`: https://github.com/plone/Products.CMFPlone/issues/1037
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index d4ac86e..615d78f 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -143,10 +143,12 @@ def pub_date(self):
         or if Effective Date is not set on object.
         """
         # check if we are allowed to display publication date
-        properties = getToolByName(self.context, 'portal_properties')
-        site_properties = getattr(properties, 'site_properties')
-        if not site_properties.getProperty('displayPublicationDateInByline',
-           False):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        if not settings.display_publication_date_in_byline:
             return None
 
         # check if we have Effective Date set
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index 0a766c6..eddd8d8 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -1,7 +1,8 @@
 from DateTime import DateTime
-from plone.app.layout.viewlets.tests.base import ViewletsTestCase
-from plone.app.layout.viewlets.content import HistoryByLineView
 from plone.app.layout.viewlets.content import ContentRelatedItems
+from plone.app.layout.viewlets.content import DocumentBylineViewlet
+from plone.app.layout.viewlets.content import HistoryByLineView
+from plone.app.layout.viewlets.tests.base import ViewletsTestCase
 from plone.locking.interfaces import ILockable
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import ISecuritySchema
@@ -25,7 +26,6 @@ class IMyDexterityItem(Interface):
         """ Dexterity test type
         """
 
-
 class TestDocumentBylineViewletView(ViewletsTestCase):
     """
     Test the document by line viewlet
@@ -42,6 +42,71 @@ def afterSetUp(self):
 
     def _get_viewlet(self):
         request = self.app.REQUEST
+        viewlet = DocumentBylineViewlet(self.context, request, None, None)
+        viewlet.update()
+        return viewlet
+
+    def test_anonymous_locked_icon(self):
+        viewlet = self._get_viewlet()
+        ILockable(self.context).lock()
+        self.logout()
+        viewlet = self._get_viewlet()
+        self.assertEqual(viewlet.locked_icon(), '')
+
+    def test_locked_icon(self):
+        viewlet = self._get_viewlet()
+        self.assertEqual(viewlet.locked_icon(), "")
+        ILockable(self.context).lock()
+        lockIconUrl = (
+            '<img src="http://nohost/plone/lock_icon.png" alt="" '
+            'title="Locked" height="16" width="16" />'
+        )
+        self.assertEqual(viewlet.locked_icon(), lockIconUrl)
+
+    def test_pub_date(self):
+        # configure our portal to enable publication date on pages globally on
+        # the site
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        settings.display_publication_date_in_byline = True
+
+        self.logout()
+        viewlet = self._get_viewlet()
+
+        # publication date should be None as there is not Effective date set
+        # for our document yet
+        self.assertEqual(viewlet.pub_date(), None)
+
+        # now set effective date for our document
+        effective = DateTime()
+        self.context.setEffectiveDate(effective)
+        self.assertEqual(viewlet.pub_date(), DateTime(effective.ISO8601()))
+
+        # now switch off publication date globally on the site and see if
+        # viewlet returns None for publication date
+        settings.display_publication_date_in_byline = False
+        self.assertEqual(viewlet.pub_date(), None)
+
+
+class TestHistoryBylineViewletView(ViewletsTestCase):
+    """
+    Test the document by line viewlet
+    """
+    def afterSetUp(self):
+        self.folder.invokeFactory('Document', 'doc1', title='Document 1')
+        self.context = self.folder['doc1']
+
+        registry = getUtility(IRegistry)
+        self.security_settings = registry.forInterface(
+            ISecuritySchema,
+            prefix='plone',
+        )
+
+    def _get_viewlet(self):
+        request = self.app.REQUEST
         viewlet = HistoryByLineView(self.context, request)
         viewlet.update()
         return viewlet


