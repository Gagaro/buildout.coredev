Repository: mockup


Branch: refs/heads/master
Date: 2015-08-04T08:59:54-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/ba770f86970542d11f3b6f2324a9003323e2f7ae

remove tinymce paste override code

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index f5057ca..f44a0ca 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -300,36 +300,6 @@ define([
   });
 
   tinymce.PluginManager.add('ploneimage', function(editor) {
-      if(editor.settings.paste_data_images){
-        editor.on('paste', function(e){
-          var target = $(e.currentTarget);
-          var counter = 0;
-          function handlePaste(){
-            if($('img', target).length > 0){
-              // TODO: more options?
-              $('img', target).each(function(i,e){
-                if($(e).attr('src').indexOf('data:image') === 0){
-                  var byteString = atob($(e).attr('src').split(',')[1]);
-                  var ia = new Uint8Array(byteString.length);
-                  for (var i = 0; i < byteString.length; i++) {
-                    ia[i] = byteString.charCodeAt(i);
-                  }
-                  var blob = new Blob([ia],  {type: 'image/png'});
-                  editor.settings.addImagePasted(blob);
-                }
-              });
-              $('img', target).remove();
-            }else{
-              // wait for image to be pasted
-              if(counter < 3){
-                counter += 1;
-                setTimeout(handlePaste, 1);                
-              }
-            }
-          }
-          handlePaste();
-        });
-      }
     editor.addButton('ploneimage', {
       icon: 'image',
       tooltip: 'Insert/edit image',
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 3bb6575..856bfc1 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -39,8 +39,7 @@ toolbar: "undo redo | styleselect | bold italic | alignleft aligncenter alignrig
  *    <form>
  *      <textarea class="pat-tinymce"
  *          data-pat-tinymce='{"relatedItems": {"vocabularyUrl": "/relateditems-test.json" },
- *                            "upload": {"baseUrl": "/", "relativePath": "upload"},
- *                            "pasteImages": true
+ *                            "upload": {"baseUrl": "/", "relativePath": "upload"}
  *                            }'></textarea>
  *    </form>
  *
@@ -176,8 +175,7 @@ define([
                  'unlink plonelink ploneimage',
         //'autoresize_max_height': 900,
         'height': 400
-      },
-      pasteImages: false
+      }
     },
     addLinkClicked: function() {
       var self = this;
@@ -232,43 +230,6 @@ define([
         self.imageModal.show();
       }
     },
-    addImagePasted: function(file){
-      var self = this;
-      if (self.pasteModal === null) {
-        var linkTypes = ['uploadImage'];
-        /*if(!self.options.upload){
-          linkTypes.splice(1, 1);
-        }*/
-        var options = $.extend(true, {}, self.options, {
-          tinypattern: self,
-          linkTypes: linkTypes,
-          initialLinkType: 'uploadImage',
-          text: {
-            insertHeading: _t('Insert Image')
-          },
-          /*relatedItems: {
-            baseCriteria: [{
-              i: 'portal_type',
-              o: 'plone.app.querystring.operation.list.contains',
-              v: self.options.imageTypes.concat(self.options.folderTypes)
-            }],
-            selectableTypes: self.options.imageTypes,
-            resultTemplate: ResultTemplate,
-            selectionTemplate: SelectionTemplate
-          }*/
-        });
-        var $el = $('<div/>').insertAfter(self.$el);
-        self.pasteModal = new LinkModal($el, options);
-        self.pasteModal.options.upload.clipboardfile = file;
-        self.pasteModal.show();
-        $('a[href=' + $('.linkType.uploadImage legend').attr('id') + ']').click();
-      } else {
-        self.pasteModal.reinitialize();
-        self.pasteModal.options.upload.clipboardfile = file;
-        self.pasteModal.show();
-        $('a[href=' + $('.linkType.uploadImage legend').attr('id') + ']').click();
-      }
-    },
     generateUrl: function(data) {
       var self = this;
       var part = data[self.options.linkAttribute];
@@ -373,12 +334,6 @@ define([
       tinyOptions.addLinkClicked = function() {
         self.addLinkClicked.apply(self, []);
       };
-      if(self.options.pasteImages){
-        tinyOptions.paste_data_images = 'true';
-        tinyOptions.addImagePasted = function() {
-          self.addImagePasted.apply(self, []);
-        };
-      }
       tinyOptions.addImageClicked = function(file) {
         self.addImageClicked.apply(self, [file] );
       };


Repository: mockup


Branch: refs/heads/master
Date: 2015-08-05T10:23:08-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/1b788cc64ef0ef25543636d544c26030278aa25e

Merge pull request #546 from plone/remove-tinymce-paste-override

remove tinymce paste override code

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index f5057ca..f44a0ca 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -300,36 +300,6 @@ define([
   });
 
   tinymce.PluginManager.add('ploneimage', function(editor) {
-      if(editor.settings.paste_data_images){
-        editor.on('paste', function(e){
-          var target = $(e.currentTarget);
-          var counter = 0;
-          function handlePaste(){
-            if($('img', target).length > 0){
-              // TODO: more options?
-              $('img', target).each(function(i,e){
-                if($(e).attr('src').indexOf('data:image') === 0){
-                  var byteString = atob($(e).attr('src').split(',')[1]);
-                  var ia = new Uint8Array(byteString.length);
-                  for (var i = 0; i < byteString.length; i++) {
-                    ia[i] = byteString.charCodeAt(i);
-                  }
-                  var blob = new Blob([ia],  {type: 'image/png'});
-                  editor.settings.addImagePasted(blob);
-                }
-              });
-              $('img', target).remove();
-            }else{
-              // wait for image to be pasted
-              if(counter < 3){
-                counter += 1;
-                setTimeout(handlePaste, 1);                
-              }
-            }
-          }
-          handlePaste();
-        });
-      }
     editor.addButton('ploneimage', {
       icon: 'image',
       tooltip: 'Insert/edit image',
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index f1f9028..4d9ea50 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -39,8 +39,7 @@ toolbar: "undo redo | styleselect | bold italic | alignleft aligncenter alignrig
  *    <form>
  *      <textarea class="pat-tinymce"
  *          data-pat-tinymce='{"relatedItems": {"vocabularyUrl": "/relateditems-test.json" },
- *                            "upload": {"baseUrl": "/", "relativePath": "upload"},
- *                            "pasteImages": true
+ *                            "upload": {"baseUrl": "/", "relativePath": "upload"}
  *                            }'></textarea>
  *    </form>
  *
@@ -176,8 +175,7 @@ define([
                  'unlink plonelink ploneimage',
         //'autoresize_max_height': 900,
         'height': 400
-      },
-      pasteImages: false
+      }
     },
     addLinkClicked: function() {
       var self = this;
@@ -232,43 +230,6 @@ define([
         self.imageModal.show();
       }
     },
-    addImagePasted: function(file){
-      var self = this;
-      if (self.pasteModal === null) {
-        var linkTypes = ['uploadImage'];
-        /*if(!self.options.upload){
-          linkTypes.splice(1, 1);
-        }*/
-        var options = $.extend(true, {}, self.options, {
-          tinypattern: self,
-          linkTypes: linkTypes,
-          initialLinkType: 'uploadImage',
-          text: {
-            insertHeading: _t('Insert Image')
-          },
-          /*relatedItems: {
-            baseCriteria: [{
-              i: 'portal_type',
-              o: 'plone.app.querystring.operation.list.contains',
-              v: self.options.imageTypes.concat(self.options.folderTypes)
-            }],
-            selectableTypes: self.options.imageTypes,
-            resultTemplate: ResultTemplate,
-            selectionTemplate: SelectionTemplate
-          }*/
-        });
-        var $el = $('<div/>').insertAfter(self.$el);
-        self.pasteModal = new LinkModal($el, options);
-        self.pasteModal.options.upload.clipboardfile = file;
-        self.pasteModal.show();
-        $('a[href=' + $('.linkType.uploadImage legend').attr('id') + ']').click();
-      } else {
-        self.pasteModal.reinitialize();
-        self.pasteModal.options.upload.clipboardfile = file;
-        self.pasteModal.show();
-        $('a[href=' + $('.linkType.uploadImage legend').attr('id') + ']').click();
-      }
-    },
     generateUrl: function(data) {
       var self = this;
       var part = data[self.options.linkAttribute];
@@ -373,12 +334,6 @@ define([
       tinyOptions.addLinkClicked = function() {
         self.addLinkClicked.apply(self, []);
       };
-      if(self.options.pasteImages){
-        tinyOptions.paste_data_images = 'true';
-        tinyOptions.addImagePasted = function() {
-          self.addImagePasted.apply(self, []);
-        };
-      }
       tinyOptions.addImageClicked = function(file) {
         self.addImageClicked.apply(self, [file] );
       };


