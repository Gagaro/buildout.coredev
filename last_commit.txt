Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2015-09-09T07:03:35-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/7a2d55bfa50e5d1e23ed6c17b215cf6e586af5a9

Fix single portlet manager management to not show other portlet
  manager that are rendered on the same page. This fixes the odd
  case where the footer portlets were editable on a page where
  only the left or right side portlets should be editable fixes https://github.com/plone/Products.CMFPlone/issues/844

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/templates/edit-manager-macros.pt
M plone/app/portlets/browser/templates/topbar-manage-portlets.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 96db27a..65affe4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,11 @@ Changelog
 3.0.9 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix single portlet manager management to not show other portlet
+  manager that are rendered on the same page. This fixes the odd
+  case where the footer portlets were editable on a page where
+  only the left or right side portlets should be editable
+  [vangheem]
 
 
 3.0.8 (2015-09-07)
diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index 0e87982..d1acc2d 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -1,3 +1,4 @@
+from zope.interface import noLongerProvides
 from zope.interface import implements
 from zope.component import getMultiAdapter, getUtility
 from zope.publisher.interfaces.browser import IBrowserView
@@ -386,9 +387,29 @@ def __init__(self, context, request):
         # in the traversal path
         self.manager_name = 'plone.leftcolumn'
 
+        # Pay attention here.
+        # We are removing IManageContextualPortletsView from here
+        # so we can disable showing ALL edit portlet managers
+        # on the page when it's rendered. This view, we only
+        # want to see one edit portlet manager at a time.
+        # We still inherit from ManageContextualPortlets because
+        # we need to reuse all the management actions of adding,
+        # hiding, moving, etc portlets.
+        noLongerProvides(self, IManageContextualPortletsView)
+
     def publishTraverse(self, request, name):
         """Get the portlet manager via traversal so that we can re-use
         the portlet machinery without overriding it all here.
         """
         self.manager_name = name
         return self
+
+    def render_edit_manager_portlets(self):
+        # Pay attention again
+        # Here we manually render the portlets instead of doing
+        # something like provider:${view/manager_name} in the template
+        manager_view = ManageContextualPortlets(self.context, self.request)
+        portlet_manager = getMultiAdapter(
+            (self.context, self.request, manager_view), name=self.manager_name)
+        portlet_manager.update()
+        return portlet_manager.render()
\ No newline at end of file
diff --git a/plone/app/portlets/browser/templates/edit-manager-macros.pt b/plone/app/portlets/browser/templates/edit-manager-macros.pt
index 22a50a8..237f33b 100644
--- a/plone/app/portlets/browser/templates/edit-manager-macros.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-macros.pt
@@ -36,14 +36,15 @@
 </div>
 
 <div metal:define-macro="current-portlets-list" class="portletAssignments"
-    i18n:domain="plone">
+    i18n:domain="plone"
+    tal:define="portlets view/portlets">
 
-    <h4 i18n:translate="heading_portlets_assigned_here">
+    <h4 i18n:translate="heading_portlets_assigned_here" tal:condition="portlets">
         Portlets assigned here
     </h4>
 
     <div>
-        <tal:block repeat="portlet view/portlets">
+        <tal:block repeat="portlet portlets">
             <div tal:define="hiddenPortletClass python:not portlet['visible'] and 'blockedPortlet' or ''"
                 tal:attributes="class string:managedPortlet portlet ${hiddenPortletClass};
                                 data-portlethash portlet/hash;
diff --git a/plone/app/portlets/browser/templates/topbar-manage-portlets.pt b/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
index 6457a34..d069d8f 100644
--- a/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
+++ b/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
@@ -29,7 +29,7 @@
     </div>
 
     <h2 tal:content="view/manager_name"></h2>
-    <span tal:replace="structure provider:${view/manager_name}" />
+    <span tal:replace="structure view/render_edit_manager_portlets" />
 
   </div>
 


Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2015-09-09T07:25:34-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/3543adff6e0791c92b2856f4f64c2a718139eece

update interface handle and make sure to set the correctly traversed name on view

Files changed:
M plone/app/portlets/browser/manage.py
M plone/app/portlets/interfaces.py

diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index d1acc2d..2476f3d 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -1,4 +1,4 @@
-from zope.interface import noLongerProvides
+from zope.interface import implementsOnly
 from zope.interface import implements
 from zope.component import getMultiAdapter, getUtility
 from zope.publisher.interfaces.browser import IBrowserView
@@ -24,6 +24,7 @@
 from plone.app.portlets.storage import GroupDashboardPortletAssignmentMapping
 
 from plone.app.portlets.interfaces import IPortletPermissionChecker
+from plone.app.portlets.interfaces import ITopbarManagePortlets
 
 from plone.app.portlets.browser.interfaces import IManagePortletsView
 from plone.app.portlets.browser.interfaces import IManageContextualPortletsView
@@ -378,6 +379,16 @@ class ManageContentTypePortletsViewlet(ManagePortletsViewlet):
 
 class TopbarManagePortlets(ManageContextualPortlets):
 
+    # Pay attention here.
+    # We are removing IManageContextualPortletsView from here
+    # so we can disable showing ALL edit portlet managers
+    # on the page when it's rendered. This view, we only
+    # want to see one edit portlet manager at a time.
+    # We still inherit from ManageContextualPortlets because
+    # we need to reuse all the management actions of adding,
+    # hiding, moving, etc portlets.
+    implementsOnly(ITopbarManagePortlets)
+
     def __init__(self, context, request):
         super(TopbarManagePortlets, self).__init__(context, request)
         # Disable the left and right columns
@@ -387,16 +398,6 @@ def __init__(self, context, request):
         # in the traversal path
         self.manager_name = 'plone.leftcolumn'
 
-        # Pay attention here.
-        # We are removing IManageContextualPortletsView from here
-        # so we can disable showing ALL edit portlet managers
-        # on the page when it's rendered. This view, we only
-        # want to see one edit portlet manager at a time.
-        # We still inherit from ManageContextualPortlets because
-        # we need to reuse all the management actions of adding,
-        # hiding, moving, etc portlets.
-        noLongerProvides(self, IManageContextualPortletsView)
-
     def publishTraverse(self, request, name):
         """Get the portlet manager via traversal so that we can re-use
         the portlet machinery without overriding it all here.
@@ -409,6 +410,7 @@ def render_edit_manager_portlets(self):
         # Here we manually render the portlets instead of doing
         # something like provider:${view/manager_name} in the template
         manager_view = ManageContextualPortlets(self.context, self.request)
+        manager_view.__name__ = 'manage-portlets'
         portlet_manager = getMultiAdapter(
             (self.context, self.request, manager_view), name=self.manager_name)
         portlet_manager.update()
diff --git a/plone/app/portlets/interfaces.py b/plone/app/portlets/interfaces.py
index c3b7bd4..1d8edf9 100644
--- a/plone/app/portlets/interfaces.py
+++ b/plone/app/portlets/interfaces.py
@@ -119,3 +119,7 @@ def __call__(self):
         'plone.dashboard2', 'plone.dashboard3' and/or 'plone.dashboard4')
         and a list of portlet assignmen instances.
         """
+
+
+class ITopbarManagePortlets(Interface):
+    pass
\ No newline at end of file


Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2015-09-09T08:49:48-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/1bdda2272982c42301009b67307af6802a99938b

Merge pull request #54 from plone/fix-portlet-management-artifacts

Fix single portlet manager management to not show other portlets on same page

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/templates/edit-manager-macros.pt
M plone/app/portlets/browser/templates/topbar-manage-portlets.pt
M plone/app/portlets/interfaces.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 96db27a..65affe4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,11 @@ Changelog
 3.0.9 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix single portlet manager management to not show other portlet
+  manager that are rendered on the same page. This fixes the odd
+  case where the footer portlets were editable on a page where
+  only the left or right side portlets should be editable
+  [vangheem]
 
 
 3.0.8 (2015-09-07)
diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index 0e87982..2476f3d 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -1,3 +1,4 @@
+from zope.interface import implementsOnly
 from zope.interface import implements
 from zope.component import getMultiAdapter, getUtility
 from zope.publisher.interfaces.browser import IBrowserView
@@ -23,6 +24,7 @@
 from plone.app.portlets.storage import GroupDashboardPortletAssignmentMapping
 
 from plone.app.portlets.interfaces import IPortletPermissionChecker
+from plone.app.portlets.interfaces import ITopbarManagePortlets
 
 from plone.app.portlets.browser.interfaces import IManagePortletsView
 from plone.app.portlets.browser.interfaces import IManageContextualPortletsView
@@ -377,6 +379,16 @@ class ManageContentTypePortletsViewlet(ManagePortletsViewlet):
 
 class TopbarManagePortlets(ManageContextualPortlets):
 
+    # Pay attention here.
+    # We are removing IManageContextualPortletsView from here
+    # so we can disable showing ALL edit portlet managers
+    # on the page when it's rendered. This view, we only
+    # want to see one edit portlet manager at a time.
+    # We still inherit from ManageContextualPortlets because
+    # we need to reuse all the management actions of adding,
+    # hiding, moving, etc portlets.
+    implementsOnly(ITopbarManagePortlets)
+
     def __init__(self, context, request):
         super(TopbarManagePortlets, self).__init__(context, request)
         # Disable the left and right columns
@@ -392,3 +404,14 @@ def publishTraverse(self, request, name):
         """
         self.manager_name = name
         return self
+
+    def render_edit_manager_portlets(self):
+        # Pay attention again
+        # Here we manually render the portlets instead of doing
+        # something like provider:${view/manager_name} in the template
+        manager_view = ManageContextualPortlets(self.context, self.request)
+        manager_view.__name__ = 'manage-portlets'
+        portlet_manager = getMultiAdapter(
+            (self.context, self.request, manager_view), name=self.manager_name)
+        portlet_manager.update()
+        return portlet_manager.render()
\ No newline at end of file
diff --git a/plone/app/portlets/browser/templates/edit-manager-macros.pt b/plone/app/portlets/browser/templates/edit-manager-macros.pt
index 22a50a8..237f33b 100644
--- a/plone/app/portlets/browser/templates/edit-manager-macros.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-macros.pt
@@ -36,14 +36,15 @@
 </div>
 
 <div metal:define-macro="current-portlets-list" class="portletAssignments"
-    i18n:domain="plone">
+    i18n:domain="plone"
+    tal:define="portlets view/portlets">
 
-    <h4 i18n:translate="heading_portlets_assigned_here">
+    <h4 i18n:translate="heading_portlets_assigned_here" tal:condition="portlets">
         Portlets assigned here
     </h4>
 
     <div>
-        <tal:block repeat="portlet view/portlets">
+        <tal:block repeat="portlet portlets">
             <div tal:define="hiddenPortletClass python:not portlet['visible'] and 'blockedPortlet' or ''"
                 tal:attributes="class string:managedPortlet portlet ${hiddenPortletClass};
                                 data-portlethash portlet/hash;
diff --git a/plone/app/portlets/browser/templates/topbar-manage-portlets.pt b/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
index 6457a34..d069d8f 100644
--- a/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
+++ b/plone/app/portlets/browser/templates/topbar-manage-portlets.pt
@@ -29,7 +29,7 @@
     </div>
 
     <h2 tal:content="view/manager_name"></h2>
-    <span tal:replace="structure provider:${view/manager_name}" />
+    <span tal:replace="structure view/render_edit_manager_portlets" />
 
   </div>
 
diff --git a/plone/app/portlets/interfaces.py b/plone/app/portlets/interfaces.py
index c3b7bd4..1d8edf9 100644
--- a/plone/app/portlets/interfaces.py
+++ b/plone/app/portlets/interfaces.py
@@ -119,3 +119,7 @@ def __call__(self):
         'plone.dashboard2', 'plone.dashboard3' and/or 'plone.dashboard4')
         and a list of portlet assignmen instances.
         """
+
+
+class ITopbarManagePortlets(Interface):
+    pass
\ No newline at end of file


