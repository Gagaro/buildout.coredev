Repository: plone.app.widgets
Branch: refs/heads/master
Date: 2015-03-20T16:15:54-03:00
Author: HÃ©ctor Velarde (hvelarde) <hvelarde@yahoo.com>
Commit: https://github.com/plone/plone.app.widgets/commit/a1dc9fda3b0306ada16e0454a6e8afbbb1222b76

Revert "Update development and CI configurations"

Files changed:
A Makefile
A buildout.cfg.in
A dev.nix
A develop.cfg
A travis.cfg
A versions.cfg
M .travis.yml
M README.rst
M bootstrap.py
M plone/app/widgets/tests/test_base.py
M plone/app/widgets/tests/test_robot.py
M plone/app/widgets/tests/test_utils.py
M setup.py
D .coveragerc
D buildout.cfg

diff --git a/.coveragerc b/.coveragerc
deleted file mode 100644
index 543aede..0000000
--- a/.coveragerc
+++ /dev/null
@@ -1,8 +0,0 @@
-[report]
-omit =
-    /home/*/.buildout/eggs/*
-    /usr/*
-    bin/test
-    buildout-cache/eggs/*
-    eggs/*
-    parts/*
diff --git a/.travis.yml b/.travis.yml
index 0cff256..c369b6d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,45 +1,41 @@
 language: python
-python: 2.7
-sudo: false
-cache:
-  directories:
-  - eggs
-# addons:
-#   sauce_connect: true
+python:
+  - 2.7
+addons:
+  sauce_connect:
+    - username: $SAUCE_USERNAME
+    - access_key: $SAUCE_ACCESS_KEY
 install:
-- python bootstrap.py
-- bin/buildout annotate
-- bin/buildout -Nq
-before_script:
-- export ROBOT_DESIRED_CAPABILITIES="$BROWSER,tunnel-identifier:$TRAVIS_JOB_NUMBER"
-- export DISPLAY=:99.0
-- sh -e /etc/init.d/xvfb start
-- firefox -v
+  - mkdir -p buildout-cache/downloads
+  - python bootstrap.py -c travis.cfg
+  - bin/buildout -N -t 3 -c travis.cfg
 script:
-- bin/code-analysis
-- bin/test
+  - if [ "$BROWSER" != "code-analysis" ]; then export ROBOT_DESIRED_CAPABILITIES="$BROWSER,tunnel-identifier:$TRAVIS_JOB_NUMBER"; fi
+  - if [ "$BROWSER" != "code-analysis" ]; then bin/test -vvv --all; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/flake8 setup.py; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/flake8 plone; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/coverage run --source=plone.app.widgets --omit=plone/app/widgets/at_bbb.py,plone/app/widgets/dx_bbb.py,plone/app/widgets/dx_pac_bbb.py,plone/app/widgets/test\* bin/test --layer=\!PloneAppWidgetsLayer; fi
 after_success:
-- bin/createcoverage
-- pip install -q coveralls
-- coveralls
-# env:
-#   matrix:
-#     - BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
-#     - BROWSER="platform:OS X 10.8,browserName:ipad,version:6.1,device-orientation:portrait"
-#     - BROWSER="platform:Linux,browserName:android,version:4.0,device-type:tablet,device-orientation:portrait"
-#     - BROWSER="platform:Windows 7,browserName:firefox,version:25"
-#     - BROWSER="platform:Windows 7,browserName:chrome,version:31"
-#     - BROWSER="platform:Windows 8.1,browserName:internet explorer,version:11"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:10"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:9"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
-#     - BROWSER="platform:Windows 7,browserName:opera,version:12"
-#     - BROWSER="platform:OS X 10.8,browserName:safari,version:6"
-#   global:
-#     - secure: "X9AvF9DYKjG/E52ZKQGxxrMe/Z1FsuwJU9jk39NLia3aA3WyFKuE66BotqeZGi9Jk0V2IQWekMgZcAFIcRH6qbvMKcMtnhD+Wr8aiV7uby3wRjmPi2FznTiy+FvYwm8WiNBHw4Ek++nSCDkly0QGBUmJVvfe3zxNHSHSKx5E/yg="
-#     - secure: "CvB/BK4EhZIiruAuiIFw/Bn80Wv/5jGiS2tOCaXd54v7lhld2VBxyCfccIcizKlSkIXzDausw24zEF0HV4E6k4z8AB12h1DH/6p31+epbrvDnQOZ1Br2grusOqMbjOutRkJ0w+upI+BTaeSI9bmYXZQdpkLA5mJCv0sBbqi4SPA="
-#     - ROBOT_BUILD_NUMBER=plone.app.widgets-travis-$TRAVIS_BUILD_NUMBER
-#     - ROBOT_REMOTE_URL=http://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@ondemand.saucelabs.com:80/wd/hub
+  - bin/coveralls
+env:
+  matrix:
+    - BROWSER="code-analysis"
+    - BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
+    - BROWSER="platform:OS X 10.8,browserName:ipad,version:6.1,device-orientation:portrait"
+    - BROWSER="platform:Linux,browserName:android,version:4.0,device-type:tablet,device-orientation:portrait"
+    - BROWSER="platform:Windows 7,browserName:firefox,version:25"
+    - BROWSER="platform:Windows 7,browserName:chrome,version:31"
+    - BROWSER="platform:Windows 8.1,browserName:internet explorer,version:11"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:10"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:9"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
+    - BROWSER="platform:Windows 7,browserName:opera,version:12"
+    - BROWSER="platform:OS X 10.8,browserName:safari,version:6"
+  global:
+    - secure: "X9AvF9DYKjG/E52ZKQGxxrMe/Z1FsuwJU9jk39NLia3aA3WyFKuE66BotqeZGi9Jk0V2IQWekMgZcAFIcRH6qbvMKcMtnhD+Wr8aiV7uby3wRjmPi2FznTiy+FvYwm8WiNBHw4Ek++nSCDkly0QGBUmJVvfe3zxNHSHSKx5E/yg="
+    - secure: "CvB/BK4EhZIiruAuiIFw/Bn80Wv/5jGiS2tOCaXd54v7lhld2VBxyCfccIcizKlSkIXzDausw24zEF0HV4E6k4z8AB12h1DH/6p31+epbrvDnQOZ1Br2grusOqMbjOutRkJ0w+upI+BTaeSI9bmYXZQdpkLA5mJCv0sBbqi4SPA="
+    - ROBOT_BUILD_NUMBER=plone.app.widgets-travis-$TRAVIS_BUILD_NUMBER
+    - ROBOT_REMOTE_URL=http://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@ondemand.saucelabs.com:80/wd/hub
 matrix:
   allow_failures:
     - env: BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
@@ -51,4 +47,3 @@ matrix:
     - env: BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
     - env: BROWSER="platform:Windows 7,browserName:opera,version:12"
     - env: BROWSER="platform:OS X 10.8,browserName:safari,version:6"
-  fast_finish: true
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..1153a4b
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,22 @@
+NIX_PATH=~/.nix-defexpr/channels/
+
+all: bootstrap
+	bin/buildout -v
+
+travis: bootstrap
+	bin/buildout -c travis.cfg -v
+
+bootstrap:
+	NIX_PATH=${NIX_PATH} nix-build --out-link nixenv dev.nix
+	./nixenv/bin/virtualenv --distribute --clear .
+	echo ../../../nixenv/lib/python2.7/site-packages > lib/python2.7/site-packages/nixenv.pth
+	./bin/easy_install -H "" zc.buildout
+	mkdir -p buildout-cache/downloads
+
+test:
+	bin/test
+
+print-syspath:
+	./bin/python -c 'import sys,pprint;pprint.pprint(sys.path)'
+
+.PHONY: all bootstrap print-syspath
diff --git a/README.rst b/README.rst
index be2c893..9742d01 100644
--- a/README.rst
+++ b/README.rst
@@ -4,11 +4,9 @@ project. It overrides explicit widgets used in dexterity and archetypes to
 provide tested and modularized widgets based on the concept of *patterns*.
 
 .. image:: https://travis-ci.org/plone/plone.app.widgets.png?branch=master
-    :alt: Travis CI badge
     :target: https://travis-ci.org/plone/plone.app.widgets
 
 .. image:: https://coveralls.io/repos/plone/plone.app.widgets/badge.png?branch=master
-    :alt: Coveralls badge
     :target: https://coveralls.io/r/plone/plone.app.widgets?branch=master
 
 .. image:: https://pypip.in/v/plone.app.widgets/badge.png
@@ -36,6 +34,20 @@ This package should be safe to install and easy to uninstall (there is also
 uninstall profile). That means its fairly safe to give it a try, but just in
 case don't forget to create backup before testing it.
 
+As of version 1.4.0 there is quite comprehensive unittest coverage of python
+code as well as high coverage of our javascript code. There are also some robot
+tests which are testing integration with Plone, but this will be improved with
+future releases.
+
+This project will be integrated with Plone 5 and will never reach version
+2.0.0. You can monitor progress of `PLIP here`_.
+
+If you wonder why there is no Alpha/Beta marker in version, its because version
+of this package is kept in sync with other projects deriving from `Mockup`_
+(eg. `plone.app.toolbar`_).  Version 1.4.1 would then mean we're using
+`Mockup`_ version 1.4 and there was one bugfix only to the python code. Version
+packaged javascript inside is still in sync with `Mockup`_ project.
+
 
 What is included?
 =================
diff --git a/bootstrap.py b/bootstrap.py
index a629566..ed57894 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -35,7 +35,7 @@
 Simply run this script in a directory containing a buildout.cfg, using the
 Python that you want bin/buildout to use.
 
-Note that by using --find-links to point to local resources, you can keep
+Note that by using --find-links to point to local resources, you can keep 
 this script from going over the network.
 '''
 
@@ -59,8 +59,6 @@
 parser.add_option("--allow-site-packages",
                   action="store_true", default=False,
                   help=("Let bootstrap.py use existing site packages"))
-parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
 
 
 options, args = parser.parse_args()
@@ -81,20 +79,16 @@
 
 if not options.allow_site_packages:
     # ez_setup imports site, which adds site packages
-    # this will remove them from the path to ensure that incompatible versions
+    # this will remove them from the path to ensure that incompatible versions 
     # of setuptools are not in the path
     import site
-    # inside a virtualenv, there is no 'getsitepackages'.
+    # inside a virtualenv, there is no 'getsitepackages'. 
     # We can't remove these reliably
     if hasattr(site, 'getsitepackages'):
         for sitepackage_path in site.getsitepackages():
             sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
 
 setup_args = dict(to_dir=tmpeggs, download_delay=0)
-
-if options.setuptools_version is not None:
-    setup_args['version'] = options.setuptools_version
-
 ez['use_setuptools'](**setup_args)
 import setuptools
 import pkg_resources
@@ -134,15 +128,10 @@
     _final_parts = '*final-', '*final'
 
     def _final_version(parsed_version):
-        try:
-            return not parsed_version.is_prerelease
-        except AttributeError:
-            # Older setuptools
-            for part in parsed_version:
-                if (part[:1] == '*') and (part not in _final_parts):
-                    return False
-            return True
-
+        for part in parsed_version:
+            if (part[:1] == '*') and (part not in _final_parts):
+                return False
+        return True
     index = setuptools.package_index.PackageIndex(
         search_path=[setuptools_path])
     if find_links:
diff --git a/buildout.cfg b/buildout.cfg
deleted file mode 100644
index 3d34976..0000000
--- a/buildout.cfg
+++ /dev/null
@@ -1,40 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/test-5.0.x.cfg
-    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
-    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg
-    sphinx.cfg
-
-package-name = plone.app.widgets
-package-extras = [archetypes, dexterity, test]
-test-eggs = plone.app.contenttypes
-
-parts +=
-    createcoverage
-    omelette
-    robot
-
-[code-analysis]
-directory = ${buildout:directory}/plone/app/widgets
-pre-commit-hook = True
-flake8-ignore = E501
-return-status-codes = False
-
-[omelette]
-recipe = collective.recipe.omelette
-eggs = ${test:eggs}
-
-[robot]
-recipe = zc.recipe.egg
-eggs =
-    ${test:eggs}
-    robotframework-debuglibrary
-    plone.app.robotframework[reload]
-scripts =
-    robot-server
-    robot
-
-[versions]
-plone.app.widgets =
-# use latest version of setuptools
-setuptools =
diff --git a/buildout.cfg.in b/buildout.cfg.in
new file mode 100644
index 0000000..a5befa9
--- /dev/null
+++ b/buildout.cfg.in
@@ -0,0 +1,3 @@
+[buildout]
+extends =
+    develop.cfg
diff --git a/dev.nix b/dev.nix
new file mode 100644
index 0000000..b57e3a9
--- /dev/null
+++ b/dev.nix
@@ -0,0 +1,17 @@
+{ }:
+
+let
+    pkgs = import <nixpkgs> { };
+in
+
+with pkgs;
+
+buildEnv {
+  name = "plone-app-widgets-env";
+  paths = [
+    python27
+    python27Packages.recursivePthLoader
+    python27Packages.virtualenv
+    python27Packages.Plone
+  ] ++ lib.attrValues python27.modules;
+}
diff --git a/develop.cfg b/develop.cfg
new file mode 100644
index 0000000..5f32c3a
--- /dev/null
+++ b/develop.cfg
@@ -0,0 +1,51 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/4.3-latest/versions.cfg
+    sphinx.cfg
+    versions.cfg
+
+versions = versions
+parts +=
+    instance
+    test
+    robot
+
+develop = .
+
+extensions = mr.developer
+auto-checkout = *
+
+[sources]
+# Looks like, `develop = .` doesn't work here - buildout is downloading the
+# plone.app.widgets 1.5.0 egg. So we checkout plone.app.widgets to the buildout
+# directory path.
+plone.app.widgets = git git@github.com:plone/plone.app.widgets.git branch=master full-path=${buildout:directory}
+
+[robot]
+recipe = zc.recipe.egg
+eggs =
+    ${test:eggs}
+    robotframework-debuglibrary
+    plone.app.robotframework[reload]
+scripts =
+    robot-server
+    robot
+
+[instance]
+recipe = plone.recipe.zope2instance
+blob-storage = ${buildout:directory}/var/blobstorage
+user = admin:admin
+http-address = 8080
+debug-mode = on
+verbose-security = on
+interpreter = instance-python
+eggs =
+    Pillow
+    Plone
+    plone.app.widgets[archetypes,dexterity]
+
+[test]
+recipe = zc.recipe.testrunner
+eggs = plone.app.widgets[test,archetypes,dexterity]
+defaults = ['--auto-color', '--auto-progress']
+
diff --git a/plone/app/widgets/tests/test_base.py b/plone/app/widgets/tests/test_base.py
index 2754bad..6c02c37 100644
--- a/plone/app/widgets/tests/test_base.py
+++ b/plone/app/widgets/tests/test_base.py
@@ -1,5 +1,10 @@
 # -*- coding: utf-8 -*-
-import unittest
+
+try:
+    import unittest2 as unittest
+except ImportError:  # pragma: nocover
+    import unittest  # pragma: nocover
+    assert unittest  # pragma: nocover
 
 
 class BaseWidgetTests(unittest.TestCase):
diff --git a/plone/app/widgets/tests/test_robot.py b/plone/app/widgets/tests/test_robot.py
index 47989f6..a9252ef 100644
--- a/plone/app/widgets/tests/test_robot.py
+++ b/plone/app/widgets/tests/test_robot.py
@@ -1,6 +1,5 @@
 from plone.app.widgets.testing import PLONEAPPWIDGETS_DX_ROBOT_TESTING
 from plone.testing import layered
-
 import os
 import robotsuite
 import unittest
diff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py
index 8b39c44..6228607 100644
--- a/plone/app/widgets/tests/test_utils.py
+++ b/plone/app/widgets/tests/test_utils.py
@@ -1,7 +1,11 @@
 from mock import Mock
 from mock import patch
 
-import unittest
+try:
+    import unittest2 as unittest
+except ImportError:  # pragma: nocover
+    import unittest  # pragma: nocover
+    assert unittest  # pragma: nocover
 
 
 class MockTool(Mock):
diff --git a/setup.py b/setup.py
index f448c16..aed0238 100644
--- a/setup.py
+++ b/setup.py
@@ -11,54 +11,45 @@
         open("CHANGES.rst").read(),
     ),
     classifiers=[
-        'Development Status :: 3 - Alpha',
-        'Environment :: Web Environment',
-        'Framework :: Plone',
-        'Framework :: Plone :: 5.0',
-        'Intended Audience :: End Users/Desktop',
-        'License :: OSI Approved :: GNU General Public License v2 (GPLv2)',
-        'Operating System :: OS Independent',
-        'Programming Language :: JavaScript',
-        'Programming Language :: Python',
-        'Programming Language :: Python :: 2.7',
-        'Topic :: Software Development :: Libraries :: Python Modules',
+        "Framework :: Plone",
+        "Programming Language :: Python",
     ],
     keywords='plone widgets z3cform archetypes',
     author='Nathan Van Gheem',
     author_email='vangheem@gmail.com',
     url='https://github.com/plone/plone.app.widgets',
+    license='GPL',
     packages=find_packages(),
     namespace_packages=['plone', 'plone.app'],
     include_package_data=True,
     zip_safe=False,
     install_requires=[
-        'five.globalrequest',
-        'plone.app.layout',
-        'plone.app.vocabularies',
-        'plone.namedfile',
-        'Products.CMFPlone>=5.0.dev0',
-        'Products.ResourceRegistries',
         'setuptools',
-        'zope.component',
-        'zope.interface',
-        'zope.schema',
+        # needed because we use bundles
+        'Products.ResourceRegistries>=2.1',
+        # nedded because users vocabulary was added here
+        'plone.app.vocabularies>=2.1.12dev',
+        # needed for compatibility with jQuery 1.9+
+        'Products.CMFPlone>=5.0.dev0',
+        'five.globalrequest'
     ],
     extras_require={
         'test': [
-            'mock',
             'plone.app.robotframework[debug]',
-            'plone.app.testing',
-            'plone.testing',
-            'robotsuite',
+            'plone.app.widgets[archetypes, dexterity]',
+            'plone.app.testing>=4.2.4',  # we need ROBOT_TEST_LEVEL
+            'mock',
         ],
         'archetypes': [
-            'archetypes.schemaextender',
             'DateTime',
             'Products.Archetypes',
+            'archetypes.schemaextender',
         ],
         'dexterity': [
-            'plone.app.dexterity',
             'pytz',
+            'plone.app.dexterity',
+            'plone.app.contenttypes>=1.1b1',
+            'plone.app.event>=1.2',
         ],
     },
     entry_points="""
diff --git a/travis.cfg b/travis.cfg
new file mode 100644
index 0000000..6b5edf2
--- /dev/null
+++ b/travis.cfg
@@ -0,0 +1,24 @@
+[buildout]
+extends =
+    https://raw.github.com/collective/buildout.plonetest/master/travis-4.3.x.cfg
+    versions.cfg
+allow-hosts +=
+    code.google.com
+    robotframework.googlecode.com
+package-name = plone.app.widgets
+package-extras = [test,archetypes,dexterity]
+test-eggs = Pillow
+parts += extra
+develop += plone.app.contenttypes
+
+[extra]
+recipe = zc.recipe.egg
+eggs =
+    flake8
+    createcoverage
+    coveralls
+
+[versions]
+coverage = 3.7
+plone.app.robotframework = 0.8.2
+plone.app.contenttypes =
diff --git a/versions.cfg b/versions.cfg
new file mode 100644
index 0000000..2a4cef6
--- /dev/null
+++ b/versions.cfg
@@ -0,0 +1,21 @@
+[buildout]
+extends = https://raw.github.com/plone/plone.app.event/1.2.x/versions.cfg
+versions = versions
+
+[versions]
+# Robot Test Env
+plone.app.robotframework = 0.9.4
+robotframework = 2.8.4
+robotframework-selenium2library = 1.5.0
+robotsuite = 1.5.0
+selenium = 2.42.1
+robotframework-selenium2screenshots = 0.4.0
+sphinxcontrib-robotframework = 0.4.3
+robotframework-debuglibrary = 0.3
+# Test Env
+collective.xmltestreport = 1.3.1
+mock = 1.0.1
+zope.testrunner = 4.1.1
+pep8 = 1.4.6
+Babel = 1.3
+Pygments = 1.6


Repository: plone.app.widgets
Branch: refs/heads/master
Date: 2015-03-20T16:16:09-03:00
Author: HÃ©ctor Velarde (hvelarde) <hvelarde@yahoo.com>
Commit: https://github.com/plone/plone.app.widgets/commit/f9c6b38e70b1eab64ef68cff4ee67a39993f0627

Merge pull request #96 from plone/revert-95-hvelarde-buildout

Revert "Update development and CI configurations"

Files changed:
A Makefile
A buildout.cfg.in
A dev.nix
A develop.cfg
A travis.cfg
A versions.cfg
M .travis.yml
M README.rst
M bootstrap.py
M plone/app/widgets/tests/test_base.py
M plone/app/widgets/tests/test_robot.py
M plone/app/widgets/tests/test_utils.py
M setup.py
D .coveragerc
D buildout.cfg

diff --git a/.coveragerc b/.coveragerc
deleted file mode 100644
index 543aede..0000000
--- a/.coveragerc
+++ /dev/null
@@ -1,8 +0,0 @@
-[report]
-omit =
-    /home/*/.buildout/eggs/*
-    /usr/*
-    bin/test
-    buildout-cache/eggs/*
-    eggs/*
-    parts/*
diff --git a/.travis.yml b/.travis.yml
index 0cff256..c369b6d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,45 +1,41 @@
 language: python
-python: 2.7
-sudo: false
-cache:
-  directories:
-  - eggs
-# addons:
-#   sauce_connect: true
+python:
+  - 2.7
+addons:
+  sauce_connect:
+    - username: $SAUCE_USERNAME
+    - access_key: $SAUCE_ACCESS_KEY
 install:
-- python bootstrap.py
-- bin/buildout annotate
-- bin/buildout -Nq
-before_script:
-- export ROBOT_DESIRED_CAPABILITIES="$BROWSER,tunnel-identifier:$TRAVIS_JOB_NUMBER"
-- export DISPLAY=:99.0
-- sh -e /etc/init.d/xvfb start
-- firefox -v
+  - mkdir -p buildout-cache/downloads
+  - python bootstrap.py -c travis.cfg
+  - bin/buildout -N -t 3 -c travis.cfg
 script:
-- bin/code-analysis
-- bin/test
+  - if [ "$BROWSER" != "code-analysis" ]; then export ROBOT_DESIRED_CAPABILITIES="$BROWSER,tunnel-identifier:$TRAVIS_JOB_NUMBER"; fi
+  - if [ "$BROWSER" != "code-analysis" ]; then bin/test -vvv --all; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/flake8 setup.py; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/flake8 plone; fi
+  - if [ "$BROWSER" == "code-analysis" ]; then bin/coverage run --source=plone.app.widgets --omit=plone/app/widgets/at_bbb.py,plone/app/widgets/dx_bbb.py,plone/app/widgets/dx_pac_bbb.py,plone/app/widgets/test\* bin/test --layer=\!PloneAppWidgetsLayer; fi
 after_success:
-- bin/createcoverage
-- pip install -q coveralls
-- coveralls
-# env:
-#   matrix:
-#     - BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
-#     - BROWSER="platform:OS X 10.8,browserName:ipad,version:6.1,device-orientation:portrait"
-#     - BROWSER="platform:Linux,browserName:android,version:4.0,device-type:tablet,device-orientation:portrait"
-#     - BROWSER="platform:Windows 7,browserName:firefox,version:25"
-#     - BROWSER="platform:Windows 7,browserName:chrome,version:31"
-#     - BROWSER="platform:Windows 8.1,browserName:internet explorer,version:11"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:10"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:9"
-#     - BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
-#     - BROWSER="platform:Windows 7,browserName:opera,version:12"
-#     - BROWSER="platform:OS X 10.8,browserName:safari,version:6"
-#   global:
-#     - secure: "X9AvF9DYKjG/E52ZKQGxxrMe/Z1FsuwJU9jk39NLia3aA3WyFKuE66BotqeZGi9Jk0V2IQWekMgZcAFIcRH6qbvMKcMtnhD+Wr8aiV7uby3wRjmPi2FznTiy+FvYwm8WiNBHw4Ek++nSCDkly0QGBUmJVvfe3zxNHSHSKx5E/yg="
-#     - secure: "CvB/BK4EhZIiruAuiIFw/Bn80Wv/5jGiS2tOCaXd54v7lhld2VBxyCfccIcizKlSkIXzDausw24zEF0HV4E6k4z8AB12h1DH/6p31+epbrvDnQOZ1Br2grusOqMbjOutRkJ0w+upI+BTaeSI9bmYXZQdpkLA5mJCv0sBbqi4SPA="
-#     - ROBOT_BUILD_NUMBER=plone.app.widgets-travis-$TRAVIS_BUILD_NUMBER
-#     - ROBOT_REMOTE_URL=http://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@ondemand.saucelabs.com:80/wd/hub
+  - bin/coveralls
+env:
+  matrix:
+    - BROWSER="code-analysis"
+    - BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
+    - BROWSER="platform:OS X 10.8,browserName:ipad,version:6.1,device-orientation:portrait"
+    - BROWSER="platform:Linux,browserName:android,version:4.0,device-type:tablet,device-orientation:portrait"
+    - BROWSER="platform:Windows 7,browserName:firefox,version:25"
+    - BROWSER="platform:Windows 7,browserName:chrome,version:31"
+    - BROWSER="platform:Windows 8.1,browserName:internet explorer,version:11"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:10"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:9"
+    - BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
+    - BROWSER="platform:Windows 7,browserName:opera,version:12"
+    - BROWSER="platform:OS X 10.8,browserName:safari,version:6"
+  global:
+    - secure: "X9AvF9DYKjG/E52ZKQGxxrMe/Z1FsuwJU9jk39NLia3aA3WyFKuE66BotqeZGi9Jk0V2IQWekMgZcAFIcRH6qbvMKcMtnhD+Wr8aiV7uby3wRjmPi2FznTiy+FvYwm8WiNBHw4Ek++nSCDkly0QGBUmJVvfe3zxNHSHSKx5E/yg="
+    - secure: "CvB/BK4EhZIiruAuiIFw/Bn80Wv/5jGiS2tOCaXd54v7lhld2VBxyCfccIcizKlSkIXzDausw24zEF0HV4E6k4z8AB12h1DH/6p31+epbrvDnQOZ1Br2grusOqMbjOutRkJ0w+upI+BTaeSI9bmYXZQdpkLA5mJCv0sBbqi4SPA="
+    - ROBOT_BUILD_NUMBER=plone.app.widgets-travis-$TRAVIS_BUILD_NUMBER
+    - ROBOT_REMOTE_URL=http://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@ondemand.saucelabs.com:80/wd/hub
 matrix:
   allow_failures:
     - env: BROWSER="platform:OS X 10.8,browserName:iphone,version:6.1,device-orientation:portrait"
@@ -51,4 +47,3 @@ matrix:
     - env: BROWSER="platform:Windows 7,browserName:internet explorer,version:8"
     - env: BROWSER="platform:Windows 7,browserName:opera,version:12"
     - env: BROWSER="platform:OS X 10.8,browserName:safari,version:6"
-  fast_finish: true
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..1153a4b
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,22 @@
+NIX_PATH=~/.nix-defexpr/channels/
+
+all: bootstrap
+	bin/buildout -v
+
+travis: bootstrap
+	bin/buildout -c travis.cfg -v
+
+bootstrap:
+	NIX_PATH=${NIX_PATH} nix-build --out-link nixenv dev.nix
+	./nixenv/bin/virtualenv --distribute --clear .
+	echo ../../../nixenv/lib/python2.7/site-packages > lib/python2.7/site-packages/nixenv.pth
+	./bin/easy_install -H "" zc.buildout
+	mkdir -p buildout-cache/downloads
+
+test:
+	bin/test
+
+print-syspath:
+	./bin/python -c 'import sys,pprint;pprint.pprint(sys.path)'
+
+.PHONY: all bootstrap print-syspath
diff --git a/README.rst b/README.rst
index be2c893..9742d01 100644
--- a/README.rst
+++ b/README.rst
@@ -4,11 +4,9 @@ project. It overrides explicit widgets used in dexterity and archetypes to
 provide tested and modularized widgets based on the concept of *patterns*.
 
 .. image:: https://travis-ci.org/plone/plone.app.widgets.png?branch=master
-    :alt: Travis CI badge
     :target: https://travis-ci.org/plone/plone.app.widgets
 
 .. image:: https://coveralls.io/repos/plone/plone.app.widgets/badge.png?branch=master
-    :alt: Coveralls badge
     :target: https://coveralls.io/r/plone/plone.app.widgets?branch=master
 
 .. image:: https://pypip.in/v/plone.app.widgets/badge.png
@@ -36,6 +34,20 @@ This package should be safe to install and easy to uninstall (there is also
 uninstall profile). That means its fairly safe to give it a try, but just in
 case don't forget to create backup before testing it.
 
+As of version 1.4.0 there is quite comprehensive unittest coverage of python
+code as well as high coverage of our javascript code. There are also some robot
+tests which are testing integration with Plone, but this will be improved with
+future releases.
+
+This project will be integrated with Plone 5 and will never reach version
+2.0.0. You can monitor progress of `PLIP here`_.
+
+If you wonder why there is no Alpha/Beta marker in version, its because version
+of this package is kept in sync with other projects deriving from `Mockup`_
+(eg. `plone.app.toolbar`_).  Version 1.4.1 would then mean we're using
+`Mockup`_ version 1.4 and there was one bugfix only to the python code. Version
+packaged javascript inside is still in sync with `Mockup`_ project.
+
 
 What is included?
 =================
diff --git a/bootstrap.py b/bootstrap.py
index a629566..ed57894 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -35,7 +35,7 @@
 Simply run this script in a directory containing a buildout.cfg, using the
 Python that you want bin/buildout to use.
 
-Note that by using --find-links to point to local resources, you can keep
+Note that by using --find-links to point to local resources, you can keep 
 this script from going over the network.
 '''
 
@@ -59,8 +59,6 @@
 parser.add_option("--allow-site-packages",
                   action="store_true", default=False,
                   help=("Let bootstrap.py use existing site packages"))
-parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
 
 
 options, args = parser.parse_args()
@@ -81,20 +79,16 @@
 
 if not options.allow_site_packages:
     # ez_setup imports site, which adds site packages
-    # this will remove them from the path to ensure that incompatible versions
+    # this will remove them from the path to ensure that incompatible versions 
     # of setuptools are not in the path
     import site
-    # inside a virtualenv, there is no 'getsitepackages'.
+    # inside a virtualenv, there is no 'getsitepackages'. 
     # We can't remove these reliably
     if hasattr(site, 'getsitepackages'):
         for sitepackage_path in site.getsitepackages():
             sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
 
 setup_args = dict(to_dir=tmpeggs, download_delay=0)
-
-if options.setuptools_version is not None:
-    setup_args['version'] = options.setuptools_version
-
 ez['use_setuptools'](**setup_args)
 import setuptools
 import pkg_resources
@@ -134,15 +128,10 @@
     _final_parts = '*final-', '*final'
 
     def _final_version(parsed_version):
-        try:
-            return not parsed_version.is_prerelease
-        except AttributeError:
-            # Older setuptools
-            for part in parsed_version:
-                if (part[:1] == '*') and (part not in _final_parts):
-                    return False
-            return True
-
+        for part in parsed_version:
+            if (part[:1] == '*') and (part not in _final_parts):
+                return False
+        return True
     index = setuptools.package_index.PackageIndex(
         search_path=[setuptools_path])
     if find_links:
diff --git a/buildout.cfg b/buildout.cfg
deleted file mode 100644
index 3d34976..0000000
--- a/buildout.cfg
+++ /dev/null
@@ -1,40 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/test-5.0.x.cfg
-    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
-    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg
-    sphinx.cfg
-
-package-name = plone.app.widgets
-package-extras = [archetypes, dexterity, test]
-test-eggs = plone.app.contenttypes
-
-parts +=
-    createcoverage
-    omelette
-    robot
-
-[code-analysis]
-directory = ${buildout:directory}/plone/app/widgets
-pre-commit-hook = True
-flake8-ignore = E501
-return-status-codes = False
-
-[omelette]
-recipe = collective.recipe.omelette
-eggs = ${test:eggs}
-
-[robot]
-recipe = zc.recipe.egg
-eggs =
-    ${test:eggs}
-    robotframework-debuglibrary
-    plone.app.robotframework[reload]
-scripts =
-    robot-server
-    robot
-
-[versions]
-plone.app.widgets =
-# use latest version of setuptools
-setuptools =
diff --git a/buildout.cfg.in b/buildout.cfg.in
new file mode 100644
index 0000000..a5befa9
--- /dev/null
+++ b/buildout.cfg.in
@@ -0,0 +1,3 @@
+[buildout]
+extends =
+    develop.cfg
diff --git a/dev.nix b/dev.nix
new file mode 100644
index 0000000..b57e3a9
--- /dev/null
+++ b/dev.nix
@@ -0,0 +1,17 @@
+{ }:
+
+let
+    pkgs = import <nixpkgs> { };
+in
+
+with pkgs;
+
+buildEnv {
+  name = "plone-app-widgets-env";
+  paths = [
+    python27
+    python27Packages.recursivePthLoader
+    python27Packages.virtualenv
+    python27Packages.Plone
+  ] ++ lib.attrValues python27.modules;
+}
diff --git a/develop.cfg b/develop.cfg
new file mode 100644
index 0000000..5f32c3a
--- /dev/null
+++ b/develop.cfg
@@ -0,0 +1,51 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/4.3-latest/versions.cfg
+    sphinx.cfg
+    versions.cfg
+
+versions = versions
+parts +=
+    instance
+    test
+    robot
+
+develop = .
+
+extensions = mr.developer
+auto-checkout = *
+
+[sources]
+# Looks like, `develop = .` doesn't work here - buildout is downloading the
+# plone.app.widgets 1.5.0 egg. So we checkout plone.app.widgets to the buildout
+# directory path.
+plone.app.widgets = git git@github.com:plone/plone.app.widgets.git branch=master full-path=${buildout:directory}
+
+[robot]
+recipe = zc.recipe.egg
+eggs =
+    ${test:eggs}
+    robotframework-debuglibrary
+    plone.app.robotframework[reload]
+scripts =
+    robot-server
+    robot
+
+[instance]
+recipe = plone.recipe.zope2instance
+blob-storage = ${buildout:directory}/var/blobstorage
+user = admin:admin
+http-address = 8080
+debug-mode = on
+verbose-security = on
+interpreter = instance-python
+eggs =
+    Pillow
+    Plone
+    plone.app.widgets[archetypes,dexterity]
+
+[test]
+recipe = zc.recipe.testrunner
+eggs = plone.app.widgets[test,archetypes,dexterity]
+defaults = ['--auto-color', '--auto-progress']
+
diff --git a/plone/app/widgets/tests/test_base.py b/plone/app/widgets/tests/test_base.py
index 2754bad..6c02c37 100644
--- a/plone/app/widgets/tests/test_base.py
+++ b/plone/app/widgets/tests/test_base.py
@@ -1,5 +1,10 @@
 # -*- coding: utf-8 -*-
-import unittest
+
+try:
+    import unittest2 as unittest
+except ImportError:  # pragma: nocover
+    import unittest  # pragma: nocover
+    assert unittest  # pragma: nocover
 
 
 class BaseWidgetTests(unittest.TestCase):
diff --git a/plone/app/widgets/tests/test_robot.py b/plone/app/widgets/tests/test_robot.py
index 47989f6..a9252ef 100644
--- a/plone/app/widgets/tests/test_robot.py
+++ b/plone/app/widgets/tests/test_robot.py
@@ -1,6 +1,5 @@
 from plone.app.widgets.testing import PLONEAPPWIDGETS_DX_ROBOT_TESTING
 from plone.testing import layered
-
 import os
 import robotsuite
 import unittest
diff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py
index 8b39c44..6228607 100644
--- a/plone/app/widgets/tests/test_utils.py
+++ b/plone/app/widgets/tests/test_utils.py
@@ -1,7 +1,11 @@
 from mock import Mock
 from mock import patch
 
-import unittest
+try:
+    import unittest2 as unittest
+except ImportError:  # pragma: nocover
+    import unittest  # pragma: nocover
+    assert unittest  # pragma: nocover
 
 
 class MockTool(Mock):
diff --git a/setup.py b/setup.py
index f448c16..aed0238 100644
--- a/setup.py
+++ b/setup.py
@@ -11,54 +11,45 @@
         open("CHANGES.rst").read(),
     ),
     classifiers=[
-        'Development Status :: 3 - Alpha',
-        'Environment :: Web Environment',
-        'Framework :: Plone',
-        'Framework :: Plone :: 5.0',
-        'Intended Audience :: End Users/Desktop',
-        'License :: OSI Approved :: GNU General Public License v2 (GPLv2)',
-        'Operating System :: OS Independent',
-        'Programming Language :: JavaScript',
-        'Programming Language :: Python',
-        'Programming Language :: Python :: 2.7',
-        'Topic :: Software Development :: Libraries :: Python Modules',
+        "Framework :: Plone",
+        "Programming Language :: Python",
     ],
     keywords='plone widgets z3cform archetypes',
     author='Nathan Van Gheem',
     author_email='vangheem@gmail.com',
     url='https://github.com/plone/plone.app.widgets',
+    license='GPL',
     packages=find_packages(),
     namespace_packages=['plone', 'plone.app'],
     include_package_data=True,
     zip_safe=False,
     install_requires=[
-        'five.globalrequest',
-        'plone.app.layout',
-        'plone.app.vocabularies',
-        'plone.namedfile',
-        'Products.CMFPlone>=5.0.dev0',
-        'Products.ResourceRegistries',
         'setuptools',
-        'zope.component',
-        'zope.interface',
-        'zope.schema',
+        # needed because we use bundles
+        'Products.ResourceRegistries>=2.1',
+        # nedded because users vocabulary was added here
+        'plone.app.vocabularies>=2.1.12dev',
+        # needed for compatibility with jQuery 1.9+
+        'Products.CMFPlone>=5.0.dev0',
+        'five.globalrequest'
     ],
     extras_require={
         'test': [
-            'mock',
             'plone.app.robotframework[debug]',
-            'plone.app.testing',
-            'plone.testing',
-            'robotsuite',
+            'plone.app.widgets[archetypes, dexterity]',
+            'plone.app.testing>=4.2.4',  # we need ROBOT_TEST_LEVEL
+            'mock',
         ],
         'archetypes': [
-            'archetypes.schemaextender',
             'DateTime',
             'Products.Archetypes',
+            'archetypes.schemaextender',
         ],
         'dexterity': [
-            'plone.app.dexterity',
             'pytz',
+            'plone.app.dexterity',
+            'plone.app.contenttypes>=1.1b1',
+            'plone.app.event>=1.2',
         ],
     },
     entry_points="""
diff --git a/travis.cfg b/travis.cfg
new file mode 100644
index 0000000..6b5edf2
--- /dev/null
+++ b/travis.cfg
@@ -0,0 +1,24 @@
+[buildout]
+extends =
+    https://raw.github.com/collective/buildout.plonetest/master/travis-4.3.x.cfg
+    versions.cfg
+allow-hosts +=
+    code.google.com
+    robotframework.googlecode.com
+package-name = plone.app.widgets
+package-extras = [test,archetypes,dexterity]
+test-eggs = Pillow
+parts += extra
+develop += plone.app.contenttypes
+
+[extra]
+recipe = zc.recipe.egg
+eggs =
+    flake8
+    createcoverage
+    coveralls
+
+[versions]
+coverage = 3.7
+plone.app.robotframework = 0.8.2
+plone.app.contenttypes =
diff --git a/versions.cfg b/versions.cfg
new file mode 100644
index 0000000..2a4cef6
--- /dev/null
+++ b/versions.cfg
@@ -0,0 +1,21 @@
+[buildout]
+extends = https://raw.github.com/plone/plone.app.event/1.2.x/versions.cfg
+versions = versions
+
+[versions]
+# Robot Test Env
+plone.app.robotframework = 0.9.4
+robotframework = 2.8.4
+robotframework-selenium2library = 1.5.0
+robotsuite = 1.5.0
+selenium = 2.42.1
+robotframework-selenium2screenshots = 0.4.0
+sphinxcontrib-robotframework = 0.4.3
+robotframework-debuglibrary = 0.3
+# Test Env
+collective.xmltestreport = 1.3.1
+mock = 1.0.1
+zope.testrunner = 4.1.1
+pep8 = 1.4.6
+Babel = 1.3
+Pygments = 1.6


