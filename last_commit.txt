Repository: plone.app.content


Branch: refs/heads/master
Date: 2015-06-26T12:53:06-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/43d76bdb9ca1f0df489919db9f1e4f79580d42a9

Make the @@fileUpload to not be guarded by the AddPortalContent permission, and instead do that check in code, so we can return better error message

Files changed:
M CHANGES.rst
M plone/app/content/browser/configure.zcml
M plone/app/content/browser/file.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7fca280..b37ff1c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,11 @@ Changelog
 3.0.7 (unreleased)
 ------------------
 
+- Make the ``@@fileUpload`` to not be guarded by the AddPortalContent
+  permission, and instead do that check in code, so we can return better
+  error message
+  [frapell]
+
 - Let ``@@getVocabulary`` return the vocabulary's value instead of the token
   for the id in the result set. The token is binary encoded and leads to
   encoding errors when selecting a value with non-ASCII data from vocabulary
diff --git a/plone/app/content/browser/configure.zcml b/plone/app/content/browser/configure.zcml
index 637bf6c..9e8f64d 100644
--- a/plone/app/content/browser/configure.zcml
+++ b/plone/app/content/browser/configure.zcml
@@ -163,7 +163,7 @@
         name="fileUpload"
         for="Products.CMFCore.interfaces._content.IFolderish"
         class=".file.FileUploadView"
-        permission="cmf.AddPortalContent"
+        permission="zope2.View"
         />
 
     <browser:page
diff --git a/plone/app/content/browser/file.py b/plone/app/content/browser/file.py
index 0d579c2..707e27f 100644
--- a/plone/app/content/browser/file.py
+++ b/plone/app/content/browser/file.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
+from AccessControl import getSecurityManager
 from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.permissions import AddPortalContent
 from Products.Five.browser import BrowserView
 from plone.app.dexterity.interfaces import IDXFileFactory
 from plone.dexterity.interfaces import IDexterityFTI
@@ -89,6 +91,13 @@ def __getitem__(self, uid):
             raise KeyError
 
     def __call__(self):
+        # Check if user has permission to add content here
+        sm = getSecurityManager()
+        if not sm.checkPermission(AddPortalContent, self.context):
+            response = self.request.RESPONSE
+            response.setStatus(403)
+            return "You are not authorized to add content to this folder."
+
         req = self.request
         tusrequest = False
         if TUS_ENABLED:
@@ -123,6 +132,17 @@ def __call__(self):
         ctr = getToolByName(self.context, 'content_type_registry')
         type_ = ctr.findTypeName(filename.lower(), '', '') or 'File'
 
+        # Now check that the object is not restricted to be added in the
+        # current context
+        allowed_ids = [fti.getId() for fti in self.context.allowedContentTypes()]
+        if type_ not in allowed_ids:
+            response = self.request.RESPONSE
+            response.setStatus(403)
+            if type_ == 'File':
+                return "You cannot add a File to this folder, try another one"
+            if type_ == 'Image':
+                return "You cannot add an Image to this folder, try another one"
+
         dx_based = False
         pt = getToolByName(self.context, 'portal_types')
         if IDexterityFTI.providedBy(getattr(pt, type_)):


