Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-24T20:55:22+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/28c31786413f3ef442dc92ad62c3d419b53ad526

added bodyfinder and tests from CMFDefault

Files changed:
A Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py
new file mode 100644
index 0000000..3c65e13
--- /dev/null
+++ b/Products/CMFPlone/tests/test_utils.py
@@ -0,0 +1,38 @@
+##############################################################################
+#
+# Copyright (c) 2002 Zope Foundation and Contributors.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+""" Unit tests for utils module. """
+
+import unittest
+
+from Products.CMFCore.tests.base.content import FAUX_HTML_LEADING_TEXT
+from Products.CMFCore.tests.base.content import SIMPLE_HTML
+from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT
+from Products.CMFCore.tests.base.content import SIMPLE_XHTML
+from Products.CMFCore.tests.base.content import STX_WITH_HTML
+
+
+class DefaultUtilsTests(unittest.TestCase):
+
+    def test_bodyfinder(self):
+        from Products.CMFPlone.utils import bodyfinder
+
+        self.assertEqual( bodyfinder(FAUX_HTML_LEADING_TEXT),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(SIMPLE_HTML),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(SIMPLE_STRUCTUREDTEXT),
+                          SIMPLE_STRUCTUREDTEXT )
+        self.assertEqual( bodyfinder(SIMPLE_XHTML),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(STX_WITH_HTML),
+                          '<p>Hello world, I am Bruce.</p>' )
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 109da90..5c50e34 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -727,3 +727,22 @@ class JSONError(schema.ValidationError):
         raise JSONError(value)
 
     return True
+
+
+def bodyfinder(text):
+    """ Return body or unchanged text if no body tags found.
+
+    Always use html_headcheck() first.
+    """
+    lowertext = text.lower()
+    bodystart = lowertext.find('<body')
+    if bodystart == -1:
+        return text
+    bodystart = lowertext.find('>', bodystart) + 1
+    if bodystart == 0:
+        return text
+    bodyend = lowertext.rfind('</body>', bodystart)
+    if bodyend == -1:
+        return text
+    return text[bodystart:bodyend]
+


Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-24T21:00:44+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/d9a7c2071ba045ec4818bfe346b4da25d82948c8

remove still some CMFDefault occurences (in comments)

Files changed:
M Products/CMFPlone/PloneFolder.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/tests/test_functional.py

diff --git a/Products/CMFPlone/PloneFolder.py b/Products/CMFPlone/PloneFolder.py
index 286fb18..06325b7 100644
--- a/Products/CMFPlone/PloneFolder.py
+++ b/Products/CMFPlone/PloneFolder.py
@@ -22,7 +22,7 @@
 from Products.CMFCore.permissions import AccessContentsInformation, \
                     AddPortalContent, AddPortalFolders, ListFolderContents, \
                     ModifyPortalContent
-from Products.CMFDefault.DublinCore import DefaultDublinCoreImpl
+from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl
 
 from zope.interface import implements
 
@@ -217,8 +217,7 @@ def listFolderContents(self, contentFilter=None,
     def folderlistingFolderContents(self, contentFilter=None,
                                     suppressHiddenFiles=0):
         """Calls listFolderContents in protected only by ACI so that
-        folder_listing can work without the List folder contents permission,
-        as in CMFDefault.
+        folder_listing can work without the List folder contents permission
         """
         return self.listFolderContents(contentFilter, suppressHiddenFiles)
 
diff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py
index d067efb..6e6000e 100644
--- a/Products/CMFPlone/RegistrationTool.py
+++ b/Products/CMFPlone/RegistrationTool.py
@@ -230,8 +230,7 @@ def testPropertiesValidity(self, props, member=None):
         o If the properties are valid, return None.
         o If not, return a string explaining why.
 
-        This is a customized version of the CMFDefault version: we also
-        check if the email property is writable before verifying it.
+        We also check if the email property is writable before verifying it.
         """
         if member is None:  # New member.
 
diff --git a/Products/CMFPlone/tests/test_functional.py b/Products/CMFPlone/tests/test_functional.py
index cdad14d..5d23b3f 100644
--- a/Products/CMFPlone/tests/test_functional.py
+++ b/Products/CMFPlone/tests/test_functional.py
@@ -20,9 +20,9 @@
 
 
 class PloneAtTestCase(PloneTestCase):
-    """Test case for #7627 (https://dev.plone.org/ticket/7627)
-    Run archetypes tests in a Plone setup
-    to have "content-slot" not defined in CMFDefault."""
+    """ Test case for #7627 (https://dev.plone.org/ticket/7627)
+        Run archetypes tests in a Plone setup """
+
     def afterSetUp(self):
         profile_registry.registerProfile(
             'Archetypes_sampletypes',


Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-25T09:48:49+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/3f03c1321a2490f7d4d9bad0fe56441fb42814b6

Merge pull request #455 from plone/tomgross-bodyfinder

Add bodyfinder method from CMFDefault to CMFPlone

Files changed:
A Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/PloneFolder.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/tests/test_functional.py
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/PloneFolder.py b/Products/CMFPlone/PloneFolder.py
index 286fb18..06325b7 100644
--- a/Products/CMFPlone/PloneFolder.py
+++ b/Products/CMFPlone/PloneFolder.py
@@ -22,7 +22,7 @@
 from Products.CMFCore.permissions import AccessContentsInformation, \
                     AddPortalContent, AddPortalFolders, ListFolderContents, \
                     ModifyPortalContent
-from Products.CMFDefault.DublinCore import DefaultDublinCoreImpl
+from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl
 
 from zope.interface import implements
 
@@ -217,8 +217,7 @@ def listFolderContents(self, contentFilter=None,
     def folderlistingFolderContents(self, contentFilter=None,
                                     suppressHiddenFiles=0):
         """Calls listFolderContents in protected only by ACI so that
-        folder_listing can work without the List folder contents permission,
-        as in CMFDefault.
+        folder_listing can work without the List folder contents permission
         """
         return self.listFolderContents(contentFilter, suppressHiddenFiles)
 
diff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py
index d067efb..6e6000e 100644
--- a/Products/CMFPlone/RegistrationTool.py
+++ b/Products/CMFPlone/RegistrationTool.py
@@ -230,8 +230,7 @@ def testPropertiesValidity(self, props, member=None):
         o If the properties are valid, return None.
         o If not, return a string explaining why.
 
-        This is a customized version of the CMFDefault version: we also
-        check if the email property is writable before verifying it.
+        We also check if the email property is writable before verifying it.
         """
         if member is None:  # New member.
 
diff --git a/Products/CMFPlone/tests/test_functional.py b/Products/CMFPlone/tests/test_functional.py
index cdad14d..5d23b3f 100644
--- a/Products/CMFPlone/tests/test_functional.py
+++ b/Products/CMFPlone/tests/test_functional.py
@@ -20,9 +20,9 @@
 
 
 class PloneAtTestCase(PloneTestCase):
-    """Test case for #7627 (https://dev.plone.org/ticket/7627)
-    Run archetypes tests in a Plone setup
-    to have "content-slot" not defined in CMFDefault."""
+    """ Test case for #7627 (https://dev.plone.org/ticket/7627)
+        Run archetypes tests in a Plone setup """
+
     def afterSetUp(self):
         profile_registry.registerProfile(
             'Archetypes_sampletypes',
diff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py
new file mode 100644
index 0000000..3c65e13
--- /dev/null
+++ b/Products/CMFPlone/tests/test_utils.py
@@ -0,0 +1,38 @@
+##############################################################################
+#
+# Copyright (c) 2002 Zope Foundation and Contributors.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+""" Unit tests for utils module. """
+
+import unittest
+
+from Products.CMFCore.tests.base.content import FAUX_HTML_LEADING_TEXT
+from Products.CMFCore.tests.base.content import SIMPLE_HTML
+from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT
+from Products.CMFCore.tests.base.content import SIMPLE_XHTML
+from Products.CMFCore.tests.base.content import STX_WITH_HTML
+
+
+class DefaultUtilsTests(unittest.TestCase):
+
+    def test_bodyfinder(self):
+        from Products.CMFPlone.utils import bodyfinder
+
+        self.assertEqual( bodyfinder(FAUX_HTML_LEADING_TEXT),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(SIMPLE_HTML),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(SIMPLE_STRUCTUREDTEXT),
+                          SIMPLE_STRUCTUREDTEXT )
+        self.assertEqual( bodyfinder(SIMPLE_XHTML),
+                          '\n  <h1>Not a lot here</h1>\n ' )
+        self.assertEqual( bodyfinder(STX_WITH_HTML),
+                          '<p>Hello world, I am Bruce.</p>' )
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 109da90..5c50e34 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -727,3 +727,22 @@ class JSONError(schema.ValidationError):
         raise JSONError(value)
 
     return True
+
+
+def bodyfinder(text):
+    """ Return body or unchanged text if no body tags found.
+
+    Always use html_headcheck() first.
+    """
+    lowertext = text.lower()
+    bodystart = lowertext.find('<body')
+    if bodystart == -1:
+        return text
+    bodystart = lowertext.find('>', bodystart) + 1
+    if bodystart == 0:
+        return text
+    bodyend = lowertext.rfind('</body>', bodystart)
+    if bodyend == -1:
+        return text
+    return text[bodystart:bodyend]
+


