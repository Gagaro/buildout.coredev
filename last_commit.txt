Repository: mockup
Branch: refs/heads/master
Date: 2015-06-01T12:04:21-05:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/mockup/commit/c5534edd5d8ac6aaf2bf4f8566335fbfb89f3223

Allow to provide a sort_on and sort_order attributes for the QueryHelper

Files changed:
M CHANGES.rst
M mockup/js/utils.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 5b662a5..0bba46d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,9 @@ Changelog
 - add image modal type
   [vangheem]
 
+- Allow to provide a sort_on and sort_order attributes for the QueryHelper
+  [frapell]
+
 - handle errors better with the modal pattern
   [vangheem]
 
diff --git a/mockup/js/utils.js b/mockup/js/utils.js
index fd6e661..2619bf2 100644
--- a/mockup/js/utils.js
+++ b/mockup/js/utils.js
@@ -22,6 +22,8 @@ define([
       attributes: ['UID', 'Title', 'Description', 'getURL', 'portal_type'],
       batchSize: 10, // number of results to retrive
       baseCriteria: [],
+      sort_on: 'is_folderish',
+      sort_order: 'reverse',
       pathDepth: 1
     };
     self.options = $.extend({}, defaults, options);
@@ -144,7 +146,9 @@ define([
     self.getQueryData = function(term, page) {
       var data = {
         query: JSON.stringify({
-          criteria: self.getCriterias(term)
+          criteria: self.getCriterias(term),
+          sort_on: self.options.sort_on,
+          sort_order: self.options.sort_order
         }),
         attributes: JSON.stringify(self.options.attributes)
       };


Repository: mockup
Branch: refs/heads/master
Date: 2015-06-01T12:04:21-05:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/mockup/commit/8c2d0180740483f48b2bd26d1f9fdba28e4b6685

Update tests

Files changed:
M mockup/tests/utils-test.js

diff --git a/mockup/tests/utils-test.js b/mockup/tests/utils-test.js
index 8abb364..02f054d 100644
--- a/mockup/tests/utils-test.js
+++ b/mockup/tests/utils-test.js
@@ -109,7 +109,7 @@ define([
       it('getQueryData correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
         var qd = qh.getQueryData('foobar');
-        expect(qd.query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}]}');
+        expect(qd.query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}],"sort_on":"is_folderish","sort_order":"reverse"}');
       });
       it('getQueryData use attributes correctly', function() {
         var qh = new utils.QueryHelper({
@@ -128,7 +128,7 @@ define([
       it('selectAjax gets data correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
         var sa = qh.selectAjax();
-        expect(sa.data('foobar').query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}]}');
+        expect(sa.data('foobar').query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}],"sort_on":"is_folderish","sort_order":"reverse"}');
       });
       it('selectAjax formats results correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
@@ -140,11 +140,11 @@ define([
 
       it('getUrl correct', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
-        expect(qh.getUrl()).to.equal('http://foobar.com/?query=%7B%22criteria%22%3A%5B%5D%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
+        expect(qh.getUrl()).to.equal('http://foobar.com/?query=%7B%22criteria%22%3A%5B%5D%2C%22sort_on%22%3A%22is_folderish%22%2C%22sort_order%22%3A%22reverse%22%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
       });
       it('getUrl correct and url query params already present', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/?foo=bar'});
-        expect(qh.getUrl()).to.equal('http://foobar.com/?foo=bar&query=%7B%22criteria%22%3A%5B%5D%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
+        expect(qh.getUrl()).to.equal('http://foobar.com/?foo=bar&query=%7B%22criteria%22%3A%5B%5D%2C%22sort_on%22%3A%22is_folderish%22%2C%22sort_order%22%3A%22reverse%22%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
       });
 
 


Repository: mockup
Branch: refs/heads/master
Date: 2015-06-01T12:05:27-05:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/mockup/commit/fa9779cc9df885575e8a55fc3288fcc7a9d5b66b

Merge branch 'sortable_queryhelper'

Files changed:
M CHANGES.rst
M mockup/js/utils.js
M mockup/tests/utils-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 5b662a5..0bba46d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,9 @@ Changelog
 - add image modal type
   [vangheem]
 
+- Allow to provide a sort_on and sort_order attributes for the QueryHelper
+  [frapell]
+
 - handle errors better with the modal pattern
   [vangheem]
 
diff --git a/mockup/js/utils.js b/mockup/js/utils.js
index fd6e661..2619bf2 100644
--- a/mockup/js/utils.js
+++ b/mockup/js/utils.js
@@ -22,6 +22,8 @@ define([
       attributes: ['UID', 'Title', 'Description', 'getURL', 'portal_type'],
       batchSize: 10, // number of results to retrive
       baseCriteria: [],
+      sort_on: 'is_folderish',
+      sort_order: 'reverse',
       pathDepth: 1
     };
     self.options = $.extend({}, defaults, options);
@@ -144,7 +146,9 @@ define([
     self.getQueryData = function(term, page) {
       var data = {
         query: JSON.stringify({
-          criteria: self.getCriterias(term)
+          criteria: self.getCriterias(term),
+          sort_on: self.options.sort_on,
+          sort_order: self.options.sort_order
         }),
         attributes: JSON.stringify(self.options.attributes)
       };
diff --git a/mockup/tests/utils-test.js b/mockup/tests/utils-test.js
index 8abb364..02f054d 100644
--- a/mockup/tests/utils-test.js
+++ b/mockup/tests/utils-test.js
@@ -109,7 +109,7 @@ define([
       it('getQueryData correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
         var qd = qh.getQueryData('foobar');
-        expect(qd.query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}]}');
+        expect(qd.query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}],"sort_on":"is_folderish","sort_order":"reverse"}');
       });
       it('getQueryData use attributes correctly', function() {
         var qh = new utils.QueryHelper({
@@ -128,7 +128,7 @@ define([
       it('selectAjax gets data correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
         var sa = qh.selectAjax();
-        expect(sa.data('foobar').query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}]}');
+        expect(sa.data('foobar').query).to.equal('{"criteria":[{"i":"SearchableText","o":"plone.app.querystring.operation.string.contains","v":"foobar*"}],"sort_on":"is_folderish","sort_order":"reverse"}');
       });
       it('selectAjax formats results correctly', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
@@ -140,11 +140,11 @@ define([
 
       it('getUrl correct', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/'});
-        expect(qh.getUrl()).to.equal('http://foobar.com/?query=%7B%22criteria%22%3A%5B%5D%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
+        expect(qh.getUrl()).to.equal('http://foobar.com/?query=%7B%22criteria%22%3A%5B%5D%2C%22sort_on%22%3A%22is_folderish%22%2C%22sort_order%22%3A%22reverse%22%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
       });
       it('getUrl correct and url query params already present', function() {
         var qh = new utils.QueryHelper({vocabularyUrl: 'http://foobar.com/?foo=bar'});
-        expect(qh.getUrl()).to.equal('http://foobar.com/?foo=bar&query=%7B%22criteria%22%3A%5B%5D%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
+        expect(qh.getUrl()).to.equal('http://foobar.com/?foo=bar&query=%7B%22criteria%22%3A%5B%5D%2C%22sort_on%22%3A%22is_folderish%22%2C%22sort_order%22%3A%22reverse%22%7D&attributes=%5B%22UID%22%2C%22Title%22%2C%22Description%22%2C%22getURL%22%2C%22portal_type%22%5D');
       });
 
 


