Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-06-07T22:07:04-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/87d161e18f89d5c8933f39427edc5566e077ff17

add utility to get site logo

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e2b97e..b420954 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,9 @@ Changelog
 5.0b3 (unreleased)
 ------------------
 
+- add utility to get site logo
+  [vangheem]
+
 - fix issue where product upgrade did show an error status message
   [datakurre]
 
diff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py
index 53b8c77..4795ed2 100644
--- a/Products/CMFPlone/browser/syndication/adapters.py
+++ b/Products/CMFPlone/browser/syndication/adapters.py
@@ -13,12 +13,15 @@
 from Products.CMFPlone.interfaces.syndication import IFeedItem
 from Products.CMFPlone.interfaces.syndication import ISearchFeed
 from Products.CMFPlone.interfaces.syndication import IFeedSettings
+from Products.CMFPlone.utils import getSiteLogo
+
 from plone.uuid.interfaces import IUUID
 from zope.cachedescriptors.property import Lazy as lazy_property
 
 from plone.dexterity.interfaces import IDexterityContent
 from plone.rfc822.interfaces import IPrimaryFieldInfo
 from plone.namedfile.interfaces import INamedField
+
 from plone.app.contenttypes.behaviors.leadimage import ILeadImage
 
 try:
@@ -118,7 +121,7 @@ def author_email(self):
 
     @property
     def logo(self):
-        return '%s/logo.png' % self.site.absolute_url()
+        return getSiteLogo()
 
     @property
     def icon(self):
diff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py
index 3c65e13..53e2c9c 100644
--- a/Products/CMFPlone/tests/test_utils.py
+++ b/Products/CMFPlone/tests/test_utils.py
@@ -13,6 +13,7 @@
 """ Unit tests for utils module. """
 
 import unittest
+from Products.CMFPlone.tests import PloneTestCase
 
 from Products.CMFCore.tests.base.content import FAUX_HTML_LEADING_TEXT
 from Products.CMFCore.tests.base.content import SIMPLE_HTML
@@ -20,19 +21,46 @@
 from Products.CMFCore.tests.base.content import SIMPLE_XHTML
 from Products.CMFCore.tests.base.content import STX_WITH_HTML
 
+from Products.CMFPlone.interfaces import ISiteSchema
+from zope.component import getUtility
+from plone.registry.interfaces import IRegistry
+
+
+SITE_LOGO_BASE64 = 'filenameb64:cGl4ZWwucG5n;datab64:iVBORw0KGgoAAAANSUhEUgAA'\
+                   'AAEAAAABCAIAAACQd1PeAAAADElEQVQI12P4z8AAAAMBAQAY3Y2wAAAAA'\
+                   'ElFTkSuQmCC'
+
 
 class DefaultUtilsTests(unittest.TestCase):
 
     def test_bodyfinder(self):
         from Products.CMFPlone.utils import bodyfinder
 
-        self.assertEqual( bodyfinder(FAUX_HTML_LEADING_TEXT),
-                          '\n  <h1>Not a lot here</h1>\n ' )
-        self.assertEqual( bodyfinder(SIMPLE_HTML),
-                          '\n  <h1>Not a lot here</h1>\n ' )
-        self.assertEqual( bodyfinder(SIMPLE_STRUCTUREDTEXT),
-                          SIMPLE_STRUCTUREDTEXT )
-        self.assertEqual( bodyfinder(SIMPLE_XHTML),
-                          '\n  <h1>Not a lot here</h1>\n ' )
-        self.assertEqual( bodyfinder(STX_WITH_HTML),
-                          '<p>Hello world, I am Bruce.</p>' )
+        self.assertEqual(bodyfinder(FAUX_HTML_LEADING_TEXT),
+                         '\n  <h1>Not a lot here</h1>\n ')
+        self.assertEqual(bodyfinder(SIMPLE_HTML),
+                         '\n  <h1>Not a lot here</h1>\n ')
+        self.assertEqual(bodyfinder(SIMPLE_STRUCTUREDTEXT),
+                         SIMPLE_STRUCTUREDTEXT)
+        self.assertEqual(bodyfinder(SIMPLE_XHTML),
+                         '\n  <h1>Not a lot here</h1>\n ')
+        self.assertEqual(bodyfinder(STX_WITH_HTML),
+                         '<p>Hello world, I am Bruce.</p>')
+
+
+class LogoTests(PloneTestCase.PloneTestCase):
+    def test_getSiteLogo_with_setting(self):
+        from Products.CMFPlone.utils import getSiteLogo
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISiteSchema, prefix='plone')
+        settings.site_logo = SITE_LOGO_BASE64
+
+        self.assertTrue(
+            'http://nohost/plone/@@site-logo/pixel.png'
+            in getSiteLogo())
+
+    def test_getSiteLogo_with_no_setting(self):
+        from Products.CMFPlone.utils import getSiteLogo
+        self.assertTrue(
+            'http://nohost/plone/logo.png'
+            in getSiteLogo())
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index b00456b..6fd2869 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -17,6 +17,7 @@
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
 from zope.component import queryUtility
+from zope.component.hooks import getSite
 from zope.deprecation import deprecated
 from zope.i18n import translate
 from zope.publisher.interfaces.browser import IBrowserRequest
@@ -725,3 +726,20 @@ def getAllowedSizes():
 def getQuality():
     from plone.app.imaging.utils import getQuality as func
     return func()
+
+
+def getSiteLogo(site=None):
+    from Products.CMFPlone.interfaces import ISiteSchema
+    from plone.formwidget.namedfile.converter import b64decode_file
+    if site is None:
+        site = getSite()
+    registry = getUtility(IRegistry)
+    settings = registry.forInterface(ISiteSchema, prefix="plone")
+    site_url = site.absolute_url()
+
+    if getattr(settings, 'site_logo', False):
+        filename, data = b64decode_file(settings.site_logo)
+        return '{}/@@site-logo/{}'.format(
+            site_url, filename)
+    else:
+        return '%s/logo.png' % site_url
\ No newline at end of file


