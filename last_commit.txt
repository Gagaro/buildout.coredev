Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2015-09-10T16:00:07+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contentlisting/commit/4563e1e6aca01b9aedb4b555d674602f9c65ddd2

Implement cropping for CroppedDescription

Files changed:
M CHANGES.rst
M plone/app/contentlisting/catalog.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 66a6074..677ec72 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.2.1 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Implement cropping for CroppedDescription.
+  [pbauer]
 
 
 1.2 (2015-07-18)
diff --git a/plone/app/contentlisting/catalog.py b/plone/app/contentlisting/catalog.py
index ebb8659..f450d3a 100644
--- a/plone/app/contentlisting/catalog.py
+++ b/plone/app/contentlisting/catalog.py
@@ -1,12 +1,16 @@
+# -*- coding: utf-8 -*-
 from .contentlisting import BaseContentListingObject
 from .interfaces import IContentListingObject
 from Acquisition import aq_base
 from Acquisition import aq_get
 from Products.CMFCore.utils import getToolByName
 from plone.app.layout.icons.interfaces import IContentIcon
+from plone.registry.interfaces import IRegistry
 from plone.uuid.interfaces import IUUID
 from zope import interface
+from zope.component import getMultiAdapter
 from zope.component import queryMultiAdapter
+from zope.component import queryUtility
 
 
 class CatalogContentListingObject(BaseContentListingObject):
@@ -108,9 +112,10 @@ def Description(self):
         return self._brain.Description
 
     def CroppedDescription(self):
-        # TODO: Let's port Plones description cropping here instead of
-        # implementing it all in the templates.
-        return self.Description()
+        registry = queryUtility(IRegistry)
+        length = registry.get('plone.search_results_description_length')
+        plone_view = getMultiAdapter((self, self.request), name='plone')
+        return plone_view.cropText(self.Description(), length)
 
     def Type(self):
         return self._brain.Type


Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2015-09-10T20:56:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contentlisting/commit/73a7cb844120456a09366452865a0a5bb130a177

Merge pull request #9 from plone/crop_CroppedDescription

Implement cropping for CroppedDescription

Files changed:
M CHANGES.rst
M plone/app/contentlisting/catalog.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 66a6074..677ec72 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.2.1 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Implement cropping for CroppedDescription.
+  [pbauer]
 
 
 1.2 (2015-07-18)
diff --git a/plone/app/contentlisting/catalog.py b/plone/app/contentlisting/catalog.py
index ebb8659..f450d3a 100644
--- a/plone/app/contentlisting/catalog.py
+++ b/plone/app/contentlisting/catalog.py
@@ -1,12 +1,16 @@
+# -*- coding: utf-8 -*-
 from .contentlisting import BaseContentListingObject
 from .interfaces import IContentListingObject
 from Acquisition import aq_base
 from Acquisition import aq_get
 from Products.CMFCore.utils import getToolByName
 from plone.app.layout.icons.interfaces import IContentIcon
+from plone.registry.interfaces import IRegistry
 from plone.uuid.interfaces import IUUID
 from zope import interface
+from zope.component import getMultiAdapter
 from zope.component import queryMultiAdapter
+from zope.component import queryUtility
 
 
 class CatalogContentListingObject(BaseContentListingObject):
@@ -108,9 +112,10 @@ def Description(self):
         return self._brain.Description
 
     def CroppedDescription(self):
-        # TODO: Let's port Plones description cropping here instead of
-        # implementing it all in the templates.
-        return self.Description()
+        registry = queryUtility(IRegistry)
+        length = registry.get('plone.search_results_description_length')
+        plone_view = getMultiAdapter((self, self.request), name='plone')
+        return plone_view.cropText(self.Description(), length)
 
     def Type(self):
         return self._brain.Type


