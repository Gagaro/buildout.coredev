Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-08-26T13:05:43-03:00
Author: hvelarde (hvelarde) <hector.velarde@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/e771f273b15b36b983abdb64a337b7088c798990

Update documentation with best practices in formatting and plone.api usage

Files changed:
M docs/custom-views.rst
M docs/model-driven-types.rst
M docs/prerequisite.rst
M docs/schema-driven-types.rst

diff --git a/docs/custom-views.rst b/docs/custom-views.rst
index df21fdd..5da1a65 100644
--- a/docs/custom-views.rst
+++ b/docs/custom-views.rst
@@ -31,15 +31,15 @@ First create a view registration with a ``<browser:page />`` ZCML directive in y
         xmlns="http://namespaces.zope.org/zope"
         xmlns:browser="http://namespaces.zope.org/browser">
 
-        ...
+      ...
 
-        <browser:page
-            name="view"
-            for="example.conference.program.IProgram"
-            class="example.conference.program.ProgramView"
-            template="templates/programview.pt"
-            permission="zope2.View"
-            />
+      <browser:page
+          name="view"
+          for="example.conference.program.IProgram"
+          class="example.conference.program.ProgramView"
+          template="templates/programview.pt"
+          permission="zope2.View"
+          />
 
     </configure>
 
@@ -48,24 +48,23 @@ Secondly add a browser view in ``program.py`` as follows:
 .. code-block:: python
 
     from Acquisition import aq_inner
-    from Products.CMFCore.utils import getToolByName
-    from Products.Five import BrowserView
-
     from example.conference.session import ISession
+    from plone import api
+    from Products.Five import BrowserView
 
 
     class ProgramView(BrowserView):
 
         def sessions(self):
-            """Return a catalog search result of sessions to show
-            """
+            """Return a catalog search result of sessions to show."""
 
             context = aq_inner(self.context)
-            catalog = getToolByName(context, 'portal_catalog')
+            catalog = api.portal.get_tool(name='portal_catalog')
 
-            return catalog(object_provides=ISession.__identifier__,
-                           path='/'.join(context.getPhysicalPath()),
-                           sort_on='sortable_title')
+            return catalog(
+                object_provides=ISession.__identifier__,
+                path='/'.join(context.getPhysicalPath()),
+                sort_on='sortable_title')
 
 We have added ``sessions``, a helper method which will be used in the view.
 
diff --git a/docs/model-driven-types.rst b/docs/model-driven-types.rst
index 57a5dd4..64c662e 100644
--- a/docs/model-driven-types.rst
+++ b/docs/model-driven-types.rst
@@ -73,11 +73,10 @@ That's all we need! To see why, look in the generated file ``presenter.py``:
 
 
     class IPresenter(model.Schema):
-        """
-        Schema for Conference Presenter content type
-        """
 
-        model.load("models/presenter.xml")
+        """Schema for Conference Presenter content type."""
+
+        model.load('models/presenter.xml')
 
 
 Note the ``model.load`` directive. We'd deleted that when we created schema-driven field sets. Now, we leave it in to automatically load our model file.
@@ -94,9 +93,9 @@ Look in the ``types.xml`` file in your packages
 .. code-block:: xml
 
     <object name="portal_types">
-     <object name="example.conference.program" meta_type="Dexterity FTI" />
-     <object name="example.conference.session" meta_type="Dexterity FTI" />
-     <object name="example.conference.presenter" meta_type="Dexterity FTI" />
+      <object name="example.conference.program" meta_type="Dexterity FTI" />
+      <object name="example.conference.session" meta_type="Dexterity FTI" />
+      <object name="example.conference.presenter" meta_type="Dexterity FTI" />
     </object>
 
 
@@ -105,14 +104,13 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.presenter"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.presenter" meta_type="Dexterity FTI"
+         xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Presenter</property>
-      <property name="description"
-        i18n:translate="">Conference Presenter</property>
+      <property name="description" i18n:translate="">Conference Presenter</property>
       <property name="icon_expr">string:${portal_url}/document_icon.png</property>
       <property name="factory">example.conference.presenter</property>
       <property name="global_allow">True</property>
@@ -125,7 +123,7 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
       <property name="klass">example.conference.presenter.Presenter</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -133,12 +131,11 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
 
-
       <!-- Method aliases -->
       <alias from="(Default)" to="(dynamic view)" />
       <alias from="view" to="(selected layout)" />
@@ -147,13 +144,13 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>
 
-Note that this is addable anywhere.
\ No newline at end of file
+Note that this is addable anywhere.
diff --git a/docs/prerequisite.rst b/docs/prerequisite.rst
index d11342b..2479110 100644
--- a/docs/prerequisite.rst
+++ b/docs/prerequisite.rst
@@ -13,7 +13,9 @@ development purposes, you may use a `standalone` (non-ZEO), non-root install.
 Second, add our standard development tools. If you've used one of our
 installers, developer tool configurations are in a separate file,
 ``develop.cfg``. Once your site is running, you may activate the development
-configuration by using the command::
+configuration by using the command:
+
+.. code-block:: console
 
     bin/buildout -c develop.cfg
 
@@ -67,7 +69,9 @@ You may accept all the default suggestions. This will create a directory named
 
 Now, take a look at the setup.py file in your new package. Edit the `author,`
 `author_email` and `description` fields as you wish. Note a couple of parts of
-the generated setup.py file::
+the generated setup.py file:
+
+.. code-block:: python
 
           install_requires=[
               ...
@@ -87,15 +91,18 @@ code won't work without it. The specification of `plone` as a
 z3c.autoinclude.plugin entry point ensures that we won't need to separately
 specify our zcml in buildout.
 
-Now, let's take a look at ``configure.zcml`` in the examples/conference directory of our project. Again, we want to note a few parts::
+Now, let's take a look at ``configure.zcml`` in the examples/conference directory of our project. Again, we want to note a few parts:
+
+.. code-block:: xml
 
     <configure ...>
 
       <includeDependencies package="." />
 
       <browser:resourceDirectory
-        name="example.conference"
-        directory="resources" />
+          name="example.conference"
+          directory="resources"
+          />
 
       <genericsetup:registerProfile
           name="default"
@@ -119,6 +126,8 @@ installable, which we will build up over the next several sections.
 
 When you've got your project tuned up, return to your buildout/instance directory and edit buildout.cfg to add ``example.conference`` to your eggs list and ``src/example.conference`` to your develop sources list::
 
+.. code-block:: ini
+
     eggs =
         Plone
         ...
diff --git a/docs/schema-driven-types.rst b/docs/schema-driven-types.rst
index 365edd1..0be7182 100644
--- a/docs/schema-driven-types.rst
+++ b/docs/schema-driven-types.rst
@@ -102,30 +102,30 @@ Next, add schema declarations for our fields. The top part of the file should lo
 
 
     class IProgram(model.Schema):
-        """A conference program. Programs can contain Sessions.
-        """
+
+        """A conference program. Programs can contain Sessions."""
 
         title = schema.TextLine(
-                title=_(u"Program name"),
-            )
+            title=_(u'Program name'),
+        )
 
         description = schema.Text(
-                title=_(u"Program summary"),
-            )
+            title=_(u'Program summary'),
+        )
 
         start = schema.Datetime(
-                title=_(u"Start date"),
-                required=False,
-            )
+            title=_(u'Start date'),
+            required=False,
+        )
 
         end = schema.Datetime(
-                title=_(u"End date"),
-                required=False,
-            )
+            title=_(u'End date'),
+            required=False,
+        )
 
         details = RichText(
-                title=_(u"Details"),
-                description=_(u"Details about the program"),
+                title=_(u'Details'),
+                description=_(u'Details about the program.'),
                 required=False,
             )
 
@@ -143,7 +143,7 @@ The message factory lives in the package root ``__init__.py`` file:
 
     from zope.i18nmessageid import MessageFactory
 
-    _ = MessageFactory("example.conference")
+    MessageFactory = MessageFactory("example.conference")
 
 Notice how we use the package name as the translation domain.
 
@@ -166,22 +166,22 @@ Save program.py.
 
 
     class ISession(model.Schema):
-            """A conference session. Sessions are managed inside Programs.
-            """
 
-            title = schema.TextLine(
-                    title=_(u"Title"),
-                    description=_(u"Session title"),
-                )
+        """A conference session. Sessions are managed inside Programs."""
+
+        title = schema.TextLine(
+            title=_(u'Title'),
+            description=_(u'Session title'),
+        )
 
-            description = schema.Text(
-                    title=_(u"Session summary"),
-                )
+        description = schema.Text(
+            title=_(u'Session summary'),
+        )
 
-            details = RichText(
-                    title=_(u"Session details"),
-                    required=False
-                )
+        details = RichText(
+            title=_(u'Session details'),
+            required=False
+        )
 
 
 Note that we haven’t added information about speakers or tracks yet.
@@ -234,8 +234,8 @@ Look in the ``types.xml`` file in your packages ``example/conference/profiles/de
 .. code-block:: xml
 
     <object name="portal_types">
-     <object name="example.conference.program" meta_type="Dexterity FTI" />
-     <object name="example.conference.session" meta_type="Dexterity FTI" />
+      <object name="example.conference.program" meta_type="Dexterity FTI" />
+      <object name="example.conference.session" meta_type="Dexterity FTI" />
     </object>
 
 We use the package name as a prefix and the type name in lowercase to
@@ -250,14 +250,13 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.session"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.session" meta_type="Dexterity FTI"
+        xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Session</property>
-      <property name="description"
-        i18n:translate="">A session in a program</property>
+      <property name="description" i18n:translate="">A session in a program</property>
       <property name="icon_expr">string:${portal_url}/document_icon.png</property>
       <property name="factory">example.conference.session</property>
       <property name="global_allow">False</property>
@@ -270,7 +269,7 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
       <property name="klass">example.conference.session.Session</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -278,12 +277,11 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
 
-
       <!-- Method aliases -->
       <alias from="(Default)" to="(dynamic view)" />
       <alias from="view" to="(selected layout)" />
@@ -292,11 +290,11 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>
@@ -339,20 +337,19 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.program"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.program" meta_type="Dexterity FTI"
+        xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Program</property>
-      <property name="description"
-        i18n:translate="">Conference Program</property>
+      <property name="description" i18n:translate="">Conference Program</property>
       <property name="icon_expr">string:${portal_url}/folder_icon.png</property>
       <property name="factory">example.conference.program</property>
       <property name="global_allow">True</property>
       <property name="filter_content_types">True</property>
       <property name="allowed_content_types">
-          <element value="example.conference.session" />
+        <element value="example.conference.session" />
       </property>
       <property name="allow_discussion">False</property>
 
@@ -361,7 +358,7 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
       <property name="klass">example.conference.program.Program</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -369,7 +366,7 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
@@ -383,11 +380,11 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-10-22T00:17:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/524f734105e6a898b887c2cdfecac2168a2c5992

Merge pull request #177 from plone/hvelarde-docs-update

Update documentation

Files changed:
M docs/custom-views.rst
M docs/model-driven-types.rst
M docs/prerequisite.rst
M docs/schema-driven-types.rst

diff --git a/docs/custom-views.rst b/docs/custom-views.rst
index df21fdd..5da1a65 100644
--- a/docs/custom-views.rst
+++ b/docs/custom-views.rst
@@ -31,15 +31,15 @@ First create a view registration with a ``<browser:page />`` ZCML directive in y
         xmlns="http://namespaces.zope.org/zope"
         xmlns:browser="http://namespaces.zope.org/browser">
 
-        ...
+      ...
 
-        <browser:page
-            name="view"
-            for="example.conference.program.IProgram"
-            class="example.conference.program.ProgramView"
-            template="templates/programview.pt"
-            permission="zope2.View"
-            />
+      <browser:page
+          name="view"
+          for="example.conference.program.IProgram"
+          class="example.conference.program.ProgramView"
+          template="templates/programview.pt"
+          permission="zope2.View"
+          />
 
     </configure>
 
@@ -48,24 +48,23 @@ Secondly add a browser view in ``program.py`` as follows:
 .. code-block:: python
 
     from Acquisition import aq_inner
-    from Products.CMFCore.utils import getToolByName
-    from Products.Five import BrowserView
-
     from example.conference.session import ISession
+    from plone import api
+    from Products.Five import BrowserView
 
 
     class ProgramView(BrowserView):
 
         def sessions(self):
-            """Return a catalog search result of sessions to show
-            """
+            """Return a catalog search result of sessions to show."""
 
             context = aq_inner(self.context)
-            catalog = getToolByName(context, 'portal_catalog')
+            catalog = api.portal.get_tool(name='portal_catalog')
 
-            return catalog(object_provides=ISession.__identifier__,
-                           path='/'.join(context.getPhysicalPath()),
-                           sort_on='sortable_title')
+            return catalog(
+                object_provides=ISession.__identifier__,
+                path='/'.join(context.getPhysicalPath()),
+                sort_on='sortable_title')
 
 We have added ``sessions``, a helper method which will be used in the view.
 
diff --git a/docs/model-driven-types.rst b/docs/model-driven-types.rst
index 57a5dd4..64c662e 100644
--- a/docs/model-driven-types.rst
+++ b/docs/model-driven-types.rst
@@ -73,11 +73,10 @@ That's all we need! To see why, look in the generated file ``presenter.py``:
 
 
     class IPresenter(model.Schema):
-        """
-        Schema for Conference Presenter content type
-        """
 
-        model.load("models/presenter.xml")
+        """Schema for Conference Presenter content type."""
+
+        model.load('models/presenter.xml')
 
 
 Note the ``model.load`` directive. We'd deleted that when we created schema-driven field sets. Now, we leave it in to automatically load our model file.
@@ -94,9 +93,9 @@ Look in the ``types.xml`` file in your packages
 .. code-block:: xml
 
     <object name="portal_types">
-     <object name="example.conference.program" meta_type="Dexterity FTI" />
-     <object name="example.conference.session" meta_type="Dexterity FTI" />
-     <object name="example.conference.presenter" meta_type="Dexterity FTI" />
+      <object name="example.conference.program" meta_type="Dexterity FTI" />
+      <object name="example.conference.session" meta_type="Dexterity FTI" />
+      <object name="example.conference.presenter" meta_type="Dexterity FTI" />
     </object>
 
 
@@ -105,14 +104,13 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.presenter"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.presenter" meta_type="Dexterity FTI"
+         xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Presenter</property>
-      <property name="description"
-        i18n:translate="">Conference Presenter</property>
+      <property name="description" i18n:translate="">Conference Presenter</property>
       <property name="icon_expr">string:${portal_url}/document_icon.png</property>
       <property name="factory">example.conference.presenter</property>
       <property name="global_allow">True</property>
@@ -125,7 +123,7 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
       <property name="klass">example.conference.presenter.Presenter</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -133,12 +131,11 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
 
-
       <!-- Method aliases -->
       <alias from="(Default)" to="(dynamic view)" />
       <alias from="view" to="(selected layout)" />
@@ -147,13 +144,13 @@ For the *Presenter* type, we have ``example.conference.presenter.xml``:
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>
 
-Note that this is addable anywhere.
\ No newline at end of file
+Note that this is addable anywhere.
diff --git a/docs/prerequisite.rst b/docs/prerequisite.rst
index d11342b..2479110 100644
--- a/docs/prerequisite.rst
+++ b/docs/prerequisite.rst
@@ -13,7 +13,9 @@ development purposes, you may use a `standalone` (non-ZEO), non-root install.
 Second, add our standard development tools. If you've used one of our
 installers, developer tool configurations are in a separate file,
 ``develop.cfg``. Once your site is running, you may activate the development
-configuration by using the command::
+configuration by using the command:
+
+.. code-block:: console
 
     bin/buildout -c develop.cfg
 
@@ -67,7 +69,9 @@ You may accept all the default suggestions. This will create a directory named
 
 Now, take a look at the setup.py file in your new package. Edit the `author,`
 `author_email` and `description` fields as you wish. Note a couple of parts of
-the generated setup.py file::
+the generated setup.py file:
+
+.. code-block:: python
 
           install_requires=[
               ...
@@ -87,15 +91,18 @@ code won't work without it. The specification of `plone` as a
 z3c.autoinclude.plugin entry point ensures that we won't need to separately
 specify our zcml in buildout.
 
-Now, let's take a look at ``configure.zcml`` in the examples/conference directory of our project. Again, we want to note a few parts::
+Now, let's take a look at ``configure.zcml`` in the examples/conference directory of our project. Again, we want to note a few parts:
+
+.. code-block:: xml
 
     <configure ...>
 
       <includeDependencies package="." />
 
       <browser:resourceDirectory
-        name="example.conference"
-        directory="resources" />
+          name="example.conference"
+          directory="resources"
+          />
 
       <genericsetup:registerProfile
           name="default"
@@ -119,6 +126,8 @@ installable, which we will build up over the next several sections.
 
 When you've got your project tuned up, return to your buildout/instance directory and edit buildout.cfg to add ``example.conference`` to your eggs list and ``src/example.conference`` to your develop sources list::
 
+.. code-block:: ini
+
     eggs =
         Plone
         ...
diff --git a/docs/schema-driven-types.rst b/docs/schema-driven-types.rst
index 365edd1..0be7182 100644
--- a/docs/schema-driven-types.rst
+++ b/docs/schema-driven-types.rst
@@ -102,30 +102,30 @@ Next, add schema declarations for our fields. The top part of the file should lo
 
 
     class IProgram(model.Schema):
-        """A conference program. Programs can contain Sessions.
-        """
+
+        """A conference program. Programs can contain Sessions."""
 
         title = schema.TextLine(
-                title=_(u"Program name"),
-            )
+            title=_(u'Program name'),
+        )
 
         description = schema.Text(
-                title=_(u"Program summary"),
-            )
+            title=_(u'Program summary'),
+        )
 
         start = schema.Datetime(
-                title=_(u"Start date"),
-                required=False,
-            )
+            title=_(u'Start date'),
+            required=False,
+        )
 
         end = schema.Datetime(
-                title=_(u"End date"),
-                required=False,
-            )
+            title=_(u'End date'),
+            required=False,
+        )
 
         details = RichText(
-                title=_(u"Details"),
-                description=_(u"Details about the program"),
+                title=_(u'Details'),
+                description=_(u'Details about the program.'),
                 required=False,
             )
 
@@ -143,7 +143,7 @@ The message factory lives in the package root ``__init__.py`` file:
 
     from zope.i18nmessageid import MessageFactory
 
-    _ = MessageFactory("example.conference")
+    MessageFactory = MessageFactory("example.conference")
 
 Notice how we use the package name as the translation domain.
 
@@ -166,22 +166,22 @@ Save program.py.
 
 
     class ISession(model.Schema):
-            """A conference session. Sessions are managed inside Programs.
-            """
 
-            title = schema.TextLine(
-                    title=_(u"Title"),
-                    description=_(u"Session title"),
-                )
+        """A conference session. Sessions are managed inside Programs."""
+
+        title = schema.TextLine(
+            title=_(u'Title'),
+            description=_(u'Session title'),
+        )
 
-            description = schema.Text(
-                    title=_(u"Session summary"),
-                )
+        description = schema.Text(
+            title=_(u'Session summary'),
+        )
 
-            details = RichText(
-                    title=_(u"Session details"),
-                    required=False
-                )
+        details = RichText(
+            title=_(u'Session details'),
+            required=False
+        )
 
 
 Note that we haven’t added information about speakers or tracks yet.
@@ -234,8 +234,8 @@ Look in the ``types.xml`` file in your packages ``example/conference/profiles/de
 .. code-block:: xml
 
     <object name="portal_types">
-     <object name="example.conference.program" meta_type="Dexterity FTI" />
-     <object name="example.conference.session" meta_type="Dexterity FTI" />
+      <object name="example.conference.program" meta_type="Dexterity FTI" />
+      <object name="example.conference.session" meta_type="Dexterity FTI" />
     </object>
 
 We use the package name as a prefix and the type name in lowercase to
@@ -250,14 +250,13 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.session"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.session" meta_type="Dexterity FTI"
+        xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Session</property>
-      <property name="description"
-        i18n:translate="">A session in a program</property>
+      <property name="description" i18n:translate="">A session in a program</property>
       <property name="icon_expr">string:${portal_url}/document_icon.png</property>
       <property name="factory">example.conference.session</property>
       <property name="global_allow">False</property>
@@ -270,7 +269,7 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
       <property name="klass">example.conference.session.Session</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -278,12 +277,11 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
 
-
       <!-- Method aliases -->
       <alias from="(Default)" to="(dynamic view)" />
       <alias from="view" to="(selected layout)" />
@@ -292,11 +290,11 @@ The ``Session`` type, in ``example.conference.session.xml``, should look like th
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>
@@ -339,20 +337,19 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
 .. code-block:: xml
 
     <?xml version="1.0"?>
-    <object name="example.conference.program"
-       meta_type="Dexterity FTI"
-       i18n:domain="example.conference" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+    <object name="example.conference.program" meta_type="Dexterity FTI"
+        xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+        i18n:domain="example.conference">
 
       <!-- Basic metadata -->
       <property name="title" i18n:translate="">Program</property>
-      <property name="description"
-        i18n:translate="">Conference Program</property>
+      <property name="description" i18n:translate="">Conference Program</property>
       <property name="icon_expr">string:${portal_url}/folder_icon.png</property>
       <property name="factory">example.conference.program</property>
       <property name="global_allow">True</property>
       <property name="filter_content_types">True</property>
       <property name="allowed_content_types">
-          <element value="example.conference.session" />
+        <element value="example.conference.session" />
       </property>
       <property name="allow_discussion">False</property>
 
@@ -361,7 +358,7 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
       <property name="klass">example.conference.program.Program</property>
 
       <property name="behaviors">
-         <element value="plone.app.content.interfaces.INameFromTitle" />
+        <element value="plone.app.content.interfaces.INameFromTitle" />
        </property>
 
       <!-- View information -->
@@ -369,7 +366,7 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
       <property name="immediate_view">view</property>
       <property name="default_view">view</property>
       <property name="view_methods">
-       <element value="view"/>
+        <element value="view"/>
       </property>
       <property name="default_view_fallback">False</property>
       <property name="add_permission">cmf.AddPortalContent</property>
@@ -383,11 +380,11 @@ The ``Program``, in ``example.conference.program.xml``, looks like this:
 
       <!-- Actions -->
       <action title="View" action_id="view" category="object" condition_expr=""
-        url_expr="string:${object_url}/" visible="True">
+          url_expr="string:${object_url}/" visible="True">
         <permission value="View" />
       </action>
       <action title="Edit" action_id="edit" category="object" condition_expr=""
-        url_expr="string:${object_url}/edit" visible="True">
+          url_expr="string:${object_url}/edit" visible="True">
         <permission value="Modify portal content" />
       </action>
     </object>


