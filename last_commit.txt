Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-05-29T15:40:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e2e4d115708a459afe4c279be3a34cee12bf74bb

get layout from obj not context

Files changed:
M plone/app/contenttypes/upgrades.py

diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 64c3f57..ea6f260 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -139,7 +139,7 @@ def use_new_view_names(context):
     def _fixup(portal_type, view_map):
         for brain in search(portal_type=portal_type):
             obj = brain.getObject()
-            current = context.getLayout()
+            current = obj.getLayout()
             if current in view_map.keys():
                 obj.setLayout(view_map[current])
                 logger.info("Set view to {} for {}".format(


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-05-29T15:41:12+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e8829d77c6a9a3cd0d19a7977989c467eb662051

re-set default page after changing the layout

Files changed:
M plone/app/contenttypes/upgrades.py

diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index ea6f260..fb35724 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -141,10 +141,15 @@ def _fixup(portal_type, view_map):
             obj = brain.getObject()
             current = obj.getLayout()
             if current in view_map.keys():
+                default_page = obj.getDefaultPage()
                 obj.setLayout(view_map[current])
                 logger.info("Set view to {} for {}".format(
                     view_map[current], obj.absolute_url()
                 ))
+                if default_page:
+                    # any defaultPage is switched of by setLayout
+                    # and needs to set again
+                    obj.setDefaultPage(default_page)
 
     folder_view_map = {  # OLD : NEW
         'folder_listing': 'listing_view',


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-05-29T15:42:09+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/fea568316adf5d2834bb2583e1e7a6aae2e18964

change the view_methods without reloading the profile and dropping extra methods.

Files changed:
M CHANGES.rst
M plone/app/contenttypes/upgrades.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6945b13..479358d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,12 @@ Changelog
 1.2a10 (unreleased)
 -------------------
 
+- Keep additional view_methods when migrating to new view_methods. Fixes #231.
+  [pbauer]
+
+- Fix upgrade-step to use new view_methods.
+  [pbauer]
+
 - Fix possible error setting fields for tabular_view for
   collections.  Issue #209.
   [maurits]
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index fb35724..a3fedb7 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -125,14 +125,48 @@ def enable_shortname_behavior(context):
         fti._updateProperty('behaviors', behaviors)
 
 
-def use_new_view_names(context):
+def use_new_view_names(context):  # noqa
     """Migrate old view names to new view names."""
 
-    # TODO: Don't reload the profile. Only change the settings.
-    context.runImportStepFromProfile(
-        'profile-plone.app.contenttypes:default',
-        'typeinfo',
-    )
+    # Don't reload the profile. Only change the settings.
+    portal_types = getToolByName(context, 'portal_types')
+    types_to_fix = ['Folder', 'Collection', 'Plone Site']
+    outdated_methods = [
+        'folder_listing',
+        'folder_full_view',
+        'folder_summary_view',
+        'folder_tabular_view',
+        'folder_album_view',
+        'atct_album_view',
+        'standard_view',
+        'collection_view',
+        'all_content',
+        'thumbnail_view',
+    ]
+    new_methods = [
+        'listing_view',
+        'summary_view',
+        'tabular_view',
+        'full_view',
+        'album_view',
+        'event_listing',
+    ]
+    for ctype in types_to_fix:
+        fti = portal_types.get(ctype)
+        view_methods = [i for i in fti.getAvailableViewMethods(None)]
+        changed = False
+        for method in outdated_methods:
+            if method in view_methods:
+                view_methods.remove(method)
+                changed = True
+        for method in new_methods:
+            if method not in view_methods:
+                view_methods.append(method)
+                changed = True
+        if changed:
+            fti.manage_changeProperties(view_methods=tuple(view_methods))
+            logger.info("Updated view_methods for {}".format(ctype))
+
     catalog = getToolByName(context, 'portal_catalog')
     search = catalog.unrestrictedSearchResults
 


