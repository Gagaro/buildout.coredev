Repository: mockup


Branch: refs/heads/master
Date: 2015-11-03T21:49:07+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/mockup/commit/e7a90c808470e5c4236b58deaee4e8282d255c52

Revert "fix autotoc does not change to internal link after upload"

This reverts commit aa103d46d5d8760c22b5788336020dca131dcd50.

After pull request #602 was merged, Jenkins gave an error in
CMFEditions (test15_storageStatistics) in the AT tests:
http://jenkins.plone.org/job/plone-5.0-python-2.7-at/3376/
The error is persistent.  First thing to try is to revert these commits.

Note that I don't see a link between the error and these commits,
though maybe the tinymce changes in here influence what gets saved in
CMFEditions.

And note that I do not get the test failure locally.  Joy...

Files changed:
M mockup/patterns/tinymce/js/links.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index 323b5d9..82e8526 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -553,10 +553,10 @@ define([
         self.$upload.on('uploadAllCompleted', function(evt, data) {
           if(self.linkTypes.image){
             self.linkTypes.image.set(data.data.UID);
-            $('#' + $('#tinylink-image' , self.modal.$modal).data('navref')).trigger('click');
+            $('#tinylink-image' , self.modal.$modal).trigger('click');
           }else{
             self.linkTypes.internal.set(data.data.UID);
-            $('#' + $('#tinylink-internal' , self.modal.$modal).data('navref')).trigger('click');
+            $('#tinylink-internal', self.modal.$modal).trigger('click');
           }
         });
       }


Repository: mockup


Branch: refs/heads/master
Date: 2015-11-03T21:49:31+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/mockup/commit/b75a1fe757d73ba388c9e80a55cd173894773067

Revert "add test for uploading image file"

This reverts commit bf9801eccf9d013949ef86e5e1830756fe51e284.

Files changed:
M mockup/patterns/autotoc/pattern.js
M mockup/tests/fakeserver.js
M mockup/tests/pattern-tinymce-test.js

diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js
index a80fdf2..0acf0a4 100644
--- a/mockup/patterns/autotoc/pattern.js
+++ b/mockup/patterns/autotoc/pattern.js
@@ -122,7 +122,6 @@ define([
         if(window.location.hash === '#' + id){
           activeId = id;
         }
-        $level.data('navref', id);
         $('<a/>')
           .appendTo(self.$toc)
           .text($level.text())
diff --git a/mockup/tests/fakeserver.js b/mockup/tests/fakeserver.js
index 0c1c45e..196fdf4 100644
--- a/mockup/tests/fakeserver.js
+++ b/mockup/tests/fakeserver.js
@@ -229,11 +229,7 @@ define([
       {UID: 'sdfbsfdh345', Title: 'Board of Directors', path: '/about/board-of-directors', portal_type: 'Document'},
       // staff
       {UID: 'asdfasdf9sdf', Title: 'Mike', path: '/about/staff/mike', portal_type: 'Document'},
-      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'},
-      
-      // upload file
-      {UID: 'sldlfkjsldkjlskdjf', Title: 'blah.png', path: 'blah.png', portal_type: 'Image'}
-
+      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'}
     ];
     searchables = searchables.concat(randomItems);
 
@@ -428,7 +424,7 @@ define([
     xhr.respond(200, {'content-Type': 'application/json'},
       JSON.stringify({
         url: 'http://localhost:8000/blah.png',
-        UID: 'sldlfkjsldkjlskdjf',
+        uid: 'sldlfkjsldkjlskdjf',
         name: 'blah.png',
         filename: 'blah.png',
         portal_type: 'Image',
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index 756ac31..e2554b3 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -26,43 +26,7 @@ define([
     beforeEach(function() {
       this.server = sinon.fakeServer.create();
       this.server.autoRespond = true;
-      this.clock = sinon.useFakeTimers();
-      //this.server.respondImmediately = true;
-
-      this.server.respondWith('POST', /upload/, function (xhr, id) {
-        xhr.respond(200, {'content-Type': 'application/json'},
-          JSON.stringify({
-            url: 'http://localhost:8000/blah.png',
-            UID: 'sldlfkjsldkjlskdjf',
-            name: 'blah.png',
-            filename: 'blah.png',
-            portal_type: 'Image',
-            size: 239292
-          })
-        );
-      });
-      this.server.respondWith(/relateditems-test\.json/, function(xhr, id) {
-        var query = xhr.url.split('?')[1];
-        var vars = query.split('&');
-        for (var i = 0; i < vars.length; i += 1) {
-          var pair = vars[i].split('=');
-          if (decodeURIComponent(pair[0]) === 'query') {
-            query = $.parseJSON(decodeURIComponent(pair[1]));
-          }
-        }
-        var results = [];
-        for (var j = 0; j < query.criteria.length; j += 1) {
-          if(query.criteria[j].i === 'UID'){
-            results.push({UID: query.criteria[j].v[0], Title: 'blah.png', path: '/blah.png', portal_type: 'Image'});
-          }
-        }
-        xhr.respond(200, { 'Content-Type': 'application/json' },
-          JSON.stringify({
-            total: results.length,
-            results: results
-          })
-        );
-      });
+
       this.server.respondWith('GET', /data.json/, function (xhr, id) {
         var items = [
           {
@@ -278,40 +242,6 @@ define([
       pattern.imageModal.$scale.find('[value="thumb"]')[0].selected = true;
       expect(pattern.imageModal.getLinkUrl()).to.equal('resolveuid/foobar/@@images/image/thumb');
     });
-    it('test add image link upload', function() {
-      var $el = $('<textarea class="pat-tinymce" data-pat-tinymce=\'' +
-        '{' +
-        '  "relatedItems": {' +
-        '    "vocabularyUrl": "/relateditems-test.json"' +
-        '  },' +
-        '  "upload": {' +
-        '    "baseUrl": "/",' +
-        '    "relativePath": "upload"' +
-        '}' +
-      '}\'></textarea>').appendTo('body');
-      registry.scan($el);
-      this.clock.tick(1000);
-      var pattern = $el.data().patternTinymce;
-      pattern.addImageClicked();
-      $('#' + $('#tinylink-uploadImage').data().navref).click();
-      expect($('#tinylink-uploadImage').parent().hasClass('active')).to.equal(true);
-      var blob;
-      try{
-        blob = new Blob(['dummy data'],  {type: 'image/png'});
-      } catch (err) {
-        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
-        var builder = new BlobBuilder();
-        builder.append('dummy data');
-        blob = builder.getBlob();
-      }
-      blob.name = 'blah.png';
-      pattern.imageModal.$upload.data().patternUpload.dropzone.addFile(blob);
-      $('.upload-all', pattern.imageModal.$upload).click();
-      this.clock.tick(1000);
-
-      expect($('#tinylink-image').parent().hasClass('active')).to.equal(true);
-      expect(pattern.imageModal.getLinkUrl()).to.equal('/blah.png/imagescale/large');
-    });
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();


