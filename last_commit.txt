Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-15T10:39:25+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d4cf64e94ec7de4a65b283efafa451137d17e486

Use new view methods for migrated collections. Fixes #254

Files changed:
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/tests/test_migration.py

diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index 09f2fee..d9e6e95 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -349,16 +349,25 @@ class CollectionMigrator(ATCTContentMigrator):
 
     def migrate_schema_fields(self):
         migrate_richtextfield(self.old, self.new, 'text', 'text')
-        wrapped = ICollection(self.new)
+        wrapped_new = ICollection(self.new)
         # using migrate_simplefield on 'query' returns the ContentListing obj
-        wrapped.query = self.old.query
-        migrate_simplefield(self.old, wrapped, 'sort_on', 'sort_on')
+        wrapped_new.query = self.old.query
+        migrate_simplefield(self.old, wrapped_new, 'sort_on', 'sort_on')
         migrate_simplefield(
-            self.old, wrapped, 'sort_reversed', 'sort_reversed')
-        migrate_simplefield(self.old, wrapped, 'limit', 'limit')
+            self.old, wrapped_new, 'sort_reversed', 'sort_reversed')
+        migrate_simplefield(self.old, wrapped_new, 'limit', 'limit')
         migrate_simplefield(
-            self.old, wrapped, 'customViewFields', 'customViewFields')
+            self.old, wrapped_new, 'customViewFields', 'customViewFields')
 
+    def last_migrate_layout(self):
+        """Migrate the layout (view method).
+
+        This needs to be done last, as otherwise our changes may get overriden
+        by a later call to migrate_properties.
+        """
+        old_layout = self.old.getLayout() or getattr(self.old, 'layout', None)
+        if old_layout in LISTING_VIEW_MAPPING:
+            self.new.setLayout(LISTING_VIEW_MAPPING[old_layout])
 
 def migrate_collections(portal):
     return migrate(portal, CollectionMigrator)
diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index 3c92c3b..0e6081c 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -652,7 +652,7 @@ def last_migrate_layout(self):
             return
 
         old_layout = self.old.getLayout() or getattr(self.old, 'layout', None)
-        if old_layout in LISTING_VIEW_MAPPING.keys():
+        if old_layout in LISTING_VIEW_MAPPING:
             default_page = self.old.getDefaultPage()
             self.new.setLayout(LISTING_VIEW_MAPPING[old_layout])
             if default_page:
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index 709d26b..41031c6 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -499,6 +499,7 @@ def test_collection_is_migrated(self):
             'v': 'Document',
         }]
         at_collection.setQuery(query)
+        at_collection.setLayout('folder_summary_view')
         applyProfile(self.portal, 'plone.app.contenttypes:default')
         migrate_collections(self.portal)
         dx_collection = self.portal['collection']
@@ -507,6 +508,7 @@ def test_collection_is_migrated(self):
         wrapped = ICollectionBehavior(dx_collection)
         self.assertEqual(wrapped.query, query)
         self.assertEqual(dx_collection.text.output, "<p>Whopee</p>")
+        at_collection.setLayout('summary_view')
 
     def test_document_content_is_migrated(self):
         from plone.app.contenttypes.migration.migration import DocumentMigrator


