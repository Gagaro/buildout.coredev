Repository: plone.protect


Branch: refs/heads/master
Date: 2015-10-07T10:11:35-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/2ff40186507fcb42eee020d8bb76ccba5e84f5af

Always force html serializer as the XHTML variant seems
  to cause character encoding issues

Files changed:
M CHANGES.rst
M plone/protect/auto.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2b45c56..a782629 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 3.0.13 (unreleased)
 -------------------
 
-- unreleased
+- Always force html serializer as the XHTML variant seems
+  to cause character encoding issues
+  [vangheem]
 
 3.0.12 (2015-10-06)
 -------------------
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 426c062..ef6172f 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -1,7 +1,6 @@
 import itertools
 import logging
 import os
-import re
 import traceback
 from urllib import urlencode
 from urlparse import urlparse
@@ -76,15 +75,11 @@ def parseTree(self, result, encoding):
             return None
 
         try:
-            # Fix layouts with CR[+LF] line endings not to lose their heads
-            # (this has been seen with downloaded themes with CR[+LF] endings)
-            iterable = [re.sub('&#13;', '\n', re.sub('&#13;\n', '\n', item))
-                        for item in result if item]
             result = getHTMLSerializer(
-                iterable, pretty_print=False, encoding=encoding)
-            # Fix XHTML where etree.tostring breaks <![CDATA[
-            if any(['<![CDATA[' in item for item in iterable]):
-                result.serializer = html.tostring
+                result, pretty_print=False, encoding=encoding)
+            # We are going to force html output here always as XHTML
+            # output does odd character encodings
+            result.serializer = html.tostring
             return result
         except (TypeError, etree.ParseError):
             # XXX handle something special?


Repository: plone.protect


Branch: refs/heads/master
Date: 2015-10-07T11:29:36-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/21c12b66f94bb57e63f0094da8e4750dc104c13a

Merge pull request #24 from plone/html-serializer

Always force html serializer as the XHTML variant seems

Files changed:
M CHANGES.rst
M plone/protect/auto.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2b45c56..a782629 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 3.0.13 (unreleased)
 -------------------
 
-- unreleased
+- Always force html serializer as the XHTML variant seems
+  to cause character encoding issues
+  [vangheem]
 
 3.0.12 (2015-10-06)
 -------------------
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 426c062..ef6172f 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -1,7 +1,6 @@
 import itertools
 import logging
 import os
-import re
 import traceback
 from urllib import urlencode
 from urlparse import urlparse
@@ -76,15 +75,11 @@ def parseTree(self, result, encoding):
             return None
 
         try:
-            # Fix layouts with CR[+LF] line endings not to lose their heads
-            # (this has been seen with downloaded themes with CR[+LF] endings)
-            iterable = [re.sub('&#13;', '\n', re.sub('&#13;\n', '\n', item))
-                        for item in result if item]
             result = getHTMLSerializer(
-                iterable, pretty_print=False, encoding=encoding)
-            # Fix XHTML where etree.tostring breaks <![CDATA[
-            if any(['<![CDATA[' in item for item in iterable]):
-                result.serializer = html.tostring
+                result, pretty_print=False, encoding=encoding)
+            # We are going to force html output here always as XHTML
+            # output does odd character encodings
+            result.serializer = html.tostring
             return result
         except (TypeError, etree.ParseError):
             # XXX handle something special?


