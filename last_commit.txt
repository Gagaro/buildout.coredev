Repository: mockup


Branch: refs/heads/master
Date: 2015-08-23T17:19:12+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/9bd483ceabf6db8a4e7aed248cf228c46c7d2008

improvements to dynamic popover content handling

Files changed:
M CHANGES.rst
M mockup/patterns/structure/js/views/generic-popover.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 70ea1e2..020ea70 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.1.0 (unreleased)
 ------------------
 
+- Improvements to dynamic popover content handling
+  [vangheem]
+
 - Lessbuilder will now guess filenames based on manifest.cfg
   [obct537]
 
@@ -27,7 +30,7 @@ Changelog
 
 - add action value to form when using disableAjaxFormSubmit option on modal
   [vangheem]
-  
+
 - Modal Pattern: If ``data-view-url`` attribute is available on the body, use
   it. Otherwise look for ``data-base-url`` and finally for a ``<base>`` tag.
   [ale-rt]
diff --git a/mockup/patterns/structure/js/views/generic-popover.js b/mockup/patterns/structure/js/views/generic-popover.js
index 92df65f..a399348 100644
--- a/mockup/patterns/structure/js/views/generic-popover.js
+++ b/mockup/patterns/structure/js/views/generic-popover.js
@@ -23,15 +23,20 @@ define([
       self.submitContext = options.form.submitContext || 'primary';
       self.data = {};
 
-      var html = '<form>' + options.form.template + '</form>' +
-        '<button class="btn btn-block btn-' + self.submitContext + ' applyBtn">' + self.submitText + ' </button>';
-      if(options.form.closeText){
-        html += '<button class="btn btn-block btn-default closeBtn">' + options.form.closeText + ' </button>';
-      }
-      self.content = _.template(html);
+      self.options = options;
+      self.setContent(options.form.template);
 
       PopoverView.prototype.initialize.apply(this, [options]);
     },
+    setContent: function(content){
+      var self = this;
+      var html = '<form>' + content + '</form>';
+      html += '<button class="btn btn-block btn-' + self.submitContext + ' applyBtn">' + self.submitText + ' </button>';
+      if(self.options.form.closeText){
+        html += '<button class="btn btn-block btn-default closeBtn">' + self.options.form.closeText + ' </button>';
+      }
+      this.content = _.template(html);
+    },
     getTemplateOptions: function(){
       var self = this;
       var items = [];
@@ -49,25 +54,38 @@ define([
       _.each(self.$el.find('form').serializeArray(), function(param){
         data[param.name] = param.value;
       });
-      this.app.buttonClickEvent(this.triggerView, data);
-      this.hide();
+
+      self.app.buttonClickEvent(this.triggerView, data);
+      self.hide();
     },
     afterRender: function(){
       var self = this;
       if(self.options.form.dataUrl){
+        self.$('.popover-content').html(_t('Loading...'));
+        self.app.loading.show();
         $.ajax({
           url: self.options.form.dataUrl,
           dataType: 'json',
           type: 'POST',
+          cache: false,
           data: {
             selection: JSON.stringify(self.app.getSelectedUids()),
             transitions: true,
             render: 'yes'
           }
-        }).done(function(data){
-          self.data = data;
+        }).done(function(result){
+          self.data = result.data || result;
           self.renderContent();
           registry.scan(self.$el);
+        }).fail(function(){
+          /* we temporarily set original html to a value here so we can
+             render the updated content and then put the original back */
+          var originalContent = self.content;
+          self.setContent('<p>' + _t('Error loading popover from server.') + '</p>', false);
+          self.renderContent();
+          self.content = originalContent;
+        }).always(function(){
+          self.app.loading.hide();
         });
       }else{
         registry.scan(self.$el);
@@ -85,4 +103,4 @@ define([
   });
 
   return PropertiesView;
-});
+});
\ No newline at end of file


Repository: mockup


Branch: refs/heads/master
Date: 2015-08-24T09:38:51-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/18fecfcbc71a099b7fa09fa62c1116898009d38b

Merge pull request #563 from plone/linkintegrity

improvements to dynamic popover content handling

Files changed:
M CHANGES.rst
M mockup/patterns/structure/js/views/generic-popover.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 70ea1e2..020ea70 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.1.0 (unreleased)
 ------------------
 
+- Improvements to dynamic popover content handling
+  [vangheem]
+
 - Lessbuilder will now guess filenames based on manifest.cfg
   [obct537]
 
@@ -27,7 +30,7 @@ Changelog
 
 - add action value to form when using disableAjaxFormSubmit option on modal
   [vangheem]
-  
+
 - Modal Pattern: If ``data-view-url`` attribute is available on the body, use
   it. Otherwise look for ``data-base-url`` and finally for a ``<base>`` tag.
   [ale-rt]
diff --git a/mockup/patterns/structure/js/views/generic-popover.js b/mockup/patterns/structure/js/views/generic-popover.js
index 92df65f..a399348 100644
--- a/mockup/patterns/structure/js/views/generic-popover.js
+++ b/mockup/patterns/structure/js/views/generic-popover.js
@@ -23,15 +23,20 @@ define([
       self.submitContext = options.form.submitContext || 'primary';
       self.data = {};
 
-      var html = '<form>' + options.form.template + '</form>' +
-        '<button class="btn btn-block btn-' + self.submitContext + ' applyBtn">' + self.submitText + ' </button>';
-      if(options.form.closeText){
-        html += '<button class="btn btn-block btn-default closeBtn">' + options.form.closeText + ' </button>';
-      }
-      self.content = _.template(html);
+      self.options = options;
+      self.setContent(options.form.template);
 
       PopoverView.prototype.initialize.apply(this, [options]);
     },
+    setContent: function(content){
+      var self = this;
+      var html = '<form>' + content + '</form>';
+      html += '<button class="btn btn-block btn-' + self.submitContext + ' applyBtn">' + self.submitText + ' </button>';
+      if(self.options.form.closeText){
+        html += '<button class="btn btn-block btn-default closeBtn">' + self.options.form.closeText + ' </button>';
+      }
+      this.content = _.template(html);
+    },
     getTemplateOptions: function(){
       var self = this;
       var items = [];
@@ -49,25 +54,38 @@ define([
       _.each(self.$el.find('form').serializeArray(), function(param){
         data[param.name] = param.value;
       });
-      this.app.buttonClickEvent(this.triggerView, data);
-      this.hide();
+
+      self.app.buttonClickEvent(this.triggerView, data);
+      self.hide();
     },
     afterRender: function(){
       var self = this;
       if(self.options.form.dataUrl){
+        self.$('.popover-content').html(_t('Loading...'));
+        self.app.loading.show();
         $.ajax({
           url: self.options.form.dataUrl,
           dataType: 'json',
           type: 'POST',
+          cache: false,
           data: {
             selection: JSON.stringify(self.app.getSelectedUids()),
             transitions: true,
             render: 'yes'
           }
-        }).done(function(data){
-          self.data = data;
+        }).done(function(result){
+          self.data = result.data || result;
           self.renderContent();
           registry.scan(self.$el);
+        }).fail(function(){
+          /* we temporarily set original html to a value here so we can
+             render the updated content and then put the original back */
+          var originalContent = self.content;
+          self.setContent('<p>' + _t('Error loading popover from server.') + '</p>', false);
+          self.renderContent();
+          self.content = originalContent;
+        }).always(function(){
+          self.app.loading.hide();
         });
       }else{
         registry.scan(self.$el);
@@ -85,4 +103,4 @@ define([
   });
 
   return PropertiesView;
-});
+});
\ No newline at end of file


