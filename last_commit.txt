Repository: plone.protect
Branch: refs/heads/master
Date: 2015-03-30T12:22:36-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/a3e5de84425c538288afb7ded02ee4748cb60adb

handle zope root not having IKeyManager Utility and CRSF protection not being supported on zope root requests yet

Files changed:
M CHANGES.txt
M plone/protect/auto.py

diff --git a/CHANGES.txt b/CHANGES.txt
index c8052d8..232b1fe 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,6 +4,10 @@ Changelog
 3.0.2 (2015-03-13)
 ------------------
 
+- handle zope root not having IKeyManager Utility and CRSF protection
+  not being supported on zope root requests yet
+  [vangheem]
+
 - Add ITransform.transformBytes for protect transform to fix compatibility
   with plone.app.blocks' ESI-rendering
   [atsoukka]
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 62deed3..0517350 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -8,15 +8,16 @@
 from plone.protect.authenticator import isAnonymousUser
 from plone.protect.interfaces import IConfirmView
 from plone.protect.interfaces import IDisableCSRFProtection
+from plone.keyring.interfaces import IKeyManager
 from plone.transformchain.interfaces import ITransform
 from repoze.xmliter.utils import getHTMLSerializer
 import transaction
 from zExceptions import Forbidden
 from zope.component import adapts
 from zope.component.hooks import getSite
+from zope.component import getUtility
 from zope.component import ComponentLookupError
 from zope.interface import implements, Interface
-from zope.browserresource.interfaces import IResource
 
 from urlparse import urlparse
 from urllib import urlencode
@@ -44,6 +45,9 @@ class ProtectTransform(object):
     # should be last lxml related transform
     order = 9000
 
+    key_manager = None
+    site = None
+
     def __init__(self, published, request):
         self.published = published
         self.request = request
@@ -104,6 +108,17 @@ def transformIterable(self, result, encoding):
         if not context:
             return
 
+        self.site = getSite()
+        try:
+            self.key_manager = getUtility(IKeyManager)
+        except ComponentLookupError:
+            pass
+
+        if self.site is None and self.key_manager is None:
+            # key manager not installed and no site object.
+            # key manager must not be installed on site root, ignore
+            return
+
         if not self.check():
             # we don't need to transform the doc, we're getting redirected
             return
@@ -178,17 +193,19 @@ def _check(self):
                     # conditions for doing the confirm form are:
                     #   1. 301, 302 response code
                     #   2. text/html response
+                    #   3. getSite could be none, zope root maybe, carry on
                     # otherwise,
                     #   just abort with a log entry because we tried to
                     #   write on read, without a POST request and we don't
                     #   know what to do with it gracefully.
                     resp = self.request.response
                     ct = resp.headers.get('content-type')
-                    if resp.status in (301, 302) or 'text/html' in ct:
+                    if self.site and (
+                            resp.status in (301, 302) or 'text/html' in ct):
                         data = self.request.form.copy()
                         data['original_url'] = self.request.URL
                         resp.redirect('%s/@@confirm-action?%s' % (
-                            getSite().absolute_url(),
+                            self.site.absolute_url(),
                             urlencode(data)
                         ))
                         return False
@@ -213,9 +230,7 @@ def transform(self, result):
         try:
             token = createToken()
         except ComponentLookupError:
-            context = self.getContext()
-            if IApplication.providedBy(context) or \
-                    IResource.providedBy(context):
+            if self.site is None:
                 # skip here, utility not installed yet on zope root
                 return
             raise
@@ -223,8 +238,8 @@ def transform(self, result):
         for form in root.cssselect('form'):
             # XXX should we only do POST? If we're logged in and
             # it's an internal form, I'm inclined to say no...
-            #method = form.attrib.get('method', 'GET').lower()
-            #if method != 'post':
+            # method = form.attrib.get('method', 'GET').lower()
+            # if method != 'post':
             #    continue
 
             # some get forms we definitely do not want to protect.


Repository: plone.protect
Branch: refs/heads/master
Date: 2015-03-30T12:23:23-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/1516f697a9910121d8aa087b8210aa8d5a056a5f

updating version

Files changed:
M CHANGES.txt
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 232b1fe..c8b6b07 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,13 +1,16 @@
 Changelog
 =========
 
-3.0.2 (2015-03-13)
+3.0.3 (unreleased)
 ------------------
 
 - handle zope root not having IKeyManager Utility and CRSF protection
   not being supported on zope root requests yet
   [vangheem]
 
+3.0.2 (2015-03-13)
+------------------
+
 - Add ITransform.transformBytes for protect transform to fix compatibility
   with plone.app.blocks' ESI-rendering
   [atsoukka]
diff --git a/setup.py b/setup.py
index d72339c..9f8bb60 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '3.0.2'
+version = '3.0.3'
 
 setup(
     name='plone.protect',


