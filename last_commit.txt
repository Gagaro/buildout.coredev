Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-09-06T20:48:20-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/5a6ba539ff1f1b3d097e89cb8a230f06a24f162a

reset requirejs when plone legacy bundle is rendered to prevent errors

Files changed:
M Products/CMFPlone/resources/browser/cook.py

diff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py
index cff2b93..a7a7b18 100644
--- a/Products/CMFPlone/resources/browser/cook.py
+++ b/Products/CMFPlone/resources/browser/cook.py
@@ -38,7 +38,15 @@ def cookWhenChangingSettings(context, bundle=None):
 
     # Let's join all css and js
     css_file = ""
-    cooked_js = ""
+    cooked_js = """
+/* reset requirejs definitions so that people who
+   put requirejs in legacy compilation do not get errors */
+var _old_define = define;
+var _old_require = require;
+define = undefined;
+require = undefined;
+try{
+"""
     siteUrl = getSite().absolute_url()
     request = getRequest()
     for package in bundle.resources or []:
@@ -65,6 +73,17 @@ def cookWhenChangingSettings(context, bundle=None):
                 else:
                     cooked_js += '\n/* Could not find resource: %s */\n\n' % resource.js
 
+    cooked_js += """
+}catch(e){
+    // log it
+    if (typeof console !== "undefined"){
+        console.log('Error loading javascripts!' + e);
+    }
+}finally{
+    define = _old_define;
+    require = _old_require;
+}
+"""
     cooked_css = cssmin(css_file)
 
     js_path = bundle.jscompilation


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-09-08T08:54:37-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6d6f52070af8524e1fbf1fbc524a8f796ac56753

Merge pull request #870 from plone/safe-requirejs-legacy

reset requirejs when plone legacy bundle is rendered to prevent errors

Files changed:
M Products/CMFPlone/resources/browser/cook.py

diff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py
index cff2b93..a7a7b18 100644
--- a/Products/CMFPlone/resources/browser/cook.py
+++ b/Products/CMFPlone/resources/browser/cook.py
@@ -38,7 +38,15 @@ def cookWhenChangingSettings(context, bundle=None):
 
     # Let's join all css and js
     css_file = ""
-    cooked_js = ""
+    cooked_js = """
+/* reset requirejs definitions so that people who
+   put requirejs in legacy compilation do not get errors */
+var _old_define = define;
+var _old_require = require;
+define = undefined;
+require = undefined;
+try{
+"""
     siteUrl = getSite().absolute_url()
     request = getRequest()
     for package in bundle.resources or []:
@@ -65,6 +73,17 @@ def cookWhenChangingSettings(context, bundle=None):
                 else:
                     cooked_js += '\n/* Could not find resource: %s */\n\n' % resource.js
 
+    cooked_js += """
+}catch(e){
+    // log it
+    if (typeof console !== "undefined"){
+        console.log('Error loading javascripts!' + e);
+    }
+}finally{
+    define = _old_define;
+    require = _old_require;
+}
+"""
     cooked_css = cssmin(css_file)
 
     js_path = bundle.jscompilation


