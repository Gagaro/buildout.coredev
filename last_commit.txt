Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/392eb333d8a64329791d50cb49dd1e5b3da56f32

remove Products.CMFPlone.utils.isLinked function. Switch to using
  plone.app.linkintegrity's variant

Conflicts:
	CHANGES.rst

Files changed:
M CHANGES.rst
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f9e8477..7b972df 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,10 @@ Changelog
 5.0b4 (2015-08-23)
 ------------------
 
+- remove Products.CMFPlone.utils.isLinked function. Switch to using
+  plone.app.linkintegrity's variant
+  [vangheem]
+
 - fix #350: "plone.app.content circular dependency on Products.CMFPlone" - this
   fixes the imports only, not on zcml/genericsetup level.
   [jensens]
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index a9cbcbf..8e7b87a 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -591,49 +591,6 @@ def _getSecurity(klass, create=True):
     return security
 
 
-def isLinked(obj):
-    """ check if the given content object is linked from another one
-
-        WARNING: this function can be time consuming !!
-
-            It deletes the object in a subtransaction that is rollbacked.
-            In other words, the object is kept safe.
-
-            Nevertheless, this implies that it also deletes recursively
-            all object's subobjects and references, which can be very
-            expensive.
-    """
-    # first check to see if link integrity handling has been enabled at all
-    # and if so, if the removal of the object was already confirmed, i.e.
-    # while replaying the request;  unfortunately this makes it necessary
-    # to import from plone.app.linkintegrity here, hence the try block...
-    try:
-        from plone.app.linkintegrity.interfaces import ILinkIntegrityInfo
-        info = ILinkIntegrityInfo(obj.REQUEST)
-    except (ImportError, TypeError):
-        # if p.a.li isn't installed the following check can be cut short...
-        return False
-    if not info.integrityCheckingEnabled():
-        return False
-    if info.isConfirmedItem(obj):
-        return True
-    # otherwise, when not replaying the request already, it is tried to
-    # delete the object, making it possible to find out if it was referenced,
-    # i.e. in case a link integrity exception was raised
-    linked = False
-    parent = obj.aq_inner.aq_parent
-    try:
-        savepoint = transaction.savepoint()
-        parent.manage_delObjects(obj.getId())
-    except OFS.ObjectManager.BeforeDeleteException:
-        linked = True
-    except:  # ignore other exceptions, not useful to us at this point
-        pass
-    finally:
-        savepoint.rollback()
-    return linked
-
-
 def set_own_login_name(member, loginname):
     """Allow the user to set his/her own login name.
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/f11d4ef68da27eaeb5b22b060ff6275d30555dd3

re-add isLinked with a deprecation-warning

Files changed:
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 8e7b87a..3b09b8e 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -591,6 +591,13 @@ def _getSecurity(klass, create=True):
     return security
 
 
+def isLinked(obj):
+    """Check if the given content object is linked from another one."""
+    log_deprecated("utils.isLinked is deprecated, you should use plone.app.linkintegrity.utils.hasIncomingLinks")  # noqa
+    from plone.app.linkintegrity.utils import hasIncomingLinks
+    return hasIncomingLinks(obj)
+
+
 def set_own_login_name(member, loginname):
     """Allow the user to set his/her own login name.
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/bc52a154a10cff79a1788588f3f30016b6d9dadc

test fixes

Files changed:
A Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot

diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
new file mode 100644
index 0000000..9442898
--- /dev/null
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -0,0 +1,110 @@
+# ============================================================================
+# Tests for the Plone Link Integrity Support
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/Products.CMFPlone/Products/CMFPlone/ Products.CMFPlone.testing.PRODUCTS_CMFPLONE_ROBOT_TESTING
+#
+# $ bin/robot src/Products.CMFPlone/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
+
+Resource  plone/app/robotframework/keywords.robot
+Resource  plone/app/robotframework/saucelabs.robot
+
+Library  Remote  ${PLONE_URL}/RobotRemote
+
+Resource  keywords.robot
+
+Test Setup  Open SauceLabs test browser
+Test Teardown  Run keywords  Report test status  Close all browsers
+
+
+*** Test Cases ***************************************************************
+
+Scenario: When page is linked show warning
+  Given a logged-in site administrator
+    a page to link to
+    and a page to edit
+    and a link in rich text
+    and re-edit the object
+    should show warning when deleting page
+
+
+Scenario: After you fix linked page no longer show warning
+  Given a logged-in site administrator
+  a page to link to
+    and a page to edit
+    and a link in rich text
+    and re-edit the object
+  should show warning when deleting page
+    remove link to page
+  should not show warning when deleting page
+
+
+*** Keywords *****************************************************************
+
+# --- GIVEN ------------------------------------------------------------------
+
+a logged-in site administrator
+  Enable autologin as  Site Administrator
+
+
+a page to edit
+  Go To  ${PLONE_URL}
+  Click Link  css=#plone-contentmenu-factories a
+  Click Link  css=.plonetoolbar-contenttype .contenttype-document
+  Input Text  css=#formfield-form-widgets-IDublinCore-title input  Bar
+
+
+a page to link to
+  Go To  ${PLONE_URL}
+  Click Link  css=#plone-contentmenu-factories a
+  Click Link  css=.plonetoolbar-contenttype .contenttype-document
+  Input Text  css=#formfield-form-widgets-IDublinCore-title input  Foo
+  Click Button  css=#form-buttons-save
+
+
+should show warning when deleting page
+  Go To  ${PLONE_URL}/foo
+  Click Link  css=#plone-contentmenu-actions a
+  Click Link  css=#plone-contentmenu-actions-delete
+  Page should contain element  css=.breach-container .breach-item
+
+
+should not show warning when deleting page
+  Go To  ${PLONE_URL}/foo
+  Click Link  css=#plone-contentmenu-actions a
+  Click Link  css=#plone-contentmenu-actions-delete
+  Page should not contain element  css=.breach-container .breach-item
+
+# XXX need to remove this once creation event handling is fixed
+re-edit the object
+  Go To  ${PLONE_URL}/bar
+  Click Link  css=#contentview-edit a
+  Click Button  css=#form-buttons-save
+
+
+a link in rich text
+  Select Frame  css=.mce-edit-area iframe
+  Input text  css=.mce-content-body  foo
+  Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+  UnSelect Frame
+  Click Button  css=div[aria-label="Insert/edit link"] button
+  Click Element  css=.select2-input.select2-default
+  Input text  css=.select2-dropdown-open .select2-input  foo
+  Click Link  css=.pattern-relateditems-result-select.selectable
+  Click Button  css=.plone-modal-footer .plone-btn-primary
+  Click Button  css=#form-buttons-save
+
+
+remove link to page
+  Go To  ${PLONE_URL}/bar
+  Click Link  css=#contentview-edit a
+  Select Frame  css=.mce-edit-area iframe
+  Input text  css=.mce-content-body  foo
+  Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+  UnSelect Frame
+  Click Button  css=div[aria-label="Remove link(s)"] button
+  Click Button  css=#form-buttons-save
\ No newline at end of file
diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot
index 5faf9fb..dc4c702 100644
--- a/Products/CMFPlone/tests/robot/test_tinymce.robot
+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot
@@ -23,15 +23,15 @@ Scenario: A page is opened to edit
     Given a logged-in site administrator
       and an uploaded image
       and an edited page
-    Click Button  css=#mceu_15 button
-    Click Element  css=.select2-input.select2-default
-    Click Link  css=.pattern-relateditems-result-select.selectable
-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt
-    Click Button  css=.plone-modal-footer .plone-btn-primary
+      and text inserted into wysiwyg
+      and insert link
+      and insert image
+    
     Click Button  css=#form-buttons-save
     Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]
     Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]
+    Element Should Be Visible  css=#parent-fieldname-text a
+
 
 *** Keywords *****************************************************************
 
@@ -42,4 +42,30 @@ an edited page
     Go to  ${PLONE_URL}/${PAGE_ID}/edit
 
 an uploaded image
-    Create content  type=Image  title=an-mage
+    Create content  type=Image  title=an-image
+
+text inserted into wysiwyg
+    Select Frame  css=.mce-edit-area iframe
+    Input text  css=.mce-content-body  foobar
+    UnSelect Frame
+
+insert link
+    Select Frame  css=.mce-edit-area iframe
+    Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+    UnSelect Frame
+    Click Button  css=div[aria-label="Insert/edit link"] button
+    Click Element  css=.select2-input.select2-default
+    Click Link  css=.pattern-relateditems-result-select.selectable
+    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
+    Click Button  css=.plone-modal-footer .plone-btn-primary
+    Select Frame  css=.mce-edit-area iframe
+    Execute Javascript  window.getSelection().removeAllRanges()
+    UnSelect Frame
+
+insert image
+    Click Button  css=div[aria-label="Insert/edit image"] button
+    Click Element  css=.select2-input.select2-default
+    Click Link  css=.pattern-relateditems-result-select.selectable
+    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
+    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt
+    Click Button  css=.plone-modal-footer .plone-btn-primary


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/56aab7d7007da4d8e637d4e0fa735170d3da603f

add deprecation-warnings to deleteObjectsByPaths and transitionObjectsByPaths

Files changed:
M Products/CMFPlone/PloneTool.py

diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py
index eeec833..e346010 100644
--- a/Products/CMFPlone/PloneTool.py
+++ b/Products/CMFPlone/PloneTool.py
@@ -33,6 +33,7 @@
 from Products.CMFPlone.interfaces import ISearchSchema
 from Products.CMFPlone.interfaces import ISecuritySchema
 from Products.CMFPlone.interfaces import ISiteSchema
+from Products.CMFPlone.log import log_deprecated
 from Products.CMFPlone.PloneBaseTool import PloneBaseTool
 from Products.CMFPlone.PloneFolder import ReplaceableWrapper
 from Products.CMFPlone.utils import base_hasattr
@@ -1139,6 +1140,8 @@ def getMethodAliases(self, typeInfo):
     # manage_delObjects calls should handle permission checks for us.
     @security.public
     def deleteObjectsByPaths(self, paths, handle_errors=True, REQUEST=None):
+        log_deprecated("deleteObjectsByPaths is deprecated, you should use. "
+                       "plone.api.content.delete. This method no longer does link integrity checks")  # noqa
         failure = {}
         success = []
         # use the portal for traversal in case we have relative paths
@@ -1155,8 +1158,6 @@ def deleteObjectsByPaths(self, paths, handle_errors=True, REQUEST=None):
                 success.append('%s (%s)' % (obj.getId(), path))
             except ConflictError:
                 raise
-            except LinkIntegrityNotificationException:
-                raise
             except Exception, e:
                 if handle_errors:
                     sp.rollback()
@@ -1173,6 +1174,7 @@ def transitionObjectsByPaths(self, workflow_action, paths, comment='',
                                  expiration_date=None, effective_date=None,
                                  include_children=False, handle_errors=True,
                                  REQUEST=None):
+        log_deprecated("transitionObjectsByPaths is deprecated")
         failure = {}
         # use the portal for traversal in case we have relative paths
         portal = getToolByName(self, 'portal_url').getPortalObject()


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/af3c8fef9c024990d0e05092bbb94d54bb52f745

fix test for linkintegrity

Files changed:
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py

diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
index b5a2b33..5c5ee4e 100644
--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFPlone.interfaces import IEditingSchema
 from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING
-from plone.app.linkintegrity.interfaces import ILinkIntegrityInfo
+from plone.app.linkintegrity.utils import linkintegrity_enabled
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
 from plone.registry.interfaces import IRegistry
@@ -109,9 +109,7 @@ def test_enable_link_integrity_checks_active(self):
         self.browser.getControl("Enable link integrity checks")\
             .selected = True
         self.browser.getControl('Save').click()
-
-        self.assertTrue(
-            ILinkIntegrityInfo(self.request).integrityCheckingEnabled())
+        self.assertTrue(linkintegrity_enabled())
 
     def test_lock_on_ttw_edit(self):
         self.browser.open(


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/20fe5f84e3a0f0a8dce5f4524275498c267a031c

add plone.app.intid and plone.app.relationsfield to core-dependencies

Files changed:
M Products/CMFPlone/profiles/dependencies/metadata.xml

diff --git a/Products/CMFPlone/profiles/dependencies/metadata.xml b/Products/CMFPlone/profiles/dependencies/metadata.xml
index 8d84cb3..928461b 100644
--- a/Products/CMFPlone/profiles/dependencies/metadata.xml
+++ b/Products/CMFPlone/profiles/dependencies/metadata.xml
@@ -8,7 +8,9 @@
     <dependency>profile-Products.CMFEditions:CMFEditions</dependency>
     <dependency>profile-Products.PlonePAS:PlonePAS</dependency>
     <dependency>profile-plone.app.discussion:default</dependency>
+    <dependency>profile-plone.app.intid:default</dependency>
     <dependency>profile-plone.app.registry:default</dependency>
+    <dependency>profile-plone.app.relationfield:default</dependency>
     <dependency>profile-plone.app.theming:default</dependency>
     <dependency>profile-plone.app.users:default</dependency>
     <dependency>profile-plone.outputfilters:default</dependency>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/0597c28e2078fe50495127d24913faf45229e8c1

add plone.app.linkintegrity as dependency

Files changed:
M Products/CMFPlone/profiles/dependencies/metadata.xml

diff --git a/Products/CMFPlone/profiles/dependencies/metadata.xml b/Products/CMFPlone/profiles/dependencies/metadata.xml
index 928461b..beda541 100644
--- a/Products/CMFPlone/profiles/dependencies/metadata.xml
+++ b/Products/CMFPlone/profiles/dependencies/metadata.xml
@@ -8,9 +8,8 @@
     <dependency>profile-Products.CMFEditions:CMFEditions</dependency>
     <dependency>profile-Products.PlonePAS:PlonePAS</dependency>
     <dependency>profile-plone.app.discussion:default</dependency>
-    <dependency>profile-plone.app.intid:default</dependency>
+    <dependency>profile-plone.app.linkintegrity:default</dependency>
     <dependency>profile-plone.app.registry:default</dependency>
-    <dependency>profile-plone.app.relationfield:default</dependency>
     <dependency>profile-plone.app.theming:default</dependency>
     <dependency>profile-plone.app.users:default</dependency>
     <dependency>profile-plone.outputfilters:default</dependency>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/179598b8b69655b041c7b3ce379aa5704c96baf2

Registering the obj for intid's changes self._p_jar and ob.cb_isMoveable() in
OFS.CopySupport to 1 which chenges the raised Error in
testRenameOtherMemberContentFails from CopyError to
Unauthorized. I don't really know why this is the case...

Files changed:
M Products/CMFPlone/tests/testCutPasteSecurity.py

diff --git a/Products/CMFPlone/tests/testCutPasteSecurity.py b/Products/CMFPlone/tests/testCutPasteSecurity.py
index baf1543..d562606 100644
--- a/Products/CMFPlone/tests/testCutPasteSecurity.py
+++ b/Products/CMFPlone/tests/testCutPasteSecurity.py
@@ -37,7 +37,7 @@ def testRenameOtherMemberContentFails(self):
 
         self.login('user2')
         folder = self.membership.getHomeFolder('user1')
-        self.assertRaises(CopyError, folder.manage_renameObject,
+        self.assertRaises(Unauthorized, folder.manage_renameObject,
                           'testrename', 'bad')
 
     def testCopyMemberContent(self):


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:35+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/6cde92af58183512e84fe04984d82097e838b339

re-editing new items is no longer needed for p.a.linkintegrity to work

Files changed:
M Products/CMFPlone/tests/robot/test_linkintegrity.robot

diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
index 9442898..275a806 100644
--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -28,7 +28,6 @@ Scenario: When page is linked show warning
     a page to link to
     and a page to edit
     and a link in rich text
-    and re-edit the object
     should show warning when deleting page
 
 
@@ -37,7 +36,6 @@ Scenario: After you fix linked page no longer show warning
   a page to link to
     and a page to edit
     and a link in rich text
-    and re-edit the object
   should show warning when deleting page
     remove link to page
   should not show warning when deleting page
@@ -79,12 +77,6 @@ should not show warning when deleting page
   Click Link  css=#plone-contentmenu-actions-delete
   Page should not contain element  css=.breach-container .breach-item
 
-# XXX need to remove this once creation event handling is fixed
-re-edit the object
-  Go To  ${PLONE_URL}/bar
-  Click Link  css=#contentview-edit a
-  Click Button  css=#form-buttons-save
-
 
 a link in rich text
   Select Frame  css=.mce-edit-area iframe


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:35+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/ac0094644700e9ce2a4ed20567f5cd0c5b6ac231

add tests for linkintegrity in folder_contents

Files changed:
M Products/CMFPlone/tests/robot/test_linkintegrity.robot

diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
index 275a806..08aa946 100644
--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -23,22 +23,31 @@ Test Teardown  Run keywords  Report test status  Close all browsers
 
 *** Test Cases ***************************************************************
 
-Scenario: When page is linked show warning
-  Given a logged-in site administrator
-    a page to link to
-    and a page to edit
-    and a link in rich text
-    should show warning when deleting page
-
-
-Scenario: After you fix linked page no longer show warning
+# Scenario: When page is linked show warning
+#   Given a logged-in site administrator
+#     a page to link to
+#     and a page to edit
+#     and a link in rich text
+#     should show warning when deleting page
+
+
+# Scenario: After you fix linked page no longer show warning
+#   Given a logged-in site administrator
+#   a page to link to
+#     and a page to edit
+#     and a link in rich text
+#   should show warning when deleting page
+#     remove link to page
+#   should not show warning when deleting page
+
+Scenario: Show warning when deleting linked item from folder_contents
   Given a logged-in site administrator
   a page to link to
     and a page to edit
     and a link in rich text
-  should show warning when deleting page
+  should show warning when deleting page from folder_contents
     remove link to page
-  should not show warning when deleting page
+  should not show warning when deleting page from folder_contents
 
 
 *** Keywords *****************************************************************
@@ -71,6 +80,31 @@ should show warning when deleting page
   Page should contain element  css=.breach-container .breach-item
 
 
+should show warning when deleting page from folder_contents
+  Go To  ${PLONE_URL}/folder_contents
+  Click Element  css=tr[data-id="foo"] input
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+  Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled
+  Click Link  Delete
+  Wait until page contains element  css=.popover-content .btn-danger
+  Page should contain element  css=.breach-container .breach-item
+  Click Button  No
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+
+
+should not show warning when deleting page from folder_contents
+  Go To  ${PLONE_URL}/folder_contents
+  Click Element  css=tr[data-id="foo"] input
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+  Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled
+  Click Link  Delete
+  Wait until page contains element  css=.popover-content .btn-danger
+  Page should not contain element  css=.breach-container .breach-item
+  Click Button  Yes
+  Wait until page contains  Successfully delete items
+  Wait until keyword succeeds  30  1  Page should not contain Element  css=tr[data-id="foo"] input
+
+
 should not show warning when deleting page
   Go To  ${PLONE_URL}/foo
   Click Link  css=#plone-contentmenu-actions a
@@ -99,4 +133,4 @@ remove link to page
   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
   UnSelect Frame
   Click Button  css=div[aria-label="Remove link(s)"] button
-  Click Button  css=#form-buttons-save
\ No newline at end of file
+  Click Button  css=#form-buttons-save


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T09:28:35+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/50f9f29869025d592a603e5f1dbb1e2807903a81

uncomment tests

Files changed:
M Products/CMFPlone/tests/robot/test_linkintegrity.robot

diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
index 08aa946..8c39af9 100644
--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -23,22 +23,23 @@ Test Teardown  Run keywords  Report test status  Close all browsers
 
 *** Test Cases ***************************************************************
 
-# Scenario: When page is linked show warning
-#   Given a logged-in site administrator
-#     a page to link to
-#     and a page to edit
-#     and a link in rich text
-#     should show warning when deleting page
-
-
-# Scenario: After you fix linked page no longer show warning
-#   Given a logged-in site administrator
-#   a page to link to
-#     and a page to edit
-#     and a link in rich text
-#   should show warning when deleting page
-#     remove link to page
-#   should not show warning when deleting page
+Scenario: When page is linked show warning
+  Given a logged-in site administrator
+    a page to link to
+    and a page to edit
+    and a link in rich text
+    should show warning when deleting page
+
+
+Scenario: After you fix linked page no longer show warning
+  Given a logged-in site administrator
+  a page to link to
+    and a page to edit
+    and a link in rich text
+  should show warning when deleting page
+    remove link to page
+  should not show warning when deleting page
+
 
 Scenario: Show warning when deleting linked item from folder_contents
   Given a logged-in site administrator


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T18:53:27+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/70d03f598efb399f44bd90ce8aadf0652941bbfa

fix timing-issue in robot-test

Files changed:
M Products/CMFPlone/tests/robot/test_linkintegrity.robot

diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
index 8c39af9..c5b6f81 100644
--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -83,6 +83,7 @@ should show warning when deleting page
 
 should show warning when deleting page from folder_contents
   Go To  ${PLONE_URL}/folder_contents
+  Wait until keyword succeeds  30  1  Page should contain element  css=tr[data-id="foo"] input
   Click Element  css=tr[data-id="foo"] input
   Checkbox Should Be Selected  css=tr[data-id="foo"] input
   Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-24T13:40:41-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/a41980e187ba26d62262896ecff8f3ac77a0e9c3

Merge pull request #834 from plone/linkintegrity

Linkintegrity

Files changed:
A Products/CMFPlone/tests/robot/test_linkintegrity.robot
M CHANGES.rst
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
M Products/CMFPlone/profiles/dependencies/metadata.xml
M Products/CMFPlone/tests/robot/test_tinymce.robot
M Products/CMFPlone/tests/testCutPasteSecurity.py
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f9e8477..7b972df 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,10 @@ Changelog
 5.0b4 (2015-08-23)
 ------------------
 
+- remove Products.CMFPlone.utils.isLinked function. Switch to using
+  plone.app.linkintegrity's variant
+  [vangheem]
+
 - fix #350: "plone.app.content circular dependency on Products.CMFPlone" - this
   fixes the imports only, not on zcml/genericsetup level.
   [jensens]
diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py
index eeec833..e346010 100644
--- a/Products/CMFPlone/PloneTool.py
+++ b/Products/CMFPlone/PloneTool.py
@@ -33,6 +33,7 @@
 from Products.CMFPlone.interfaces import ISearchSchema
 from Products.CMFPlone.interfaces import ISecuritySchema
 from Products.CMFPlone.interfaces import ISiteSchema
+from Products.CMFPlone.log import log_deprecated
 from Products.CMFPlone.PloneBaseTool import PloneBaseTool
 from Products.CMFPlone.PloneFolder import ReplaceableWrapper
 from Products.CMFPlone.utils import base_hasattr
@@ -1139,6 +1140,8 @@ def getMethodAliases(self, typeInfo):
     # manage_delObjects calls should handle permission checks for us.
     @security.public
     def deleteObjectsByPaths(self, paths, handle_errors=True, REQUEST=None):
+        log_deprecated("deleteObjectsByPaths is deprecated, you should use. "
+                       "plone.api.content.delete. This method no longer does link integrity checks")  # noqa
         failure = {}
         success = []
         # use the portal for traversal in case we have relative paths
@@ -1155,8 +1158,6 @@ def deleteObjectsByPaths(self, paths, handle_errors=True, REQUEST=None):
                 success.append('%s (%s)' % (obj.getId(), path))
             except ConflictError:
                 raise
-            except LinkIntegrityNotificationException:
-                raise
             except Exception, e:
                 if handle_errors:
                     sp.rollback()
@@ -1173,6 +1174,7 @@ def transitionObjectsByPaths(self, workflow_action, paths, comment='',
                                  expiration_date=None, effective_date=None,
                                  include_children=False, handle_errors=True,
                                  REQUEST=None):
+        log_deprecated("transitionObjectsByPaths is deprecated")
         failure = {}
         # use the portal for traversal in case we have relative paths
         portal = getToolByName(self, 'portal_url').getPortalObject()
diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
index b5a2b33..5c5ee4e 100644
--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFPlone.interfaces import IEditingSchema
 from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING
-from plone.app.linkintegrity.interfaces import ILinkIntegrityInfo
+from plone.app.linkintegrity.utils import linkintegrity_enabled
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
 from plone.registry.interfaces import IRegistry
@@ -109,9 +109,7 @@ def test_enable_link_integrity_checks_active(self):
         self.browser.getControl("Enable link integrity checks")\
             .selected = True
         self.browser.getControl('Save').click()
-
-        self.assertTrue(
-            ILinkIntegrityInfo(self.request).integrityCheckingEnabled())
+        self.assertTrue(linkintegrity_enabled())
 
     def test_lock_on_ttw_edit(self):
         self.browser.open(
diff --git a/Products/CMFPlone/profiles/dependencies/metadata.xml b/Products/CMFPlone/profiles/dependencies/metadata.xml
index 8d84cb3..beda541 100644
--- a/Products/CMFPlone/profiles/dependencies/metadata.xml
+++ b/Products/CMFPlone/profiles/dependencies/metadata.xml
@@ -8,6 +8,7 @@
     <dependency>profile-Products.CMFEditions:CMFEditions</dependency>
     <dependency>profile-Products.PlonePAS:PlonePAS</dependency>
     <dependency>profile-plone.app.discussion:default</dependency>
+    <dependency>profile-plone.app.linkintegrity:default</dependency>
     <dependency>profile-plone.app.registry:default</dependency>
     <dependency>profile-plone.app.theming:default</dependency>
     <dependency>profile-plone.app.users:default</dependency>
diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
new file mode 100644
index 0000000..c5b6f81
--- /dev/null
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -0,0 +1,138 @@
+# ============================================================================
+# Tests for the Plone Link Integrity Support
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/Products.CMFPlone/Products/CMFPlone/ Products.CMFPlone.testing.PRODUCTS_CMFPLONE_ROBOT_TESTING
+#
+# $ bin/robot src/Products.CMFPlone/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
+
+Resource  plone/app/robotframework/keywords.robot
+Resource  plone/app/robotframework/saucelabs.robot
+
+Library  Remote  ${PLONE_URL}/RobotRemote
+
+Resource  keywords.robot
+
+Test Setup  Open SauceLabs test browser
+Test Teardown  Run keywords  Report test status  Close all browsers
+
+
+*** Test Cases ***************************************************************
+
+Scenario: When page is linked show warning
+  Given a logged-in site administrator
+    a page to link to
+    and a page to edit
+    and a link in rich text
+    should show warning when deleting page
+
+
+Scenario: After you fix linked page no longer show warning
+  Given a logged-in site administrator
+  a page to link to
+    and a page to edit
+    and a link in rich text
+  should show warning when deleting page
+    remove link to page
+  should not show warning when deleting page
+
+
+Scenario: Show warning when deleting linked item from folder_contents
+  Given a logged-in site administrator
+  a page to link to
+    and a page to edit
+    and a link in rich text
+  should show warning when deleting page from folder_contents
+    remove link to page
+  should not show warning when deleting page from folder_contents
+
+
+*** Keywords *****************************************************************
+
+# --- GIVEN ------------------------------------------------------------------
+
+a logged-in site administrator
+  Enable autologin as  Site Administrator
+
+
+a page to edit
+  Go To  ${PLONE_URL}
+  Click Link  css=#plone-contentmenu-factories a
+  Click Link  css=.plonetoolbar-contenttype .contenttype-document
+  Input Text  css=#formfield-form-widgets-IDublinCore-title input  Bar
+
+
+a page to link to
+  Go To  ${PLONE_URL}
+  Click Link  css=#plone-contentmenu-factories a
+  Click Link  css=.plonetoolbar-contenttype .contenttype-document
+  Input Text  css=#formfield-form-widgets-IDublinCore-title input  Foo
+  Click Button  css=#form-buttons-save
+
+
+should show warning when deleting page
+  Go To  ${PLONE_URL}/foo
+  Click Link  css=#plone-contentmenu-actions a
+  Click Link  css=#plone-contentmenu-actions-delete
+  Page should contain element  css=.breach-container .breach-item
+
+
+should show warning when deleting page from folder_contents
+  Go To  ${PLONE_URL}/folder_contents
+  Wait until keyword succeeds  30  1  Page should contain element  css=tr[data-id="foo"] input
+  Click Element  css=tr[data-id="foo"] input
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+  Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled
+  Click Link  Delete
+  Wait until page contains element  css=.popover-content .btn-danger
+  Page should contain element  css=.breach-container .breach-item
+  Click Button  No
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+
+
+should not show warning when deleting page from folder_contents
+  Go To  ${PLONE_URL}/folder_contents
+  Click Element  css=tr[data-id="foo"] input
+  Checkbox Should Be Selected  css=tr[data-id="foo"] input
+  Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled
+  Click Link  Delete
+  Wait until page contains element  css=.popover-content .btn-danger
+  Page should not contain element  css=.breach-container .breach-item
+  Click Button  Yes
+  Wait until page contains  Successfully delete items
+  Wait until keyword succeeds  30  1  Page should not contain Element  css=tr[data-id="foo"] input
+
+
+should not show warning when deleting page
+  Go To  ${PLONE_URL}/foo
+  Click Link  css=#plone-contentmenu-actions a
+  Click Link  css=#plone-contentmenu-actions-delete
+  Page should not contain element  css=.breach-container .breach-item
+
+
+a link in rich text
+  Select Frame  css=.mce-edit-area iframe
+  Input text  css=.mce-content-body  foo
+  Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+  UnSelect Frame
+  Click Button  css=div[aria-label="Insert/edit link"] button
+  Click Element  css=.select2-input.select2-default
+  Input text  css=.select2-dropdown-open .select2-input  foo
+  Click Link  css=.pattern-relateditems-result-select.selectable
+  Click Button  css=.plone-modal-footer .plone-btn-primary
+  Click Button  css=#form-buttons-save
+
+
+remove link to page
+  Go To  ${PLONE_URL}/bar
+  Click Link  css=#contentview-edit a
+  Select Frame  css=.mce-edit-area iframe
+  Input text  css=.mce-content-body  foo
+  Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+  UnSelect Frame
+  Click Button  css=div[aria-label="Remove link(s)"] button
+  Click Button  css=#form-buttons-save
diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot
index 5faf9fb..dc4c702 100644
--- a/Products/CMFPlone/tests/robot/test_tinymce.robot
+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot
@@ -23,15 +23,15 @@ Scenario: A page is opened to edit
     Given a logged-in site administrator
       and an uploaded image
       and an edited page
-    Click Button  css=#mceu_15 button
-    Click Element  css=.select2-input.select2-default
-    Click Link  css=.pattern-relateditems-result-select.selectable
-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt
-    Click Button  css=.plone-modal-footer .plone-btn-primary
+      and text inserted into wysiwyg
+      and insert link
+      and insert image
+    
     Click Button  css=#form-buttons-save
     Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]
     Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]
+    Element Should Be Visible  css=#parent-fieldname-text a
+
 
 *** Keywords *****************************************************************
 
@@ -42,4 +42,30 @@ an edited page
     Go to  ${PLONE_URL}/${PAGE_ID}/edit
 
 an uploaded image
-    Create content  type=Image  title=an-mage
+    Create content  type=Image  title=an-image
+
+text inserted into wysiwyg
+    Select Frame  css=.mce-edit-area iframe
+    Input text  css=.mce-content-body  foobar
+    UnSelect Frame
+
+insert link
+    Select Frame  css=.mce-edit-area iframe
+    Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);
+    UnSelect Frame
+    Click Button  css=div[aria-label="Insert/edit link"] button
+    Click Element  css=.select2-input.select2-default
+    Click Link  css=.pattern-relateditems-result-select.selectable
+    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
+    Click Button  css=.plone-modal-footer .plone-btn-primary
+    Select Frame  css=.mce-edit-area iframe
+    Execute Javascript  window.getSelection().removeAllRanges()
+    UnSelect Frame
+
+insert image
+    Click Button  css=div[aria-label="Insert/edit image"] button
+    Click Element  css=.select2-input.select2-default
+    Click Link  css=.pattern-relateditems-result-select.selectable
+    Input Text  css=.plone-modal-body [name="title"]  SomeTitle
+    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt
+    Click Button  css=.plone-modal-footer .plone-btn-primary
diff --git a/Products/CMFPlone/tests/testCutPasteSecurity.py b/Products/CMFPlone/tests/testCutPasteSecurity.py
index baf1543..d562606 100644
--- a/Products/CMFPlone/tests/testCutPasteSecurity.py
+++ b/Products/CMFPlone/tests/testCutPasteSecurity.py
@@ -37,7 +37,7 @@ def testRenameOtherMemberContentFails(self):
 
         self.login('user2')
         folder = self.membership.getHomeFolder('user1')
-        self.assertRaises(CopyError, folder.manage_renameObject,
+        self.assertRaises(Unauthorized, folder.manage_renameObject,
                           'testrename', 'bad')
 
     def testCopyMemberContent(self):
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index a9cbcbf..3b09b8e 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -592,46 +592,10 @@ def _getSecurity(klass, create=True):
 
 
 def isLinked(obj):
-    """ check if the given content object is linked from another one
-
-        WARNING: this function can be time consuming !!
-
-            It deletes the object in a subtransaction that is rollbacked.
-            In other words, the object is kept safe.
-
-            Nevertheless, this implies that it also deletes recursively
-            all object's subobjects and references, which can be very
-            expensive.
-    """
-    # first check to see if link integrity handling has been enabled at all
-    # and if so, if the removal of the object was already confirmed, i.e.
-    # while replaying the request;  unfortunately this makes it necessary
-    # to import from plone.app.linkintegrity here, hence the try block...
-    try:
-        from plone.app.linkintegrity.interfaces import ILinkIntegrityInfo
-        info = ILinkIntegrityInfo(obj.REQUEST)
-    except (ImportError, TypeError):
-        # if p.a.li isn't installed the following check can be cut short...
-        return False
-    if not info.integrityCheckingEnabled():
-        return False
-    if info.isConfirmedItem(obj):
-        return True
-    # otherwise, when not replaying the request already, it is tried to
-    # delete the object, making it possible to find out if it was referenced,
-    # i.e. in case a link integrity exception was raised
-    linked = False
-    parent = obj.aq_inner.aq_parent
-    try:
-        savepoint = transaction.savepoint()
-        parent.manage_delObjects(obj.getId())
-    except OFS.ObjectManager.BeforeDeleteException:
-        linked = True
-    except:  # ignore other exceptions, not useful to us at this point
-        pass
-    finally:
-        savepoint.rollback()
-    return linked
+    """Check if the given content object is linked from another one."""
+    log_deprecated("utils.isLinked is deprecated, you should use plone.app.linkintegrity.utils.hasIncomingLinks")  # noqa
+    from plone.app.linkintegrity.utils import hasIncomingLinks
+    return hasIncomingLinks(obj)
 
 
 def set_own_login_name(member, loginname):


