Repository: mockup
Branch: refs/heads/master
Date: 2015-04-11T00:47:25+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/8d1b3d6296b91281724031a619f1fbdd720ec0bb

be able to dump i18n from js

Files changed:
M Makefile
M mockup/Gruntfile.js
M mockup/patterns/resourceregistry/js/registry.js

diff --git a/Makefile b/Makefile
index e33cddb..ef15426 100644
--- a/Makefile
+++ b/Makefile
@@ -118,4 +118,7 @@ publish-docs:
 	echo -e "Publishing 'docs' bundle!\n"; cd mockup/docs; git add -fA .; git commit -m "Publishing docs"; git push -f git@github.com:plone/mockup.git gh-pages; cd ../..;
 	# echo -e "Publishing 'docs' bundle!\n"; cd mockup/docs; git add -fA .; git commit -m "Travis build $(TRAVIS_BUILD_NUMBER) pushed to 'docs'."; git push -fq https://$(GH_TOKEN)@github.com/plone/mockup.git gh-pages > /dev/null; cd ..;
 
+i18n-dump:
+	NODE_PATH=$(NODE_PATH) $(GRUNT) i18n-dump --gruntfile=mockup/Gruntfile.js 
+
 .PHONY: bundle bundle-widgets bundle-structure bundle-plone docs bootstrap bootstrap-nix jshint test test-once test-dev test-ci publish-docs clean clean-deep
diff --git a/mockup/Gruntfile.js b/mockup/Gruntfile.js
index ea0f786..abd51dc 100644
--- a/mockup/Gruntfile.js
+++ b/mockup/Gruntfile.js
@@ -3,6 +3,8 @@
 module.exports = function(grunt) {
   'use strict';
 
+  var fs = require('fs');
+
   var MockupGrunt = require('./bower_components/mockup-core/js/grunt'),
       requirejsOptions = require('./js/config'),
       mockup = new MockupGrunt(requirejsOptions),
@@ -85,4 +87,62 @@ module.exports = function(grunt) {
     }
   });
 
+  grunt.registerTask('i18n-dump', 'Dump i18n file for widgets', function(){
+    var output = '# Gettext Message File for Plone mockup\n' +
+                 'msgid ""\n' +
+                 'msgstr ""\n' +
+                 '"Project-Id-Version: mockup\\n"\n' +
+                 '"Last-Translator: Plone i18n <plone-i18n@lists.sourceforge.net>\\n"\n' +
+                 '"Language-Team: Plone i18n <plone-i18n@lists.sourceforge.net>\\n"\n' +
+                 '"MIME-Version: 1.0\\n"\n' +
+                 '"Content-Type: text/plain; charset=utf-8\\n"\n' +
+                 '"Content-Transfer-Encoding: 8bit\\n"\n' +
+                 '"Plural-Forms: nplurals=1; plural=0;\\n"\n' +
+                 '"Language-Code: en\\n"\n' +
+                 '"Language-Name: English\\n"\n' +
+                 '"Preferred-Encodings: utf-8\\n"\n' +
+                 '"Domain: widgets\\n"\n\n';
+
+    var okayFiles = ['xml', 'js', 'htm', 'html'];
+    var found = [];
+    var checkFile = function(filepath){
+      var split = filepath.split('.');
+      if(okayFiles.indexOf(split[split.length - 1]) === -1){
+        return;
+      }
+      console.log('reading file: ' + filepath);
+      var file = fs.readFileSync(filepath, {encoding: 'utf-8'});
+      var re = /_t\(('|")([\s\d\wâ€¦\.\,\!\+\\\/]+)('|")(,\W{.*})?\)/g;
+      var m;
+      while (m = re.exec(file)) {
+        if (m) {
+          re.lastIndex = Math.max(m.index+1, re.lastIndex + 1);
+          if(found.indexOf(m[2]) === -1){
+            output += '#: ' + filepath + '\n' +
+                      'msgid "' + m[2] + '"\n' +
+                      'msgstr ""\n\n';
+            found.push(m[2]);
+          }
+        }
+      }
+    };
+    var checkDir = function(path){
+      console.log('read folder: ' + path);
+      var files = fs.readdirSync(path);
+      files.forEach(function(filename){
+        if(filename === 'bower_components' || filename === 'node_modules'){
+          return;
+        }
+        var stats = fs.statSync(path + filename);
+        if(stats.isDirectory()){
+          checkDir(path + filename + '/');
+        }else{
+          checkFile(path + filename);
+        }
+      });
+    };
+    checkDir('./');
+    fs.writeFileSync('../widgets.pot', output);
+  });
+
 };
diff --git a/mockup/patterns/resourceregistry/js/registry.js b/mockup/patterns/resourceregistry/js/registry.js
index 3c2799d..8b025b4 100644
--- a/mockup/patterns/resourceregistry/js/registry.js
+++ b/mockup/patterns/resourceregistry/js/registry.js
@@ -183,7 +183,7 @@ define([
     },
     deleteClicked: function(e){
       e.preventDefault();
-      if(confirm(_t('Are you sure you want to delete the ' + this.options.name + ' resource?'))){
+      if(confirm(_t('Are you sure you want to delete the ${name} resource?', {name: this.options.name}))){
         delete this.options.registryView.options.data.resources[this.options.name];
         this.options.registryView.dirty = true;
         this.options.registryView.render();
@@ -262,7 +262,7 @@ define([
     },
     deleteClicked: function(e){
       e.preventDefault();
-      if(confirm(_t('Are you sure you want to delete the ' + this.options.name + ' bundle?'))){
+      if(confirm(_t('Are you sure you want to delete the ${name} bundle?', {name: this.options.name}))){
         delete this.options.registryView.options.data.bundles[this.options.name];
         this.options.registryView.dirty = true;
         this.options.registryView.render();


