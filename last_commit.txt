Repository: plone.app.testing
Branch: refs/heads/master
Date: 2015-03-18T17:42:21+01:00
Author: Godefroid Chapelle (gotcha) <gotcha@bubblenet.be>
Commit: https://github.com/plone/plone.app.testing/commit/940996f92b3b0323e67230c706f5b930e287aeae

Document PloneWithPackageLayer

First step

Files changed:
M docs/source/README.rst

diff --git a/docs/source/README.rst b/docs/source/README.rst
index 7b68ca9..a66522b 100644
--- a/docs/source/README.rst
+++ b/docs/source/README.rst
@@ -143,6 +143,35 @@ lifecycle or transaction management. Instead, you should use a layer
 created with either the ``IntegrationTesting`` or ``FunctionalTesting``
 classes, as outlined below.
 
+PloneWithPackageLayer class
+---------------------------
+
+Most add-ons do not need more setup than loading a ZCML file and
+running a GenericSetup profile.
+
+With this helper class, a fixture can easily be instantiated::
+
+    from plone.app.testing import PloneWithPackageLayer
+    import my.addon
+    
+    FIXTURE = PloneWithPackageLayer(
+        zcml_package=my.addon,
+        zcml_filename='configure.zcml',
+        gs_profile_id='my.addon:default'
+        name="MyAddonFixture"
+    )
+
+PloneWithPackageLayer constructor takes two other keyword arguments:
+``bases`` and ``additional_z2_products``.
+
+The ``bases`` argument takes a sequence of base layer fixtures.
+It is useful, among other reasons,  
+to pass a fixture which makes other calls to plone.app.testing API.
+The need could arise in the development process.
+
+``additional_z2_products`` argument takes a sequence of package names 
+that need to be installed as Zope2 Products and are dependencies of the tested add-on.
+
 Integration and functional testing test lifecycles
 --------------------------------------------------
 


Repository: plone.app.testing
Branch: refs/heads/master
Date: 2015-06-05T21:45:51+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.testing/commit/80c3def62a940aaee19ff6c12121d565813fdc12

Merge pull request #11 from gotcha/master

Document PloneWithPackageLayer

Files changed:
M docs/source/README.rst

diff --git a/docs/source/README.rst b/docs/source/README.rst
index 7b68ca9..a66522b 100644
--- a/docs/source/README.rst
+++ b/docs/source/README.rst
@@ -143,6 +143,35 @@ lifecycle or transaction management. Instead, you should use a layer
 created with either the ``IntegrationTesting`` or ``FunctionalTesting``
 classes, as outlined below.
 
+PloneWithPackageLayer class
+---------------------------
+
+Most add-ons do not need more setup than loading a ZCML file and
+running a GenericSetup profile.
+
+With this helper class, a fixture can easily be instantiated::
+
+    from plone.app.testing import PloneWithPackageLayer
+    import my.addon
+    
+    FIXTURE = PloneWithPackageLayer(
+        zcml_package=my.addon,
+        zcml_filename='configure.zcml',
+        gs_profile_id='my.addon:default'
+        name="MyAddonFixture"
+    )
+
+PloneWithPackageLayer constructor takes two other keyword arguments:
+``bases`` and ``additional_z2_products``.
+
+The ``bases`` argument takes a sequence of base layer fixtures.
+It is useful, among other reasons,  
+to pass a fixture which makes other calls to plone.app.testing API.
+The need could arise in the development process.
+
+``additional_z2_products`` argument takes a sequence of package names 
+that need to be installed as Zope2 Products and are dependencies of the tested add-on.
+
 Integration and functional testing test lifecycles
 --------------------------------------------------
 


