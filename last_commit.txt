Repository: plone.app.contentlisting
Branch: refs/heads/master
Date: 2015-05-05T09:38:37+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contentlisting/commit/0984957ceb1891dbca6d90b8a007eccd07c96e72

Make isVisibleInNav method read navigation displayed types settings from
  plone.app.registry instead of portal properties.

Files changed:
M CHANGES.rst
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/tests/integration.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 70683a2..e0b3dfb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,10 @@ Changelog
 1.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Make isVisibleInNav method read navigation displayed types settings from
+  plone.app.registry instead of portal properties. This fixes
+  https://github.com/plone/Products.CMFPlone/issues/454.
+  [timo]
 
 
 1.1.2 (2015-05-05)
diff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py
index fca29b4..860c8bc 100644
--- a/plone/app/contentlisting/contentlisting.py
+++ b/plone/app/contentlisting/contentlisting.py
@@ -133,10 +133,24 @@ def isVisibleInNav(self):
                 else self.exclude_from_nav
         ):
             return False
-        portal_properties = getToolByName(self.getDataOrigin(), 'portal_properties')  # noqa
-        navtree_properties = getattr(portal_properties, 'navtree_properties')
-        if self.portal_type in list(navtree_properties.metaTypesNotToList):
+
+        from plone.registry.interfaces import IRegistry
+        from zope.component import getUtility
+        registry = getUtility(IRegistry)
+        from Products.CMFPlone.interfaces import INavigationSchema
+        navigation_settings = registry.forInterface(
+            INavigationSchema,
+            prefix='plone'
+        )
+        if self.portal_type not in navigation_settings.displayed_types:
             return False
+
+        portal_properties = getToolByName(
+            self.getDataOrigin(),
+            'portal_properties'
+        )
+        navtree_properties = getattr(portal_properties, 'navtree_properties')
+
         if self.id in list(navtree_properties.idsNotToList):
             return False
         return True
diff --git a/plone/app/contentlisting/tests/integration.rst b/plone/app/contentlisting/tests/integration.rst
index 1c3a734..80ebd82 100644
--- a/plone/app/contentlisting/tests/integration.rst
+++ b/plone/app/contentlisting/tests/integration.rst
@@ -208,26 +208,35 @@ We can also turn it off again.
     >>> realfrontpage.isVisibleInNav()
     True
 
-We can also exclude anything of a particular type using metaTypesNotToList
-
-    >>> navtree_properties = getattr(getToolByName(self.portal, 'portal_properties'), 'navtree_properties')
-    >>> navtree_properties.metaTypesNotToList = [frontpage.portal_type]
+We can also exclude anything of a particular type using the displayed type setting::
+
+    >>> from plone.registry.interfaces import IRegistry
+    >>> from zope.component import getUtility
+    >>> registry = getUtility(IRegistry)
+    >>> from Products.CMFPlone.interfaces import INavigationSchema
+    >>> navigation_settings = registry.forInterface(
+    ...     INavigationSchema,
+    ...     prefix='plone'
+    ... )
+    >>> navigation_settings.displayed_types = (frontpage.portal_type, news.portal_type)
     >>> frontpage.isVisibleInNav()
-    False
+    True
     >>> realfrontpage.isVisibleInNav()
-    False
+    True
     >>> news.isVisibleInNav()
     True
-    >>> navtree_properties.metaTypesNotToList = []
+    >>> navigation_settings.displayed_types = ()
     >>> frontpage.isVisibleInNav()
-    True
+    False
     >>> realfrontpage.isVisibleInNav()
-    True
+    False
     >>> news.isVisibleInNav()
-    True
+    False
 
 Finally, particular ids can be excluded from listings
 
+    >>> navigation_settings.displayed_types = (frontpage.portal_type, news.portal_type)
+    >>> navtree_properties = getattr(getToolByName(self.portal, 'portal_properties'), 'navtree_properties')
     >>> navtree_properties.idsNotToList = [news.id]
     >>> frontpage.isVisibleInNav()
     True


Repository: plone.app.contentlisting
Branch: refs/heads/master
Date: 2015-05-05T09:42:44+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contentlisting/commit/54b341668ee62a54dd362cbc0354e4a98ab15f9a

Move imports to the top.

Files changed:
M plone/app/contentlisting/contentlisting.py

diff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py
index 860c8bc..fbcf410 100644
--- a/plone/app/contentlisting/contentlisting.py
+++ b/plone/app/contentlisting/contentlisting.py
@@ -1,9 +1,12 @@
 from .interfaces import IContentListing
 from .interfaces import IContentListingObject
 from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import INavigationSchema
 from plone.i18n.normalizer.interfaces import IIDNormalizer
+from plone.registry.interfaces import IRegistry
 from zope import interface
 from zope.component import queryUtility
+from zope.component import getUtility
 
 
 class ContentListing(object):
@@ -134,10 +137,7 @@ def isVisibleInNav(self):
         ):
             return False
 
-        from plone.registry.interfaces import IRegistry
-        from zope.component import getUtility
         registry = getUtility(IRegistry)
-        from Products.CMFPlone.interfaces import INavigationSchema
         navigation_settings = registry.forInterface(
             INavigationSchema,
             prefix='plone'


Repository: plone.app.contentlisting
Branch: refs/heads/master
Date: 2015-05-05T10:56:48+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contentlisting/commit/0ca0327040471f8ae05b8148f87ff4938e7dd345

Merge pull request #7 from plone/fix-454

Make isVisibleInNav method read navigation displayed types settings

Files changed:
M CHANGES.rst
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/tests/integration.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 70683a2..e0b3dfb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,10 @@ Changelog
 1.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Make isVisibleInNav method read navigation displayed types settings from
+  plone.app.registry instead of portal properties. This fixes
+  https://github.com/plone/Products.CMFPlone/issues/454.
+  [timo]
 
 
 1.1.2 (2015-05-05)
diff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py
index fca29b4..fbcf410 100644
--- a/plone/app/contentlisting/contentlisting.py
+++ b/plone/app/contentlisting/contentlisting.py
@@ -1,9 +1,12 @@
 from .interfaces import IContentListing
 from .interfaces import IContentListingObject
 from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import INavigationSchema
 from plone.i18n.normalizer.interfaces import IIDNormalizer
+from plone.registry.interfaces import IRegistry
 from zope import interface
 from zope.component import queryUtility
+from zope.component import getUtility
 
 
 class ContentListing(object):
@@ -133,10 +136,21 @@ def isVisibleInNav(self):
                 else self.exclude_from_nav
         ):
             return False
-        portal_properties = getToolByName(self.getDataOrigin(), 'portal_properties')  # noqa
-        navtree_properties = getattr(portal_properties, 'navtree_properties')
-        if self.portal_type in list(navtree_properties.metaTypesNotToList):
+
+        registry = getUtility(IRegistry)
+        navigation_settings = registry.forInterface(
+            INavigationSchema,
+            prefix='plone'
+        )
+        if self.portal_type not in navigation_settings.displayed_types:
             return False
+
+        portal_properties = getToolByName(
+            self.getDataOrigin(),
+            'portal_properties'
+        )
+        navtree_properties = getattr(portal_properties, 'navtree_properties')
+
         if self.id in list(navtree_properties.idsNotToList):
             return False
         return True
diff --git a/plone/app/contentlisting/tests/integration.rst b/plone/app/contentlisting/tests/integration.rst
index 1c3a734..80ebd82 100644
--- a/plone/app/contentlisting/tests/integration.rst
+++ b/plone/app/contentlisting/tests/integration.rst
@@ -208,26 +208,35 @@ We can also turn it off again.
     >>> realfrontpage.isVisibleInNav()
     True
 
-We can also exclude anything of a particular type using metaTypesNotToList
-
-    >>> navtree_properties = getattr(getToolByName(self.portal, 'portal_properties'), 'navtree_properties')
-    >>> navtree_properties.metaTypesNotToList = [frontpage.portal_type]
+We can also exclude anything of a particular type using the displayed type setting::
+
+    >>> from plone.registry.interfaces import IRegistry
+    >>> from zope.component import getUtility
+    >>> registry = getUtility(IRegistry)
+    >>> from Products.CMFPlone.interfaces import INavigationSchema
+    >>> navigation_settings = registry.forInterface(
+    ...     INavigationSchema,
+    ...     prefix='plone'
+    ... )
+    >>> navigation_settings.displayed_types = (frontpage.portal_type, news.portal_type)
     >>> frontpage.isVisibleInNav()
-    False
+    True
     >>> realfrontpage.isVisibleInNav()
-    False
+    True
     >>> news.isVisibleInNav()
     True
-    >>> navtree_properties.metaTypesNotToList = []
+    >>> navigation_settings.displayed_types = ()
     >>> frontpage.isVisibleInNav()
-    True
+    False
     >>> realfrontpage.isVisibleInNav()
-    True
+    False
     >>> news.isVisibleInNav()
-    True
+    False
 
 Finally, particular ids can be excluded from listings
 
+    >>> navigation_settings.displayed_types = (frontpage.portal_type, news.portal_type)
+    >>> navtree_properties = getattr(getToolByName(self.portal, 'portal_properties'), 'navtree_properties')
     >>> navtree_properties.idsNotToList = [news.id]
     >>> frontpage.isVisibleInNav()
     True


