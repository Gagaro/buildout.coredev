Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-18T15:44:13+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/42fd013d701c65967f5ffbef5dbffc3f63368166

avoid mutable default arguments

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index b9f4660..8150970 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -201,7 +201,8 @@ def update(self):
         self.selected_tabs = self.selectedTabs(portal_tabs=self.portal_tabs)
         self.selected_portal_tab = self.selected_tabs['portal']
 
-    def selectedTabs(self, default_tab='index_html', portal_tabs=()):
+    def selectedTabs(self, default_tab='index_html', portal_tabs=None):
+        portal_tabs = portal_tabs or []
         plone_url = getToolByName(self.context, 'portal_url')()
         plone_url_len = len(plone_url)
         request = self.request


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-18T15:45:01+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/20d9f97ca3f47bfe8d16a48346e6ce6e1c88863c

compare elements in path instead if strings. Fix https://github.com/plone/Products.CMFPlone/issues/830

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 8150970..d705ac1 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -210,6 +210,7 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=None):
 
         url = request['URL']
         path = url[plone_url_len:]
+        path_list = path.split('/')
 
         for action in portal_tabs:
             if not action['url'].startswith(plone_url):
@@ -220,10 +221,11 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=None):
             action_path = action['url'][plone_url_len:]
             if not action_path.startswith('/'):
                 action_path = '/' + action_path
-            if path.startswith(action_path + '/') or path == action_path:
+            action_path_list = action_path.split('/')
+            if action_path_list[1] == path_list[1]:
                 # Make a list of the action ids, along with the path length
                 # for choosing the longest (most relevant) path.
-                valid_actions.append((len(action_path), action['id']))
+                valid_actions.append((len(action_path_list), action['id']))
 
         # Sort by path length, the longest matching path wins
         valid_actions.sort()


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-18T19:45:40+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/09e092f30259a703c92b2d5e1a826dc572ac10c4

handle case where there is no path we're looking at

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index d705ac1..c0e3e19 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -211,6 +211,8 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=None):
         url = request['URL']
         path = url[plone_url_len:]
         path_list = path.split('/')
+        if len(path_list) <= 1:
+            return {'portal': default_tab}
 
         for action in portal_tabs:
             if not action['url'].startswith(plone_url):


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-18T21:47:02+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/37ab8ac36f9847c99f45bcc726cae6cad13c978c

remove obsolete code

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index c0e3e19..0c166c6 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -201,8 +201,7 @@ def update(self):
         self.selected_tabs = self.selectedTabs(portal_tabs=self.portal_tabs)
         self.selected_portal_tab = self.selected_tabs['portal']
 
-    def selectedTabs(self, default_tab='index_html', portal_tabs=None):
-        portal_tabs = portal_tabs or []
+    def selectedTabs(self, default_tab='index_html', portal_tabs=()):
         plone_url = getToolByName(self.context, 'portal_url')()
         plone_url_len = len(plone_url)
         request = self.request


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-18T23:23:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.layout/commit/887fe57fd27a5185f7980843d97b2287b648d9af

Merge pull request #56 from plone/fix_navigation_for_images

Fix navigation for images

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index b9f4660..0c166c6 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -209,6 +209,9 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=()):
 
         url = request['URL']
         path = url[plone_url_len:]
+        path_list = path.split('/')
+        if len(path_list) <= 1:
+            return {'portal': default_tab}
 
         for action in portal_tabs:
             if not action['url'].startswith(plone_url):
@@ -219,10 +222,11 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=()):
             action_path = action['url'][plone_url_len:]
             if not action_path.startswith('/'):
                 action_path = '/' + action_path
-            if path.startswith(action_path + '/') or path == action_path:
+            action_path_list = action_path.split('/')
+            if action_path_list[1] == path_list[1]:
                 # Make a list of the action ids, along with the path length
                 # for choosing the longest (most relevant) path.
-                valid_actions.append((len(action_path), action['id']))
+                valid_actions.append((len(action_path_list), action['id']))
 
         # Sort by path length, the longest matching path wins
         valid_actions.sort()


