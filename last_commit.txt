Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-08-19T23:14:26-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/616a9e5f15f5f6a1246725b38230e7daf5b8f93b

Do not fail if the 'Between' operation is called with an empty value, and instead return a list with 2 empty values.

Files changed:
M CHANGES.rst
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 49567ed..5ef593b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.3.4 (unreleased)
 ------------------
 
+- Do not fail if the 'Between' operation is called with an empty value, and
+  instead return a list with 2 empty values.
+  [frapell]
+
 - Fixed possible problem with ``custom_query`` parameter where
   theoretically a second invocation could inadvertently be using the
   value from the first invocation.
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index dd5600b..3a67ed0 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -86,9 +86,14 @@ def _isFalse(context, row):
 
 
 def _between(context, row):
+    if not row.values:
+        val = ['', '']
+    else:
+        val = row.values
+
     tmp = {row.index:
            {
-               'query': sorted(row.values),
+               'query': sorted(val),
                'range': 'minmax',
            },
            }
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 23a1436..0773261 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -244,6 +244,17 @@ def test__between_reversed_dates(self):
                     'range': 'minmax'}}
         self.assertEqual(parsed, expected)
 
+    def test__between_empty_input(self):
+        data = Row(
+            index='modified',
+            operator='_between',
+            values=''
+        )
+        parsed = queryparser._between(MockSite(), data)
+        expected = {'modified': {'query': ['', ''],
+                    'range': 'minmax'}}
+        self.assertEqual(parsed, expected)
+
     def test__equal(self):
         data = Row(
             index='modified',


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-08-19T23:30:41-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/5ca204aa36f3e670c376fed14bbd6b60ab9ddc9a

Actually convert the value to a datetime for the DateIndex query modifier.

Files changed:
M CHANGES.rst
M plone/app/querystring/indexmodifiers/query_index_modifiers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5ef593b..06b3ecd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.3.4 (unreleased)
 ------------------
 
+- Actually convert the value to a datetime for the DateIndex query modifier.
+  [frapell]
+
 - Do not fail if the 'Between' operation is called with an empty value, and
   instead return a list with 2 empty values.
   [frapell]
diff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
index 709bf98..8abf23c 100644
--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py
+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
@@ -1,4 +1,5 @@
 # -*- coding: utf8 -*-
+from datetime import datetime
 from plone.app.querystring.interfaces import IParsedQueryIndexModifier
 from zope.interface import implements
 
@@ -54,11 +55,24 @@ def __call__(self, value):
         query = value['query']
         if isinstance(query, unicode):
             query = query.encode("utf-8")
+
+        if isinstance(query, basestring):
+            try:
+                query = datetime.strptime(query, "%Y-%m-%d")
+            except:
+                query = query.encode("utf-8")
         elif isinstance(query, list):
-            query = [
-                item.encode("utf-8") if isinstance(item, unicode) else item
-                for item in query
-            ]
+            aux = list()
+            for item in query:
+                if isinstance(item, unicode):
+                    item = item.encode("utf-8")
+                try:
+                    val = datetime.strptime(item, "%Y-%m-%d")
+                except:
+                    val = item
+                aux.append(val)
+
+            query = aux
         else:
             pass
         value['query'] = query


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-08-20T01:48:36-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/7b0835a78a1857820f17d141b6911804d273c0ef

Use selection.all for portal_types, review_state and Creator operations.

Files changed:
A plone/app/querystring/profiles/upgrades/to_9/registry.xml
M CHANGES.rst
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 06b3ecd..0429385 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.3.4 (unreleased)
 ------------------
 
+- Use selection.all for portal_types, review_state and Creator operations.
+  [frapell]
+
 - Actually convert the value to a datetime for the DateIndex query modifier.
   [frapell]
 
diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index c89b840..5889d72 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -51,4 +51,12 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+    <genericsetup:registerProfile
+        name="upgrade_to_9"
+        title="Querystring Upgrade profile to v9"
+        description=""
+        directory="profiles/upgrades/to_9"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml
index d3f9949..dd8af24 100644
--- a/plone/app/querystring/profiles/default/metadata.xml
+++ b/plone/app/querystring/profiles/default/metadata.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>7</version>
+  <version>9</version>
   <dependencies>
       <dependency>profile-plone.app.registry:default</dependency>
   </dependencies>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index 0aa4744..4e4f744 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -280,6 +280,7 @@
         <value key="sortable">True</value>
         <value key="operations">
             <element>plone.app.querystring.operation.string.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
             <element>plone.app.querystring.operation.string.currentUser</element>
         </value>
        <value key="group" i18n:translate="">Metadata</value>
@@ -443,7 +444,7 @@
         <value key="enabled">True</value>
         <value key="sortable">False</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
         </value>
         <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>
        <value key="group" i18n:translate="">Metadata</value>
@@ -469,7 +470,7 @@
         <value key="enabled">True</value>
         <value key="sortable">True</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
         </value>
         <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>
        <value key="group" i18n:translate="">Metadata</value>
diff --git a/plone/app/querystring/profiles/upgrades/to_9/registry.xml b/plone/app/querystring/profiles/upgrades/to_9/registry.xml
new file mode 100644
index 0000000..702f5bc
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_9/registry.xml
@@ -0,0 +1,44 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.portal_type">
+        <value key="title" i18n:translate="">Type</value>
+        <value key="description" i18n:translate="">An item's type (e.g. Event)</value>
+        <value key="enabled">True</value>
+        <value key="sortable">False</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+        </value>
+        <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.review_state">
+        <value key="title" i18n:translate="">Review state</value>
+        <value key="description" i18n:translate="">An item's workflow state (e.g.published)</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+        </value>
+        <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.Creator">
+        <value key="title" i18n:translate="">Creator</value>
+        <value key="description" i18n:translate="">The person that created an item</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.string.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
+            <element>plone.app.querystring.operation.string.currentUser</element>
+        </value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index a261c70..68de125 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -71,4 +71,14 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="8"
+      destination="9"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Change portal_types, review_state and Creator operations to use selection.all"
+        import_profile="plone.app.querystring:upgrade_to_9"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-08-20T07:12:52+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.querystring/commit/b0a27414292e8477eb4c6a1fcb0d61a471961a1e

Merge pull request #38 from plone/collections-fixes

Collections fixes

Files changed:
A plone/app/querystring/profiles/upgrades/to_9/registry.xml
M CHANGES.rst
M plone/app/querystring/indexmodifiers/query_index_modifiers.py
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py
M plone/app/querystring/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 49567ed..0429385 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,16 @@ Changelog
 1.3.4 (unreleased)
 ------------------
 
+- Use selection.all for portal_types, review_state and Creator operations.
+  [frapell]
+
+- Actually convert the value to a datetime for the DateIndex query modifier.
+  [frapell]
+
+- Do not fail if the 'Between' operation is called with an empty value, and
+  instead return a list with 2 empty values.
+  [frapell]
+
 - Fixed possible problem with ``custom_query`` parameter where
   theoretically a second invocation could inadvertently be using the
   value from the first invocation.
diff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
index 709bf98..8abf23c 100644
--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py
+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
@@ -1,4 +1,5 @@
 # -*- coding: utf8 -*-
+from datetime import datetime
 from plone.app.querystring.interfaces import IParsedQueryIndexModifier
 from zope.interface import implements
 
@@ -54,11 +55,24 @@ def __call__(self, value):
         query = value['query']
         if isinstance(query, unicode):
             query = query.encode("utf-8")
+
+        if isinstance(query, basestring):
+            try:
+                query = datetime.strptime(query, "%Y-%m-%d")
+            except:
+                query = query.encode("utf-8")
         elif isinstance(query, list):
-            query = [
-                item.encode("utf-8") if isinstance(item, unicode) else item
-                for item in query
-            ]
+            aux = list()
+            for item in query:
+                if isinstance(item, unicode):
+                    item = item.encode("utf-8")
+                try:
+                    val = datetime.strptime(item, "%Y-%m-%d")
+                except:
+                    val = item
+                aux.append(val)
+
+            query = aux
         else:
             pass
         value['query'] = query
diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index c89b840..5889d72 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -51,4 +51,12 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+    <genericsetup:registerProfile
+        name="upgrade_to_9"
+        title="Querystring Upgrade profile to v9"
+        description=""
+        directory="profiles/upgrades/to_9"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml
index d3f9949..dd8af24 100644
--- a/plone/app/querystring/profiles/default/metadata.xml
+++ b/plone/app/querystring/profiles/default/metadata.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>7</version>
+  <version>9</version>
   <dependencies>
       <dependency>profile-plone.app.registry:default</dependency>
   </dependencies>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index 0aa4744..4e4f744 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -280,6 +280,7 @@
         <value key="sortable">True</value>
         <value key="operations">
             <element>plone.app.querystring.operation.string.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
             <element>plone.app.querystring.operation.string.currentUser</element>
         </value>
        <value key="group" i18n:translate="">Metadata</value>
@@ -443,7 +444,7 @@
         <value key="enabled">True</value>
         <value key="sortable">False</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
         </value>
         <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>
        <value key="group" i18n:translate="">Metadata</value>
@@ -469,7 +470,7 @@
         <value key="enabled">True</value>
         <value key="sortable">True</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
         </value>
         <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>
        <value key="group" i18n:translate="">Metadata</value>
diff --git a/plone/app/querystring/profiles/upgrades/to_9/registry.xml b/plone/app/querystring/profiles/upgrades/to_9/registry.xml
new file mode 100644
index 0000000..702f5bc
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_9/registry.xml
@@ -0,0 +1,44 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.portal_type">
+        <value key="title" i18n:translate="">Type</value>
+        <value key="description" i18n:translate="">An item's type (e.g. Event)</value>
+        <value key="enabled">True</value>
+        <value key="sortable">False</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+        </value>
+        <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.review_state">
+        <value key="title" i18n:translate="">Review state</value>
+        <value key="description" i18n:translate="">An item's workflow state (e.g.published)</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+        </value>
+        <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.Creator">
+        <value key="title" i18n:translate="">Creator</value>
+        <value key="description" i18n:translate="">The person that created an item</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.string.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
+            <element>plone.app.querystring.operation.string.currentUser</element>
+        </value>
+       <value key="group" i18n:translate="">Metadata</value>
+    </records>
+
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index dd5600b..3a67ed0 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -86,9 +86,14 @@ def _isFalse(context, row):
 
 
 def _between(context, row):
+    if not row.values:
+        val = ['', '']
+    else:
+        val = row.values
+
     tmp = {row.index:
            {
-               'query': sorted(row.values),
+               'query': sorted(val),
                'range': 'minmax',
            },
            }
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 23a1436..0773261 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -244,6 +244,17 @@ def test__between_reversed_dates(self):
                     'range': 'minmax'}}
         self.assertEqual(parsed, expected)
 
+    def test__between_empty_input(self):
+        data = Row(
+            index='modified',
+            operator='_between',
+            values=''
+        )
+        parsed = queryparser._between(MockSite(), data)
+        expected = {'modified': {'query': ['', ''],
+                    'range': 'minmax'}}
+        self.assertEqual(parsed, expected)
+
     def test__equal(self):
         data = Row(
             index='modified',
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index a261c70..68de125 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -71,4 +71,14 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="8"
+      destination="9"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Change portal_types, review_state and Creator operations to use selection.all"
+        import_profile="plone.app.querystring:upgrade_to_9"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>


