Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:41+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/53f405059d7b5229dd0985ceb41430a9fe7af0e7

move to custom toolbar viewlet manager template

Files changed:
A plone/app/layout/viewlets/toolbar.pt
A plone/app/layout/viewlets/toolbar.py
M plone/app/layout/viewlets/configure.zcml

diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 0ed05db..917317c 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -67,7 +67,7 @@
         name="plone.toolbar"
         provides=".interfaces.IToolbar"
         permission="zope2.View"
-        class="plone.app.viewletmanager.manager.OrderedViewletManager"
+        class=".toolbar.ToolbarViewletManager"
         />
 
     <browser:viewletManager
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
new file mode 100644
index 0000000..2d54b5c
--- /dev/null
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -0,0 +1,21 @@
+<div tal:define="portal_state view/portal_state;
+                     toolbar_class python:request.cookies.get('plone-toolbar', 'plone-toolbar-left pat-toolbar');
+                     portal_url portal_state/portal_url;">
+<section id="edit-bar" role="toolbar"
+         tal:condition="not: portal_state/anonymous">
+  <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">
+    <div class="plone-toolbar-container">
+      <a class="plone-toolbar-logo">
+        <img alt="Plone Toolbar" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />
+      </a>
+      <a class="plone-toolbar-switcher"><span>Left-Top switcher</span></a>
+      <nav role="navigation">
+        <ul>
+          <div tal:replace="structure view/base_render">
+          </div>
+        </ul>
+      </nav>
+    </div>
+  </div>
+</section>
+</div>
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
new file mode 100644
index 0000000..2a43294
--- /dev/null
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -0,0 +1,16 @@
+from plone.app.viewletmanager.manager import OrderedViewletManager
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from zope.component import getMultiAdapter
+
+
+class ToolbarViewletManager(OrderedViewletManager):
+    custom_template = ViewPageTemplateFile('toolbar.pt')
+
+    def base_render(self):
+        return super(ToolbarViewletManager, self).render()
+
+    def render(self):
+        return self.custom_template()
+
+    def portal_state(self):
+        return getMultiAdapter((self.context, self.request), name='plone_portal_state')
\ No newline at end of file


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:41+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/69bf338fafaf3d899feeea8a6fefab990aaad177

removed modal from history link, doesn't make much sense right now

Files changed:
M plone/app/layout/viewlets/document_byline.pt

diff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt
index d649368..32e19a3 100644
--- a/plone/app/layout/viewlets/document_byline.pt
+++ b/plone/app/layout/viewlets/document_byline.pt
@@ -66,7 +66,7 @@
       </tal:expired>
     </li>
     <li>
-      <a href="#" class="pat-plone-modal contentHistory" id="content-history"
+      <a href="#" class="contentHistory" id="content-history"
          tal:condition="view/show_history"
          tal:attributes="href string:${here/absolute_url}/@@historyview"
          i18n:translate="label_history">History</a>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:41+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/971a7786f30fae43038e4dd4afc2df09b0c0ac34

move personal bar into toolbar viewlet manager

Files changed:
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/toolbar.pt
M plone/app/layout/viewlets/toolbar.py
D plone/app/layout/viewlets/personal_bar.pt

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index bb3b100..9131823 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -242,8 +242,6 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=()):
 
 class PersonalBarViewlet(ViewletBase):
 
-    index = ViewPageTemplateFile('personal_bar.pt')
-
     def update(self):
         super(PersonalBarViewlet, self).update()
         context = aq_inner(self.context)
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 917317c..c1e32d3 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -201,14 +201,6 @@
         permission="zope2.View"
         />
 
-    <!-- The personal bar -->
-    <browser:viewlet
-        name="plone.personal_bar"
-        manager=".interfaces.IToolbar"
-        class=".common.PersonalBarViewlet"
-        permission="zope2.View"
-        />
-
     <!-- Content views (tabs) -->
     <browser:viewlet
         name="plone.contentviews"
diff --git a/plone/app/layout/viewlets/personal_bar.pt b/plone/app/layout/viewlets/personal_bar.pt
deleted file mode 100644
index 73fe70b..0000000
--- a/plone/app/layout/viewlets/personal_bar.pt
+++ /dev/null
@@ -1,27 +0,0 @@
-<li id="portal-personaltools" class="plone-toolbar-separator"
-    tal:condition="python:view.user_actions and not view.anonymous"
-    i18n:domain="plone">
-  <a href="#"
-     tal:attributes="href view/homelink_url">
-    <span class="icon-user" aria-hidden="true"></span>
-    <span tal:content="view/user_name">User</span>
-    <span class="plone-toolbar-caret"></span>
-  </a>
-  <ul>
-    <li class="plone-toolbar-submenu-header">
-      <span tal:content="view/user_name">Username</span>
-    </li>
-    <li class="user-action"
-        tal:repeat="action view/user_actions">
-      <a href=""
-         tal:attributes="action">
-          <tal:actionname tal:content="action/title">
-           action title
-          </tal:actionname>
-          <tal:islogout condition="python:action['id'] == 'personaltools-logout'">
-            <span class="icon-logout"></span>
-          </tal:islogout>
-      </a>
-    </li>
-  </ul>
-</li>
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index 2d54b5c..9385d31 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -1,8 +1,10 @@
-<div tal:define="portal_state view/portal_state;
-                     toolbar_class python:request.cookies.get('plone-toolbar', 'plone-toolbar-left pat-toolbar');
-                     portal_url portal_state/portal_url;">
 <section id="edit-bar" role="toolbar"
-         tal:condition="not: portal_state/anonymous">
+         tal:define="portal_state view/portal_state;
+                     toolbar_class python:request.cookies.get('plone-toolbar', 'plone-toolbar-left pat-toolbar');
+                     portal_url portal_state/portal_url;
+                     personal_bar python: view.get_personal_bar()"
+         tal:condition="not: portal_state/anonymous"
+         i18n:domain="plone">
   <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">
     <div class="plone-toolbar-container">
       <a class="plone-toolbar-logo">
@@ -13,9 +15,33 @@
         <ul>
           <div tal:replace="structure view/base_render">
           </div>
+          <li id="portal-personaltools" class="plone-toolbar-separator"
+              tal:condition="personal_bar/user_actions">
+            <a href="#"
+               tal:attributes="href personal_bar/homelink_url">
+              <span class="icon-user" aria-hidden="true"></span>
+              <span tal:content="personal_bar/user_name">User</span>
+              <span class="plone-toolbar-caret"></span>
+            </a>
+            <ul>
+              <li class="plone-toolbar-submenu-header">
+                <span tal:content="personal_bar/user_name">Username</span>
+              </li>
+              <li class="user-action"
+                  tal:repeat="action personal_bar/user_actions">
+                <a href="" tal:attributes="action">
+                  <tal:actionname tal:content="action/title">
+                     action title
+                  </tal:actionname>
+                  <tal:islogout condition="python:action['id'] == 'personaltools-logout'">
+                    <span class="icon-logout"></span>
+                  </tal:islogout>
+                </a>
+              </li>
+            </ul>
+          </li>
         </ul>
       </nav>
     </div>
   </div>
 </section>
-</div>
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
index 2a43294..25a41cc 100644
--- a/plone/app/layout/viewlets/toolbar.py
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -1,6 +1,8 @@
 from plone.app.viewletmanager.manager import OrderedViewletManager
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
+from plone.memoize.instance import memoize
+from plone.app.layout.viewlets.common import PersonalBarViewlet
 
 
 class ToolbarViewletManager(OrderedViewletManager):
@@ -12,5 +14,12 @@ def base_render(self):
     def render(self):
         return self.custom_template()
 
+    @property
+    @memoize
     def portal_state(self):
-        return getMultiAdapter((self.context, self.request), name='plone_portal_state')
\ No newline at end of file
+        return getMultiAdapter((self.context, self.request), name='plone_portal_state')
+
+    def get_personal_bar(self):
+        viewlet = PersonalBarViewlet(self.context, self.request, self.__parent__, self)
+        viewlet.update()
+        return viewlet
\ No newline at end of file


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:41+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/1b32ccde6e5adf6d7b005410bf8f0d2ecd200154

fix container

Files changed:
M plone/app/layout/viewlets/toolbar.pt

diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index 9385d31..d19389b 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -15,6 +15,8 @@
         <ul>
           <div tal:replace="structure view/base_render">
           </div>
+        </ul>
+        <ul id="personal-bar-container">
           <li id="portal-personaltools" class="plone-toolbar-separator"
               tal:condition="personal_bar/user_actions">
             <a href="#"


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/ea44109f80eb236ea5c54513986fbb5d408497e1

remove switcher

Files changed:
M plone/app/layout/viewlets/tiny_logo.pt
M plone/app/layout/viewlets/toolbar.pt

diff --git a/plone/app/layout/viewlets/tiny_logo.pt b/plone/app/layout/viewlets/tiny_logo.pt
index bc176e0..3726e60 100644
--- a/plone/app/layout/viewlets/tiny_logo.pt
+++ b/plone/app/layout/viewlets/tiny_logo.pt
@@ -1,4 +1,3 @@
 <a class="plone-toolbar-logo">
     <img alt="Plone Toolbar" src="++resource++plone-toolbarlogo.svg" />
 </a>
-<a class="plone-toolbar-switcher"><span>Left-Top switcher</span></a>
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index d19389b..a70b93b 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -10,7 +10,6 @@
       <a class="plone-toolbar-logo">
         <img alt="Plone Toolbar" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />
       </a>
-      <a class="plone-toolbar-switcher"><span>Left-Top switcher</span></a>
       <nav role="navigation">
         <ul>
           <div tal:replace="structure view/base_render">


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/3adfa449738346616758e649b3ba51d1954892f8

add class

Files changed:
M plone/app/layout/viewlets/toolbar.pt

diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index a70b93b..7ef60a2 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -11,7 +11,7 @@
         <img alt="Plone Toolbar" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />
       </a>
       <nav role="navigation">
-        <ul>
+        <ul class="plone-toolbar-main">
           <div tal:replace="structure view/base_render">
           </div>
         </ul>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/52e78b4115de03d13797b5eb47d109cbf6e02fa3

Toolbar logo and position

Files changed:
M plone/app/layout/viewlets/toolbar.pt
M plone/app/layout/viewlets/toolbar.py

diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index 7ef60a2..dc82558 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -1,15 +1,15 @@
 <section id="edit-bar" role="toolbar"
          tal:define="portal_state view/portal_state;
-                     toolbar_class python:request.cookies.get('plone-toolbar', 'plone-toolbar-left pat-toolbar');
-                     portal_url portal_state/portal_url;
+                     toolbar_class view/get_toolbar_position;
                      personal_bar python: view.get_personal_bar()"
          tal:condition="not: portal_state/anonymous"
          i18n:domain="plone">
   <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">
     <div class="plone-toolbar-container">
       <a class="plone-toolbar-logo">
-        <img alt="Plone Toolbar" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />
+        <img alt="Plone Toolbar" tal:attributes="src view/get_toolbar_logo" />
       </a>
+      <a class="plone-toolbar-switcher" tal:condition="view/show_switcher"><span>Left-Top switcher</span></a>
       <nav role="navigation">
         <ul class="plone-toolbar-main">
           <div tal:replace="structure view/base_render">
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
index 25a41cc..61e7766 100644
--- a/plone/app/layout/viewlets/toolbar.py
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -3,6 +3,9 @@
 from zope.component import getMultiAdapter
 from plone.memoize.instance import memoize
 from plone.app.layout.viewlets.common import PersonalBarViewlet
+from zope.component import getUtility
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
 
 
 class ToolbarViewletManager(OrderedViewletManager):
@@ -22,4 +25,23 @@ def portal_state(self):
     def get_personal_bar(self):
         viewlet = PersonalBarViewlet(self.context, self.request, self.__parent__, self)
         viewlet.update()
-        return viewlet
\ No newline at end of file
+        return viewlet
+
+    def get_toolbar_logo(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISiteSchema, prefix='plone')
+        portal_url = self.portal_state.portal_url()
+        return portal_url + settings.toolbar_logo
+
+    def get_toolbar_position(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISiteSchema, prefix='plone')
+        if settings.toolbar_position == 'side':
+            return 'plone-toolbar-left pat-toolbar'
+        else:
+            return 'portal-toolbar-top pat-toolbar'
+
+    def show_switcher(self):
+        return False
+
+


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/176bdcaa042dc79ec67f84ac75ca7936a1b1ef2b

Position on the body tag

Files changed:
M plone/app/layout/globals/layout.py
M plone/app/layout/viewlets/toolbar.pt
M plone/app/layout/viewlets/toolbar.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index 9c7a85b..e999d05 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -186,23 +186,14 @@ def bodyClass(self, template, view):
             for role in user.getRolesInContext(self.context):
                 body_classes.append('userrole-' + role.lower().replace(' ', '-'))
 
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISiteSchema, prefix='plone')
+
             # toolbar classes
-            toolbar_state = self.request.cookies.get('plone-toolbar')
-            if toolbar_state:
-                if 'plone-toolbar-left' in toolbar_state:
-                    if 'expanded' in toolbar_state:
-                        body_classes.append('plone-toolbar-left-expanded')
-                    else:
-                        body_classes.append('plone-toolbar-left-default')
-                if 'plone-toolbar-top' in toolbar_state:
-                    if 'expanded' in toolbar_state:
-                        body_classes.append('plone-toolbar-top-expanded')
-                    else:
-                        body_classes.append('plone-toolbar-top-default')
-                if 'compressed' in toolbar_state:
-                    body_classes.append('plone-toolbar-compressed')
+            if settings.toolbar_position == 'side':
+                body_classes.append('plone-toolbar-left')
             else:
-                body_classes.append('plone-toolbar-left-default')
+                body_classes.append('plone-toolbar-top')
 
         # class for markspeciallinks pattern
         properties = getToolByName(context, "portal_properties")
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index dc82558..1aeb138 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -4,18 +4,16 @@
                      personal_bar python: view.get_personal_bar()"
          tal:condition="not: portal_state/anonymous"
          i18n:domain="plone">
-  <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">
+  <div id="edit-zone" role="toolbar" class="pat-toolbar">
     <div class="plone-toolbar-container">
       <a class="plone-toolbar-logo">
         <img alt="Plone Toolbar" tal:attributes="src view/get_toolbar_logo" />
       </a>
       <a class="plone-toolbar-switcher" tal:condition="view/show_switcher"><span>Left-Top switcher</span></a>
       <nav role="navigation">
-        <ul class="plone-toolbar-main">
+        <ul>
           <div tal:replace="structure view/base_render">
           </div>
-        </ul>
-        <ul id="personal-bar-container">
           <li id="portal-personaltools" class="plone-toolbar-separator"
               tal:condition="personal_bar/user_actions">
             <a href="#"
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
index 61e7766..25025b7 100644
--- a/plone/app/layout/viewlets/toolbar.py
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -33,14 +33,6 @@ def get_toolbar_logo(self):
         portal_url = self.portal_state.portal_url()
         return portal_url + settings.toolbar_logo
 
-    def get_toolbar_position(self):
-        registry = getUtility(IRegistry)
-        settings = registry.forInterface(ISiteSchema, prefix='plone')
-        if settings.toolbar_position == 'side':
-            return 'plone-toolbar-left pat-toolbar'
-        else:
-            return 'portal-toolbar-top pat-toolbar'
-
     def show_switcher(self):
         return False
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/762b2b2bb80f8f47d2eaa39dbd11f21d3f9bb22b

Missed an import

Files changed:
M plone/app/layout/globals/layout.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index e999d05..99f68f3 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -21,6 +21,8 @@
 from plone.app.layout.globals.interfaces import ILayoutPolicy
 from plone.app.layout.globals.interfaces import IViewView
 from plone.app.layout.icons.interfaces import IContentIcon
+from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
+
 
 
 class LayoutPolicy(BrowserView):


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/c6c249d3d90a59abb22e29c0f7cdecfe1a662b73

Missed old code to clean up

Files changed:
M plone/app/layout/viewlets/toolbar.pt

diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index 1aeb138..5287a29 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -1,6 +1,5 @@
 <section id="edit-bar" role="toolbar"
          tal:define="portal_state view/portal_state;
-                     toolbar_class view/get_toolbar_position;
                      personal_bar python: view.get_personal_bar()"
          tal:condition="not: portal_state/anonymous"
          i18n:domain="plone">


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/cc1aa8745f102a8c326f50fc3c9cbfe7243bfca5

Add aria hidden role to avoid screenreaders to nonesense stop by at the toolbar tiny logo

Files changed:
M plone/app/layout/viewlets/tiny_logo.pt

diff --git a/plone/app/layout/viewlets/tiny_logo.pt b/plone/app/layout/viewlets/tiny_logo.pt
index 3726e60..c0411b7 100644
--- a/plone/app/layout/viewlets/tiny_logo.pt
+++ b/plone/app/layout/viewlets/tiny_logo.pt
@@ -1,3 +1,3 @@
-<a class="plone-toolbar-logo">
+<a class="plone-toolbar-logo" aria-hidden="true">
     <img alt="Plone Toolbar" src="++resource++plone-toolbarlogo.svg" />
 </a>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/5e82959831cd7d8a85b51fe2d69aafc8a100d661

Missing changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 235ac29..cfeb14e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,9 @@ Changelog
 - by default, show site logo in social settings
   [vangheem]
 
+- Add aria hidden role to avoid screenreaders to nonesense stop by at the
+  toolbar tiny logo
+
 
 2.5.7 (2015-06-05)
 ------------------


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/43c74e4d6446754e652ecff974145a74c35a6347

provide correct classes for toolbar

Files changed:
M plone/app/layout/globals/layout.py
M plone/app/layout/viewlets/toolbar.pt
M plone/app/layout/viewlets/toolbar.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index 99f68f3..d2e63eb 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -1,29 +1,28 @@
-from zope.component import getUtility
-from plone.registry.interfaces import IRegistry
+import json
+
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
+from Products.Five.browser.metaconfigure import ViewMixinForTemplates
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from plone.app.layout.globals.interfaces import ILayoutPolicy
+from plone.app.layout.globals.interfaces import IViewView
+from plone.app.layout.icons.interfaces import IContentIcon
 from plone.i18n.normalizer.interfaces import IIDNormalizer
 from plone.memoize.view import memoize
 from plone.portlets.interfaces import IPortletManager
 from plone.portlets.interfaces import IPortletManagerRenderer
+from plone.registry.interfaces import IRegistry
+from zope.browserpage.viewpagetemplatefile import (
+    ViewPageTemplateFile as ZopeViewPageTemplateFile
+)
 from zope.component import getMultiAdapter
-from zope.component import queryUtility
+from zope.component import getUtility
 from zope.component import queryMultiAdapter
+from zope.component import queryUtility
 from zope.interface import alsoProvides
 from zope.interface import implements
 from zope.publisher.browser import BrowserView
 
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from zope.browserpage.viewpagetemplatefile import (
-    ViewPageTemplateFile as ZopeViewPageTemplateFile
-)
-from Products.Five.browser.metaconfigure import ViewMixinForTemplates
-
-from plone.app.layout.globals.interfaces import ILayoutPolicy
-from plone.app.layout.globals.interfaces import IViewView
-from plone.app.layout.icons.interfaces import IContentIcon
-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
-
-
 
 class LayoutPolicy(BrowserView):
     """A view that gives access to various layout related functions.
@@ -189,13 +188,30 @@ def bodyClass(self, template, view):
                 body_classes.append('userrole-' + role.lower().replace(' ', '-'))
 
             registry = getUtility(IRegistry)
-            settings = registry.forInterface(ISiteSchema, prefix='plone')
+            settings = registry.forInterface(ISiteSchema, prefix='plone', check=False)
 
             # toolbar classes
+            left = True
             if settings.toolbar_position == 'side':
                 body_classes.append('plone-toolbar-left')
             else:
+                left = False
                 body_classes.append('plone-toolbar-top')
+            try:
+                toolbar_state = json.loads(self.request.cookies.get('plone-toolbar'))
+                if toolbar_state.get('expanded', True):
+                    body_classes.append('plone-toolbar-expanded')
+                    if left:
+                        body_classes.append('plone-toolbar-left-expanded')
+                    else:
+                        body_classes.append('plone-toolbar-top-expanded')
+                else:
+                    if left:
+                        body_classes.append('plone-toolbar-left-default')
+                    else:
+                        body_classes.append('plone-toolbar-top-default')
+            except:
+                pass
 
         # class for markspeciallinks pattern
         properties = getToolByName(context, "portal_properties")
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
index 5287a29..0f443c3 100644
--- a/plone/app/layout/viewlets/toolbar.pt
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -10,9 +10,11 @@
       </a>
       <a class="plone-toolbar-switcher" tal:condition="view/show_switcher"><span>Left-Top switcher</span></a>
       <nav role="navigation">
-        <ul>
+        <ul class="plone-toolbar-main">
           <div tal:replace="structure view/base_render">
           </div>
+        </ul>
+        <ul id="personal-bar-container">
           <li id="portal-personaltools" class="plone-toolbar-separator"
               tal:condition="personal_bar/user_actions">
             <a href="#"
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
index 25025b7..933a869 100644
--- a/plone/app/layout/viewlets/toolbar.py
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -35,5 +35,3 @@ def get_toolbar_logo(self):
 
     def show_switcher(self):
         return False
-
-


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/921b3b123f4cba9f3e76788d6124b044b63d1cc2

Get rid completely of the plone.skip_links viewlet because it already doesn't worked OOTB since always.

Files changed:
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/configure.zcml

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 9131823..e8ddbe4 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -147,15 +147,6 @@ def update(self):
             self.enabled = toc
 
 
-class SkipLinksViewlet(ViewletBase):
-    index = ViewPageTemplateFile('skip_links.pt')
-
-    def update(self):
-        context_state = getMultiAdapter((self.context, self.request),
-                                        name=u'plone_context_state')
-        self.current_page_url = context_state.current_page_url
-
-
 class SiteActionsViewlet(ViewletBase):
     index = ViewPageTemplateFile('site_actions.pt')
 
@@ -471,4 +462,4 @@ def render_footer_portlets(self):
         portlet_manager = getMultiAdapter(
             (self.context, self.request, self.__parent__), name='plone.footerportlets')
         portlet_manager.update()
-        return portlet_manager.render()
\ No newline at end of file
+        return portlet_manager.render()
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index c1e32d3..317cc3b 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -152,14 +152,6 @@
         permission="zope2.View"
         />
 
-    <!-- The skip links for accessibility -->
-    <browser:viewlet
-        name="plone.skip_links"
-        manager=".interfaces.IPortalHeader"
-        class=".common.SkipLinksViewlet"
-        permission="zope2.View"
-        />
-
     <!-- The site actions -->
     <browser:viewlet
         name="plone.site_actions"


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/07ca54f1ee78135f400436d3c1aa55d944f73c49

Improve previous commit changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index cfeb14e..8d5ff9a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,11 @@ Changelog
   [vangheem]
 
 - Add aria hidden role to avoid screenreaders to nonesense stop by at the
-  toolbar tiny logo
+  toolbar tiny logo [sneridagh]
+
+- Get rid completely of the plone.skip_links viewlet because it already doesn't
+  worked OOTB since always and this does not follow modern a11y methods and we
+  are dropping support for outdated ways [sneridagh]
 
 
 2.5.7 (2015-06-05)


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:42+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/05c2be02d0c40df32be6eaa5a2916614526bbebe

Delete missing skip_links.pt

Files changed:
D plone/app/layout/viewlets/skip_links.pt

diff --git a/plone/app/layout/viewlets/skip_links.pt b/plone/app/layout/viewlets/skip_links.pt
deleted file mode 100644
index 6ff0c49..0000000
--- a/plone/app/layout/viewlets/skip_links.pt
+++ /dev/null
@@ -1,11 +0,0 @@
-<p class="hiddenStructure"
-   i18n:domain="plone"
-   tal:define="url view/current_page_url">
-  <a accesskey="2"
-     tal:attributes="href string:${url}#content"
-     i18n:translate="label_skiptocontent">Skip to content</a> |
-
-  <a accesskey="6"
-     tal:attributes="href string:${url}#portal-globalnav"
-     i18n:translate="label_skiptonavigation">Skip to navigation</a>
-</p>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/5d17843107eb99b83a6f920f9814c91aa7acf84d

Remove all references to accesskeys attributes on templates

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/logo.pt
M plone/app/layout/viewlets/searchbox.pt
M plone/app/layout/viewlets/site_actions.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 8d5ff9a..61cc518 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,6 +20,7 @@ Changelog
   worked OOTB since always and this does not follow modern a11y methods and we
   are dropping support for outdated ways [sneridagh]
 
+- Remove all references to "accesskeys" attributes on templates [sneridagh]
 
 2.5.7 (2015-06-05)
 ------------------
diff --git a/plone/app/layout/viewlets/logo.pt b/plone/app/layout/viewlets/logo.pt
index b05ce21..ae7f6c2 100644
--- a/plone/app/layout/viewlets/logo.pt
+++ b/plone/app/layout/viewlets/logo.pt
@@ -1,6 +1,5 @@
 <a id="portal-logo"
    title="Home"
-   accesskey="1"
    tal:attributes="href view/navigation_root_url;
                    title view/navigation_root_title"
    i18n:domain="plone"
diff --git a/plone/app/layout/viewlets/searchbox.pt b/plone/app/layout/viewlets/searchbox.pt
index bde537c..7ec8ac4 100644
--- a/plone/app/layout/viewlets/searchbox.pt
+++ b/plone/app/layout/viewlets/searchbox.pt
@@ -21,7 +21,6 @@
                id="searchGadget"
                title="Search Site"
                placeholder="Search Site"
-               accesskey="4"
                i18n:attributes="title title_search_site;
                                 placeholder title_search_site"
                tal:attributes="value request/form/SearchableText|nothing;"
@@ -53,8 +52,7 @@
          class="hiddenStructure">
         <a href="#"
            tal:attributes="href string:${navigation_root_url}/@@search"
-           i18n:translate="label_advanced_search"
-           accesskey="5">
+           i18n:translate="label_advanced_search">
             Advanced Search&hellip;
         </a>
     </div>
diff --git a/plone/app/layout/viewlets/site_actions.pt b/plone/app/layout/viewlets/site_actions.pt
index acaf871..5e2daa0 100644
--- a/plone/app/layout/viewlets/site_actions.pt
+++ b/plone/app/layout/viewlets/site_actions.pt
@@ -1,5 +1,4 @@
 <ul id="portal-siteactions"
-    tal:define="accesskeys python: {'sitemap' : '3', 'accessibility' : '0', 'contact' : '9'};"
     tal:condition="view/site_actions"
     i18n:domain="plone">
 
@@ -7,14 +6,12 @@
         tal:attributes="id string:siteaction-${saction/id}"><a
            href=""
            tal:define="title saction/title;
-                       id saction/id;
-                       accesskey python: accesskeys.get(id, '');"
+                       id saction/id;"
            i18n:attributes="title"
            i18n:translate=""
            tal:content="title"
            tal:attributes="href saction/url;
                            target saction/link_target|nothing;
-                           title title;
-                           accesskey accesskey;"
+                           title title;"
            >Site action</a></li>
 </ul>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/750113d2103ed338d6375634dfbb49e03a54f723

added pat-moment

Files changed:
M plone/app/layout/viewlets/content_history.pt

diff --git a/plone/app/layout/viewlets/content_history.pt b/plone/app/layout/viewlets/content_history.pt
index ca2524d..7fa6b5b 100644
--- a/plone/app/layout/viewlets/content_history.pt
+++ b/plone/app/layout/viewlets/content_history.pt
@@ -28,11 +28,11 @@
                                    tal:replace="actor_name"/>
                          </tal:actor>
                          on
-                         <span tal:replace="python:view.toLocalizedTime(item['time'],long_format=True)" i18n:name="time"/>
+                         <span tal:content="python:view.toLocalizedTime(item['time'],long_format=True)" class="pat-moment" data-pat-moment="format:relative;"/>
                      </tal:action>
                      <tal:effective tal:condition="effective|nothing">
                          (<span i18n:translate="label_publishing_effective" tal:omit-tag="">effective</span>:
-                         <span tal:replace="effectiveDate"/>)
+                         <span tal:content="python:item['effective']" class="pat-moment" data-pat-moment="format:relative;" />)
                      </tal:effective>
 
                  </span>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/af313b3b3bbcc92edfea2b17806cbba01649bacd

disable documentbyline viewlet

Files changed:
M plone/app/layout/viewlets/configure.zcml

diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 317cc3b..54c7a2a 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -341,12 +341,12 @@
         />
 
     <!-- Render the document byline -->
-    <browser:viewlet
+    <!-- <browser:viewlet
         name="plone.documentbyline"
         manager=".interfaces.IToolbar"
         class=".content.DocumentBylineViewlet"
         permission="zope2.View"
-        />
+        /> -->
 
     <!-- Render the keywords -->
     <browser:viewlet


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/b6440c11fdc6c1be2894cfa15141c97dc0f6e744

disabled document_byline viewlet in favor of toolbar action

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/contentviews.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 61cc518..ac69e2a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,6 +20,9 @@ Changelog
   worked OOTB since always and this does not follow modern a11y methods and we
   are dropping support for outdated ways [sneridagh]
 
+- Disabled document_byline viewlet in favor of toolbar action
+  [agitator]
+
 - Remove all references to "accesskeys" attributes on templates [sneridagh]
 
 2.5.7 (2015-06-05)
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index e8ddbe4..28c3551 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -6,6 +6,7 @@
 
 from plone.memoize.view import memoize
 from zope.component import getMultiAdapter
+from zope.component import queryMultiAdapter
 from zope.component import getUtility
 from zope.deprecation.deprecation import deprecate
 from zope.i18n import translate
@@ -27,6 +28,7 @@
 from plone.protect.utils import addTokenToUrl
 
 
+
 class ViewletBase(BrowserView):
     """ Base class with common functions for link viewlets.
     """
@@ -365,6 +367,30 @@ def sortOrder(tab):
         tabs.sort(key=sortOrder)
         return tabs
 
+    def locked_icon(self):
+        if not getSecurityManager().checkPermission('Modify portal content',
+                                                    self.context):
+            return ""
+
+        locked = False
+        lock_info = queryMultiAdapter((self.context, self.request),
+                                      name='plone_lock_info')
+        if lock_info is not None:
+            locked = lock_info.is_locked()
+        else:
+            context = aq_inner(self.context)
+            lockable = getattr(context.aq_explicit,
+                               'wl_isLocked', None
+                               ) is not None
+            locked = lockable and context.wl_isLocked()
+
+        if not locked:
+            return ""
+
+        portal = self.portal_state.portal()
+        icon = portal.restrictedTraverse('lock_icon.png')
+        return icon.tag(title='Locked')
+
 
 class ManagePortletsFallbackViewlet(ViewletBase):
     """Manage portlets fallback link that sits below content"""
diff --git a/plone/app/layout/viewlets/contentviews.pt b/plone/app/layout/viewlets/contentviews.pt
index 1b56638..cdeea25 100644
--- a/plone/app/layout/viewlets/contentviews.pt
+++ b/plone/app/layout/viewlets/contentviews.pt
@@ -5,7 +5,8 @@
   <tal:block define="view_actions view/prepareObjectTabs;">
     <li tal:repeat="action view_actions"
         tal:attributes="id string:contentview-${action/id};
-                        class python: action.get('selected') and 'active' or ''">
+                        class python: action.get('selected') and 'active' or ''"
+        tal:condition="python:id != 'history'">
       <tal:var define="selected action/selected|nothing;">
         <a href="#"
            tal:attributes="href action/url;
@@ -17,5 +18,20 @@
         </a>
       </tal:var>
     </li>
+    <li tal:repeat="action view_actions"
+        tal:attributes="id string:contentview-${action/id};
+                        class python: action.get('selected') and 'active' or ''"
+        tal:condition="python:id == 'history'">
+      <tal:var define="selected action/selected|nothing;">
+        <a href="#"
+           tal:attributes="href action/url;
+                           target action/link_target|nothing;">
+          <span tal:attributes="class python:view.locked_icon and 'icon-lock or 'icon-history'"
+                class="icon-folderContents" aria-hidden="true">
+          </span>
+          <span tal:content="action/title" i18n:translate="">View name</span>
+        </a>
+      </tal:var>
+    </li>
   </tal:block>
 </tal:contentviews>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/00264ad85a5df98741b76d2ef59b12264c9b2f1b

be more defensive to handle upgrades nicely

Files changed:
M plone/app/layout/globals/layout.py
M plone/app/layout/viewlets/toolbar.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index d2e63eb..5f9e662 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -191,11 +191,13 @@ def bodyClass(self, template, view):
             settings = registry.forInterface(ISiteSchema, prefix='plone', check=False)
 
             # toolbar classes
-            left = True
-            if settings.toolbar_position == 'side':
+            try:
+                left = settings.toolbar_position == 'side'
+            except AttributeError:
+                left = True
+            if left:
                 body_classes.append('plone-toolbar-left')
             else:
-                left = False
                 body_classes.append('plone-toolbar-top')
             try:
                 toolbar_state = json.loads(self.request.cookies.get('plone-toolbar'))
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
index 933a869..d8be2df 100644
--- a/plone/app/layout/viewlets/toolbar.py
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -31,7 +31,11 @@ def get_toolbar_logo(self):
         registry = getUtility(IRegistry)
         settings = registry.forInterface(ISiteSchema, prefix='plone')
         portal_url = self.portal_state.portal_url()
-        return portal_url + settings.toolbar_logo
+        try:
+            logo = settings.toolbar_logo
+        except AttributeError:
+            logo = '/++plone++static/plone-toolbarlogo.svg'
+        return portal_url + logo
 
     def show_switcher(self):
         return False


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/2e91cc165f8176fdc84e0738f5daf3ceea79c2d7

added relative time display

Files changed:
M plone/app/layout/viewlets/contentviews.pt

diff --git a/plone/app/layout/viewlets/contentviews.pt b/plone/app/layout/viewlets/contentviews.pt
index cdeea25..c556e33 100644
--- a/plone/app/layout/viewlets/contentviews.pt
+++ b/plone/app/layout/viewlets/contentviews.pt
@@ -3,10 +3,11 @@
                   i18n:domain="plone">
 
   <tal:block define="view_actions view/prepareObjectTabs;">
-    <li tal:repeat="action view_actions"
-        tal:attributes="id string:contentview-${action/id};
+  <tal:actions tal:repeat="action view_actions">
+    <li tal:attributes="id string:contentview-${action/id};
                         class python: action.get('selected') and 'active' or ''"
-        tal:condition="python:id != 'history'">
+        tal:define="actionid action/id"
+        tal:condition="python:actionid != 'history'">
       <tal:var define="selected action/selected|nothing;">
         <a href="#"
            tal:attributes="href action/url;
@@ -18,20 +19,23 @@
         </a>
       </tal:var>
     </li>
-    <li tal:repeat="action view_actions"
-        tal:attributes="id string:contentview-${action/id};
+    <li tal:attributes="id string:contentview-${action/id};
                         class python: action.get('selected') and 'active' or ''"
-        tal:condition="python:id == 'history'">
-      <tal:var define="selected action/selected|nothing;">
+        tal:define="actionid action/id"
+        tal:condition="python:actionid == 'history'">
+      <tal:var define="selected action/selected|nothing;
+                       locked view/locked_icon">
         <a href="#"
            tal:attributes="href action/url;
                            target action/link_target|nothing;">
-          <span tal:attributes="class python:view.locked_icon and 'icon-lock or 'icon-history'"
+          <span tal:attributes="class python:locked and 'icon-lock' or 'icon-history'"
                 class="icon-folderContents" aria-hidden="true">
           </span>
-          <span tal:content="action/title" i18n:translate="">View name</span>
+          <span class="pat-moment" data-pat-moment="format:relative;"
+                tal:content="context/ModificationDate">Modified</span>
         </a>
       </tal:var>
     </li>
+  </tal:actions>
   </tal:block>
 </tal:contentviews>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/8dc7242404dfe9fe0a889dfd03e130ea87000587

Added documentByLine to @@historyview

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/history_view.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index ac69e2a..7c8be0a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,10 +20,14 @@ Changelog
   worked OOTB since always and this does not follow modern a11y methods and we
   are dropping support for outdated ways [sneridagh]
 
-- Disabled document_byline viewlet in favor of toolbar action
+- Remove all references to "accesskeys" attributes on templates [sneridagh]
+
+- Disabled document_byline viewlet in favor of toolbar action.
+  [agitator]
+
+- Added documentByLine to @@historyview
   [agitator]
 
-- Remove all references to "accesskeys" attributes on templates [sneridagh]
 
 2.5.7 (2015-06-05)
 ------------------
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 54c7a2a..21659ad 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -303,7 +303,7 @@
     <browser:page
         for="*"
         name="historyview"
-        template="history_view.pt"
+        class=".content.HistoryByLineView"
         permission="zope2.View"
         />
 
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index d80450d..a71d2af 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -8,6 +8,7 @@
 from DateTime import DateTime
 from plone.protect.authenticator import createToken
 from plone.registry.interfaces import IRegistry
+from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.CMFCore.utils import _checkPermission
 from Products.CMFCore.utils import getToolByName
@@ -166,6 +167,120 @@ def get_translations(self):
         return cts
 
 
+class HistoryByLineView(BrowserView):
+    """ DocumentByLine information for content history view """
+
+    index = ViewPageTemplateFile('history_view.pt')
+
+    def __call__(self):
+        context = self.context
+        self.portal_state = getMultiAdapter((context, self.request),
+                                            name=u'plone_portal_state')
+        self.context_state = getMultiAdapter((self.context, self.request),
+                                             name=u'plone_context_state')
+        self.anonymous = self.portal_state.anonymous()
+        self.has_pam = HAS_PAM
+        return self.index()
+
+    def show(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISecuritySchema,
+            prefix='plone',
+        )
+        return not self.anonymous or settings.allow_anon_views_about
+
+    def show_history(self):
+        has_access_preview_versions_permission = _checkPermission(
+            'CMFEditions: Access previous versions',
+            self.context
+        )
+        if not has_access_preview_versions_permission:
+            return False
+        if IViewView.providedBy(self.__parent__):
+            return True
+        if IFolderContentsView.providedBy(self.__parent__):
+            return True
+        return False
+
+    def locked_icon(self):
+        if not getSecurityManager().checkPermission('Modify portal content',
+                                                    self.context):
+            return ""
+
+        locked = False
+        lock_info = queryMultiAdapter((self.context, self.request),
+                                      name='plone_lock_info')
+        if lock_info is not None:
+            locked = lock_info.is_locked()
+        else:
+            context = aq_inner(self.context)
+            lockable = getattr(
+                context.aq_explicit, 'wl_isLocked', None) is not None
+            locked = lockable and context.wl_isLocked()
+
+        if not locked:
+            return ""
+
+        portal = self.portal_state.portal()
+        icon = portal.restrictedTraverse('lock_icon.png')
+        return icon.tag(title='Locked')
+
+    def creator(self):
+        return self.context.Creator()
+
+    def author(self):
+        membership = getToolByName(self.context, 'portal_membership')
+        return membership.getMemberInfo(self.creator())
+
+    def authorname(self):
+        author = self.author()
+        return author and author['fullname'] or self.creator()
+
+    def isExpired(self):
+        if base_hasattr(self.context, 'expires'):
+            return self.context.expires().isPast()
+        return False
+
+    def toLocalizedTime(self, time, long_format=None, time_only=None):
+        """Convert time to localized time
+        """
+        util = getToolByName(self.context, 'translation_service')
+        return util.ulocalized_time(time, long_format, time_only, self.context,
+                                    domain='plonelocales')
+
+    def pub_date(self):
+        """Return object effective date.
+
+        Return None if publication date is switched off in global site settings
+        or if Effective Date is not set on object.
+        """
+        # check if we are allowed to display publication date
+        properties = getToolByName(self.context, 'portal_properties')
+        site_properties = getattr(properties, 'site_properties')
+        if not site_properties.getProperty('displayPublicationDateInByline',
+           False):
+            return None
+
+        # check if we have Effective Date set
+        date = self.context.EffectiveDate()
+        if not date or date == 'None':
+            return None
+
+        return DateTime(date)
+
+    def get_translations(self):
+        cts = []
+        if ITranslatable.providedBy(self.context):
+            t_langs = translated_languages(self.context)
+            context_translations = ITranslationManager(self.context).get_translations()
+            for lang in t_langs:
+                cts.append(dict(lang_native=lang.title,
+                                url=context_translations[lang.value].absolute_url()))
+
+        return cts
+
+
 class ContentRelatedItems(ViewletBase):
 
     index = ViewPageTemplateFile("document_relateditems.pt")
diff --git a/plone/app/layout/viewlets/history_view.pt b/plone/app/layout/viewlets/history_view.pt
index 4545426..92a149b 100644
--- a/plone/app/layout/viewlets/history_view.pt
+++ b/plone/app/layout/viewlets/history_view.pt
@@ -13,6 +13,93 @@
             Generic KSS Title. Is rendered with class="documentFirstHeading".
         </h1>
 
+        <div class="documentByLine"
+             id="plone-document-byline"
+             i18n:domain="plone"
+             tal:condition="view/show">
+          <span id="lock-icon"
+                tal:define="lock_icon view/locked_icon"
+                tal:condition="python:lock_icon">
+              <img tal:replace="structure lock_icon" />
+          </span>
+
+          <tal:creator tal:define="creator_short_form view/creator;"
+                       tal:condition="creator_short_form">
+          <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
+                                creator_is_openid python:'/' in creator_short_form;
+                                creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+            <span class="documentAuthor">
+              <tal:i18n i18n:translate="label_by_author">
+              by
+              <a href="#"
+                 tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
+                 tal:content="view/authorname"
+                 tal:omit-tag="python:view.author() is None"
+                 i18n:name="author">Roland Barthes</a>
+              </tal:i18n>
+                 —
+            </span>
+          </tal:name>
+          </tal:creator>
+
+          <tal:dates define="published view/pub_date;
+                             modified context/ModificationDate">
+          <span class="documentPublished"
+                tal:condition="published">
+            <span i18n:translate="box_published">
+              published
+            </span>
+            <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
+              August 16, 2001 at 23:35:59
+            </span><tal:sep condition="modified">,</tal:sep>
+          </span>
+
+          <span class="documentModified"
+                tal:condition="modified">
+            <span i18n:translate="box_last_modified">
+              last modified
+            </span>
+            <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
+              August 16, 2001 at 23:35:59
+            </span>
+          </span>
+          </tal:dates>
+
+          <tal:expired tal:condition="view/isExpired">
+            —
+            <span class="state-expired"
+                  i18n:translate="time_expired">expired</span>
+          </tal:expired>
+
+          <span class="contentHistory" id="content-history"
+                tal:condition="view/show_history">
+            —
+            <a href="#"
+               tal:attributes="href string:${here/absolute_url}/@@historyview"
+               i18n:translate="label_history">History</a>
+          </span>
+
+          <div class="documentContributors"
+               tal:define="contributors context/Contributors"
+               tal:condition="contributors"
+               i18n:translate="text_contributors">
+            Contributors:
+            <span i18n:name="name"
+                  tal:omit-tag=""
+                  tal:content="python: ', '.join(contributors)">
+              Mary
+            </span>
+          </div>
+
+          <tal:rights tal:define="rights context/Rights"
+                      tal:condition="rights">
+            <div tal:replace="rights">
+              Copyleft NiceCorp Inc.
+            </div>
+          </tal:rights>
+
+        </div>
+
         <div id="content-core">
             <h3 i18n:translate="label_history">History</h3>
             <div tal:replace="structure here/@@contenthistory">Content History</div>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/0e4e13584fcbe7c3774a8dd737a6455243614505

removed DocumentByLineViewlet

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml
D plone/app/layout/viewlets/document_byline.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 7c8be0a..557ddea 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -28,6 +28,9 @@ Changelog
 - Added documentByLine to @@historyview
   [agitator]
 
+- removed DocumentBylineViewlet
+  [agitator]
+
 
 2.5.7 (2015-06-05)
 ------------------
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 21659ad..9dad737 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -340,14 +340,6 @@
         permission="zope2.View"
         />
 
-    <!-- Render the document byline -->
-    <!-- <browser:viewlet
-        name="plone.documentbyline"
-        manager=".interfaces.IToolbar"
-        class=".content.DocumentBylineViewlet"
-        permission="zope2.View"
-        /> -->
-
     <!-- Render the keywords -->
     <browser:viewlet
         name="plone.belowcontenttitle.keywords"
diff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt
deleted file mode 100644
index 32e19a3..0000000
--- a/plone/app/layout/viewlets/document_byline.pt
+++ /dev/null
@@ -1,117 +0,0 @@
-<li id="plone-document-byline" class="plone-toolbar-separator"
-    tal:condition="view/show"
-    i18n:domain="plone">
-
-  <a href="#">
-    <span class="icon-contentInfo" aria-hidden="true"></span>
-    <span i18n:translate="">Content Info</span>
-    <span class="plone-toolbar-caret"></span>
-  </a>
-
-  <ul>
-    <li class="plone-toolbar-submenu-header">
-      <span id="lock-icon"
-            tal:define="lock_icon view/locked_icon"
-            tal:condition="python:lock_icon">
-        <img tal:replace="structure lock_icon" />
-      </span>
-      <span i18n:translate="">Content Info</span>
-    </li>
-    <li>
-      <tal:creator tal:define="creator_short_form view/creator;"
-                   tal:condition="creator_short_form">
-        <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
-                              creator_is_openid python:'/' in creator_short_form;
-                              creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-
-          <tal:i18n i18n:translate="label_by_author">
-            <a href="#"
-               class="documentAuthor"
-               tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
-               tal:omit-tag="python:view.author() is None">
-               by <tal:author tal:content="view/authorname" i18n:name="author">Roland Barthes</tal:author></a>
-          </tal:i18n>
-
-        </tal:name>
-      </tal:creator>
-    </li>
-    <li>
-      <tal:dates define="published view/pub_date;
-                         modified context/ModificationDate">
-        <span class="documentPublished"
-              tal:condition="published">
-          <span i18n:translate="box_published">
-            published
-          </span>
-          <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
-            August 16, 2001 at 23:35:59
-          </span><tal:sep condition="modified">,</tal:sep>
-        </span>
-
-        <span class="documentModified"
-              tal:condition="modified">
-          <span i18n:translate="box_last_modified">
-            last modified
-          </span>
-          <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
-            August 16, 2001 at 23:35:59
-          </span>
-        </span>
-      </tal:dates>
-    </li>
-    <li>
-      <tal:expired tal:condition="view/isExpired">
-        <span class="state-expired"
-              i18n:translate="time_expired">expired</span>
-      </tal:expired>
-    </li>
-    <li>
-      <a href="#" class="contentHistory" id="content-history"
-         tal:condition="view/show_history"
-         tal:attributes="href string:${here/absolute_url}/@@historyview"
-         i18n:translate="label_history">History</a>
-    </li>
-    <li>
-      <span class="documentContributors"
-           tal:define="contributors context/Contributors"
-           tal:condition="contributors"
-           i18n:translate="text_contributors">
-        Contributors:
-        <span i18n:name="name"
-              tal:omit-tag=""
-              tal:content="python: ', '.join(contributors)">
-          Mary
-        </span>
-      </span>
-    </li>
-    <li>
-      <span tal:define="rights context/Rights"
-                  tal:condition="rights">
-        <span tal:replace="rights">
-          Copyleft NiceCorp Inc.
-        </span>
-      </span>
-    </li>
-<!-- Part of the Albert's mockup, just decide if we need/want it.
-
-    <li class="plone-toolbar-submenu-header">
-      <span>File info</span>
-    </li>
-    <li><span>Content name: Name</span></li>
-    <li><span>Short name: /short-name</span></li>
-
-  -->
-    <li class="plone-toolbar-submenu-header"
-        tal:condition="view/has_pam">
-      <span>Linked Translations</span>
-    </li>
-    <tal:translations condition="view/has_pam">
-      <li tal:repeat="linked_content view/get_translations">
-        <a tal:attributes="href linked_content/url"
-           tal:content="linked_content/lang_native">
-            Occitanian
-        </a>
-      </li>
-    </tal:translations>
-  </ul>
-</li>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/9307005752928ea4c5f57d57d12129903b950a31

remove byline class

Files changed:
M plone/app/layout/viewlets/content.py

diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index a71d2af..5387060 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -57,116 +57,6 @@ def update(self):
         self.actions = self.context_state.actions('document_actions')
 
 
-class DocumentBylineViewlet(ViewletBase):
-
-    index = ViewPageTemplateFile("document_byline.pt")
-
-    def update(self):
-        super(DocumentBylineViewlet, self).update()
-        self.context_state = getMultiAdapter((self.context, self.request),
-                                             name=u'plone_context_state')
-        self.anonymous = self.portal_state.anonymous()
-        self.has_pam = HAS_PAM
-
-    def show(self):
-        registry = getUtility(IRegistry)
-        settings = registry.forInterface(
-            ISecuritySchema,
-            prefix='plone',
-        )
-        return not self.anonymous or settings.allow_anon_views_about
-
-    def show_history(self):
-        has_access_preview_versions_permission = _checkPermission(
-            'CMFEditions: Access previous versions',
-            self.context
-        )
-        if not has_access_preview_versions_permission:
-            return False
-        if IViewView.providedBy(self.__parent__):
-            return True
-        if IFolderContentsView.providedBy(self.__parent__):
-            return True
-        return False
-
-    def locked_icon(self):
-        if not getSecurityManager().checkPermission('Modify portal content',
-                                                    self.context):
-            return ""
-
-        locked = False
-        lock_info = queryMultiAdapter((self.context, self.request),
-                                      name='plone_lock_info')
-        if lock_info is not None:
-            locked = lock_info.is_locked()
-        else:
-            context = aq_inner(self.context)
-            lockable = getattr(
-                context.aq_explicit, 'wl_isLocked', None) is not None
-            locked = lockable and context.wl_isLocked()
-
-        if not locked:
-            return ""
-
-        portal = self.portal_state.portal()
-        icon = portal.restrictedTraverse('lock_icon.png')
-        return icon.tag(title='Locked')
-
-    def creator(self):
-        return self.context.Creator()
-
-    def author(self):
-        membership = getToolByName(self.context, 'portal_membership')
-        return membership.getMemberInfo(self.creator())
-
-    def authorname(self):
-        author = self.author()
-        return author and author['fullname'] or self.creator()
-
-    def isExpired(self):
-        if base_hasattr(self.context, 'expires'):
-            return self.context.expires().isPast()
-        return False
-
-    def toLocalizedTime(self, time, long_format=None, time_only=None):
-        """Convert time to localized time
-        """
-        util = getToolByName(self.context, 'translation_service')
-        return util.ulocalized_time(time, long_format, time_only, self.context,
-                                    domain='plonelocales')
-
-    def pub_date(self):
-        """Return object effective date.
-
-        Return None if publication date is switched off in global site settings
-        or if Effective Date is not set on object.
-        """
-        # check if we are allowed to display publication date
-        properties = getToolByName(self.context, 'portal_properties')
-        site_properties = getattr(properties, 'site_properties')
-        if not site_properties.getProperty('displayPublicationDateInByline',
-           False):
-            return None
-
-        # check if we have Effective Date set
-        date = self.context.EffectiveDate()
-        if not date or date == 'None':
-            return None
-
-        return DateTime(date)
-
-    def get_translations(self):
-        cts = []
-        if ITranslatable.providedBy(self.context):
-            t_langs = translated_languages(self.context)
-            context_translations = ITranslationManager(self.context).get_translations()
-            for lang in t_langs:
-                cts.append(dict(lang_native=lang.title,
-                                url=context_translations[lang.value].absolute_url()))
-
-        return cts
-
-
 class HistoryByLineView(BrowserView):
     """ DocumentByLine information for content history view """
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:43+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/c287a0d81494f891870e347d25e5648a60d4f3fd

Fixing tests

Files changed:
M plone/app/layout/globals/layout.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index 5f9e662..f569806 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -200,7 +200,11 @@ def bodyClass(self, template, view):
             else:
                 body_classes.append('plone-toolbar-top')
             try:
-                toolbar_state = json.loads(self.request.cookies.get('plone-toolbar'))
+                toolbar_state = self.request.cookies.get('plone-toolbar')
+                if toolbar_state:
+                    toolbar_state = json.loads(toolbar_state)
+                else:
+                    toolbar_state = {'expanded': True}
                 if toolbar_state.get('expanded', True):
                     body_classes.append('plone-toolbar-expanded')
                     if left:


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/a999a45bbeeb15dbd2aa3426bc956495e7ba1189

History link button changes so tests needs to adapt

Files changed:
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/tests/history.txt
M plone/app/layout/viewlets/tests/test_content.py

diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index 5387060..7e8e480 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -62,7 +62,7 @@ class HistoryByLineView(BrowserView):
 
     index = ViewPageTemplateFile('history_view.pt')
 
-    def __call__(self):
+    def update(self):
         context = self.context
         self.portal_state = getMultiAdapter((context, self.request),
                                             name=u'plone_portal_state')
@@ -70,6 +70,10 @@ def __call__(self):
                                              name=u'plone_context_state')
         self.anonymous = self.portal_state.anonymous()
         self.has_pam = HAS_PAM
+
+    def __call__(self):
+        self.update()
+
         return self.index()
 
     def show(self):
diff --git a/plone/app/layout/viewlets/tests/history.txt b/plone/app/layout/viewlets/tests/history.txt
index 1507c09..320bc21 100644
--- a/plone/app/layout/viewlets/tests/history.txt
+++ b/plone/app/layout/viewlets/tests/history.txt
@@ -36,7 +36,7 @@ Check that the form has been properly submitted
 
 The history viewlet gracefully handles content without workflow.
 
-    >>> browser.getLink('History').click()
+    >>> browser.getLink(url='@@historyview').click()
 
 Create a public page with workflow.
 
@@ -54,7 +54,7 @@ Create a public page with workflow.
 
 The history viewlet gracefully handles initial default workflow state.
 
-    >>> browser.getLink('History').click()
+    >>> browser.getLink(url='@@historyview').click()
     >>> print browser.contents
     <...<span class="historyAction state-private">Create</span>...
 
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index d7f4476..e2a53cc 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -1,6 +1,6 @@
 from DateTime import DateTime
 from plone.app.layout.viewlets.tests.base import ViewletsTestCase
-from plone.app.layout.viewlets.content import DocumentBylineViewlet
+from plone.app.layout.viewlets.content import HistoryByLineView
 from plone.app.layout.viewlets.content import ContentRelatedItems
 from plone.locking.interfaces import ILockable
 from plone.registry.interfaces import IRegistry
@@ -42,7 +42,7 @@ def afterSetUp(self):
 
     def _get_viewlet(self):
         request = self.app.REQUEST
-        viewlet = DocumentBylineViewlet(self.context, request, None, None)
+        viewlet = HistoryByLineView(self.context, request)
         viewlet.update()
         return viewlet
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/fd6afc6b889b48f5ab2c720a6fdeae07b3c859dd

should be checking against KeyError

Files changed:
M plone/app/layout/globals/layout.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index f569806..ee4e30d 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -193,7 +193,7 @@ def bodyClass(self, template, view):
             # toolbar classes
             try:
                 left = settings.toolbar_position == 'side'
-            except AttributeError:
+            except KeyError:
                 left = True
             if left:
                 body_classes.append('plone-toolbar-left')


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/049a3411ba3f6198865e76046f6ce6176881c807

Lets test if small toolbar passes tests

Files changed:
M plone/app/layout/globals/layout.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index ee4e30d..be19a6a 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -204,7 +204,7 @@ def bodyClass(self, template, view):
                 if toolbar_state:
                     toolbar_state = json.loads(toolbar_state)
                 else:
-                    toolbar_state = {'expanded': True}
+                    toolbar_state = {'expanded': False}
                 if toolbar_state.get('expanded', True):
                     body_classes.append('plone-toolbar-expanded')
                     if left:


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/fd9d209f530b77271d0a85bef1e383c6b896319d

be able to order menu more and get rid of unnecessary viewlet

Files changed:
A plone/app/layout/viewlets/menu.pt
M plone/app/layout/globals/context.py
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/contentviews.pt
M plone/app/layout/viewlets/tests/test_common.py
D plone/app/layout/viewlets/contentactions.pt

diff --git a/plone/app/layout/globals/context.py b/plone/app/layout/globals/context.py
index b1a3eaf..bfa09b6 100644
--- a/plone/app/layout/globals/context.py
+++ b/plone/app/layout/globals/context.py
@@ -1,5 +1,3 @@
-import warnings
-
 from zope.interface import implements
 from zope.component import getMultiAdapter
 from zope.component import queryAdapter
@@ -233,29 +231,17 @@ def actions(self, category=None, max=-1):
         context = aq_inner(self.context)
         atool = getToolByName(context, "portal_actions")
         ttool = getToolByName(context, "portal_types")
-        if category is None:
-            warnings.warn(
-                "The actions method of the context state view was "
-                "called without a category argument. This is deprecated and "
-                "won't be supported anymore in Plone 5.",
-                DeprecationWarning, 3
-            )
-            actions = atool.listFilteredActionsFor(
-                context,
-                ignore_providers=BLACKLISTED_PROVIDERS,
-                ignore_categories=BLACKLISTED_CATEGORIES)
-        else:
-            actions = []
-            actions.extend(ttool.listActionInfos(
-                object=context,
-                category=category,
-                max=max,
-            ))
-            actions.extend(atool.listActionInfos(
-                object=context,
-                categories=(category, ),
-                max=max,
-            ))
+        actions = []
+        actions.extend(ttool.listActionInfos(
+            object=context,
+            category=category,
+            max=max,
+        ))
+        actions.extend(atool.listActionInfos(
+            object=context,
+            categories=(category, ),
+            max=max,
+        ))
         return actions
 
     def portlet_assignable(self):
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 28c3551..8e5d634 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -28,7 +28,6 @@
 from plone.protect.utils import addTokenToUrl
 
 
-
 class ViewletBase(BrowserView):
     """ Base class with common functions for link viewlets.
     """
@@ -281,13 +280,19 @@ def update(self):
 
 class ContentViewsViewlet(ViewletBase):
     index = ViewPageTemplateFile('contentviews.pt')
+    menu_template = ViewPageTemplateFile('menu.pt')
+
+    default_tab = 'nothing'
+    primary = ['folderContents', 'edit']
+
+    def update(self):
+        # The drop-down menus are pulled in via a simple content provider
+        # from plone.app.contentmenu. This behaves differently depending on
+        # whether the view is marked with IViewView. If our parent view
+        # provides that marker, we should do it here as well.
+        if IViewView.providedBy(self.__parent__):
+            alsoProvides(self, IViewView)
 
-    @memoize
-    def prepareObjectTabs(self, default_tab='view',
-                          sort_first=['folderContents']):
-        """Prepare the object tabs by determining their order and working
-        out which tab is selected. Used in global_contentviews.pt
-        """
         context = aq_inner(self.context)
         context_url = context.absolute_url()
         context_fti = context.getTypeInfo()
@@ -301,8 +306,10 @@ def prepareObjectTabs(self, default_tab='view',
         if context_state.is_structural_folder():
             action_list = actions('folder')
         action_list.extend(actions('object'))
+        action_list.extend(actions('object_actions'))
 
-        tabs = []
+        tabSet1 = []
+        tabSet2 = []
         found_selected = False
         fallback_action = None
 
@@ -344,7 +351,7 @@ def prepareObjectTabs(self, default_tab='view',
                     found_selected = True
 
             current_id = item['id']
-            if current_id == default_tab:
+            if current_id == self.default_tab:
                 fallback_action = item
 
             modal = item.get('modal', None)
@@ -353,19 +360,17 @@ def prepareObjectTabs(self, default_tab='view',
                 item['cssClass'] += ' pat-plone-modal'
                 item['url'] += '?ajax_load=1'
 
-            tabs.append(item)
+            if item['id'] in self.primary:
+                tabSet1.append(item)
+            else:
+                tabSet2.append(item)
 
         if not found_selected and fallback_action is not None:
             fallback_action['selected'] = True
 
-        def sortOrder(tab):
-            try:
-                return sort_first.index(tab['id'])
-            except ValueError:
-                return 255
-
-        tabs.sort(key=sortOrder)
-        return tabs
+        tabSet1.sort(key=lambda item: self.primary.index(item['id']))
+        self.tabSet1 = tabSet1
+        self.tabSet2 = tabSet2
 
     def locked_icon(self):
         if not getSecurityManager().checkPermission('Modify portal content',
@@ -433,27 +438,6 @@ def update(self):
         self.breadcrumbs = breadcrumbs_view.breadcrumbs()
 
 
-class ContentActionsViewlet(ViewletBase):
-    index = ViewPageTemplateFile('contentactions.pt')
-
-    def update(self):
-        context = aq_inner(self.context)
-        context_state = getMultiAdapter((context, self.request),
-                                        name=u'plone_context_state')
-
-        self.object_actions = context_state.actions('object_actions')
-
-        # The drop-down menus are pulled in via a simple content provider
-        # from plone.app.contentmenu. This behaves differently depending on
-        # whether the view is marked with IViewView. If our parent view
-        # provides that marker, we should do it here as well.
-        if IViewView.providedBy(self.__parent__):
-            alsoProvides(self, IViewView)
-
-    def icon(self, action):
-        return action.get('icon', None)
-
-
 class TinyLogoViewlet(ViewletBase):
     index = ViewPageTemplateFile('tiny_logo.pt')
 
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 9dad737..e8cd0ee 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -201,36 +201,6 @@
         permission="zope2.View"
         />
 
-    <!-- Content actions (menus)
-            The default version is a blank bar; the one with real menus is
-            registered for the main view + folder contents only.
-      -->
-<!--     <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        manager=".interfaces.IToolbar"
-        template="contentactions_blank.pt"
-        permission="zope2.View"
-        /> -->
-
-    <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        view="plone.app.layout.globals.interfaces.IViewView"
-        manager=".interfaces.IToolbar"
-        class=".common.ContentActionsViewlet"
-        permission="zope2.View"
-        />
-
-    <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        view="plone.app.content.browser.interfaces.IFolderContentsView"
-        manager=".interfaces.IToolbar"
-        class=".common.ContentActionsViewlet"
-        permission="zope2.View"
-        />
-
     <!-- Render the browser title -->
     <browser:viewlet
         name="plone.htmlhead.title"
diff --git a/plone/app/layout/viewlets/contentactions.pt b/plone/app/layout/viewlets/contentactions.pt
deleted file mode 100644
index ec33e46..0000000
--- a/plone/app/layout/viewlets/contentactions.pt
+++ /dev/null
@@ -1,38 +0,0 @@
-<tal:actions define="ploneview context/@@plone"
-             condition="ploneview/showEditableBorder"
-             i18n:domain="plone">
-
-<tal:contentactions define="content_actions view/object_actions;">
-  <li tal:condition="content_actions">
-    <a tal:condition="content_actions | wf_state"
-       i18n:translate="heading_actions">Actions</a>
-
-    <ul tal:condition="content_actions" class="actionItems">
-        <li tal:repeat="action content_actions"
-            tal:attributes="id string:contentaction-${action/id};">
-
-            <a class="" href=""
-               tal:define="icon python:view.icon(action)"
-               tal:attributes="href action/url;
-                               target action/link_target|nothing;">
-
-                <img alt="" src=""
-                     tal:condition="icon"
-                     tal:attributes="src icon; alt action/title;" />
-
-                <tal:action tal:content="action/title" i18n:translate="">
-                    Action name
-                </tal:action>
-            </a>
-
-        </li>
-    </ul>
-  </li>
-
-</tal:contentactions>
-
-<tal:contentmenus>
-  <div tal:replace="structure provider:plone.contentmenu" />
-</tal:contentmenus>
-
-</tal:actions>
diff --git a/plone/app/layout/viewlets/contentviews.pt b/plone/app/layout/viewlets/contentviews.pt
index c556e33..5abe09b 100644
--- a/plone/app/layout/viewlets/contentviews.pt
+++ b/plone/app/layout/viewlets/contentviews.pt
@@ -2,40 +2,14 @@
                   tal:condition="ploneview/showEditableBorder"
                   i18n:domain="plone">
 
-  <tal:block define="view_actions view/prepareObjectTabs;">
-  <tal:actions tal:repeat="action view_actions">
-    <li tal:attributes="id string:contentview-${action/id};
-                        class python: action.get('selected') and 'active' or ''"
-        tal:define="actionid action/id"
-        tal:condition="python:actionid != 'history'">
-      <tal:var define="selected action/selected|nothing;">
-        <a href="#"
-           tal:attributes="href action/url;
-                           target action/link_target|nothing;">
-          <span tal:attributes="class string:icon-${action/id}${action/cssClass|nothing};"
-                class="icon-folderContents" aria-hidden="true">
-          </span>
-          <span tal:content="action/title" i18n:translate="">View name</span>
-        </a>
-      </tal:var>
-    </li>
-    <li tal:attributes="id string:contentview-${action/id};
-                        class python: action.get('selected') and 'active' or ''"
-        tal:define="actionid action/id"
-        tal:condition="python:actionid == 'history'">
-      <tal:var define="selected action/selected|nothing;
-                       locked view/locked_icon">
-        <a href="#"
-           tal:attributes="href action/url;
-                           target action/link_target|nothing;">
-          <span tal:attributes="class python:locked and 'icon-lock' or 'icon-history'"
-                class="icon-folderContents" aria-hidden="true">
-          </span>
-          <span class="pat-moment" data-pat-moment="format:relative;"
-                tal:content="context/ModificationDate">Modified</span>
-        </a>
-      </tal:var>
-    </li>
-  </tal:actions>
+  <tal:block define="actions view/tabSet1;">
+    <div tal:replace="structure python: view.menu_template(actions=actions)" />
   </tal:block>
+  <tal:contentmenus>
+    <div tal:replace="structure provider:plone.contentmenu" />
+  </tal:contentmenus>
+  <tal:block define="actions view/tabSet2;">
+    <div tal:replace="structure python: view.menu_template(actions=actions)" />
+  </tal:block>
+
 </tal:contentviews>
diff --git a/plone/app/layout/viewlets/menu.pt b/plone/app/layout/viewlets/menu.pt
new file mode 100644
index 0000000..55308a5
--- /dev/null
+++ b/plone/app/layout/viewlets/menu.pt
@@ -0,0 +1,38 @@
+<tal:contentviews tal:define="ploneview context/@@plone;"
+                  tal:condition="ploneview/showEditableBorder"
+                  i18n:domain="plone">
+  <tal:actions tal:repeat="action options/actions">
+    <li tal:attributes="id string:contentview-${action/id};
+                        class python: action.get('selected') and 'active' or ''"
+        tal:define="actionid action/id"
+        tal:condition="python:actionid != 'history'">
+      <tal:var define="selected action/selected|nothing;">
+        <a href="#"
+           tal:attributes="href action/url;
+                           target action/link_target|nothing;">
+          <span tal:attributes="class string:icon-${action/id}${action/cssClass|nothing};"
+                class="icon-folderContents" aria-hidden="true">
+          </span>
+          <span tal:content="action/title" i18n:translate="">View name</span>
+        </a>
+      </tal:var>
+    </li>
+    <li tal:attributes="id string:contentview-${action/id};
+                        class python: action.get('selected') and 'active' or ''"
+        tal:define="actionid action/id"
+        tal:condition="python:actionid == 'history'">
+      <tal:var define="selected action/selected|nothing;
+                       locked view/locked_icon">
+        <a href="#"
+           tal:attributes="href action/url;
+                           target action/link_target|nothing;">
+          <span tal:attributes="class python:locked and 'icon-lock' or 'icon-history'"
+                class="icon-folderContents" aria-hidden="true">
+          </span>
+          <span class="pat-moment" data-pat-moment="format:relative;"
+                tal:content="context/ModificationDate">Modified</span>
+        </a>
+      </tal:var>
+    </li>
+  </tal:actions>
+</tal:contentviews>
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py
index 9770214..753b6d1 100644
--- a/plone/app/layout/viewlets/tests/test_common.py
+++ b/plone/app/layout/viewlets/tests/test_common.py
@@ -53,38 +53,26 @@ def _invalidateRequestMemoizations(self):
         except AttributeError:
             pass
 
-    def testPrepareObjectTabsOnPortalRoot(self):
+    def testSet1OnPortalRoot(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = self.portal.absolute_url()
         view = ContentViewsViewlet(self.portal, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(tabs[0]['id'], 'folderContents')
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
+        view.update()
+        self.assertEqual(view.tabSet1[0]['id'], 'folderContents')
 
-    def testPrepareObjectTabsNonFolder(self):
-        self._invalidateRequestMemoizations()
-        self.loginAsPortalOwner()
-        self.app.REQUEST['ACTUAL_URL'] = self.folder.test.absolute_url()
-        view = ContentViewsViewlet(self.folder.test, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(0, len([t for t in tabs if t[
-                         'id'] == 'folderContents']))
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
-
-    def testPrepareObjectTabsNonStructuralFolder(self):
+    def testSet1NonStructuralFolder(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = self.folder.absolute_url()
         directlyProvides(self.folder, INonStructuralFolder)
         view = ContentViewsViewlet(self.folder, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
+        view.update()
         noLongerProvides(self.folder, INonStructuralFolder)
-        self.assertEqual(0, len([t for t in tabs if t[
+        self.assertEqual(1, len([t for t in view.tabSet1 if t[
                          'id'] == 'folderContents']))
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
 
-    def testPrepareObjectTabsDefaultView(self):
+    def testSet1(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = '%s/edit?_authenticator=%s' % (
@@ -92,10 +80,10 @@ def testPrepareObjectTabsDefaultView(self):
             auth.createToken()
         )
         view = ContentViewsViewlet(self.folder.test, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(0, len([t for t in tabs if t[
+        view.update()
+        self.assertEqual(1, len([t for t in view.tabSet1 if t[
                          'id'] == 'folderContents']))
-        self.assertEqual(['edit'], [t['id'] for t in tabs if t['selected']])
+        self.assertEqual(['edit'], [t['id'] for t in view.tabSet1 if t['selected']])
 
     def testTitleViewlet(self):
         """Title viewlet renders navigation root title


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/279bd8199c58e28f3ecec8f7e609da6664a6b66d

Calling super to get the portal_state

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 8e5d634..6110011 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -290,6 +290,7 @@ def update(self):
         # from plone.app.contentmenu. This behaves differently depending on
         # whether the view is marked with IViewView. If our parent view
         # provides that marker, we should do it here as well.
+        super(ContentViewsViewlet, self).update()
         if IViewView.providedBy(self.__parent__):
             alsoProvides(self, IViewView)
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/64351e52acff3756dee31753a7d3bc81d711e280

put modal links in properly

Files changed:
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/menu.pt

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 6110011..3feea33 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -283,14 +283,13 @@ class ContentViewsViewlet(ViewletBase):
     menu_template = ViewPageTemplateFile('menu.pt')
 
     default_tab = 'nothing'
-    primary = ['folderContents', 'edit']
+    primary = ['folderContents', 'edit', 'view']
 
     def update(self):
         # The drop-down menus are pulled in via a simple content provider
         # from plone.app.contentmenu. This behaves differently depending on
         # whether the view is marked with IViewView. If our parent view
         # provides that marker, we should do it here as well.
-        super(ContentViewsViewlet, self).update()
         if IViewView.providedBy(self.__parent__):
             alsoProvides(self, IViewView)
 
@@ -347,7 +346,7 @@ def update(self):
                 request_action = context_fti.queryMethodID(
                     request_action, default=request_action
                 )
-                if action_method == request_action:
+                if action_method == request_action and item['id'] != 'view':
                     item['selected'] = True
                     found_selected = True
 
@@ -359,7 +358,8 @@ def update(self):
             item['cssClass'] = ''
             if modal:
                 item['cssClass'] += ' pat-plone-modal'
-                item['url'] += '?ajax_load=1'
+                if 'ajax_load' not in item['url']:
+                    item['url'] += '?ajax_load=1'
 
             if item['id'] in self.primary:
                 tabSet1.append(item)
diff --git a/plone/app/layout/viewlets/menu.pt b/plone/app/layout/viewlets/menu.pt
index 55308a5..2b941dc 100644
--- a/plone/app/layout/viewlets/menu.pt
+++ b/plone/app/layout/viewlets/menu.pt
@@ -9,7 +9,8 @@
       <tal:var define="selected action/selected|nothing;">
         <a href="#"
            tal:attributes="href action/url;
-                           target action/link_target|nothing;">
+                           target action/link_target|nothing;
+                           class action/cssClass|nothing;">
           <span tal:attributes="class string:icon-${action/id}${action/cssClass|nothing};"
                 class="icon-folderContents" aria-hidden="true">
           </span>
@@ -25,7 +26,8 @@
                        locked view/locked_icon">
         <a href="#"
            tal:attributes="href action/url;
-                           target action/link_target|nothing;">
+                           target action/link_target|nothing;
+                           class action/cssClass|nothing">
           <span tal:attributes="class python:locked and 'icon-lock' or 'icon-history'"
                 class="icon-folderContents" aria-hidden="true">
           </span>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/5fd5d4d6cd0e606e3868e600dbc8864219425675

memoize this so tests do not break

Files changed:
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 3feea33..b9f4660 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -290,9 +290,14 @@ def update(self):
         # from plone.app.contentmenu. This behaves differently depending on
         # whether the view is marked with IViewView. If our parent view
         # provides that marker, we should do it here as well.
+        super(ContentViewsViewlet, self).update()
         if IViewView.providedBy(self.__parent__):
             alsoProvides(self, IViewView)
 
+        self.tabSet1, self.tabSet2 = self.getTabSets()
+
+    @memoize
+    def getTabSets(self):
         context = aq_inner(self.context)
         context_url = context.absolute_url()
         context_fti = context.getTypeInfo()
@@ -370,8 +375,7 @@ def update(self):
             fallback_action['selected'] = True
 
         tabSet1.sort(key=lambda item: self.primary.index(item['id']))
-        self.tabSet1 = tabSet1
-        self.tabSet2 = tabSet2
+        return tabSet1, tabSet2
 
     def locked_icon(self):
         if not getSecurityManager().checkPermission('Modify portal content',


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:19:44+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/3494e4c2cb71f19320895c7aee1cee3ebbfc327b

timeago time on history view

Files changed:
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/content_history.pt

diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index 7e8e480..718b29f 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -388,9 +388,10 @@ def fullHistory(self):
     def toLocalizedTime(self, time, long_format=None, time_only=None):
         """Convert time to localized time
         """
-        util = getToolByName(self.context, 'translation_service')
-        return util.ulocalized_time(time, long_format, time_only, self.context,
-                                    domain='plonelocales')
+        # util = getToolByName(self.context, 'translation_service')
+        return DateTime(time).ISO()
+        # return util.ulocalized_time(time, long_format, time_only, self.context,
+        #                             domain='plonelocales')
 
 
 class ContentHistoryView(ContentHistoryViewlet):
diff --git a/plone/app/layout/viewlets/content_history.pt b/plone/app/layout/viewlets/content_history.pt
index 7fa6b5b..3d8d5bf 100644
--- a/plone/app/layout/viewlets/content_history.pt
+++ b/plone/app/layout/viewlets/content_history.pt
@@ -28,7 +28,7 @@
                                    tal:replace="actor_name"/>
                          </tal:actor>
                          on
-                         <span tal:content="python:view.toLocalizedTime(item['time'],long_format=True)" class="pat-moment" data-pat-moment="format:relative;"/>
+                         <span i18n:translate=""  i18n:name="time" tal:content="python:view.toLocalizedTime(item['time'],long_format=True)" class="pat-moment" data-pat-moment="format:relative;"/>
                      </tal:action>
                      <tal:effective tal:condition="effective|nothing">
                          (<span i18n:translate="label_publishing_effective" tal:omit-tag="">effective</span>:


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-07-16T18:32:59+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/1b9920f98473e0ce307303ea809849ff4a7406f4

Merge pull request #48 from plone/toolbar-fixup

Toolbar fixup

Files changed:
A plone/app/layout/viewlets/menu.pt
A plone/app/layout/viewlets/toolbar.pt
A plone/app/layout/viewlets/toolbar.py
M CHANGES.rst
M plone/app/layout/globals/context.py
M plone/app/layout/globals/layout.py
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/content_history.pt
M plone/app/layout/viewlets/contentviews.pt
M plone/app/layout/viewlets/history_view.pt
M plone/app/layout/viewlets/logo.pt
M plone/app/layout/viewlets/searchbox.pt
M plone/app/layout/viewlets/site_actions.pt
M plone/app/layout/viewlets/tests/history.txt
M plone/app/layout/viewlets/tests/test_common.py
M plone/app/layout/viewlets/tests/test_content.py
M plone/app/layout/viewlets/tiny_logo.pt
D plone/app/layout/viewlets/contentactions.pt
D plone/app/layout/viewlets/document_byline.pt
D plone/app/layout/viewlets/personal_bar.pt
D plone/app/layout/viewlets/skip_links.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 235ac29..557ddea 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,24 @@ Changelog
 - by default, show site logo in social settings
   [vangheem]
 
+- Add aria hidden role to avoid screenreaders to nonesense stop by at the
+  toolbar tiny logo [sneridagh]
+
+- Get rid completely of the plone.skip_links viewlet because it already doesn't
+  worked OOTB since always and this does not follow modern a11y methods and we
+  are dropping support for outdated ways [sneridagh]
+
+- Remove all references to "accesskeys" attributes on templates [sneridagh]
+
+- Disabled document_byline viewlet in favor of toolbar action.
+  [agitator]
+
+- Added documentByLine to @@historyview
+  [agitator]
+
+- removed DocumentBylineViewlet
+  [agitator]
+
 
 2.5.7 (2015-06-05)
 ------------------
diff --git a/plone/app/layout/globals/context.py b/plone/app/layout/globals/context.py
index b1a3eaf..bfa09b6 100644
--- a/plone/app/layout/globals/context.py
+++ b/plone/app/layout/globals/context.py
@@ -1,5 +1,3 @@
-import warnings
-
 from zope.interface import implements
 from zope.component import getMultiAdapter
 from zope.component import queryAdapter
@@ -233,29 +231,17 @@ def actions(self, category=None, max=-1):
         context = aq_inner(self.context)
         atool = getToolByName(context, "portal_actions")
         ttool = getToolByName(context, "portal_types")
-        if category is None:
-            warnings.warn(
-                "The actions method of the context state view was "
-                "called without a category argument. This is deprecated and "
-                "won't be supported anymore in Plone 5.",
-                DeprecationWarning, 3
-            )
-            actions = atool.listFilteredActionsFor(
-                context,
-                ignore_providers=BLACKLISTED_PROVIDERS,
-                ignore_categories=BLACKLISTED_CATEGORIES)
-        else:
-            actions = []
-            actions.extend(ttool.listActionInfos(
-                object=context,
-                category=category,
-                max=max,
-            ))
-            actions.extend(atool.listActionInfos(
-                object=context,
-                categories=(category, ),
-                max=max,
-            ))
+        actions = []
+        actions.extend(ttool.listActionInfos(
+            object=context,
+            category=category,
+            max=max,
+        ))
+        actions.extend(atool.listActionInfos(
+            object=context,
+            categories=(category, ),
+            max=max,
+        ))
         return actions
 
     def portlet_assignable(self):
diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index 9c7a85b..be19a6a 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -1,27 +1,28 @@
-from zope.component import getUtility
-from plone.registry.interfaces import IRegistry
+import json
+
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
+from Products.Five.browser.metaconfigure import ViewMixinForTemplates
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from plone.app.layout.globals.interfaces import ILayoutPolicy
+from plone.app.layout.globals.interfaces import IViewView
+from plone.app.layout.icons.interfaces import IContentIcon
 from plone.i18n.normalizer.interfaces import IIDNormalizer
 from plone.memoize.view import memoize
 from plone.portlets.interfaces import IPortletManager
 from plone.portlets.interfaces import IPortletManagerRenderer
+from plone.registry.interfaces import IRegistry
+from zope.browserpage.viewpagetemplatefile import (
+    ViewPageTemplateFile as ZopeViewPageTemplateFile
+)
 from zope.component import getMultiAdapter
-from zope.component import queryUtility
+from zope.component import getUtility
 from zope.component import queryMultiAdapter
+from zope.component import queryUtility
 from zope.interface import alsoProvides
 from zope.interface import implements
 from zope.publisher.browser import BrowserView
 
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from zope.browserpage.viewpagetemplatefile import (
-    ViewPageTemplateFile as ZopeViewPageTemplateFile
-)
-from Products.Five.browser.metaconfigure import ViewMixinForTemplates
-
-from plone.app.layout.globals.interfaces import ILayoutPolicy
-from plone.app.layout.globals.interfaces import IViewView
-from plone.app.layout.icons.interfaces import IContentIcon
-
 
 class LayoutPolicy(BrowserView):
     """A view that gives access to various layout related functions.
@@ -186,23 +187,37 @@ def bodyClass(self, template, view):
             for role in user.getRolesInContext(self.context):
                 body_classes.append('userrole-' + role.lower().replace(' ', '-'))
 
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISiteSchema, prefix='plone', check=False)
+
             # toolbar classes
-            toolbar_state = self.request.cookies.get('plone-toolbar')
-            if toolbar_state:
-                if 'plone-toolbar-left' in toolbar_state:
-                    if 'expanded' in toolbar_state:
+            try:
+                left = settings.toolbar_position == 'side'
+            except KeyError:
+                left = True
+            if left:
+                body_classes.append('plone-toolbar-left')
+            else:
+                body_classes.append('plone-toolbar-top')
+            try:
+                toolbar_state = self.request.cookies.get('plone-toolbar')
+                if toolbar_state:
+                    toolbar_state = json.loads(toolbar_state)
+                else:
+                    toolbar_state = {'expanded': False}
+                if toolbar_state.get('expanded', True):
+                    body_classes.append('plone-toolbar-expanded')
+                    if left:
                         body_classes.append('plone-toolbar-left-expanded')
                     else:
-                        body_classes.append('plone-toolbar-left-default')
-                if 'plone-toolbar-top' in toolbar_state:
-                    if 'expanded' in toolbar_state:
                         body_classes.append('plone-toolbar-top-expanded')
+                else:
+                    if left:
+                        body_classes.append('plone-toolbar-left-default')
                     else:
                         body_classes.append('plone-toolbar-top-default')
-                if 'compressed' in toolbar_state:
-                    body_classes.append('plone-toolbar-compressed')
-            else:
-                body_classes.append('plone-toolbar-left-default')
+            except:
+                pass
 
         # class for markspeciallinks pattern
         properties = getToolByName(context, "portal_properties")
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index bb3b100..b9f4660 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -6,6 +6,7 @@
 
 from plone.memoize.view import memoize
 from zope.component import getMultiAdapter
+from zope.component import queryMultiAdapter
 from zope.component import getUtility
 from zope.deprecation.deprecation import deprecate
 from zope.i18n import translate
@@ -147,15 +148,6 @@ def update(self):
             self.enabled = toc
 
 
-class SkipLinksViewlet(ViewletBase):
-    index = ViewPageTemplateFile('skip_links.pt')
-
-    def update(self):
-        context_state = getMultiAdapter((self.context, self.request),
-                                        name=u'plone_context_state')
-        self.current_page_url = context_state.current_page_url
-
-
 class SiteActionsViewlet(ViewletBase):
     index = ViewPageTemplateFile('site_actions.pt')
 
@@ -242,8 +234,6 @@ def selectedTabs(self, default_tab='index_html', portal_tabs=()):
 
 class PersonalBarViewlet(ViewletBase):
 
-    index = ViewPageTemplateFile('personal_bar.pt')
-
     def update(self):
         super(PersonalBarViewlet, self).update()
         context = aq_inner(self.context)
@@ -290,13 +280,24 @@ def update(self):
 
 class ContentViewsViewlet(ViewletBase):
     index = ViewPageTemplateFile('contentviews.pt')
+    menu_template = ViewPageTemplateFile('menu.pt')
+
+    default_tab = 'nothing'
+    primary = ['folderContents', 'edit', 'view']
+
+    def update(self):
+        # The drop-down menus are pulled in via a simple content provider
+        # from plone.app.contentmenu. This behaves differently depending on
+        # whether the view is marked with IViewView. If our parent view
+        # provides that marker, we should do it here as well.
+        super(ContentViewsViewlet, self).update()
+        if IViewView.providedBy(self.__parent__):
+            alsoProvides(self, IViewView)
+
+        self.tabSet1, self.tabSet2 = self.getTabSets()
 
     @memoize
-    def prepareObjectTabs(self, default_tab='view',
-                          sort_first=['folderContents']):
-        """Prepare the object tabs by determining their order and working
-        out which tab is selected. Used in global_contentviews.pt
-        """
+    def getTabSets(self):
         context = aq_inner(self.context)
         context_url = context.absolute_url()
         context_fti = context.getTypeInfo()
@@ -310,8 +311,10 @@ def prepareObjectTabs(self, default_tab='view',
         if context_state.is_structural_folder():
             action_list = actions('folder')
         action_list.extend(actions('object'))
+        action_list.extend(actions('object_actions'))
 
-        tabs = []
+        tabSet1 = []
+        tabSet2 = []
         found_selected = False
         fallback_action = None
 
@@ -348,33 +351,55 @@ def prepareObjectTabs(self, default_tab='view',
                 request_action = context_fti.queryMethodID(
                     request_action, default=request_action
                 )
-                if action_method == request_action:
+                if action_method == request_action and item['id'] != 'view':
                     item['selected'] = True
                     found_selected = True
 
             current_id = item['id']
-            if current_id == default_tab:
+            if current_id == self.default_tab:
                 fallback_action = item
 
             modal = item.get('modal', None)
             item['cssClass'] = ''
             if modal:
                 item['cssClass'] += ' pat-plone-modal'
-                item['url'] += '?ajax_load=1'
+                if 'ajax_load' not in item['url']:
+                    item['url'] += '?ajax_load=1'
 
-            tabs.append(item)
+            if item['id'] in self.primary:
+                tabSet1.append(item)
+            else:
+                tabSet2.append(item)
 
         if not found_selected and fallback_action is not None:
             fallback_action['selected'] = True
 
-        def sortOrder(tab):
-            try:
-                return sort_first.index(tab['id'])
-            except ValueError:
-                return 255
+        tabSet1.sort(key=lambda item: self.primary.index(item['id']))
+        return tabSet1, tabSet2
 
-        tabs.sort(key=sortOrder)
-        return tabs
+    def locked_icon(self):
+        if not getSecurityManager().checkPermission('Modify portal content',
+                                                    self.context):
+            return ""
+
+        locked = False
+        lock_info = queryMultiAdapter((self.context, self.request),
+                                      name='plone_lock_info')
+        if lock_info is not None:
+            locked = lock_info.is_locked()
+        else:
+            context = aq_inner(self.context)
+            lockable = getattr(context.aq_explicit,
+                               'wl_isLocked', None
+                               ) is not None
+            locked = lockable and context.wl_isLocked()
+
+        if not locked:
+            return ""
+
+        portal = self.portal_state.portal()
+        icon = portal.restrictedTraverse('lock_icon.png')
+        return icon.tag(title='Locked')
 
 
 class ManagePortletsFallbackViewlet(ViewletBase):
@@ -418,27 +443,6 @@ def update(self):
         self.breadcrumbs = breadcrumbs_view.breadcrumbs()
 
 
-class ContentActionsViewlet(ViewletBase):
-    index = ViewPageTemplateFile('contentactions.pt')
-
-    def update(self):
-        context = aq_inner(self.context)
-        context_state = getMultiAdapter((context, self.request),
-                                        name=u'plone_context_state')
-
-        self.object_actions = context_state.actions('object_actions')
-
-        # The drop-down menus are pulled in via a simple content provider
-        # from plone.app.contentmenu. This behaves differently depending on
-        # whether the view is marked with IViewView. If our parent view
-        # provides that marker, we should do it here as well.
-        if IViewView.providedBy(self.__parent__):
-            alsoProvides(self, IViewView)
-
-    def icon(self, action):
-        return action.get('icon', None)
-
-
 class TinyLogoViewlet(ViewletBase):
     index = ViewPageTemplateFile('tiny_logo.pt')
 
@@ -473,4 +477,4 @@ def render_footer_portlets(self):
         portlet_manager = getMultiAdapter(
             (self.context, self.request, self.__parent__), name='plone.footerportlets')
         portlet_manager.update()
-        return portlet_manager.render()
\ No newline at end of file
+        return portlet_manager.render()
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 0ed05db..e8cd0ee 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -67,7 +67,7 @@
         name="plone.toolbar"
         provides=".interfaces.IToolbar"
         permission="zope2.View"
-        class="plone.app.viewletmanager.manager.OrderedViewletManager"
+        class=".toolbar.ToolbarViewletManager"
         />
 
     <browser:viewletManager
@@ -152,14 +152,6 @@
         permission="zope2.View"
         />
 
-    <!-- The skip links for accessibility -->
-    <browser:viewlet
-        name="plone.skip_links"
-        manager=".interfaces.IPortalHeader"
-        class=".common.SkipLinksViewlet"
-        permission="zope2.View"
-        />
-
     <!-- The site actions -->
     <browser:viewlet
         name="plone.site_actions"
@@ -201,14 +193,6 @@
         permission="zope2.View"
         />
 
-    <!-- The personal bar -->
-    <browser:viewlet
-        name="plone.personal_bar"
-        manager=".interfaces.IToolbar"
-        class=".common.PersonalBarViewlet"
-        permission="zope2.View"
-        />
-
     <!-- Content views (tabs) -->
     <browser:viewlet
         name="plone.contentviews"
@@ -217,36 +201,6 @@
         permission="zope2.View"
         />
 
-    <!-- Content actions (menus)
-            The default version is a blank bar; the one with real menus is
-            registered for the main view + folder contents only.
-      -->
-<!--     <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        manager=".interfaces.IToolbar"
-        template="contentactions_blank.pt"
-        permission="zope2.View"
-        /> -->
-
-    <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        view="plone.app.layout.globals.interfaces.IViewView"
-        manager=".interfaces.IToolbar"
-        class=".common.ContentActionsViewlet"
-        permission="zope2.View"
-        />
-
-    <browser:viewlet
-        name="plone.contentactions"
-        for="*"
-        view="plone.app.content.browser.interfaces.IFolderContentsView"
-        manager=".interfaces.IToolbar"
-        class=".common.ContentActionsViewlet"
-        permission="zope2.View"
-        />
-
     <!-- Render the browser title -->
     <browser:viewlet
         name="plone.htmlhead.title"
@@ -319,7 +273,7 @@
     <browser:page
         for="*"
         name="historyview"
-        template="history_view.pt"
+        class=".content.HistoryByLineView"
         permission="zope2.View"
         />
 
@@ -356,14 +310,6 @@
         permission="zope2.View"
         />
 
-    <!-- Render the document byline -->
-    <browser:viewlet
-        name="plone.documentbyline"
-        manager=".interfaces.IToolbar"
-        class=".content.DocumentBylineViewlet"
-        permission="zope2.View"
-        />
-
     <!-- Render the keywords -->
     <browser:viewlet
         name="plone.belowcontenttitle.keywords"
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index d80450d..718b29f 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -8,6 +8,7 @@
 from DateTime import DateTime
 from plone.protect.authenticator import createToken
 from plone.registry.interfaces import IRegistry
+from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.CMFCore.utils import _checkPermission
 from Products.CMFCore.utils import getToolByName
@@ -56,17 +57,25 @@ def update(self):
         self.actions = self.context_state.actions('document_actions')
 
 
-class DocumentBylineViewlet(ViewletBase):
+class HistoryByLineView(BrowserView):
+    """ DocumentByLine information for content history view """
 
-    index = ViewPageTemplateFile("document_byline.pt")
+    index = ViewPageTemplateFile('history_view.pt')
 
     def update(self):
-        super(DocumentBylineViewlet, self).update()
+        context = self.context
+        self.portal_state = getMultiAdapter((context, self.request),
+                                            name=u'plone_portal_state')
         self.context_state = getMultiAdapter((self.context, self.request),
                                              name=u'plone_context_state')
         self.anonymous = self.portal_state.anonymous()
         self.has_pam = HAS_PAM
 
+    def __call__(self):
+        self.update()
+
+        return self.index()
+
     def show(self):
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
@@ -379,9 +388,10 @@ def fullHistory(self):
     def toLocalizedTime(self, time, long_format=None, time_only=None):
         """Convert time to localized time
         """
-        util = getToolByName(self.context, 'translation_service')
-        return util.ulocalized_time(time, long_format, time_only, self.context,
-                                    domain='plonelocales')
+        # util = getToolByName(self.context, 'translation_service')
+        return DateTime(time).ISO()
+        # return util.ulocalized_time(time, long_format, time_only, self.context,
+        #                             domain='plonelocales')
 
 
 class ContentHistoryView(ContentHistoryViewlet):
diff --git a/plone/app/layout/viewlets/content_history.pt b/plone/app/layout/viewlets/content_history.pt
index ca2524d..3d8d5bf 100644
--- a/plone/app/layout/viewlets/content_history.pt
+++ b/plone/app/layout/viewlets/content_history.pt
@@ -28,11 +28,11 @@
                                    tal:replace="actor_name"/>
                          </tal:actor>
                          on
-                         <span tal:replace="python:view.toLocalizedTime(item['time'],long_format=True)" i18n:name="time"/>
+                         <span i18n:translate=""  i18n:name="time" tal:content="python:view.toLocalizedTime(item['time'],long_format=True)" class="pat-moment" data-pat-moment="format:relative;"/>
                      </tal:action>
                      <tal:effective tal:condition="effective|nothing">
                          (<span i18n:translate="label_publishing_effective" tal:omit-tag="">effective</span>:
-                         <span tal:replace="effectiveDate"/>)
+                         <span tal:content="python:item['effective']" class="pat-moment" data-pat-moment="format:relative;" />)
                      </tal:effective>
 
                  </span>
diff --git a/plone/app/layout/viewlets/contentactions.pt b/plone/app/layout/viewlets/contentactions.pt
deleted file mode 100644
index ec33e46..0000000
--- a/plone/app/layout/viewlets/contentactions.pt
+++ /dev/null
@@ -1,38 +0,0 @@
-<tal:actions define="ploneview context/@@plone"
-             condition="ploneview/showEditableBorder"
-             i18n:domain="plone">
-
-<tal:contentactions define="content_actions view/object_actions;">
-  <li tal:condition="content_actions">
-    <a tal:condition="content_actions | wf_state"
-       i18n:translate="heading_actions">Actions</a>
-
-    <ul tal:condition="content_actions" class="actionItems">
-        <li tal:repeat="action content_actions"
-            tal:attributes="id string:contentaction-${action/id};">
-
-            <a class="" href=""
-               tal:define="icon python:view.icon(action)"
-               tal:attributes="href action/url;
-                               target action/link_target|nothing;">
-
-                <img alt="" src=""
-                     tal:condition="icon"
-                     tal:attributes="src icon; alt action/title;" />
-
-                <tal:action tal:content="action/title" i18n:translate="">
-                    Action name
-                </tal:action>
-            </a>
-
-        </li>
-    </ul>
-  </li>
-
-</tal:contentactions>
-
-<tal:contentmenus>
-  <div tal:replace="structure provider:plone.contentmenu" />
-</tal:contentmenus>
-
-</tal:actions>
diff --git a/plone/app/layout/viewlets/contentviews.pt b/plone/app/layout/viewlets/contentviews.pt
index 1b56638..5abe09b 100644
--- a/plone/app/layout/viewlets/contentviews.pt
+++ b/plone/app/layout/viewlets/contentviews.pt
@@ -2,20 +2,14 @@
                   tal:condition="ploneview/showEditableBorder"
                   i18n:domain="plone">
 
-  <tal:block define="view_actions view/prepareObjectTabs;">
-    <li tal:repeat="action view_actions"
-        tal:attributes="id string:contentview-${action/id};
-                        class python: action.get('selected') and 'active' or ''">
-      <tal:var define="selected action/selected|nothing;">
-        <a href="#"
-           tal:attributes="href action/url;
-                           target action/link_target|nothing;">
-          <span tal:attributes="class string:icon-${action/id}${action/cssClass|nothing};"
-                class="icon-folderContents" aria-hidden="true">
-          </span>
-          <span tal:content="action/title" i18n:translate="">View name</span>
-        </a>
-      </tal:var>
-    </li>
+  <tal:block define="actions view/tabSet1;">
+    <div tal:replace="structure python: view.menu_template(actions=actions)" />
   </tal:block>
+  <tal:contentmenus>
+    <div tal:replace="structure provider:plone.contentmenu" />
+  </tal:contentmenus>
+  <tal:block define="actions view/tabSet2;">
+    <div tal:replace="structure python: view.menu_template(actions=actions)" />
+  </tal:block>
+
 </tal:contentviews>
diff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt
deleted file mode 100644
index d649368..0000000
--- a/plone/app/layout/viewlets/document_byline.pt
+++ /dev/null
@@ -1,117 +0,0 @@
-<li id="plone-document-byline" class="plone-toolbar-separator"
-    tal:condition="view/show"
-    i18n:domain="plone">
-
-  <a href="#">
-    <span class="icon-contentInfo" aria-hidden="true"></span>
-    <span i18n:translate="">Content Info</span>
-    <span class="plone-toolbar-caret"></span>
-  </a>
-
-  <ul>
-    <li class="plone-toolbar-submenu-header">
-      <span id="lock-icon"
-            tal:define="lock_icon view/locked_icon"
-            tal:condition="python:lock_icon">
-        <img tal:replace="structure lock_icon" />
-      </span>
-      <span i18n:translate="">Content Info</span>
-    </li>
-    <li>
-      <tal:creator tal:define="creator_short_form view/creator;"
-                   tal:condition="creator_short_form">
-        <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
-                              creator_is_openid python:'/' in creator_short_form;
-                              creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-
-          <tal:i18n i18n:translate="label_by_author">
-            <a href="#"
-               class="documentAuthor"
-               tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
-               tal:omit-tag="python:view.author() is None">
-               by <tal:author tal:content="view/authorname" i18n:name="author">Roland Barthes</tal:author></a>
-          </tal:i18n>
-
-        </tal:name>
-      </tal:creator>
-    </li>
-    <li>
-      <tal:dates define="published view/pub_date;
-                         modified context/ModificationDate">
-        <span class="documentPublished"
-              tal:condition="published">
-          <span i18n:translate="box_published">
-            published
-          </span>
-          <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
-            August 16, 2001 at 23:35:59
-          </span><tal:sep condition="modified">,</tal:sep>
-        </span>
-
-        <span class="documentModified"
-              tal:condition="modified">
-          <span i18n:translate="box_last_modified">
-            last modified
-          </span>
-          <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
-            August 16, 2001 at 23:35:59
-          </span>
-        </span>
-      </tal:dates>
-    </li>
-    <li>
-      <tal:expired tal:condition="view/isExpired">
-        <span class="state-expired"
-              i18n:translate="time_expired">expired</span>
-      </tal:expired>
-    </li>
-    <li>
-      <a href="#" class="pat-plone-modal contentHistory" id="content-history"
-         tal:condition="view/show_history"
-         tal:attributes="href string:${here/absolute_url}/@@historyview"
-         i18n:translate="label_history">History</a>
-    </li>
-    <li>
-      <span class="documentContributors"
-           tal:define="contributors context/Contributors"
-           tal:condition="contributors"
-           i18n:translate="text_contributors">
-        Contributors:
-        <span i18n:name="name"
-              tal:omit-tag=""
-              tal:content="python: ', '.join(contributors)">
-          Mary
-        </span>
-      </span>
-    </li>
-    <li>
-      <span tal:define="rights context/Rights"
-                  tal:condition="rights">
-        <span tal:replace="rights">
-          Copyleft NiceCorp Inc.
-        </span>
-      </span>
-    </li>
-<!-- Part of the Albert's mockup, just decide if we need/want it.
-
-    <li class="plone-toolbar-submenu-header">
-      <span>File info</span>
-    </li>
-    <li><span>Content name: Name</span></li>
-    <li><span>Short name: /short-name</span></li>
-
-  -->
-    <li class="plone-toolbar-submenu-header"
-        tal:condition="view/has_pam">
-      <span>Linked Translations</span>
-    </li>
-    <tal:translations condition="view/has_pam">
-      <li tal:repeat="linked_content view/get_translations">
-        <a tal:attributes="href linked_content/url"
-           tal:content="linked_content/lang_native">
-            Occitanian
-        </a>
-      </li>
-    </tal:translations>
-  </ul>
-</li>
diff --git a/plone/app/layout/viewlets/history_view.pt b/plone/app/layout/viewlets/history_view.pt
index 4545426..92a149b 100644
--- a/plone/app/layout/viewlets/history_view.pt
+++ b/plone/app/layout/viewlets/history_view.pt
@@ -13,6 +13,93 @@
             Generic KSS Title. Is rendered with class="documentFirstHeading".
         </h1>
 
+        <div class="documentByLine"
+             id="plone-document-byline"
+             i18n:domain="plone"
+             tal:condition="view/show">
+          <span id="lock-icon"
+                tal:define="lock_icon view/locked_icon"
+                tal:condition="python:lock_icon">
+              <img tal:replace="structure lock_icon" />
+          </span>
+
+          <tal:creator tal:define="creator_short_form view/creator;"
+                       tal:condition="creator_short_form">
+          <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
+                                creator_is_openid python:'/' in creator_short_form;
+                                creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+            <span class="documentAuthor">
+              <tal:i18n i18n:translate="label_by_author">
+              by
+              <a href="#"
+                 tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
+                 tal:content="view/authorname"
+                 tal:omit-tag="python:view.author() is None"
+                 i18n:name="author">Roland Barthes</a>
+              </tal:i18n>
+                 —
+            </span>
+          </tal:name>
+          </tal:creator>
+
+          <tal:dates define="published view/pub_date;
+                             modified context/ModificationDate">
+          <span class="documentPublished"
+                tal:condition="published">
+            <span i18n:translate="box_published">
+              published
+            </span>
+            <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
+              August 16, 2001 at 23:35:59
+            </span><tal:sep condition="modified">,</tal:sep>
+          </span>
+
+          <span class="documentModified"
+                tal:condition="modified">
+            <span i18n:translate="box_last_modified">
+              last modified
+            </span>
+            <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
+              August 16, 2001 at 23:35:59
+            </span>
+          </span>
+          </tal:dates>
+
+          <tal:expired tal:condition="view/isExpired">
+            —
+            <span class="state-expired"
+                  i18n:translate="time_expired">expired</span>
+          </tal:expired>
+
+          <span class="contentHistory" id="content-history"
+                tal:condition="view/show_history">
+            —
+            <a href="#"
+               tal:attributes="href string:${here/absolute_url}/@@historyview"
+               i18n:translate="label_history">History</a>
+          </span>
+
+          <div class="documentContributors"
+               tal:define="contributors context/Contributors"
+               tal:condition="contributors"
+               i18n:translate="text_contributors">
+            Contributors:
+            <span i18n:name="name"
+                  tal:omit-tag=""
+                  tal:content="python: ', '.join(contributors)">
+              Mary
+            </span>
+          </div>
+
+          <tal:rights tal:define="rights context/Rights"
+                      tal:condition="rights">
+            <div tal:replace="rights">
+              Copyleft NiceCorp Inc.
+            </div>
+          </tal:rights>
+
+        </div>
+
         <div id="content-core">
             <h3 i18n:translate="label_history">History</h3>
             <div tal:replace="structure here/@@contenthistory">Content History</div>
diff --git a/plone/app/layout/viewlets/logo.pt b/plone/app/layout/viewlets/logo.pt
index b05ce21..ae7f6c2 100644
--- a/plone/app/layout/viewlets/logo.pt
+++ b/plone/app/layout/viewlets/logo.pt
@@ -1,6 +1,5 @@
 <a id="portal-logo"
    title="Home"
-   accesskey="1"
    tal:attributes="href view/navigation_root_url;
                    title view/navigation_root_title"
    i18n:domain="plone"
diff --git a/plone/app/layout/viewlets/menu.pt b/plone/app/layout/viewlets/menu.pt
new file mode 100644
index 0000000..2b941dc
--- /dev/null
+++ b/plone/app/layout/viewlets/menu.pt
@@ -0,0 +1,40 @@
+<tal:contentviews tal:define="ploneview context/@@plone;"
+                  tal:condition="ploneview/showEditableBorder"
+                  i18n:domain="plone">
+  <tal:actions tal:repeat="action options/actions">
+    <li tal:attributes="id string:contentview-${action/id};
+                        class python: action.get('selected') and 'active' or ''"
+        tal:define="actionid action/id"
+        tal:condition="python:actionid != 'history'">
+      <tal:var define="selected action/selected|nothing;">
+        <a href="#"
+           tal:attributes="href action/url;
+                           target action/link_target|nothing;
+                           class action/cssClass|nothing;">
+          <span tal:attributes="class string:icon-${action/id}${action/cssClass|nothing};"
+                class="icon-folderContents" aria-hidden="true">
+          </span>
+          <span tal:content="action/title" i18n:translate="">View name</span>
+        </a>
+      </tal:var>
+    </li>
+    <li tal:attributes="id string:contentview-${action/id};
+                        class python: action.get('selected') and 'active' or ''"
+        tal:define="actionid action/id"
+        tal:condition="python:actionid == 'history'">
+      <tal:var define="selected action/selected|nothing;
+                       locked view/locked_icon">
+        <a href="#"
+           tal:attributes="href action/url;
+                           target action/link_target|nothing;
+                           class action/cssClass|nothing">
+          <span tal:attributes="class python:locked and 'icon-lock' or 'icon-history'"
+                class="icon-folderContents" aria-hidden="true">
+          </span>
+          <span class="pat-moment" data-pat-moment="format:relative;"
+                tal:content="context/ModificationDate">Modified</span>
+        </a>
+      </tal:var>
+    </li>
+  </tal:actions>
+</tal:contentviews>
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/personal_bar.pt b/plone/app/layout/viewlets/personal_bar.pt
deleted file mode 100644
index 73fe70b..0000000
--- a/plone/app/layout/viewlets/personal_bar.pt
+++ /dev/null
@@ -1,27 +0,0 @@
-<li id="portal-personaltools" class="plone-toolbar-separator"
-    tal:condition="python:view.user_actions and not view.anonymous"
-    i18n:domain="plone">
-  <a href="#"
-     tal:attributes="href view/homelink_url">
-    <span class="icon-user" aria-hidden="true"></span>
-    <span tal:content="view/user_name">User</span>
-    <span class="plone-toolbar-caret"></span>
-  </a>
-  <ul>
-    <li class="plone-toolbar-submenu-header">
-      <span tal:content="view/user_name">Username</span>
-    </li>
-    <li class="user-action"
-        tal:repeat="action view/user_actions">
-      <a href=""
-         tal:attributes="action">
-          <tal:actionname tal:content="action/title">
-           action title
-          </tal:actionname>
-          <tal:islogout condition="python:action['id'] == 'personaltools-logout'">
-            <span class="icon-logout"></span>
-          </tal:islogout>
-      </a>
-    </li>
-  </ul>
-</li>
diff --git a/plone/app/layout/viewlets/searchbox.pt b/plone/app/layout/viewlets/searchbox.pt
index bde537c..7ec8ac4 100644
--- a/plone/app/layout/viewlets/searchbox.pt
+++ b/plone/app/layout/viewlets/searchbox.pt
@@ -21,7 +21,6 @@
                id="searchGadget"
                title="Search Site"
                placeholder="Search Site"
-               accesskey="4"
                i18n:attributes="title title_search_site;
                                 placeholder title_search_site"
                tal:attributes="value request/form/SearchableText|nothing;"
@@ -53,8 +52,7 @@
          class="hiddenStructure">
         <a href="#"
            tal:attributes="href string:${navigation_root_url}/@@search"
-           i18n:translate="label_advanced_search"
-           accesskey="5">
+           i18n:translate="label_advanced_search">
             Advanced Search&hellip;
         </a>
     </div>
diff --git a/plone/app/layout/viewlets/site_actions.pt b/plone/app/layout/viewlets/site_actions.pt
index acaf871..5e2daa0 100644
--- a/plone/app/layout/viewlets/site_actions.pt
+++ b/plone/app/layout/viewlets/site_actions.pt
@@ -1,5 +1,4 @@
 <ul id="portal-siteactions"
-    tal:define="accesskeys python: {'sitemap' : '3', 'accessibility' : '0', 'contact' : '9'};"
     tal:condition="view/site_actions"
     i18n:domain="plone">
 
@@ -7,14 +6,12 @@
         tal:attributes="id string:siteaction-${saction/id}"><a
            href=""
            tal:define="title saction/title;
-                       id saction/id;
-                       accesskey python: accesskeys.get(id, '');"
+                       id saction/id;"
            i18n:attributes="title"
            i18n:translate=""
            tal:content="title"
            tal:attributes="href saction/url;
                            target saction/link_target|nothing;
-                           title title;
-                           accesskey accesskey;"
+                           title title;"
            >Site action</a></li>
 </ul>
diff --git a/plone/app/layout/viewlets/skip_links.pt b/plone/app/layout/viewlets/skip_links.pt
deleted file mode 100644
index 6ff0c49..0000000
--- a/plone/app/layout/viewlets/skip_links.pt
+++ /dev/null
@@ -1,11 +0,0 @@
-<p class="hiddenStructure"
-   i18n:domain="plone"
-   tal:define="url view/current_page_url">
-  <a accesskey="2"
-     tal:attributes="href string:${url}#content"
-     i18n:translate="label_skiptocontent">Skip to content</a> |
-
-  <a accesskey="6"
-     tal:attributes="href string:${url}#portal-globalnav"
-     i18n:translate="label_skiptonavigation">Skip to navigation</a>
-</p>
diff --git a/plone/app/layout/viewlets/tests/history.txt b/plone/app/layout/viewlets/tests/history.txt
index 1507c09..320bc21 100644
--- a/plone/app/layout/viewlets/tests/history.txt
+++ b/plone/app/layout/viewlets/tests/history.txt
@@ -36,7 +36,7 @@ Check that the form has been properly submitted
 
 The history viewlet gracefully handles content without workflow.
 
-    >>> browser.getLink('History').click()
+    >>> browser.getLink(url='@@historyview').click()
 
 Create a public page with workflow.
 
@@ -54,7 +54,7 @@ Create a public page with workflow.
 
 The history viewlet gracefully handles initial default workflow state.
 
-    >>> browser.getLink('History').click()
+    >>> browser.getLink(url='@@historyview').click()
     >>> print browser.contents
     <...<span class="historyAction state-private">Create</span>...
 
diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py
index 9770214..753b6d1 100644
--- a/plone/app/layout/viewlets/tests/test_common.py
+++ b/plone/app/layout/viewlets/tests/test_common.py
@@ -53,38 +53,26 @@ def _invalidateRequestMemoizations(self):
         except AttributeError:
             pass
 
-    def testPrepareObjectTabsOnPortalRoot(self):
+    def testSet1OnPortalRoot(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = self.portal.absolute_url()
         view = ContentViewsViewlet(self.portal, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(tabs[0]['id'], 'folderContents')
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
+        view.update()
+        self.assertEqual(view.tabSet1[0]['id'], 'folderContents')
 
-    def testPrepareObjectTabsNonFolder(self):
-        self._invalidateRequestMemoizations()
-        self.loginAsPortalOwner()
-        self.app.REQUEST['ACTUAL_URL'] = self.folder.test.absolute_url()
-        view = ContentViewsViewlet(self.folder.test, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(0, len([t for t in tabs if t[
-                         'id'] == 'folderContents']))
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
-
-    def testPrepareObjectTabsNonStructuralFolder(self):
+    def testSet1NonStructuralFolder(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = self.folder.absolute_url()
         directlyProvides(self.folder, INonStructuralFolder)
         view = ContentViewsViewlet(self.folder, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
+        view.update()
         noLongerProvides(self.folder, INonStructuralFolder)
-        self.assertEqual(0, len([t for t in tabs if t[
+        self.assertEqual(1, len([t for t in view.tabSet1 if t[
                          'id'] == 'folderContents']))
-        self.assertEqual(['view'], [t['id'] for t in tabs if t['selected']])
 
-    def testPrepareObjectTabsDefaultView(self):
+    def testSet1(self):
         self._invalidateRequestMemoizations()
         self.loginAsPortalOwner()
         self.app.REQUEST['ACTUAL_URL'] = '%s/edit?_authenticator=%s' % (
@@ -92,10 +80,10 @@ def testPrepareObjectTabsDefaultView(self):
             auth.createToken()
         )
         view = ContentViewsViewlet(self.folder.test, self.app.REQUEST, None)
-        tabs = view.prepareObjectTabs()
-        self.assertEqual(0, len([t for t in tabs if t[
+        view.update()
+        self.assertEqual(1, len([t for t in view.tabSet1 if t[
                          'id'] == 'folderContents']))
-        self.assertEqual(['edit'], [t['id'] for t in tabs if t['selected']])
+        self.assertEqual(['edit'], [t['id'] for t in view.tabSet1 if t['selected']])
 
     def testTitleViewlet(self):
         """Title viewlet renders navigation root title
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index d7f4476..e2a53cc 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -1,6 +1,6 @@
 from DateTime import DateTime
 from plone.app.layout.viewlets.tests.base import ViewletsTestCase
-from plone.app.layout.viewlets.content import DocumentBylineViewlet
+from plone.app.layout.viewlets.content import HistoryByLineView
 from plone.app.layout.viewlets.content import ContentRelatedItems
 from plone.locking.interfaces import ILockable
 from plone.registry.interfaces import IRegistry
@@ -42,7 +42,7 @@ def afterSetUp(self):
 
     def _get_viewlet(self):
         request = self.app.REQUEST
-        viewlet = DocumentBylineViewlet(self.context, request, None, None)
+        viewlet = HistoryByLineView(self.context, request)
         viewlet.update()
         return viewlet
 
diff --git a/plone/app/layout/viewlets/tiny_logo.pt b/plone/app/layout/viewlets/tiny_logo.pt
index bc176e0..c0411b7 100644
--- a/plone/app/layout/viewlets/tiny_logo.pt
+++ b/plone/app/layout/viewlets/tiny_logo.pt
@@ -1,4 +1,3 @@
-<a class="plone-toolbar-logo">
+<a class="plone-toolbar-logo" aria-hidden="true">
     <img alt="Plone Toolbar" src="++resource++plone-toolbarlogo.svg" />
 </a>
-<a class="plone-toolbar-switcher"><span>Left-Top switcher</span></a>
diff --git a/plone/app/layout/viewlets/toolbar.pt b/plone/app/layout/viewlets/toolbar.pt
new file mode 100644
index 0000000..0f443c3
--- /dev/null
+++ b/plone/app/layout/viewlets/toolbar.pt
@@ -0,0 +1,47 @@
+<section id="edit-bar" role="toolbar"
+         tal:define="portal_state view/portal_state;
+                     personal_bar python: view.get_personal_bar()"
+         tal:condition="not: portal_state/anonymous"
+         i18n:domain="plone">
+  <div id="edit-zone" role="toolbar" class="pat-toolbar">
+    <div class="plone-toolbar-container">
+      <a class="plone-toolbar-logo">
+        <img alt="Plone Toolbar" tal:attributes="src view/get_toolbar_logo" />
+      </a>
+      <a class="plone-toolbar-switcher" tal:condition="view/show_switcher"><span>Left-Top switcher</span></a>
+      <nav role="navigation">
+        <ul class="plone-toolbar-main">
+          <div tal:replace="structure view/base_render">
+          </div>
+        </ul>
+        <ul id="personal-bar-container">
+          <li id="portal-personaltools" class="plone-toolbar-separator"
+              tal:condition="personal_bar/user_actions">
+            <a href="#"
+               tal:attributes="href personal_bar/homelink_url">
+              <span class="icon-user" aria-hidden="true"></span>
+              <span tal:content="personal_bar/user_name">User</span>
+              <span class="plone-toolbar-caret"></span>
+            </a>
+            <ul>
+              <li class="plone-toolbar-submenu-header">
+                <span tal:content="personal_bar/user_name">Username</span>
+              </li>
+              <li class="user-action"
+                  tal:repeat="action personal_bar/user_actions">
+                <a href="" tal:attributes="action">
+                  <tal:actionname tal:content="action/title">
+                     action title
+                  </tal:actionname>
+                  <tal:islogout condition="python:action['id'] == 'personaltools-logout'">
+                    <span class="icon-logout"></span>
+                  </tal:islogout>
+                </a>
+              </li>
+            </ul>
+          </li>
+        </ul>
+      </nav>
+    </div>
+  </div>
+</section>
diff --git a/plone/app/layout/viewlets/toolbar.py b/plone/app/layout/viewlets/toolbar.py
new file mode 100644
index 0000000..d8be2df
--- /dev/null
+++ b/plone/app/layout/viewlets/toolbar.py
@@ -0,0 +1,41 @@
+from plone.app.viewletmanager.manager import OrderedViewletManager
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from zope.component import getMultiAdapter
+from plone.memoize.instance import memoize
+from plone.app.layout.viewlets.common import PersonalBarViewlet
+from zope.component import getUtility
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces.controlpanel import ISiteSchema
+
+
+class ToolbarViewletManager(OrderedViewletManager):
+    custom_template = ViewPageTemplateFile('toolbar.pt')
+
+    def base_render(self):
+        return super(ToolbarViewletManager, self).render()
+
+    def render(self):
+        return self.custom_template()
+
+    @property
+    @memoize
+    def portal_state(self):
+        return getMultiAdapter((self.context, self.request), name='plone_portal_state')
+
+    def get_personal_bar(self):
+        viewlet = PersonalBarViewlet(self.context, self.request, self.__parent__, self)
+        viewlet.update()
+        return viewlet
+
+    def get_toolbar_logo(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISiteSchema, prefix='plone')
+        portal_url = self.portal_state.portal_url()
+        try:
+            logo = settings.toolbar_logo
+        except AttributeError:
+            logo = '/++plone++static/plone-toolbarlogo.svg'
+        return portal_url + logo
+
+    def show_switcher(self):
+        return False


