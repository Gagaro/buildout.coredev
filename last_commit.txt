Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-06-01T17:53:02+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/01d59ba9dd3fecd91a273bb286bb5fda5fcbb756

Remove ramcache-controlpanel csrf test.

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/csrf.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index 4c49c57..b9a6692 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
 5.0b3 (unreleased)
 ------------------
 
+- Remove ramcache-controlpanel csrf test. Ramcache control panel has been
+  moved to p.a.caching since ages. We will get rid of it.
+  [timo]
+
 - Add undeclared zope.cachedescriptors dependency.
   [timo]
 
diff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt
index fba8796..270fa51 100644
--- a/Products/CMFPlone/tests/csrf.txt
+++ b/Products/CMFPlone/tests/csrf.txt
@@ -411,24 +411,9 @@ Traceback (most recent call last):
 ...
 HTTPError: HTTP Error 403: Forbidden
 
-Exceptions to the rule are the "RAM Cache Settings" and "Maintenance"
-configlets, which are tested separately. The former isn't linked from the
-"Site Setup" overview, so we have to navigate there directly:
-
-  >>> browser.open('http://nohost/plone/@@ramcache-controlpanel')
-  >>> browser.getControl('Clear cache').click()
-  >>> browser.contents
-  '...Cleared the cache...'
-
-  >>> browser.open('http://nohost/plone/@@ramcache-controlpanel')
-  >>> browser.getControl(name='_authenticator', index=0).value = 'invalid!'
-  >>> browser.getControl('Clear cache').click()
-  Traceback (most recent call last):
-  ...
-  HTTPError: HTTP Error 403: Forbidden
-
-The "Maintenance" configlet has some special security limitations, which is
-why we need to log in as the portal owner first:
+Exceptions to the rule is the "Maintenance" configlet, which is tested
+separately. The "Maintenance" configlet has some special security
+limitations, which is why we need to log in as the portal owner first:
 
   >>> app_browser = Browser(self.app)
   >>> app_browser.handleErrors = False


