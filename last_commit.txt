Repository: Products.CMFPlacefulWorkflow


Branch: refs/heads/master
Date: 2015-09-19T19:09:21+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlacefulWorkflow/commit/24b85984b810fd5682e68ae8e7c3d0531f38660c

Allow unicode as workflow-policy-name

Files changed:
M CHANGES.rst
M Products/CMFPlacefulWorkflow/DefaultWorkflowPolicy.py
M Products/CMFPlacefulWorkflow/WorkflowPolicyConfig.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7a1c7b9..c9e1bb1 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.6.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Allow unicode as workflow-policy-name
+  [pbauer]
 
 
 1.6.2 (2015-09-07)
diff --git a/Products/CMFPlacefulWorkflow/DefaultWorkflowPolicy.py b/Products/CMFPlacefulWorkflow/DefaultWorkflowPolicy.py
index 03ef402..e6f8b63 100644
--- a/Products/CMFPlacefulWorkflow/DefaultWorkflowPolicy.py
+++ b/Products/CMFPlacefulWorkflow/DefaultWorkflowPolicy.py
@@ -198,7 +198,7 @@ def getChainFor(self, ob, managescreen=False):
         """
 
         cbt = self._chains_by_type
-        if isinstance(ob, type('')):
+        if isinstance(ob, basestring):
             pt = ob
         elif hasattr(aq_base(ob), '_getPortalTypeName'):
             pt = ob._getPortalTypeName()
@@ -213,7 +213,7 @@ def getChainFor(self, ob, managescreen=False):
             chain = cbt.get(pt, _MARKER)
 
         # Backwards compatibility: before chain was a string, not a list
-        if chain is not _MARKER and isinstance(chain, type('')):
+        if chain is not _MARKER and isinstance(chain, basestring):
             chain = map(lambda x: x.strip(), chain.split(','))
 
         Log.debug('Chain founded in policy %s', chain)
@@ -237,7 +237,7 @@ def setDefaultChain(self, default_chain, REQUEST=None):
         """ Sets the default chain for this tool. """
         wftool = getToolByName(self, 'portal_workflow')
 
-        if isinstance(default_chain, type('')):
+        if isinstance(default_chain, basestring):
             default_chain = map(lambda x: x.strip(), default_chain.split(','))
         ids = []
         for wf_id in default_chain:
@@ -277,7 +277,7 @@ def setChain(self, portal_type, chain, REQUEST=None):
         if portal_type not in [pt.id for pt in self._listTypeInfo()]:
             raise ValueError("'%s' is not a valid portal type." % portal_type)
 
-        if isinstance(chain, type('')):
+        if isinstance(chain, basestring):
             chain = map(lambda x: x.strip(), chain.split(','))
 
         wftool = getToolByName(self, 'portal_workflow')
diff --git a/Products/CMFPlacefulWorkflow/WorkflowPolicyConfig.py b/Products/CMFPlacefulWorkflow/WorkflowPolicyConfig.py
index dadfb84..9d5dd04 100644
--- a/Products/CMFPlacefulWorkflow/WorkflowPolicyConfig.py
+++ b/Products/CMFPlacefulWorkflow/WorkflowPolicyConfig.py
@@ -107,8 +107,8 @@ def getPolicyBelow(self):
     security.declareProtected(ManageWorkflowPolicies, 'setPolicyIn')
 
     def setPolicyIn(self, policy, update_security=False):
-        if not isinstance(policy, type('')):
-            raise ValueError("Policy must be a string")
+        if not isinstance(policy, basestring):
+            raise ValueError("Policy must be a basestring")
         self.workflow_policy_in = policy
         if update_security:
             wtool = getToolByName(self, 'portal_workflow')
@@ -129,7 +129,7 @@ def setPolicyIn(self, policy, update_security=False):
     security.declareProtected(ManageWorkflowPolicies, 'setPolicyBelow')
 
     def setPolicyBelow(self, policy, update_security=False):
-        if not isinstance(policy, type('')):
+        if not isinstance(policy, basestring):
             raise ValueError("Policy must be a string")
         self.workflow_policy_below = policy
         if update_security:


