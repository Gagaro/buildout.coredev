Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-08T12:15:42-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/df6a55bc97a7f816dac3d5fcd7925c92eba35c07

Bring back document byline

Files changed:
A plone/app/layout/viewlets/document_byline.pt
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6ebe285..5149a20 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.5.12 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Bring back document byline (closes `#741`_).
+  [rodfersou]
 
 
 2.5.11 (2015-09-07)
@@ -1566,3 +1567,5 @@ Changelog
 - Show the authors full name in presentation view. This fixes
   http://dev.plone.org/plone/ticket/6810
   [wichert]
+
+.. _`#741`: https://github.com/plone/Products.CMFPlone/issues/741
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index e8cd0ee..bb1dd74 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -310,6 +310,14 @@
         permission="zope2.View"
         />
 
+    <!-- Render the document byline -->
+    <browser:viewlet
+        name="plone.belowcontenttitle.documentbyline"
+        manager=".interfaces.IBelowContentTitle"
+        class=".content.DocumentBylineViewlet"
+        permission="zope2.View"
+        />
+
     <!-- Render the keywords -->
     <browser:viewlet
         name="plone.belowcontenttitle.keywords"
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index a458a92..d4ac86e 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -58,6 +58,116 @@ def update(self):
         self.actions = self.context_state.actions('document_actions')
 
 
+class DocumentBylineViewlet(ViewletBase):
+
+    index = ViewPageTemplateFile("document_byline.pt")
+
+    def update(self):
+        super(DocumentBylineViewlet, self).update()
+        self.context_state = getMultiAdapter((self.context, self.request),
+                                             name=u'plone_context_state')
+        self.anonymous = self.portal_state.anonymous()
+        self.has_pam = HAS_PAM
+
+    def show(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISecuritySchema,
+            prefix='plone',
+        )
+        return not self.anonymous or settings.allow_anon_views_about
+
+    def show_history(self):
+        has_access_preview_versions_permission = _checkPermission(
+            'CMFEditions: Access previous versions',
+            self.context
+        )
+        if not has_access_preview_versions_permission:
+            return False
+        if IViewView.providedBy(self.__parent__):
+            return True
+        if IFolderContentsView.providedBy(self.__parent__):
+            return True
+        return False
+
+    def locked_icon(self):
+        if not getSecurityManager().checkPermission('Modify portal content',
+                                                    self.context):
+            return ""
+
+        locked = False
+        lock_info = queryMultiAdapter((self.context, self.request),
+                                      name='plone_lock_info')
+        if lock_info is not None:
+            locked = lock_info.is_locked()
+        else:
+            context = aq_inner(self.context)
+            lockable = getattr(
+                context.aq_explicit, 'wl_isLocked', None) is not None
+            locked = lockable and context.wl_isLocked()
+
+        if not locked:
+            return ""
+
+        portal = self.portal_state.portal()
+        icon = portal.restrictedTraverse('lock_icon.png')
+        return icon.tag(title='Locked')
+
+    def creator(self):
+        return self.context.Creator()
+
+    def author(self):
+        membership = getToolByName(self.context, 'portal_membership')
+        return membership.getMemberInfo(self.creator())
+
+    def authorname(self):
+        author = self.author()
+        return author and author['fullname'] or self.creator()
+
+    def isExpired(self):
+        if base_hasattr(self.context, 'expires'):
+            return self.context.expires().isPast()
+        return False
+
+    def toLocalizedTime(self, time, long_format=None, time_only=None):
+        """Convert time to localized time
+        """
+        util = getToolByName(self.context, 'translation_service')
+        return util.ulocalized_time(time, long_format, time_only, self.context,
+                                    domain='plonelocales')
+
+    def pub_date(self):
+        """Return object effective date.
+
+        Return None if publication date is switched off in global site settings
+        or if Effective Date is not set on object.
+        """
+        # check if we are allowed to display publication date
+        properties = getToolByName(self.context, 'portal_properties')
+        site_properties = getattr(properties, 'site_properties')
+        if not site_properties.getProperty('displayPublicationDateInByline',
+           False):
+            return None
+
+        # check if we have Effective Date set
+        date = self.context.EffectiveDate()
+        if not date or date == 'None':
+            return None
+
+        return DateTime(date)
+
+    def get_translations(self):
+        cts = []
+        if ITranslatable.providedBy(self.context):
+            t_langs = translated_languages(self.context)
+            context_translations = ITranslationManager(self.context).get_translations()
+            for lang in t_langs:
+                cts.append(dict(lang_native=lang.title,
+                                url=context_translations[lang.value].absolute_url()))
+
+        return cts
+
+
 class HistoryByLineView(BrowserView):
     """ DocumentByLine information for content history view """
 
diff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt
new file mode 100644
index 0000000..32e19a3
--- /dev/null
+++ b/plone/app/layout/viewlets/document_byline.pt
@@ -0,0 +1,117 @@
+<li id="plone-document-byline" class="plone-toolbar-separator"
+    tal:condition="view/show"
+    i18n:domain="plone">
+
+  <a href="#">
+    <span class="icon-contentInfo" aria-hidden="true"></span>
+    <span i18n:translate="">Content Info</span>
+    <span class="plone-toolbar-caret"></span>
+  </a>
+
+  <ul>
+    <li class="plone-toolbar-submenu-header">
+      <span id="lock-icon"
+            tal:define="lock_icon view/locked_icon"
+            tal:condition="python:lock_icon">
+        <img tal:replace="structure lock_icon" />
+      </span>
+      <span i18n:translate="">Content Info</span>
+    </li>
+    <li>
+      <tal:creator tal:define="creator_short_form view/creator;"
+                   tal:condition="creator_short_form">
+        <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
+                              creator_is_openid python:'/' in creator_short_form;
+                              creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+
+          <tal:i18n i18n:translate="label_by_author">
+            <a href="#"
+               class="documentAuthor"
+               tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
+               tal:omit-tag="python:view.author() is None">
+               by <tal:author tal:content="view/authorname" i18n:name="author">Roland Barthes</tal:author></a>
+          </tal:i18n>
+
+        </tal:name>
+      </tal:creator>
+    </li>
+    <li>
+      <tal:dates define="published view/pub_date;
+                         modified context/ModificationDate">
+        <span class="documentPublished"
+              tal:condition="published">
+          <span i18n:translate="box_published">
+            published
+          </span>
+          <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
+            August 16, 2001 at 23:35:59
+          </span><tal:sep condition="modified">,</tal:sep>
+        </span>
+
+        <span class="documentModified"
+              tal:condition="modified">
+          <span i18n:translate="box_last_modified">
+            last modified
+          </span>
+          <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
+            August 16, 2001 at 23:35:59
+          </span>
+        </span>
+      </tal:dates>
+    </li>
+    <li>
+      <tal:expired tal:condition="view/isExpired">
+        <span class="state-expired"
+              i18n:translate="time_expired">expired</span>
+      </tal:expired>
+    </li>
+    <li>
+      <a href="#" class="contentHistory" id="content-history"
+         tal:condition="view/show_history"
+         tal:attributes="href string:${here/absolute_url}/@@historyview"
+         i18n:translate="label_history">History</a>
+    </li>
+    <li>
+      <span class="documentContributors"
+           tal:define="contributors context/Contributors"
+           tal:condition="contributors"
+           i18n:translate="text_contributors">
+        Contributors:
+        <span i18n:name="name"
+              tal:omit-tag=""
+              tal:content="python: ', '.join(contributors)">
+          Mary
+        </span>
+      </span>
+    </li>
+    <li>
+      <span tal:define="rights context/Rights"
+                  tal:condition="rights">
+        <span tal:replace="rights">
+          Copyleft NiceCorp Inc.
+        </span>
+      </span>
+    </li>
+<!-- Part of the Albert's mockup, just decide if we need/want it.
+
+    <li class="plone-toolbar-submenu-header">
+      <span>File info</span>
+    </li>
+    <li><span>Content name: Name</span></li>
+    <li><span>Short name: /short-name</span></li>
+
+  -->
+    <li class="plone-toolbar-submenu-header"
+        tal:condition="view/has_pam">
+      <span>Linked Translations</span>
+    </li>
+    <tal:translations condition="view/has_pam">
+      <li tal:repeat="linked_content view/get_translations">
+        <a tal:attributes="href linked_content/url"
+           tal:content="linked_content/lang_native">
+            Occitanian
+        </a>
+      </li>
+    </tal:translations>
+  </ul>
+</li>


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-08T11:19:36-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/6950deb73cd2e51d08a535a474c09636c207fb81

Merge pull request #59 from plone/issue_741

Issue 741 - Bring back document byline

Files changed:
A plone/app/layout/viewlets/document_byline.pt
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml
M plone/app/layout/viewlets/content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6ebe285..5149a20 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.5.12 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Bring back document byline (closes `#741`_).
+  [rodfersou]
 
 
 2.5.11 (2015-09-07)
@@ -1566,3 +1567,5 @@ Changelog
 - Show the authors full name in presentation view. This fixes
   http://dev.plone.org/plone/ticket/6810
   [wichert]
+
+.. _`#741`: https://github.com/plone/Products.CMFPlone/issues/741
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index e8cd0ee..bb1dd74 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -310,6 +310,14 @@
         permission="zope2.View"
         />
 
+    <!-- Render the document byline -->
+    <browser:viewlet
+        name="plone.belowcontenttitle.documentbyline"
+        manager=".interfaces.IBelowContentTitle"
+        class=".content.DocumentBylineViewlet"
+        permission="zope2.View"
+        />
+
     <!-- Render the keywords -->
     <browser:viewlet
         name="plone.belowcontenttitle.keywords"
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index a458a92..d4ac86e 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -58,6 +58,116 @@ def update(self):
         self.actions = self.context_state.actions('document_actions')
 
 
+class DocumentBylineViewlet(ViewletBase):
+
+    index = ViewPageTemplateFile("document_byline.pt")
+
+    def update(self):
+        super(DocumentBylineViewlet, self).update()
+        self.context_state = getMultiAdapter((self.context, self.request),
+                                             name=u'plone_context_state')
+        self.anonymous = self.portal_state.anonymous()
+        self.has_pam = HAS_PAM
+
+    def show(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISecuritySchema,
+            prefix='plone',
+        )
+        return not self.anonymous or settings.allow_anon_views_about
+
+    def show_history(self):
+        has_access_preview_versions_permission = _checkPermission(
+            'CMFEditions: Access previous versions',
+            self.context
+        )
+        if not has_access_preview_versions_permission:
+            return False
+        if IViewView.providedBy(self.__parent__):
+            return True
+        if IFolderContentsView.providedBy(self.__parent__):
+            return True
+        return False
+
+    def locked_icon(self):
+        if not getSecurityManager().checkPermission('Modify portal content',
+                                                    self.context):
+            return ""
+
+        locked = False
+        lock_info = queryMultiAdapter((self.context, self.request),
+                                      name='plone_lock_info')
+        if lock_info is not None:
+            locked = lock_info.is_locked()
+        else:
+            context = aq_inner(self.context)
+            lockable = getattr(
+                context.aq_explicit, 'wl_isLocked', None) is not None
+            locked = lockable and context.wl_isLocked()
+
+        if not locked:
+            return ""
+
+        portal = self.portal_state.portal()
+        icon = portal.restrictedTraverse('lock_icon.png')
+        return icon.tag(title='Locked')
+
+    def creator(self):
+        return self.context.Creator()
+
+    def author(self):
+        membership = getToolByName(self.context, 'portal_membership')
+        return membership.getMemberInfo(self.creator())
+
+    def authorname(self):
+        author = self.author()
+        return author and author['fullname'] or self.creator()
+
+    def isExpired(self):
+        if base_hasattr(self.context, 'expires'):
+            return self.context.expires().isPast()
+        return False
+
+    def toLocalizedTime(self, time, long_format=None, time_only=None):
+        """Convert time to localized time
+        """
+        util = getToolByName(self.context, 'translation_service')
+        return util.ulocalized_time(time, long_format, time_only, self.context,
+                                    domain='plonelocales')
+
+    def pub_date(self):
+        """Return object effective date.
+
+        Return None if publication date is switched off in global site settings
+        or if Effective Date is not set on object.
+        """
+        # check if we are allowed to display publication date
+        properties = getToolByName(self.context, 'portal_properties')
+        site_properties = getattr(properties, 'site_properties')
+        if not site_properties.getProperty('displayPublicationDateInByline',
+           False):
+            return None
+
+        # check if we have Effective Date set
+        date = self.context.EffectiveDate()
+        if not date or date == 'None':
+            return None
+
+        return DateTime(date)
+
+    def get_translations(self):
+        cts = []
+        if ITranslatable.providedBy(self.context):
+            t_langs = translated_languages(self.context)
+            context_translations = ITranslationManager(self.context).get_translations()
+            for lang in t_langs:
+                cts.append(dict(lang_native=lang.title,
+                                url=context_translations[lang.value].absolute_url()))
+
+        return cts
+
+
 class HistoryByLineView(BrowserView):
     """ DocumentByLine information for content history view """
 
diff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt
new file mode 100644
index 0000000..32e19a3
--- /dev/null
+++ b/plone/app/layout/viewlets/document_byline.pt
@@ -0,0 +1,117 @@
+<li id="plone-document-byline" class="plone-toolbar-separator"
+    tal:condition="view/show"
+    i18n:domain="plone">
+
+  <a href="#">
+    <span class="icon-contentInfo" aria-hidden="true"></span>
+    <span i18n:translate="">Content Info</span>
+    <span class="plone-toolbar-caret"></span>
+  </a>
+
+  <ul>
+    <li class="plone-toolbar-submenu-header">
+      <span id="lock-icon"
+            tal:define="lock_icon view/locked_icon"
+            tal:condition="python:lock_icon">
+        <img tal:replace="structure lock_icon" />
+      </span>
+      <span i18n:translate="">Content Info</span>
+    </li>
+    <li>
+      <tal:creator tal:define="creator_short_form view/creator;"
+                   tal:condition="creator_short_form">
+        <tal:name tal:define="creator_long_form string:?author=${creator_short_form};
+                              creator_is_openid python:'/' in creator_short_form;
+                              creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+
+          <tal:i18n i18n:translate="label_by_author">
+            <a href="#"
+               class="documentAuthor"
+               tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"
+               tal:omit-tag="python:view.author() is None">
+               by <tal:author tal:content="view/authorname" i18n:name="author">Roland Barthes</tal:author></a>
+          </tal:i18n>
+
+        </tal:name>
+      </tal:creator>
+    </li>
+    <li>
+      <tal:dates define="published view/pub_date;
+                         modified context/ModificationDate">
+        <span class="documentPublished"
+              tal:condition="published">
+          <span i18n:translate="box_published">
+            published
+          </span>
+          <span tal:replace="python:view.toLocalizedTime(published,long_format=1)">
+            August 16, 2001 at 23:35:59
+          </span><tal:sep condition="modified">,</tal:sep>
+        </span>
+
+        <span class="documentModified"
+              tal:condition="modified">
+          <span i18n:translate="box_last_modified">
+            last modified
+          </span>
+          <span tal:replace="python:view.toLocalizedTime(modified,long_format=1)">
+            August 16, 2001 at 23:35:59
+          </span>
+        </span>
+      </tal:dates>
+    </li>
+    <li>
+      <tal:expired tal:condition="view/isExpired">
+        <span class="state-expired"
+              i18n:translate="time_expired">expired</span>
+      </tal:expired>
+    </li>
+    <li>
+      <a href="#" class="contentHistory" id="content-history"
+         tal:condition="view/show_history"
+         tal:attributes="href string:${here/absolute_url}/@@historyview"
+         i18n:translate="label_history">History</a>
+    </li>
+    <li>
+      <span class="documentContributors"
+           tal:define="contributors context/Contributors"
+           tal:condition="contributors"
+           i18n:translate="text_contributors">
+        Contributors:
+        <span i18n:name="name"
+              tal:omit-tag=""
+              tal:content="python: ', '.join(contributors)">
+          Mary
+        </span>
+      </span>
+    </li>
+    <li>
+      <span tal:define="rights context/Rights"
+                  tal:condition="rights">
+        <span tal:replace="rights">
+          Copyleft NiceCorp Inc.
+        </span>
+      </span>
+    </li>
+<!-- Part of the Albert's mockup, just decide if we need/want it.
+
+    <li class="plone-toolbar-submenu-header">
+      <span>File info</span>
+    </li>
+    <li><span>Content name: Name</span></li>
+    <li><span>Short name: /short-name</span></li>
+
+  -->
+    <li class="plone-toolbar-submenu-header"
+        tal:condition="view/has_pam">
+      <span>Linked Translations</span>
+    </li>
+    <tal:translations condition="view/has_pam">
+      <li tal:repeat="linked_content view/get_translations">
+        <a tal:attributes="href linked_content/url"
+           tal:content="linked_content/lang_native">
+            Occitanian
+        </a>
+      </li>
+    </tal:translations>
+  </ul>
+</li>


