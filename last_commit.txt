Repository: plone.app.folder
Branch: refs/heads/master
Date: 2015-02-09T13:25:37+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.folder/commit/c95cf6a6b3f30576ae1c455ec58eeaf6a86ff7c7

Revert "Revert "Revert "Revert "Ported tests to plone.app.testing""""

Files changed:
M setup.py
M src/plone/app/folder/tests/base.py
M src/plone/app/folder/tests/benchmarks.py
M src/plone/app/folder/tests/layer.py
M src/plone/app/folder/tests/test_integration.py
M src/plone/app/folder/tests/test_migration.py
M src/plone/app/folder/tests/test_nextprevious.py
M src/plone/app/folder/tests/test_nogopip.py
M src/plone/app/folder/tests/test_partialordering_integration.py
M src/plone/app/folder/tests/test_unorderedordering_integration.py
M src/plone/app/folder/tests/test_utils.py

diff --git a/setup.py b/setup.py
index 583ad29..659cd0e 100644
--- a/setup.py
+++ b/setup.py
@@ -13,6 +13,7 @@
     classifiers=[
         'Environment :: Web Environment',
         'Framework :: Plone',
+        'Framework :: Plone :: 5.0',
         'Framework :: Zope2',
         'Intended Audience :: Developers',
         'Intended Audience :: System Administrators',
@@ -20,6 +21,7 @@
         'License :: OSI Approved :: GNU General Public License (GPL)',
         'Operating System :: OS Independent',
         'Programming Language :: Python',
+        'Programming Language :: Python :: 2.7',
     ],
     keywords='folder btree order plone archetypes atcontenttypes',
     author='Plone Foundation',
@@ -48,7 +50,6 @@
         ],
         'test': [
             'plone.app.testing',
-            'Products.PloneTestCase',
         ],
     },
 )
diff --git a/src/plone/app/folder/tests/base.py b/src/plone/app/folder/tests/base.py
index 45cec21..3ee551d 100644
--- a/src/plone/app/folder/tests/base.py
+++ b/src/plone/app/folder/tests/base.py
@@ -1,22 +1,19 @@
 # -*- coding: utf-8 -*-
-from Products.PloneTestCase import PloneTestCase as ptc
-from Products.Five.testbrowser import Browser
+from plone.app.testing.bbb import PloneTestCase
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import TEST_USER_PASSWORD
+from plone.testing.z2 import Browser
 
-ptc.setupPloneSite()
 
-
-class IntegrationTestCase(ptc.PloneTestCase):
-    """ base class for integration tests """
-
-
-class FunctionalTestCase(ptc.FunctionalTestCase):
+class FunctionalTestCase(PloneTestCase):
     """ base class for functional tests """
 
     def getBrowser(self, loggedIn=True):
         """ instantiate and return a testbrowser for convenience """
-        browser = Browser()
+        browser = Browser(self.layer['app'])
         if loggedIn:
-            user = ptc.default_user
-            pwd = ptc.default_password
-            browser.addHeader('Authorization', 'Basic %s:%s' % (user, pwd))
+            browser.addHeader('Authorization', 'Basic %s:%s' % (
+                TEST_USER_NAME, TEST_USER_PASSWORD))
         return browser
+
+IntegrationTestCase = FunctionalTestCase
diff --git a/src/plone/app/folder/tests/benchmarks.py b/src/plone/app/folder/tests/benchmarks.py
index 540078e..fecf9f7 100644
--- a/src/plone/app/folder/tests/benchmarks.py
+++ b/src/plone/app/folder/tests/benchmarks.py
@@ -4,7 +4,7 @@
 # to run individual tests using:
 # $ bin/test -s plone.app.folder --tests-pattern=benchmarks -t <testName>
 # where <testName> is something like "testObjectValuesOrdered"
-from Products.PloneTestCase import PloneTestCase as ptc
+from plone.app.testing.bbb import PloneTestCase
 from Testing import ZopeTestCase as ztc
 from plone.app.folder.tests.content import _createObjectByType
 from plone.app.folder.tests.content import create as createNonBTreeFolder
@@ -13,8 +13,6 @@
 from profilehooks import timecall
 from random import randint
 from transaction import commit
-from unittest import defaultTestLoader
-from unittest import main
 
 # setup plone site
 ptc.setupPloneSite()
@@ -23,7 +21,7 @@
 SIZE = 500
 
 
-class TestBenchmarkCase(ptc.PloneTestCase):
+class TestBenchmarkCase(PloneTestCase):
 
     class layer(IntegrationLayer):
 
@@ -176,10 +174,3 @@ def testRandomUnordered(self):
     def testRandomOrdered(self):
         for x in range(1000):
             self.ordered['doc.%d' % randint(0, SIZE-1)]
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
-
-if __name__ == '__main__':
-    main(defaultTest='test_suite')
diff --git a/src/plone/app/folder/tests/layer.py b/src/plone/app/folder/tests/layer.py
index e730975..f049d99 100644
--- a/src/plone/app/folder/tests/layer.py
+++ b/src/plone/app/folder/tests/layer.py
@@ -1,60 +1,45 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
-from Products.PloneTestCase.layer import PloneSite
-from Testing.ZopeTestCase import app
-from Testing.ZopeTestCase import close
-from Testing.ZopeTestCase import installPackage
+from plone.app.testing import PloneSandboxLayer
+from plone.app.testing import FunctionalTesting
+from plone.app.testing import applyProfile
+from plone.app.testing.bbb import PTC_FUNCTIONAL_TESTING
+
 from plone.folder.partial import PartialOrdering
-from transaction import commit
-from zope.component import provideAdapter
 
-# BBB Zope 2.12
-try:
-    from Zope2.App.zcml import load_config
-    load_config  # pyflakes
-    from OFS import metaconfigure
-    metaconfigure  # pyflakes
-except ImportError:
-    from Products.Five.zcml import load_config
-    from Products.Five import fiveconfigure as metaconfigure
+from zope.component import provideAdapter
 
 
-class IntegrationLayer(PloneSite):
+class IntegrationFixture(PloneSandboxLayer):
     """ layer for integration tests using the folder replacement type """
 
-    @classmethod
-    def setUp(cls):
-        root = app()
-        portal = root.plone
-        # load zcml & install the package
-        metaconfigure.debug_mode = True
+    defaultBases = (PTC_FUNCTIONAL_TESTING,)
+
+    def setUpZope(self, app, configurationContext):
         from plone.app.folder import tests
-        load_config('testing.zcml', tests)
-        metaconfigure.debug_mode = False
-        installPackage('plone.app.folder', quiet=True)
-        # import replacement profile
-        profile = 'profile-plone.app.folder:default'
-        tool = getToolByName(portal, 'portal_setup')
-        tool.runAllImportStepsFromProfile(profile, purge_old=False)
-        # make sure it's loaded...
+        self.loadZCML('testing.zcml', package=tests)
+
+    def setUpPloneSite(self, portal):
+        # restore default workflow
+        applyProfile(portal, 'plone.app.folder:default')
+
         types = getToolByName(portal, 'portal_types')
         assert types.getTypeInfo('Folder').product == 'plone.app.folder'
-        # and commit the changes
-        commit()
-        close(root)
 
-    @classmethod
-    def tearDown(cls):
-        pass
 
+PAF_INTEGRATION_FIXTURE = IntegrationFixture()
+IntegrationLayer = FunctionalTesting(
+    bases=(PAF_INTEGRATION_FIXTURE,), name='plone.app.folder testing:Integration')
 
-class PartialOrderingIntegrationLayer(IntegrationLayer):
+
+class PartialOrderingIntegrationFixture(IntegrationFixture):
     """ layer for integration tests using the partial ordering adapter """
 
-    @classmethod
-    def setUp(cls):
+    def setUpZope(self, app, configurationContext):
+        IntegrationFixture.setUpZope(self, app, configurationContext)
         provideAdapter(PartialOrdering)
 
-    @classmethod
-    def tearDown(cls):
-        pass
+
+PAF_ORDERING_FIXTURE = PartialOrderingIntegrationFixture()
+PartialOrderingIntegrationLayer = FunctionalTesting(
+    bases=(PAF_ORDERING_FIXTURE,), name='plone.app.folder testing:Partial ordering integration')
\ No newline at end of file
diff --git a/src/plone/app/folder/tests/test_integration.py b/src/plone/app/folder/tests/test_integration.py
index dc818f3..cba64d1 100644
--- a/src/plone/app/folder/tests/test_integration.py
+++ b/src/plone/app/folder/tests/test_integration.py
@@ -28,7 +28,3 @@ def testGetObjPositionInParentIndex(self):
                 GopipIndex
             )
         )
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_migration.py b/src/plone/app/folder/tests/test_migration.py
index 6b9aed8..c8c831e 100644
--- a/src/plone/app/folder/tests/test_migration.py
+++ b/src/plone/app/folder/tests/test_migration.py
@@ -238,7 +238,3 @@ def testMigrationViewForNestedFolders(self):
         self.failUnless(isSaneBTreeFolder(self.portal.test.foo))
         self.failUnless(isSaneBTreeFolder(self.portal.test.bar))
 
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_nextprevious.py b/src/plone/app/folder/tests/test_nextprevious.py
index 5a60519..ec3ec10 100644
--- a/src/plone/app/folder/tests/test_nextprevious.py
+++ b/src/plone/app/folder/tests/test_nextprevious.py
@@ -148,7 +148,3 @@ def testPreviousItemOnlyShowViewable(self):
         previous = adapter.getPreviousItem(container.subDoc2)
         self.assertEqual(previous, None)
 
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_nogopip.py b/src/plone/app/folder/tests/test_nogopip.py
index dfd9864..6be64c5 100644
--- a/src/plone/app/folder/tests/test_nogopip.py
+++ b/src/plone/app/folder/tests/test_nogopip.py
@@ -1,4 +1,3 @@
-from unittest import defaultTestLoader
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.content import UnorderedFolder
 from plone.app.folder.tests.layer import IntegrationLayer
@@ -62,6 +61,3 @@ def testSortUnorderedFolderInTree(self):
         self.assertEqual(ids,
             ['bar5', 'bar7', 'bar6', 'bar2', 'bar1', 'bar3', 'bar4'])
 
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_partialordering_integration.py b/src/plone/app/folder/tests/test_partialordering_integration.py
index 169f56e..c46014b 100644
--- a/src/plone/app/folder/tests/test_partialordering_integration.py
+++ b/src/plone/app/folder/tests/test_partialordering_integration.py
@@ -3,7 +3,6 @@
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.layer import PartialOrderingIntegrationLayer
 from plone.folder.interfaces import IOrderable
-from unittest import defaultTestLoader
 from zope.interface import classImplements
 
 
@@ -46,7 +45,3 @@ def testCreateOrderableContent(self):
         self.assertEqual(self.folder.getObjectPosition('bar'), 1)
         self.folder.invokeFactory('Event', id='party')
         self.assertEqual(self.folder.getObjectPosition('party'), None)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_unorderedordering_integration.py b/src/plone/app/folder/tests/test_unorderedordering_integration.py
index ba303bd..0391b31 100644
--- a/src/plone/app/folder/tests/test_unorderedordering_integration.py
+++ b/src/plone/app/folder/tests/test_unorderedordering_integration.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.layer import IntegrationLayer
-from unittest import defaultTestLoader
 
 
 class UnorderedOrderingTests(IntegrationTestCase):
@@ -36,6 +35,3 @@ def testGetObjectPosition(self):
         self.assertEqual(container.getObjectPosition('o1'), None)
         self.assertEqual(container.getObjectPosition('o2'), None)
 
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_utils.py b/src/plone/app/folder/tests/test_utils.py
index fbabb3d..9160f71 100644
--- a/src/plone/app/folder/tests/test_utils.py
+++ b/src/plone/app/folder/tests/test_utils.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from Testing import ZopeTestCase as ztc
 from plone.app.folder.utils import findObjects
-from unittest import defaultTestLoader, main
 
 
 class UtilsTests(ztc.ZopeTestCase):
@@ -35,10 +34,3 @@ def testFindObjects(self):
         self.assertEqual(found[0], ('', self.portal))
         # but the rest should be the same...
         self.assertEqual(self.ids(found[1:]), self.good)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
-
-if __name__ == '__main__':
-    main(defaultTest='test_suite')


Repository: plone.app.folder
Branch: refs/heads/master
Date: 2015-03-04T16:56:06+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.folder/commit/3e25a19a5406eaa4212dc9cbf10cf315215104a2

Merge branch 'master' into revert-6-revert-5-revert-4-revert-3-tomgross-noptc

Also fix the two test that failed because there was no workflow enabled.

Conflicts:
	src/plone/app/folder/tests/layer.py

Files changed:
M CHANGES.rst
M src/plone/app/folder/configure.zcml
M src/plone/app/folder/tests/layer.py
D src/plone/app/folder/profiles.zcml
D src/plone/app/folder/profiles/default/catalog.xml
D src/plone/app/folder/profiles/default/metadata.xml
D src/plone/app/folder/profiles/default/types.xml
D src/plone/app/folder/profiles/default/types/Folder.xml

diff --git a/CHANGES.rst b/CHANGES.rst
index bb046fc..dd985ef 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,9 @@ Changelog
   Get rid of old outdated interface fallbacks.
   [jensens]
 
+- Remove profile, since Plone 4+ was no longer used anyway.
+  [gforcada]
+
 
 1.0.6 (2014-01-27)
 ------------------
diff --git a/src/plone/app/folder/configure.zcml b/src/plone/app/folder/configure.zcml
index 3c31b0c..52a6934 100644
--- a/src/plone/app/folder/configure.zcml
+++ b/src/plone/app/folder/configure.zcml
@@ -6,7 +6,6 @@
     i18n_domain="plone.app.folder">
 
     <five:registerPackage package="." initialize=".initialize" />
-    <include file="profiles.zcml" />
     <include package="plone.folder" />
 
     <configure zcml:condition="installed Products.ATContentTypes">
diff --git a/src/plone/app/folder/profiles.zcml b/src/plone/app/folder/profiles.zcml
deleted file mode 100644
index db7caeb..0000000
--- a/src/plone/app/folder/profiles.zcml
+++ /dev/null
@@ -1,14 +0,0 @@
-<configure
-    xmlns="http://namespaces.zope.org/zope"
-    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
-    i18n_domain="plone.app.folder">
-
-  <genericsetup:registerProfile
-    name="default"
-    title="plone.app.folder"
-    directory="profiles/default"
-    description="Orderable btree-based folders as proposed in PLIP 191."
-    for="Products.CMFCore.interfaces.ISiteRoot"
-    provides="Products.GenericSetup.interfaces.EXTENSION" />
-
-</configure>
diff --git a/src/plone/app/folder/profiles/default/catalog.xml b/src/plone/app/folder/profiles/default/catalog.xml
deleted file mode 100644
index 504b6e6..0000000
--- a/src/plone/app/folder/profiles/default/catalog.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<object name="portal_catalog" meta_type="Plone Catalog Tool">
-  <index name="getObjPositionInParent" remove="True" />
-  <index name="getObjPositionInParent" meta_type="GopipIndex">
-    <indexed_attr value="getObjPositionInParent"/>
-  </index>
-</object>
diff --git a/src/plone/app/folder/profiles/default/metadata.xml b/src/plone/app/folder/profiles/default/metadata.xml
deleted file mode 100644
index cf4492a..0000000
--- a/src/plone/app/folder/profiles/default/metadata.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0"?>
-<metadata>
-  <version>1</version>
-</metadata>
diff --git a/src/plone/app/folder/profiles/default/types.xml b/src/plone/app/folder/profiles/default/types.xml
deleted file mode 100644
index f798b85..0000000
--- a/src/plone/app/folder/profiles/default/types.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0"?>
-<object name="portal_types" meta_type="Plone Types Tool">
- <object name="Folder"
-    meta_type="Factory-based Type Information with dynamic views"/>
-</object>
diff --git a/src/plone/app/folder/profiles/default/types/Folder.xml b/src/plone/app/folder/profiles/default/types/Folder.xml
deleted file mode 100644
index 4e1ce27..0000000
--- a/src/plone/app/folder/profiles/default/types/Folder.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0"?>
-<object name="Folder"
-   meta_type="Factory-based Type Information with dynamic views"
-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
-  <property name="product">plone.app.folder</property>
-</object>
diff --git a/src/plone/app/folder/tests/layer.py b/src/plone/app/folder/tests/layer.py
index f049d99..2f80f37 100644
--- a/src/plone/app/folder/tests/layer.py
+++ b/src/plone/app/folder/tests/layer.py
@@ -20,11 +20,7 @@ def setUpZope(self, app, configurationContext):
         self.loadZCML('testing.zcml', package=tests)
 
     def setUpPloneSite(self, portal):
-        # restore default workflow
-        applyProfile(portal, 'plone.app.folder:default')
-
-        types = getToolByName(portal, 'portal_types')
-        assert types.getTypeInfo('Folder').product == 'plone.app.folder'
+        portal.portal_workflow.setDefaultChain("simple_publication_workflow")
 
 
 PAF_INTEGRATION_FIXTURE = IntegrationFixture()
@@ -42,4 +38,4 @@ def setUpZope(self, app, configurationContext):
 
 PAF_ORDERING_FIXTURE = PartialOrderingIntegrationFixture()
 PartialOrderingIntegrationLayer = FunctionalTesting(
-    bases=(PAF_ORDERING_FIXTURE,), name='plone.app.folder testing:Partial ordering integration')
\ No newline at end of file
+    bases=(PAF_ORDERING_FIXTURE,), name='plone.app.folder testing:Partial ordering integration')


Repository: plone.app.folder
Branch: refs/heads/master
Date: 2015-03-05T06:52:57+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.folder/commit/581739db2ab8a82d68d6a89df3e2e6bfbfd8651d

Merge pull request #7 from plone/revert-6-revert-5-revert-4-revert-3-tomgross-noptc

Ported tests to plone.app.testing

Files changed:
M setup.py
M src/plone/app/folder/tests/base.py
M src/plone/app/folder/tests/benchmarks.py
M src/plone/app/folder/tests/layer.py
M src/plone/app/folder/tests/test_integration.py
M src/plone/app/folder/tests/test_migration.py
M src/plone/app/folder/tests/test_nextprevious.py
M src/plone/app/folder/tests/test_nogopip.py
M src/plone/app/folder/tests/test_partialordering_integration.py
M src/plone/app/folder/tests/test_unorderedordering_integration.py
M src/plone/app/folder/tests/test_utils.py

diff --git a/setup.py b/setup.py
index 583ad29..659cd0e 100644
--- a/setup.py
+++ b/setup.py
@@ -13,6 +13,7 @@
     classifiers=[
         'Environment :: Web Environment',
         'Framework :: Plone',
+        'Framework :: Plone :: 5.0',
         'Framework :: Zope2',
         'Intended Audience :: Developers',
         'Intended Audience :: System Administrators',
@@ -20,6 +21,7 @@
         'License :: OSI Approved :: GNU General Public License (GPL)',
         'Operating System :: OS Independent',
         'Programming Language :: Python',
+        'Programming Language :: Python :: 2.7',
     ],
     keywords='folder btree order plone archetypes atcontenttypes',
     author='Plone Foundation',
@@ -48,7 +50,6 @@
         ],
         'test': [
             'plone.app.testing',
-            'Products.PloneTestCase',
         ],
     },
 )
diff --git a/src/plone/app/folder/tests/base.py b/src/plone/app/folder/tests/base.py
index 45cec21..3ee551d 100644
--- a/src/plone/app/folder/tests/base.py
+++ b/src/plone/app/folder/tests/base.py
@@ -1,22 +1,19 @@
 # -*- coding: utf-8 -*-
-from Products.PloneTestCase import PloneTestCase as ptc
-from Products.Five.testbrowser import Browser
+from plone.app.testing.bbb import PloneTestCase
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import TEST_USER_PASSWORD
+from plone.testing.z2 import Browser
 
-ptc.setupPloneSite()
 
-
-class IntegrationTestCase(ptc.PloneTestCase):
-    """ base class for integration tests """
-
-
-class FunctionalTestCase(ptc.FunctionalTestCase):
+class FunctionalTestCase(PloneTestCase):
     """ base class for functional tests """
 
     def getBrowser(self, loggedIn=True):
         """ instantiate and return a testbrowser for convenience """
-        browser = Browser()
+        browser = Browser(self.layer['app'])
         if loggedIn:
-            user = ptc.default_user
-            pwd = ptc.default_password
-            browser.addHeader('Authorization', 'Basic %s:%s' % (user, pwd))
+            browser.addHeader('Authorization', 'Basic %s:%s' % (
+                TEST_USER_NAME, TEST_USER_PASSWORD))
         return browser
+
+IntegrationTestCase = FunctionalTestCase
diff --git a/src/plone/app/folder/tests/benchmarks.py b/src/plone/app/folder/tests/benchmarks.py
index 540078e..fecf9f7 100644
--- a/src/plone/app/folder/tests/benchmarks.py
+++ b/src/plone/app/folder/tests/benchmarks.py
@@ -4,7 +4,7 @@
 # to run individual tests using:
 # $ bin/test -s plone.app.folder --tests-pattern=benchmarks -t <testName>
 # where <testName> is something like "testObjectValuesOrdered"
-from Products.PloneTestCase import PloneTestCase as ptc
+from plone.app.testing.bbb import PloneTestCase
 from Testing import ZopeTestCase as ztc
 from plone.app.folder.tests.content import _createObjectByType
 from plone.app.folder.tests.content import create as createNonBTreeFolder
@@ -13,8 +13,6 @@
 from profilehooks import timecall
 from random import randint
 from transaction import commit
-from unittest import defaultTestLoader
-from unittest import main
 
 # setup plone site
 ptc.setupPloneSite()
@@ -23,7 +21,7 @@
 SIZE = 500
 
 
-class TestBenchmarkCase(ptc.PloneTestCase):
+class TestBenchmarkCase(PloneTestCase):
 
     class layer(IntegrationLayer):
 
@@ -176,10 +174,3 @@ def testRandomUnordered(self):
     def testRandomOrdered(self):
         for x in range(1000):
             self.ordered['doc.%d' % randint(0, SIZE-1)]
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
-
-if __name__ == '__main__':
-    main(defaultTest='test_suite')
diff --git a/src/plone/app/folder/tests/layer.py b/src/plone/app/folder/tests/layer.py
index bc13a69..2f80f37 100644
--- a/src/plone/app/folder/tests/layer.py
+++ b/src/plone/app/folder/tests/layer.py
@@ -1,52 +1,41 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
-from Products.PloneTestCase.layer import PloneSite
-from Testing.ZopeTestCase import app
-from Testing.ZopeTestCase import close
-from Testing.ZopeTestCase import installPackage
+from plone.app.testing import PloneSandboxLayer
+from plone.app.testing import FunctionalTesting
+from plone.app.testing import applyProfile
+from plone.app.testing.bbb import PTC_FUNCTIONAL_TESTING
+
 from plone.folder.partial import PartialOrdering
-from transaction import commit
-from zope.component import provideAdapter
 
-# BBB Zope 2.12
-try:
-    from Zope2.App.zcml import load_config
-    load_config  # pyflakes
-    from OFS import metaconfigure
-    metaconfigure  # pyflakes
-except ImportError:
-    from Products.Five.zcml import load_config
-    from Products.Five import fiveconfigure as metaconfigure
+from zope.component import provideAdapter
 
 
-class IntegrationLayer(PloneSite):
+class IntegrationFixture(PloneSandboxLayer):
     """ layer for integration tests using the folder replacement type """
 
-    @classmethod
-    def setUp(cls):
-        root = app()
-        portal = root.plone
-        # load zcml & install the package
-        metaconfigure.debug_mode = True
+    defaultBases = (PTC_FUNCTIONAL_TESTING,)
+
+    def setUpZope(self, app, configurationContext):
         from plone.app.folder import tests
-        load_config('testing.zcml', tests)
-        metaconfigure.debug_mode = False
-        installPackage('plone.app.folder', quiet=True)
-        commit()
-        close(root)
+        self.loadZCML('testing.zcml', package=tests)
 
-    @classmethod
-    def tearDown(cls):
-        pass
+    def setUpPloneSite(self, portal):
+        portal.portal_workflow.setDefaultChain("simple_publication_workflow")
 
 
-class PartialOrderingIntegrationLayer(IntegrationLayer):
+PAF_INTEGRATION_FIXTURE = IntegrationFixture()
+IntegrationLayer = FunctionalTesting(
+    bases=(PAF_INTEGRATION_FIXTURE,), name='plone.app.folder testing:Integration')
+
+
+class PartialOrderingIntegrationFixture(IntegrationFixture):
     """ layer for integration tests using the partial ordering adapter """
 
-    @classmethod
-    def setUp(cls):
+    def setUpZope(self, app, configurationContext):
+        IntegrationFixture.setUpZope(self, app, configurationContext)
         provideAdapter(PartialOrdering)
 
-    @classmethod
-    def tearDown(cls):
-        pass
+
+PAF_ORDERING_FIXTURE = PartialOrderingIntegrationFixture()
+PartialOrderingIntegrationLayer = FunctionalTesting(
+    bases=(PAF_ORDERING_FIXTURE,), name='plone.app.folder testing:Partial ordering integration')
diff --git a/src/plone/app/folder/tests/test_integration.py b/src/plone/app/folder/tests/test_integration.py
index dc818f3..cba64d1 100644
--- a/src/plone/app/folder/tests/test_integration.py
+++ b/src/plone/app/folder/tests/test_integration.py
@@ -28,7 +28,3 @@ def testGetObjPositionInParentIndex(self):
                 GopipIndex
             )
         )
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_migration.py b/src/plone/app/folder/tests/test_migration.py
index 6b9aed8..c8c831e 100644
--- a/src/plone/app/folder/tests/test_migration.py
+++ b/src/plone/app/folder/tests/test_migration.py
@@ -238,7 +238,3 @@ def testMigrationViewForNestedFolders(self):
         self.failUnless(isSaneBTreeFolder(self.portal.test.foo))
         self.failUnless(isSaneBTreeFolder(self.portal.test.bar))
 
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_nextprevious.py b/src/plone/app/folder/tests/test_nextprevious.py
index 5a60519..ec3ec10 100644
--- a/src/plone/app/folder/tests/test_nextprevious.py
+++ b/src/plone/app/folder/tests/test_nextprevious.py
@@ -148,7 +148,3 @@ def testPreviousItemOnlyShowViewable(self):
         previous = adapter.getPreviousItem(container.subDoc2)
         self.assertEqual(previous, None)
 
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_nogopip.py b/src/plone/app/folder/tests/test_nogopip.py
index dfd9864..6be64c5 100644
--- a/src/plone/app/folder/tests/test_nogopip.py
+++ b/src/plone/app/folder/tests/test_nogopip.py
@@ -1,4 +1,3 @@
-from unittest import defaultTestLoader
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.content import UnorderedFolder
 from plone.app.folder.tests.layer import IntegrationLayer
@@ -62,6 +61,3 @@ def testSortUnorderedFolderInTree(self):
         self.assertEqual(ids,
             ['bar5', 'bar7', 'bar6', 'bar2', 'bar1', 'bar3', 'bar4'])
 
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_partialordering_integration.py b/src/plone/app/folder/tests/test_partialordering_integration.py
index 169f56e..c46014b 100644
--- a/src/plone/app/folder/tests/test_partialordering_integration.py
+++ b/src/plone/app/folder/tests/test_partialordering_integration.py
@@ -3,7 +3,6 @@
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.layer import PartialOrderingIntegrationLayer
 from plone.folder.interfaces import IOrderable
-from unittest import defaultTestLoader
 from zope.interface import classImplements
 
 
@@ -46,7 +45,3 @@ def testCreateOrderableContent(self):
         self.assertEqual(self.folder.getObjectPosition('bar'), 1)
         self.folder.invokeFactory('Event', id='party')
         self.assertEqual(self.folder.getObjectPosition('party'), None)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_unorderedordering_integration.py b/src/plone/app/folder/tests/test_unorderedordering_integration.py
index ba303bd..0391b31 100644
--- a/src/plone/app/folder/tests/test_unorderedordering_integration.py
+++ b/src/plone/app/folder/tests/test_unorderedordering_integration.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.folder.tests.base import IntegrationTestCase
 from plone.app.folder.tests.layer import IntegrationLayer
-from unittest import defaultTestLoader
 
 
 class UnorderedOrderingTests(IntegrationTestCase):
@@ -36,6 +35,3 @@ def testGetObjectPosition(self):
         self.assertEqual(container.getObjectPosition('o1'), None)
         self.assertEqual(container.getObjectPosition('o2'), None)
 
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/app/folder/tests/test_utils.py b/src/plone/app/folder/tests/test_utils.py
index fbabb3d..9160f71 100644
--- a/src/plone/app/folder/tests/test_utils.py
+++ b/src/plone/app/folder/tests/test_utils.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from Testing import ZopeTestCase as ztc
 from plone.app.folder.utils import findObjects
-from unittest import defaultTestLoader, main
 
 
 class UtilsTests(ztc.ZopeTestCase):
@@ -35,10 +34,3 @@ def testFindObjects(self):
         self.assertEqual(found[0], ('', self.portal))
         # but the rest should be the same...
         self.assertEqual(self.ids(found[1:]), self.good)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
-
-if __name__ == '__main__':
-    main(defaultTest='test_suite')


