Repository: plone.app.dexterity
Branch: refs/heads/master
Date: 2015-02-14T23:32:32-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/636a621ac14a46601f7f5d08cd56be2fd4fe7cfa

update to use mockup Modal

Files changed:
M plone/app/dexterity/browser/types_listing.js
M plone/app/dexterity/browser/types_listing.pt

diff --git a/plone/app/dexterity/browser/types_listing.js b/plone/app/dexterity/browser/types_listing.js
index 417969d..1b11c1f 100644
--- a/plone/app/dexterity/browser/types_listing.js
+++ b/plone/app/dexterity/browser/types_listing.js
@@ -1,33 +1,10 @@
-(function($){
-$(document).ready(function() {
-
-    common_content_filter = '#content>*:not(div.configlet),dl.portalMessage.error,dl.portalMessage.info';
+require([
+    'jquery',
+    'mockup-patterns-modal'
+], function($, Modal) {
 
     $('.action').css('display', 'inline');
 
-    // add new type form
-    $('#add-type').prepOverlay({
-        subtype: 'ajax',
-        filter: '#content',
-        formselector: '#add-type-form',
-        noform: function(el) {
-            var o = $(el), emsg = o.find('dl.portalMessage.error');
-            if (emsg.length) {
-                o.children().replaceWith(emsg);
-                return false;
-            } else {
-                return 'redirect';
-            }
-        },
-        redirect: function (el, responseText) {
-            var mo = responseText.match(/<a href="(\S+?)\/@@fields"/i);
-            if (mo.length === 2) {
-                return mo[1] + '/@@fields';
-            }
-            return location;
-        }
-    });
-
     // clone type form
     $('#crud-edit-form-buttons-clone').click(function(e) {
       var selected = $('input[id$=-widgets-select-0]:checked');
@@ -35,27 +12,24 @@ $(document).ready(function() {
           e.preventDefault();
           $(this).removeClass('submitting');
           var type_link = $('a', selected.closest('tr'));
-          var el = $('<' + 'a href="' + type_link.attr('href') + '/@@clone"><' + '/a>').appendTo('body');
-          el.prepOverlay({
-              subtype: 'ajax',
-              filter: common_content_filter,
-              formselector: '#clone-type-form',
-              noform: 'reload'
-          })
-          el.click();
+          var $el = $('<' + 'a href="' + type_link.attr('href') + '/@@clone"><' + '/a>').appendTo('body');
+          new Modal($el, {
+            actionOptions: {displayInModal: false}
+          });
+          $el.click();
       }
     });
 
     // delete type confirmation
     $('#crud-edit-form-buttons-delete').click(function(e) {
-        var items = 0;
+        var items = 0, msg;
         $('td.count').closest('tr').has('input:checked').each(function() {
           items += parseInt($('td.count .int-field', this).html().trim());
         });
         if (items) {
-          var msg = 'WARNING: There are existing instances of these content types which will break.\n\nAre you sure you want to delete these types?';
+          msg = 'WARNING: There are existing instances of these content types which will break.\n\nAre you sure you want to delete these types?';
         } else {
-          var msg = 'Are you sure you want to delete these types?';
+          msg = 'Are you sure you want to delete these types?';
         }
         if(!confirm(msg)) {
             $(this).removeClass('submitting');
@@ -68,5 +42,5 @@ $(document).ready(function() {
         var id = $.plone_schemaeditor_normalize_string($(this).val());
         $('#form-widgets-id').val(id);
     });
+
 });
-})(jQuery);
diff --git a/plone/app/dexterity/browser/types_listing.pt b/plone/app/dexterity/browser/types_listing.pt
index 4933818..de75042 100644
--- a/plone/app/dexterity/browser/types_listing.pt
+++ b/plone/app/dexterity/browser/types_listing.pt
@@ -20,13 +20,11 @@
      tal:content="structure view/description">
 </p>
 
-<form id="add-type" method="GET"
-      tal:attributes="action string:${context/absolute_url}/@@add-type">
-  <p><input type="submit"
-         i18n:attributes="value"
-         i18n:domain="plone.app.dexterity"
-         value="Add New Content Type&hellip;"/></p>
-</form>
+<a class="pat-modal"
+   href="${context/absolute_url}/@@add-type">
+   <button i18n:domain="plone.app.dexterity"
+           i18n:translate="">Add New Content Type&hellip;</button>
+</a>
 
 <div tal:repeat="form view/subforms"
      tal:content="structure form/render"


Repository: plone.app.dexterity
Branch: refs/heads/master
Date: 2015-02-14T23:51:48-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/f8caa7069055d7b1a000138f0269649809fa7215

update tab markup for p5

Files changed:
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/tabbed_forms.pt

diff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt
index dfba50b..c475dcc 100644
--- a/plone/app/dexterity/browser/behaviors.pt
+++ b/plone/app/dexterity/browser/behaviors.pt
@@ -7,9 +7,8 @@
             tal:attributes="action request/getURL; enctype view/enctype">
 
           <tal:widgets repeat="widget view/widgets/values">
-            <div class="row"
-                 tal:define="hidden python:widget.mode == 'hidden'"
-                 tal:omit-tag="hidden">
+            <tal:b define="hidden python:widget.mode == 'hidden'"
+                   omit-tag="hidden">
 
                 <div class="field"
                      tal:define="error widget/error"
@@ -46,7 +45,7 @@
 
                 </div>
 
-            </div>
+            </tal:b>
           </tal:widgets>
 
         <metal:actions metal:use-macro="context/@@ploneform-macros/actions"/>
diff --git a/plone/app/dexterity/browser/tabbed_forms.pt b/plone/app/dexterity/browser/tabbed_forms.pt
index 962002d..4d9f5dd 100644
--- a/plone/app/dexterity/browser/tabbed_forms.pt
+++ b/plone/app/dexterity/browser/tabbed_forms.pt
@@ -3,48 +3,29 @@
       xmlns:tal="http://xml.zope.org/namespaces/tal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       metal:use-macro="here/prefs_main_template/macros/master"
-      i18n:domain="plone.z3cform"
-      tal:omit-tag="">
+      i18n:domain="plone.z3cform">
 
-  <body>
-      <metal:slot metal:fill-slot="prefs_configlet_wrapper" i18n:domain="cmf_default">
+<body>
+    <metal:slot metal:fill-slot="prefs_configlet_main">
 
-        <div class="documentEditable">
-
-            <div id="edit-bar">
-             <ul id="content-views" class="contentViews">
-                <li class="selected"
-                    tal:repeat="tab view/tabs"
-                    tal:attributes="class python:tab[0] == view.label and 'selected' or ''">
-                    <a href=""
-                       tal:define="tab_url python:context.absolute_url() + '/' + tab[1]"
-                       tal:attributes="href tab_url"
-                       tal:content="python:tab[0]">
-                        Schema
-                    </a>
-                </li>
-             </ul>
-
-             <div class="contentActions"></div>
-            </div>
-
-            <article id="content">
-
-             <div class="documentContent">
-
-               <div metal:use-macro="context/global_statusmessage/macros/portal_message">
-                 Portal status message
-               </div>
+        <div metal:use-macro="context/global_statusmessage/macros/portal_message">
+          Portal status message
+        </div>
 
-               <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>
-               <h2 tal:content="view/label"/>
+        <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>
 
-               <tal:block tal:replace="structure view/contents|view/render"/>
-             </div>
+        <div class="autotabs">
+         
+          <nav class="autotoc-nav">
+            <a tal:repeat="tab view/tabs"
+               tal:attributes="href python:context.absolute_url() + '/' + tab[1];
+                               class python:'active' if tab[0] == view.label else ''"
+               tal:content="python:tab[0]" />
+          </nav>
 
-           </article>
+          <tal:block tal:replace="structure view/contents|view/render"/>
         </div>
-     </metal:slot>
+    </metal:slot>
 
-  </body>
+</body>
 </html>


Repository: plone.app.dexterity
Branch: refs/heads/master
Date: 2015-02-15T16:15:33-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/143961dd79ecf369b404098e5955eb845584fdf1

fix test, changelog

Files changed:
M CHANGES.rst
M plone/app/dexterity/tests/editing.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index a129313..6254a47 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.1.3 (unreleased)
 ------------------
 
+- Update markup and javascript for Plone 5.
+  [davisagli]
+
 - Fix the IDexterityContainer view to make use of plone.app.contenttype's new
   listing view. Accessing it's macro needs the macro-caller's view variable set
   to the new listing view.
diff --git a/plone/app/dexterity/tests/editing.txt b/plone/app/dexterity/tests/editing.txt
index 28cc37b..832d45c 100644
--- a/plone/app/dexterity/tests/editing.txt
+++ b/plone/app/dexterity/tests/editing.txt
@@ -37,7 +37,7 @@ Adding a content type
 Let's add a 'Plonista' content type to keep track of members of the Plone
 community::
 
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'plonista'
   >>> browser.getControl('Description').value = 'Represents a Plonista.'
@@ -299,7 +299,7 @@ Validation to prevent duplicate content types
 A new content type cannot be created if its name is the same as an existing
 content type.
 
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'foobar'
   >>> browser.getControl('Short Name').value = 'plonista'
   >>> browser.getControl('Add').click()
@@ -311,7 +311,7 @@ content type.
 To avoid confusion, the title must also be unique.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'foobar'
   >>> browser.getControl('Add').click()
@@ -351,7 +351,7 @@ Adding a container
 We can create a content type that is a container for other content::
 
   >>> browser.open('http://nohost/plone/@@dexterity-types')
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista Folder'
   >>> browser.getControl('Short Name').value = 'plonista-folder'
   >>> browser.getControl('Add').click()


Repository: plone.app.dexterity
Branch: refs/heads/master
Date: 2015-02-15T19:11:45-06:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/27f0c0d744ec925d29eb7aedd6a081f2bc2ae6f2

Merge pull request #149 from plone/davisagli-p5-js

Update markup and js for plone 5

Files changed:
M CHANGES.rst
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/tabbed_forms.pt
M plone/app/dexterity/browser/types_listing.js
M plone/app/dexterity/browser/types_listing.pt
M plone/app/dexterity/tests/editing.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index a129313..6254a47 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.1.3 (unreleased)
 ------------------
 
+- Update markup and javascript for Plone 5.
+  [davisagli]
+
 - Fix the IDexterityContainer view to make use of plone.app.contenttype's new
   listing view. Accessing it's macro needs the macro-caller's view variable set
   to the new listing view.
diff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt
index dfba50b..c475dcc 100644
--- a/plone/app/dexterity/browser/behaviors.pt
+++ b/plone/app/dexterity/browser/behaviors.pt
@@ -7,9 +7,8 @@
             tal:attributes="action request/getURL; enctype view/enctype">
 
           <tal:widgets repeat="widget view/widgets/values">
-            <div class="row"
-                 tal:define="hidden python:widget.mode == 'hidden'"
-                 tal:omit-tag="hidden">
+            <tal:b define="hidden python:widget.mode == 'hidden'"
+                   omit-tag="hidden">
 
                 <div class="field"
                      tal:define="error widget/error"
@@ -46,7 +45,7 @@
 
                 </div>
 
-            </div>
+            </tal:b>
           </tal:widgets>
 
         <metal:actions metal:use-macro="context/@@ploneform-macros/actions"/>
diff --git a/plone/app/dexterity/browser/tabbed_forms.pt b/plone/app/dexterity/browser/tabbed_forms.pt
index 962002d..4d9f5dd 100644
--- a/plone/app/dexterity/browser/tabbed_forms.pt
+++ b/plone/app/dexterity/browser/tabbed_forms.pt
@@ -3,48 +3,29 @@
       xmlns:tal="http://xml.zope.org/namespaces/tal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       metal:use-macro="here/prefs_main_template/macros/master"
-      i18n:domain="plone.z3cform"
-      tal:omit-tag="">
+      i18n:domain="plone.z3cform">
 
-  <body>
-      <metal:slot metal:fill-slot="prefs_configlet_wrapper" i18n:domain="cmf_default">
+<body>
+    <metal:slot metal:fill-slot="prefs_configlet_main">
 
-        <div class="documentEditable">
-
-            <div id="edit-bar">
-             <ul id="content-views" class="contentViews">
-                <li class="selected"
-                    tal:repeat="tab view/tabs"
-                    tal:attributes="class python:tab[0] == view.label and 'selected' or ''">
-                    <a href=""
-                       tal:define="tab_url python:context.absolute_url() + '/' + tab[1]"
-                       tal:attributes="href tab_url"
-                       tal:content="python:tab[0]">
-                        Schema
-                    </a>
-                </li>
-             </ul>
-
-             <div class="contentActions"></div>
-            </div>
-
-            <article id="content">
-
-             <div class="documentContent">
-
-               <div metal:use-macro="context/global_statusmessage/macros/portal_message">
-                 Portal status message
-               </div>
+        <div metal:use-macro="context/global_statusmessage/macros/portal_message">
+          Portal status message
+        </div>
 
-               <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>
-               <h2 tal:content="view/label"/>
+        <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>
 
-               <tal:block tal:replace="structure view/contents|view/render"/>
-             </div>
+        <div class="autotabs">
+         
+          <nav class="autotoc-nav">
+            <a tal:repeat="tab view/tabs"
+               tal:attributes="href python:context.absolute_url() + '/' + tab[1];
+                               class python:'active' if tab[0] == view.label else ''"
+               tal:content="python:tab[0]" />
+          </nav>
 
-           </article>
+          <tal:block tal:replace="structure view/contents|view/render"/>
         </div>
-     </metal:slot>
+    </metal:slot>
 
-  </body>
+</body>
 </html>
diff --git a/plone/app/dexterity/browser/types_listing.js b/plone/app/dexterity/browser/types_listing.js
index 417969d..1b11c1f 100644
--- a/plone/app/dexterity/browser/types_listing.js
+++ b/plone/app/dexterity/browser/types_listing.js
@@ -1,33 +1,10 @@
-(function($){
-$(document).ready(function() {
-
-    common_content_filter = '#content>*:not(div.configlet),dl.portalMessage.error,dl.portalMessage.info';
+require([
+    'jquery',
+    'mockup-patterns-modal'
+], function($, Modal) {
 
     $('.action').css('display', 'inline');
 
-    // add new type form
-    $('#add-type').prepOverlay({
-        subtype: 'ajax',
-        filter: '#content',
-        formselector: '#add-type-form',
-        noform: function(el) {
-            var o = $(el), emsg = o.find('dl.portalMessage.error');
-            if (emsg.length) {
-                o.children().replaceWith(emsg);
-                return false;
-            } else {
-                return 'redirect';
-            }
-        },
-        redirect: function (el, responseText) {
-            var mo = responseText.match(/<a href="(\S+?)\/@@fields"/i);
-            if (mo.length === 2) {
-                return mo[1] + '/@@fields';
-            }
-            return location;
-        }
-    });
-
     // clone type form
     $('#crud-edit-form-buttons-clone').click(function(e) {
       var selected = $('input[id$=-widgets-select-0]:checked');
@@ -35,27 +12,24 @@ $(document).ready(function() {
           e.preventDefault();
           $(this).removeClass('submitting');
           var type_link = $('a', selected.closest('tr'));
-          var el = $('<' + 'a href="' + type_link.attr('href') + '/@@clone"><' + '/a>').appendTo('body');
-          el.prepOverlay({
-              subtype: 'ajax',
-              filter: common_content_filter,
-              formselector: '#clone-type-form',
-              noform: 'reload'
-          })
-          el.click();
+          var $el = $('<' + 'a href="' + type_link.attr('href') + '/@@clone"><' + '/a>').appendTo('body');
+          new Modal($el, {
+            actionOptions: {displayInModal: false}
+          });
+          $el.click();
       }
     });
 
     // delete type confirmation
     $('#crud-edit-form-buttons-delete').click(function(e) {
-        var items = 0;
+        var items = 0, msg;
         $('td.count').closest('tr').has('input:checked').each(function() {
           items += parseInt($('td.count .int-field', this).html().trim());
         });
         if (items) {
-          var msg = 'WARNING: There are existing instances of these content types which will break.\n\nAre you sure you want to delete these types?';
+          msg = 'WARNING: There are existing instances of these content types which will break.\n\nAre you sure you want to delete these types?';
         } else {
-          var msg = 'Are you sure you want to delete these types?';
+          msg = 'Are you sure you want to delete these types?';
         }
         if(!confirm(msg)) {
             $(this).removeClass('submitting');
@@ -68,5 +42,5 @@ $(document).ready(function() {
         var id = $.plone_schemaeditor_normalize_string($(this).val());
         $('#form-widgets-id').val(id);
     });
+
 });
-})(jQuery);
diff --git a/plone/app/dexterity/browser/types_listing.pt b/plone/app/dexterity/browser/types_listing.pt
index 4933818..de75042 100644
--- a/plone/app/dexterity/browser/types_listing.pt
+++ b/plone/app/dexterity/browser/types_listing.pt
@@ -20,13 +20,11 @@
      tal:content="structure view/description">
 </p>
 
-<form id="add-type" method="GET"
-      tal:attributes="action string:${context/absolute_url}/@@add-type">
-  <p><input type="submit"
-         i18n:attributes="value"
-         i18n:domain="plone.app.dexterity"
-         value="Add New Content Type&hellip;"/></p>
-</form>
+<a class="pat-modal"
+   href="${context/absolute_url}/@@add-type">
+   <button i18n:domain="plone.app.dexterity"
+           i18n:translate="">Add New Content Type&hellip;</button>
+</a>
 
 <div tal:repeat="form view/subforms"
      tal:content="structure form/render"
diff --git a/plone/app/dexterity/tests/editing.txt b/plone/app/dexterity/tests/editing.txt
index 28cc37b..832d45c 100644
--- a/plone/app/dexterity/tests/editing.txt
+++ b/plone/app/dexterity/tests/editing.txt
@@ -37,7 +37,7 @@ Adding a content type
 Let's add a 'Plonista' content type to keep track of members of the Plone
 community::
 
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'plonista'
   >>> browser.getControl('Description').value = 'Represents a Plonista.'
@@ -299,7 +299,7 @@ Validation to prevent duplicate content types
 A new content type cannot be created if its name is the same as an existing
 content type.
 
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'foobar'
   >>> browser.getControl('Short Name').value = 'plonista'
   >>> browser.getControl('Add').click()
@@ -311,7 +311,7 @@ content type.
 To avoid confusion, the title must also be unique.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'foobar'
   >>> browser.getControl('Add').click()
@@ -351,7 +351,7 @@ Adding a container
 We can create a content type that is a container for other content::
 
   >>> browser.open('http://nohost/plone/@@dexterity-types')
-  >>> browser.getControl('Add New Content Type').click()
+  >>> browser.getLink('Add New Content Type').click()
   >>> browser.getControl('Type Name').value = 'Plonista Folder'
   >>> browser.getControl('Short Name').value = 'plonista-folder'
   >>> browser.getControl('Add').click()


