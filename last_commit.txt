Repository: plone.app.discussion
Branch: refs/heads/master
Date: 2015-03-09T21:51:45-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.discussion/commit/8690461ffb27c76754bb26aa3f5f38924581eb93

create doc1 in the text fixture rather than in setup for each test

Files changed:
M plone/app/discussion/testing.py
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_catalog.py
M plone/app/discussion/tests/test_comment.py
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_contentrules.py
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_events.py
M plone/app/discussion/tests/test_indexers.py
M plone/app/discussion/tests/test_moderation_view.py
M plone/app/discussion/tests/test_notifications.py
M plone/app/discussion/tests/test_workflow.py

diff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py
index 90f08f9..496a1a5 100644
--- a/plone/app/discussion/testing.py
+++ b/plone/app/discussion/testing.py
@@ -1,16 +1,14 @@
-from Products.CMFCore.utils import getToolByName
-
 from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE
 from plone.app.discussion.interfaces import IDiscussionSettings
 from plone.app.robotframework.testing import REMOTE_LIBRARY_ROBOT_TESTING
-from plone.app.testing import IntegrationTesting
+from plone.app.testing import applyProfile
 from plone.app.testing import FunctionalTesting
+from plone.app.testing import IntegrationTesting
 from plone.app.testing import PloneSandboxLayer
-from plone.app.testing import applyProfile
-
-from plone.testing import z2
+from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
 from plone.registry.interfaces import IRegistry
-
+from Products.CMFCore.utils import getToolByName
 from zope.component import queryUtility
 from zope.configuration import xmlconfig
 
@@ -88,6 +86,14 @@ def setUpPloneSite(self, portal):
             [],
         )
 
+        # Add a document
+        setRoles(portal, TEST_USER_ID, ['Manager'])
+        portal.invokeFactory(
+            id='doc1',
+            title='Document 1',
+            type_name='Document'
+        )
+
 
 class PloneAppDiscussionRobot(PloneAppDiscussion):
 
diff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt
index 82c2051..b90f479 100644
--- a/plone/app/discussion/tests/functional_test_comments.txt
+++ b/plone/app/discussion/tests/functional_test_comments.txt
@@ -56,8 +56,7 @@ Enable commenting.
 
 Create a public page with comments allowed.
 
-    >>> browser.open(portal_url)
-    >>> browser.getLink(id='document').click()
+    >>> browser.open(portal['doc1'].absolute_url() + '/edit')
     >>> browser.getControl(name='form.widgets.IDublinCore.title').value = "Doc1"
     >>> browser.getControl(name='form.widgets.IAllowDiscussion.allow_discussion:list').value = ['True']
     >>> browser.getControl('Save').click()
diff --git a/plone/app/discussion/tests/test_catalog.py b/plone/app/discussion/tests/test_catalog.py
index 9003648..c468242 100644
--- a/plone/app/discussion/tests/test_catalog.py
+++ b/plone/app/discussion/tests/test_catalog.py
@@ -63,11 +63,6 @@ class ConversationCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            Title='Document 1',
-            type_name='Document'
-        )
         self.catalog = getToolByName(self.portal, 'portal_catalog')
         conversation = IConversation(self.portal.doc1)
         comment1 = createObject('plone.Comment')
@@ -260,9 +255,6 @@ class CommentCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(id='doc1',
-                                  title='Document 1',
-                                  type_name='Document')
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
         conversation = IConversation(self.portal.doc1)
@@ -540,9 +532,6 @@ class NoConversationCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(id='doc1',
-                                  Title='Document 1',
-                                  type_name='Document')
 
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
diff --git a/plone/app/discussion/tests/test_comment.py b/plone/app/discussion/tests/test_comment.py
index 467680b..af97864 100644
--- a/plone/app/discussion/tests/test_comment.py
+++ b/plone/app/discussion/tests/test_comment.py
@@ -34,11 +34,6 @@ def setUp(self):
         self.request = self.layer['request']
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
         self.catalog = getToolByName(self.portal, 'portal_catalog')
         self.document_brain = self.catalog.searchResults(
             portal_type='Document')[0]
@@ -360,11 +355,6 @@ class RepliesTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
 
     def test_add_comment(self):
         # Add comments to a CommentReplies adapter
diff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py
index 6619b1a..146b773 100644
--- a/plone/app/discussion/tests/test_comments_viewlet.py
+++ b/plone/app/discussion/tests/test_comments_viewlet.py
@@ -59,8 +59,6 @@ def setUp(self):
             interfaces.IDiscussionLayer,
         )
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         wftool = getToolByName(self.portal, "portal_workflow")
         wftool.doActionFor(self.portal.doc1, action='publish')
         self.portal.doc1.allow_discussion = True
@@ -464,8 +462,6 @@ def setUp(self):
         self.workflowTool = getToolByName(self.portal, 'portal_workflow')
         self.workflowTool.setDefaultChain('one_state_workflow')
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.membershipTool = getToolByName(self.folder, 'portal_membership')
         self.memberdata = self.portal.portal_memberdata
         context = getattr(self.portal, 'doc1')
diff --git a/plone/app/discussion/tests/test_contentrules.py b/plone/app/discussion/tests/test_contentrules.py
index a9e9bf1..54001cd 100644
--- a/plone/app/discussion/tests/test_contentrules.py
+++ b/plone/app/discussion/tests/test_contentrules.py
@@ -35,12 +35,8 @@ def setUp(self):
         })
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
 
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         comment = createObject('plone.Comment')
         comment.text = "This is a comment"
@@ -93,12 +89,8 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
 
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
         conversation = IConversation(self.document)
         replies = IReplies(conversation)
 
diff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py
index b990a54..cd9480f 100644
--- a/plone/app/discussion/tests/test_conversation.py
+++ b/plone/app/discussion/tests/test_conversation.py
@@ -42,9 +42,7 @@ def setUp(self):
         interface.alsoProvides(
             self.portal.REQUEST, interfaces.IDiscussionLayer)
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
-        self.typetool = typetool
+        self.typetool = self.portal.portal_types
         self.portal_discussion = getToolByName(
             self.portal,
             'portal_discussion',
@@ -685,8 +683,6 @@ def setUp(self):
             interfaces.IDiscussionLayer
         )
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         if DEXTERITY:
                 interface.alsoProvides(
                     self.portal.doc1,
@@ -750,8 +746,6 @@ class RepliesTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
 
     def test_add_comment(self):
         # Add comments to a ConversationReplies adapter
diff --git a/plone/app/discussion/tests/test_events.py b/plone/app/discussion/tests/test_events.py
index 11ab4c9..840bc3a 100644
--- a/plone/app/discussion/tests/test_events.py
+++ b/plone/app/discussion/tests/test_events.py
@@ -50,12 +50,7 @@ def setUp(self):
         self.registry = EventsRegistry
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
-
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         #
         # Subscribers
@@ -107,12 +102,7 @@ def setUp(self):
         self.registry = EventsRegistry
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
-
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         #
         # Subscribers
diff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py
index 23721f0..650db38 100644
--- a/plone/app/discussion/tests/test_indexers.py
+++ b/plone/app/discussion/tests/test_indexers.py
@@ -40,12 +40,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
 
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
-
         # Create a conversation.
         conversation = IConversation(self.portal.doc1)
 
@@ -121,12 +115,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
 
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
-
         # Create a conversation. In this case we doesn't assign it to an
         # object, as we just want to check the Conversation object API.
         conversation = IConversation(self.portal.doc1)
diff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py
index c533190..5fd1735 100644
--- a/plone/app/discussion/tests/test_moderation_view.py
+++ b/plone/app/discussion/tests/test_moderation_view.py
@@ -24,8 +24,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.portal_discussion = getToolByName(self.portal,
                                                'portal_discussion',
                                                None)
@@ -66,8 +64,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.wf = getToolByName(self.portal,
                                 'portal_workflow',
                                 None)
diff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py
index 3b87f9b..7a548b1 100644
--- a/plone/app/discussion/tests/test_notifications.py
+++ b/plone/app/discussion/tests/test_notifications.py
@@ -44,8 +44,6 @@ def setUp(self):
         registry = queryUtility(IRegistry)
         registry['plone.app.discussion.interfaces.IDiscussionSettings' +
                  '.user_notification_enabled'] = True
-        # Create test content
-        self.portal.invokeFactory('Document', 'doc1')
         # Archetypes content types store data as utf-8 encoded strings
         # The missing u in front of a string is therefor not missing
         self.portal.doc1.title = 'Kölle Alaaf'  # What is "Fasching"?
@@ -193,8 +191,6 @@ def setUp(self):
             'plone.app.discussion.interfaces.IDiscussionSettings.' +
             'moderator_notification_enabled'
         ] = True
-        # Create test content
-        self.portal.invokeFactory('Document', 'doc1')
         # Archetypes content types store data as utf-8 encoded strings
         # The missing u in front of a string is therefor not missing
         self.portal.doc1.title = 'Kölle Alaaf'  # What is "Fasching"?
diff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py
index c8cf216..a82316b 100644
--- a/plone/app/discussion/tests/test_workflow.py
+++ b/plone/app/discussion/tests/test_workflow.py
@@ -187,9 +187,6 @@ def setUp(self):
             ('Discussion Item',),
             ('comment_review_workflow',))
 
-        # Create a Document
-        self.portal.invokeFactory('Document', 'doc1')
-
         # Create a conversation for this Document
         conversation = IConversation(self.portal.doc1)
 


Repository: plone.app.discussion
Branch: refs/heads/master
Date: 2015-03-10T09:46:28+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.discussion/commit/83046caf73dfda63a58f48d7e1a1d31033d45183

Merge pull request #63 from plone/davisagli-test-fixture

create doc1 once in the text fixture rather than in setup for each test

Files changed:
M plone/app/discussion/testing.py
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_catalog.py
M plone/app/discussion/tests/test_comment.py
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_contentrules.py
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_events.py
M plone/app/discussion/tests/test_indexers.py
M plone/app/discussion/tests/test_moderation_view.py
M plone/app/discussion/tests/test_notifications.py
M plone/app/discussion/tests/test_workflow.py

diff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py
index 90f08f9..496a1a5 100644
--- a/plone/app/discussion/testing.py
+++ b/plone/app/discussion/testing.py
@@ -1,16 +1,14 @@
-from Products.CMFCore.utils import getToolByName
-
 from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE
 from plone.app.discussion.interfaces import IDiscussionSettings
 from plone.app.robotframework.testing import REMOTE_LIBRARY_ROBOT_TESTING
-from plone.app.testing import IntegrationTesting
+from plone.app.testing import applyProfile
 from plone.app.testing import FunctionalTesting
+from plone.app.testing import IntegrationTesting
 from plone.app.testing import PloneSandboxLayer
-from plone.app.testing import applyProfile
-
-from plone.testing import z2
+from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
 from plone.registry.interfaces import IRegistry
-
+from Products.CMFCore.utils import getToolByName
 from zope.component import queryUtility
 from zope.configuration import xmlconfig
 
@@ -88,6 +86,14 @@ def setUpPloneSite(self, portal):
             [],
         )
 
+        # Add a document
+        setRoles(portal, TEST_USER_ID, ['Manager'])
+        portal.invokeFactory(
+            id='doc1',
+            title='Document 1',
+            type_name='Document'
+        )
+
 
 class PloneAppDiscussionRobot(PloneAppDiscussion):
 
diff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt
index 82c2051..b90f479 100644
--- a/plone/app/discussion/tests/functional_test_comments.txt
+++ b/plone/app/discussion/tests/functional_test_comments.txt
@@ -56,8 +56,7 @@ Enable commenting.
 
 Create a public page with comments allowed.
 
-    >>> browser.open(portal_url)
-    >>> browser.getLink(id='document').click()
+    >>> browser.open(portal['doc1'].absolute_url() + '/edit')
     >>> browser.getControl(name='form.widgets.IDublinCore.title').value = "Doc1"
     >>> browser.getControl(name='form.widgets.IAllowDiscussion.allow_discussion:list').value = ['True']
     >>> browser.getControl('Save').click()
diff --git a/plone/app/discussion/tests/test_catalog.py b/plone/app/discussion/tests/test_catalog.py
index 9003648..c468242 100644
--- a/plone/app/discussion/tests/test_catalog.py
+++ b/plone/app/discussion/tests/test_catalog.py
@@ -63,11 +63,6 @@ class ConversationCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            Title='Document 1',
-            type_name='Document'
-        )
         self.catalog = getToolByName(self.portal, 'portal_catalog')
         conversation = IConversation(self.portal.doc1)
         comment1 = createObject('plone.Comment')
@@ -260,9 +255,6 @@ class CommentCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(id='doc1',
-                                  title='Document 1',
-                                  type_name='Document')
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
         conversation = IConversation(self.portal.doc1)
@@ -540,9 +532,6 @@ class NoConversationCatalogTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(id='doc1',
-                                  Title='Document 1',
-                                  type_name='Document')
 
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
diff --git a/plone/app/discussion/tests/test_comment.py b/plone/app/discussion/tests/test_comment.py
index 467680b..af97864 100644
--- a/plone/app/discussion/tests/test_comment.py
+++ b/plone/app/discussion/tests/test_comment.py
@@ -34,11 +34,6 @@ def setUp(self):
         self.request = self.layer['request']
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
         self.catalog = getToolByName(self.portal, 'portal_catalog')
         self.document_brain = self.catalog.searchResults(
             portal_type='Document')[0]
@@ -360,11 +355,6 @@ class RepliesTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
 
     def test_add_comment(self):
         # Add comments to a CommentReplies adapter
diff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py
index 6619b1a..146b773 100644
--- a/plone/app/discussion/tests/test_comments_viewlet.py
+++ b/plone/app/discussion/tests/test_comments_viewlet.py
@@ -59,8 +59,6 @@ def setUp(self):
             interfaces.IDiscussionLayer,
         )
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         wftool = getToolByName(self.portal, "portal_workflow")
         wftool.doActionFor(self.portal.doc1, action='publish')
         self.portal.doc1.allow_discussion = True
@@ -464,8 +462,6 @@ def setUp(self):
         self.workflowTool = getToolByName(self.portal, 'portal_workflow')
         self.workflowTool.setDefaultChain('one_state_workflow')
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.membershipTool = getToolByName(self.folder, 'portal_membership')
         self.memberdata = self.portal.portal_memberdata
         context = getattr(self.portal, 'doc1')
diff --git a/plone/app/discussion/tests/test_contentrules.py b/plone/app/discussion/tests/test_contentrules.py
index a9e9bf1..54001cd 100644
--- a/plone/app/discussion/tests/test_contentrules.py
+++ b/plone/app/discussion/tests/test_contentrules.py
@@ -35,12 +35,8 @@ def setUp(self):
         })
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
 
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         comment = createObject('plone.Comment')
         comment.text = "This is a comment"
@@ -93,12 +89,8 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
 
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
         conversation = IConversation(self.document)
         replies = IReplies(conversation)
 
diff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py
index b990a54..cd9480f 100644
--- a/plone/app/discussion/tests/test_conversation.py
+++ b/plone/app/discussion/tests/test_conversation.py
@@ -42,9 +42,7 @@ def setUp(self):
         interface.alsoProvides(
             self.portal.REQUEST, interfaces.IDiscussionLayer)
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
-        self.typetool = typetool
+        self.typetool = self.portal.portal_types
         self.portal_discussion = getToolByName(
             self.portal,
             'portal_discussion',
@@ -685,8 +683,6 @@ def setUp(self):
             interfaces.IDiscussionLayer
         )
 
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         if DEXTERITY:
                 interface.alsoProvides(
                     self.portal.doc1,
@@ -750,8 +746,6 @@ class RepliesTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
 
     def test_add_comment(self):
         # Add comments to a ConversationReplies adapter
diff --git a/plone/app/discussion/tests/test_events.py b/plone/app/discussion/tests/test_events.py
index 11ab4c9..840bc3a 100644
--- a/plone/app/discussion/tests/test_events.py
+++ b/plone/app/discussion/tests/test_events.py
@@ -50,12 +50,7 @@ def setUp(self):
         self.registry = EventsRegistry
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
-
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         #
         # Subscribers
@@ -107,12 +102,7 @@ def setUp(self):
         self.registry = EventsRegistry
 
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        name = self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document')
-
-        self.document = self.portal[name]
+        self.document = self.portal['doc1']
 
         #
         # Subscribers
diff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py
index 23721f0..650db38 100644
--- a/plone/app/discussion/tests/test_indexers.py
+++ b/plone/app/discussion/tests/test_indexers.py
@@ -40,12 +40,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
 
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
-
         # Create a conversation.
         conversation = IConversation(self.portal.doc1)
 
@@ -121,12 +115,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
 
-        self.portal.invokeFactory(
-            id='doc1',
-            title='Document 1',
-            type_name='Document'
-        )
-
         # Create a conversation. In this case we doesn't assign it to an
         # object, as we just want to check the Conversation object API.
         conversation = IConversation(self.portal.doc1)
diff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py
index c533190..5fd1735 100644
--- a/plone/app/discussion/tests/test_moderation_view.py
+++ b/plone/app/discussion/tests/test_moderation_view.py
@@ -24,8 +24,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.portal_discussion = getToolByName(self.portal,
                                                'portal_discussion',
                                                None)
@@ -66,8 +64,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
-        typetool = self.portal.portal_types
-        typetool.constructContent('Document', self.portal, 'doc1')
         self.wf = getToolByName(self.portal,
                                 'portal_workflow',
                                 None)
diff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py
index 3b87f9b..7a548b1 100644
--- a/plone/app/discussion/tests/test_notifications.py
+++ b/plone/app/discussion/tests/test_notifications.py
@@ -44,8 +44,6 @@ def setUp(self):
         registry = queryUtility(IRegistry)
         registry['plone.app.discussion.interfaces.IDiscussionSettings' +
                  '.user_notification_enabled'] = True
-        # Create test content
-        self.portal.invokeFactory('Document', 'doc1')
         # Archetypes content types store data as utf-8 encoded strings
         # The missing u in front of a string is therefor not missing
         self.portal.doc1.title = 'Kölle Alaaf'  # What is "Fasching"?
@@ -193,8 +191,6 @@ def setUp(self):
             'plone.app.discussion.interfaces.IDiscussionSettings.' +
             'moderator_notification_enabled'
         ] = True
-        # Create test content
-        self.portal.invokeFactory('Document', 'doc1')
         # Archetypes content types store data as utf-8 encoded strings
         # The missing u in front of a string is therefor not missing
         self.portal.doc1.title = 'Kölle Alaaf'  # What is "Fasching"?
diff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py
index c8cf216..a82316b 100644
--- a/plone/app/discussion/tests/test_workflow.py
+++ b/plone/app/discussion/tests/test_workflow.py
@@ -187,9 +187,6 @@ def setUp(self):
             ('Discussion Item',),
             ('comment_review_workflow',))
 
-        # Create a Document
-        self.portal.invokeFactory('Document', 'doc1')
-
         # Create a conversation for this Document
         conversation = IConversation(self.portal.doc1)
 


