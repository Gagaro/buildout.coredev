Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-10-16T12:19:43+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/c7d545981118079b516e4b4a09081a219279d851

Added missing_value parameter to list and tuple fields

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 2f61033..ca95543 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -79,6 +79,7 @@ class IEditingSchema(Interface):
         description=_(u"Available editors in the portal."),
         default=['TinyMCE', 'None'],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=True
     )
 
@@ -157,6 +158,7 @@ class ILanguageSchema(Interface):
                               u"translatable."),
         required=True,
         default=['en'],
+        missing_value=[],
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.AvailableContentLanguages"
         )
@@ -436,6 +438,7 @@ class ITinyMCELayoutSchema(Interface):
                       "the plone bundle CSS and diazo themes using the "
                       "tinymce-content-css setting are also added."),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'++plone++static/components/tinymce/skins/lightgray/content.min.css',
         ],
@@ -445,6 +448,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Header styles"),
         description=_('Name|tag'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'Header 1|h1',
             u"Header 2|h2",
@@ -458,6 +462,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Inline styles"),
         description=_('Name|format|icon'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Bold|bold|bold",
             u"Italic|italic|italic",
@@ -471,6 +476,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Block styles"),
         description=_('Name|format'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Paragraph|p",
             u"Blockquote|blockquote",
@@ -481,6 +487,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Alignment styles"),
         description=_('Name|format|icon'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Left|alignleft|alignleft",
             u"Center|aligncenter|aligncenter",
@@ -491,6 +498,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Table styles"),
         description=_('Name|class'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Listing|listing"
         ])
@@ -556,6 +564,7 @@ class ITinyMCEPluginSchema(Interface):
                  'nonbreaking', 'noneditable', 'pagebreak', 'paste', 'preview',
                  'print', 'searchreplace', 'tabfocus', 'table',
                  'visualchars', 'wordcount', 'code'],
+        missing_value=[],
         required=False)
 
     menubar = schema.List(
@@ -564,6 +573,7 @@ class ITinyMCEPluginSchema(Interface):
             u"Enter what items you would like in the menu bar.")),
         required=True,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'edit', u'table', u'format',
             u'tools' u'view', u'insert'])
@@ -616,6 +626,7 @@ class ITinyMCEPluginSchema(Interface):
                       "pluginname|location, one per line."),
         required=False,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[])
 
     custom_buttons = schema.List(
@@ -623,6 +634,7 @@ class ITinyMCEPluginSchema(Interface):
         description=_(u"Enter a list of custom buttons which will be added to toolbar"),
         required=False,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[])
 ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat
 
@@ -657,6 +669,7 @@ class ITinyMCESpellCheckerSchema(Interface):
             u"Plone",
             u"TinyMCE"],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=False)
 
     libraries_atd_show_types = schema.List(
@@ -679,6 +692,7 @@ class ITinyMCESpellCheckerSchema(Interface):
             u"Passive voice",
             u"Phrases to Avoid",
             u"Redundant Expression"],
+        missing_value=[],
         required=False)
 
     libraries_atd_service_url = schema.TextLine(
@@ -715,6 +729,7 @@ class ITinyMCEResourceTypesSchema(Interface):
             u"Folder",
             u"Large Plone Folder",
             u"Plone Site"],
+        missing_value=[],
         required=False)
 
     # XXX not implements
@@ -743,6 +758,7 @@ class ITinyMCEResourceTypesSchema(Interface):
                       "images. Format is one contenttype per line."),
         default=[u"Image"],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=False)
 
     entity_encoding = schema.Choice(
@@ -872,6 +888,7 @@ class INavigationSchema(Interface):
             'Document',
             'Event'
         ),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.ReallyUserFriendlyTypes"
         ))
@@ -887,6 +904,7 @@ class INavigationSchema(Interface):
     workflow_states_to_show = schema.Tuple(
         required=False,
         default=(),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.WorkflowStates"))
 
@@ -924,6 +942,7 @@ class INavigationSchema(Interface):
         description=_(u"Hide content inside the following types in Navigation."),
         default=[u'TempFolder'],
         value_type=schema.TextLine(),
+        missing_value=(),
         required=False,
     )
 
@@ -954,6 +973,7 @@ class ISearchSchema(Interface):
             'Plone Site',
             'TempFolder',
         ),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.PortalTypes"
         ),
@@ -1135,6 +1155,7 @@ class ISiteSchema(Interface):
                  u'index.html',
                  u'index.htm',
                  u'FrontPage'],
+        missing_value=[],
         value_type=schema.TextLine()
     )
 
@@ -1149,6 +1170,7 @@ class ISiteSchema(Interface):
             u"Site Administrator",
             u"Reviewer",
         ],
+        missing_value=[],
         value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),
     )
 
@@ -1176,6 +1198,7 @@ class IDateAndTimeSchema(Interface):
                     u"portal. Can be set for users and events"),
         required=False,
         default=[],
+        missing_value=[],
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.Timezones"))
 
@@ -1203,6 +1226,7 @@ class ITypesSchema(Interface):
         required=False,
         default=[u'Image',
                  u'File'],
+        missing_value=[],
         value_type=schema.TextLine(),
     )
 
@@ -1223,6 +1247,7 @@ class ITypesSchema(Interface):
             u"The content types that should be available for selection "
             u"when setting a default page."),
         required=False,
+        missing_value=[],
         default=[
             u'Document',
             u'Event',
@@ -1333,6 +1358,7 @@ class IMarkupSchema(Interface):
         ),
         required=True,
         default=('text/html', 'text/x-web-textile'),
+        missing_value=(),
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.AllowableContentTypes"
         )
@@ -1411,6 +1437,7 @@ class IImagingSchema(Interface):
             "tile 64:64",
             "icon 32:32",
             "listing 16:16"],
+        missing_value=[],
         required=False,
     )
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-10-16T10:22:46Z
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/19762b02b5d10d32f4099a5414c12d7971abcc12

document changes

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 71d7442..21ede44 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -38,6 +38,8 @@ Changelog
 - Allow all TinyMCE settings to be set from control panel.
   [Gagaro]
 
+- Added missing_value parameter to controlpanel list and touple fields
+  [tomgross]
 
 5.0 (2015-09-27)
 ----------------


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-10-17T04:43:38-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/a72ed1be7e8c70ef9118a074b45e69fcc35f0f81

Merge pull request #1176 from plone/tomgross-patch-1

Added missing_value parameter to list and tuple fields

Files changed:
M CHANGES.rst
M Products/CMFPlone/interfaces/controlpanel.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 71d7442..21ede44 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -38,6 +38,8 @@ Changelog
 - Allow all TinyMCE settings to be set from control panel.
   [Gagaro]
 
+- Added missing_value parameter to controlpanel list and touple fields
+  [tomgross]
 
 5.0 (2015-09-27)
 ----------------
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 2f61033..ca95543 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -79,6 +79,7 @@ class IEditingSchema(Interface):
         description=_(u"Available editors in the portal."),
         default=['TinyMCE', 'None'],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=True
     )
 
@@ -157,6 +158,7 @@ class ILanguageSchema(Interface):
                               u"translatable."),
         required=True,
         default=['en'],
+        missing_value=[],
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.AvailableContentLanguages"
         )
@@ -436,6 +438,7 @@ class ITinyMCELayoutSchema(Interface):
                       "the plone bundle CSS and diazo themes using the "
                       "tinymce-content-css setting are also added."),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'++plone++static/components/tinymce/skins/lightgray/content.min.css',
         ],
@@ -445,6 +448,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Header styles"),
         description=_('Name|tag'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'Header 1|h1',
             u"Header 2|h2",
@@ -458,6 +462,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Inline styles"),
         description=_('Name|format|icon'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Bold|bold|bold",
             u"Italic|italic|italic",
@@ -471,6 +476,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Block styles"),
         description=_('Name|format'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Paragraph|p",
             u"Blockquote|blockquote",
@@ -481,6 +487,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Alignment styles"),
         description=_('Name|format|icon'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Left|alignleft|alignleft",
             u"Center|aligncenter|aligncenter",
@@ -491,6 +498,7 @@ class ITinyMCELayoutSchema(Interface):
         title=_(u"Table styles"),
         description=_('Name|class'),
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u"Listing|listing"
         ])
@@ -556,6 +564,7 @@ class ITinyMCEPluginSchema(Interface):
                  'nonbreaking', 'noneditable', 'pagebreak', 'paste', 'preview',
                  'print', 'searchreplace', 'tabfocus', 'table',
                  'visualchars', 'wordcount', 'code'],
+        missing_value=[],
         required=False)
 
     menubar = schema.List(
@@ -564,6 +573,7 @@ class ITinyMCEPluginSchema(Interface):
             u"Enter what items you would like in the menu bar.")),
         required=True,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[
             u'edit', u'table', u'format',
             u'tools' u'view', u'insert'])
@@ -616,6 +626,7 @@ class ITinyMCEPluginSchema(Interface):
                       "pluginname|location, one per line."),
         required=False,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[])
 
     custom_buttons = schema.List(
@@ -623,6 +634,7 @@ class ITinyMCEPluginSchema(Interface):
         description=_(u"Enter a list of custom buttons which will be added to toolbar"),
         required=False,
         value_type=schema.TextLine(),
+        missing_value=[],
         default=[])
 ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat
 
@@ -657,6 +669,7 @@ class ITinyMCESpellCheckerSchema(Interface):
             u"Plone",
             u"TinyMCE"],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=False)
 
     libraries_atd_show_types = schema.List(
@@ -679,6 +692,7 @@ class ITinyMCESpellCheckerSchema(Interface):
             u"Passive voice",
             u"Phrases to Avoid",
             u"Redundant Expression"],
+        missing_value=[],
         required=False)
 
     libraries_atd_service_url = schema.TextLine(
@@ -715,6 +729,7 @@ class ITinyMCEResourceTypesSchema(Interface):
             u"Folder",
             u"Large Plone Folder",
             u"Plone Site"],
+        missing_value=[],
         required=False)
 
     # XXX not implements
@@ -743,6 +758,7 @@ class ITinyMCEResourceTypesSchema(Interface):
                       "images. Format is one contenttype per line."),
         default=[u"Image"],
         value_type=schema.TextLine(),
+        missing_value=[],
         required=False)
 
     entity_encoding = schema.Choice(
@@ -872,6 +888,7 @@ class INavigationSchema(Interface):
             'Document',
             'Event'
         ),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.ReallyUserFriendlyTypes"
         ))
@@ -887,6 +904,7 @@ class INavigationSchema(Interface):
     workflow_states_to_show = schema.Tuple(
         required=False,
         default=(),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.WorkflowStates"))
 
@@ -924,6 +942,7 @@ class INavigationSchema(Interface):
         description=_(u"Hide content inside the following types in Navigation."),
         default=[u'TempFolder'],
         value_type=schema.TextLine(),
+        missing_value=(),
         required=False,
     )
 
@@ -954,6 +973,7 @@ class ISearchSchema(Interface):
             'Plone Site',
             'TempFolder',
         ),
+        missing_value=(),
         value_type=schema.Choice(
             source="plone.app.vocabularies.PortalTypes"
         ),
@@ -1135,6 +1155,7 @@ class ISiteSchema(Interface):
                  u'index.html',
                  u'index.htm',
                  u'FrontPage'],
+        missing_value=[],
         value_type=schema.TextLine()
     )
 
@@ -1149,6 +1170,7 @@ class ISiteSchema(Interface):
             u"Site Administrator",
             u"Reviewer",
         ],
+        missing_value=[],
         value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),
     )
 
@@ -1176,6 +1198,7 @@ class IDateAndTimeSchema(Interface):
                     u"portal. Can be set for users and events"),
         required=False,
         default=[],
+        missing_value=[],
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.Timezones"))
 
@@ -1203,6 +1226,7 @@ class ITypesSchema(Interface):
         required=False,
         default=[u'Image',
                  u'File'],
+        missing_value=[],
         value_type=schema.TextLine(),
     )
 
@@ -1223,6 +1247,7 @@ class ITypesSchema(Interface):
             u"The content types that should be available for selection "
             u"when setting a default page."),
         required=False,
+        missing_value=[],
         default=[
             u'Document',
             u'Event',
@@ -1333,6 +1358,7 @@ class IMarkupSchema(Interface):
         ),
         required=True,
         default=('text/html', 'text/x-web-textile'),
+        missing_value=(),
         value_type=schema.Choice(
             vocabulary="plone.app.vocabularies.AllowableContentTypes"
         )
@@ -1411,6 +1437,7 @@ class IImagingSchema(Interface):
             "tile 64:64",
             "icon 32:32",
             "listing 16:16"],
+        missing_value=[],
         required=False,
     )
 


