Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-02-02T20:26:28+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/1179793a8835b4d489e13076c69316637c2179b4

remove obsolete references to plone.app.collection and ATTopic

Files changed:
M plone/app/event/browser/event_listing.pt
M plone/app/event/browser/event_listing.py
M plone/app/event/ical/configure.zcml
M plone/app/event/profiles/default/actions.xml
M plone/app/event/profiles/default/types.xml
M plone/app/event/tests/base_setup.py
M plone/app/event/tests/test_icalendar.py
M setup.py
D plone/app/event/profiles/default/types/Topic.xml

diff --git a/plone/app/event/browser/event_listing.pt b/plone/app/event/browser/event_listing.pt
index f8125a3..eb29398 100644
--- a/plone/app/event/browser/event_listing.pt
+++ b/plone/app/event/browser/event_listing.pt
@@ -20,7 +20,7 @@
 
   <div class="event_listing">
     <header>
-      <nav tal:define="show_filter python:not (view.is_collection or view.is_topic)">
+      <nav tal:define="show_filter python:not view.is_collection">
         <ul class="mode_selector">
           <tal:cond condition="show_filter">
           <li class="" tal:attributes="class python:mode=='future' and 'selected' or ''">
diff --git a/plone/app/event/browser/event_listing.py b/plone/app/event/browser/event_listing.py
index 3fcfc92..6b148f6 100644
--- a/plone/app/event/browser/event_listing.py
+++ b/plone/app/event/browser/event_listing.py
@@ -31,13 +31,9 @@
 from zope.interface import implements
 
 try:
-    from plone.app.collection.interfaces import ICollection
+    from plone.app.contenttypes.interfaces import ICollection
 except ImportError:
     ICollection = None
-try:
-    from Products.ATContentTypes.interfaces import IATTopic
-except ImportError:
-    IATTopic = None
 
 
 class EventListing(BrowserView):
@@ -90,11 +86,6 @@ def is_collection(self):
         return ICollection and ICollection.providedBy(ctx) or False
 
     @property
-    def is_topic(self):
-        ctx = self.default_context
-        return IATTopic and IATTopic.providedBy(ctx) or False
-
-    @property
     def date(self):
         dt = None
         if self._date:
@@ -143,16 +134,10 @@ def _get_events(self, ret_mode=RET_MODE_ACCESSORS, expand=True):
 
     def events(self, ret_mode=RET_MODE_ACCESSORS, expand=True, batch=True):
         res = []
-        is_col = self.is_collection
-        is_top = self.is_topic
-        if is_col or is_top:
+        if self.is_collection:
             ctx = self.default_context
-            if is_col:
-                res = ctx.results(batch=False, sort_on='start', brains=True)
-                query = queryparser.parseFormquery(ctx, ctx.getRawQuery())
-            else:
-                res = ctx.queryCatalog(batch=False, full_objects=False)
-                query = ctx.buildQuery()
+            res = ctx.results(batch=False, sort_on='start', brains=True)
+            query = queryparser.parseFormquery(ctx, ctx.getRawQuery())
             if expand:
                 # get start and end values from the query to ensure limited
                 # listing for occurrences
@@ -399,7 +384,7 @@ def prev_month_url(self):
     # COLLECTION daterange start/end determination
     def _expand_events_start_end(self, start, end):
         # make sane start and end values for expand_events from
-        # Collection/Topic start/end criterions.
+        # Collection start/end criterions.
         # if end/min is given, it overrides start/min settings to make sure,
         # ongoing events are shown in the listing!
         # XXX: This actually fits most needs, but not all. Maybe someone
diff --git a/plone/app/event/ical/configure.zcml b/plone/app/event/ical/configure.zcml
index 581a946..d7dfe96 100644
--- a/plone/app/event/ical/configure.zcml
+++ b/plone/app/event/ical/configure.zcml
@@ -39,13 +39,6 @@
         />
 
     <adapter
-        for="plone.app.collection.interfaces.ICollection"
-        provides="plone.event.interfaces.IICalendar"
-        factory=".exporter.calendar_from_collection"
-        zcml:condition="installed plone.app.collection"
-        />
-
-    <adapter
         for="plone.app.contenttypes.interfaces.ICollection"
         provides="plone.event.interfaces.IICalendar"
         factory=".exporter.calendar_from_collection"
@@ -86,15 +79,6 @@
         />
 
     <browser:page
-        for="plone.app.collection.interfaces.ICollection"
-        name="ics_view"
-        class=".exporter.EventsICal"
-        permission="zope2.View"
-        zcml:condition="installed plone.app.collection"
-        layer="..interfaces.IBrowserLayer"
-        />
-
-    <browser:page
         for="plone.app.contenttypes.interfaces.ICollection"
         name="ics_view"
         class=".exporter.EventsICal"
diff --git a/plone/app/event/profiles/default/actions.xml b/plone/app/event/profiles/default/actions.xml
index 5ba4ac7..87d8e9c 100644
--- a/plone/app/event/profiles/default/actions.xml
+++ b/plone/app/event/profiles/default/actions.xml
@@ -8,7 +8,7 @@
    <property name="description" i18n:translate="help_event_listing_settings">Settings for the event listing view.</property>
    <property name="url_expr">string:${object_url}/@@event_listing_settings</property>
    <property name="icon_expr"></property>
-   <property name="available_expr">python:object.defaultView()=='event_listing' and object.portal_type not in ('Collection', 'Topic')</property>
+   <property name="available_expr">python:object.defaultView() == 'event_listing' and object.portal_type != 'Collection'</property>
    <property name="permissions">
     <element value="Manage properties"/>
    </property>
diff --git a/plone/app/event/profiles/default/types.xml b/plone/app/event/profiles/default/types.xml
index 296c504..f62133b 100644
--- a/plone/app/event/profiles/default/types.xml
+++ b/plone/app/event/profiles/default/types.xml
@@ -1,11 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <object name="portal_types" meta_type="Plone Types Tool">
-  <object name="Plone Site"
-    meta_type="Factory-based Type Information with dynamic views"/>
-  <object name="Folder"
-    meta_type="Factory-based Type Information with dynamic views"/>
-  <object name="Collection"
-    meta_type="Factory-based Type Information with dynamic views"/>
-  <object name="Topic"
-    meta_type="Factory-based Type Information with dynamic views"/>
+  <object name="Plone Site" meta_type="Factory-based Type Information with dynamic views"/>
+  <object name="Folder"     meta_type="Dexterity FTI"/>
+  <object name="Collection" meta_type="Dexterity FTI"/>
 </object>
diff --git a/plone/app/event/profiles/default/types/Topic.xml b/plone/app/event/profiles/default/types/Topic.xml
deleted file mode 100644
index d726815..0000000
--- a/plone/app/event/profiles/default/types/Topic.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<object name="Topic">
- <property name="view_methods" purge="False">
-  <element value="event_listing"/>
- </property>
-</object>
diff --git a/plone/app/event/tests/base_setup.py b/plone/app/event/tests/base_setup.py
index 0ba1bd5..dee3fef 100644
--- a/plone/app/event/tests/base_setup.py
+++ b/plone/app/event/tests/base_setup.py
@@ -136,8 +136,7 @@ def setUp(self):
         workflow.doActionFor(self.long_event, 'publish')
         self.long_event.reindexObject()
 
-        # For AT based tests, this is a plone.app.collection ICollection type
-        # For DX based tests, it's a plone.app.contenttypes ICollection type
+        # plone.app.contenttypes ICollection type
         self.portal.invokeFactory('Collection', 'collection', title=u'Col')
         collection = self.portal.collection
         collection.sort_on = u'start'
diff --git a/plone/app/event/tests/test_icalendar.py b/plone/app/event/tests/test_icalendar.py
index 704837c..9f5fbbe 100644
--- a/plone/app/event/tests/test_icalendar.py
+++ b/plone/app/event/tests/test_icalendar.py
@@ -223,7 +223,7 @@ def test_event_listing_ical_portal__specific_date(self):
         self.assertTrue('Long Event' in icalstr)
 
     def test_collection_ical(self):
-        """Test basic icalendar export from ATTopics.
+        """Test basic icalendar export from Collections.
         """
         headers, output, request = make_fake_response(self.request)
         view = getMultiAdapter(
diff --git a/setup.py b/setup.py
index cbbf862..e3dcc23 100644
--- a/setup.py
+++ b/setup.py
@@ -91,7 +91,6 @@
         'dexterity': [],  # BBB, remove with next version
         'test': [
             'mock',
-            'plone.app.collection',
             'plone.app.contenttypes >= 1.2a3',
             'plone.app.robotframework',
             'plone.app.testing [robot]',


