Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-06-29T21:31:42-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b99644316fa8243f5164cc104d74ec7864cefa3b

fix config.js to render functions properly

Files changed:
M Products/CMFPlone/resources/browser/configjs.py
M Products/CMFPlone/tests/testResourceRegistries.py

diff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py
index 753d764..7ee3db7 100644
--- a/Products/CMFPlone/resources/browser/configjs.py
+++ b/Products/CMFPlone/resources/browser/configjs.py
@@ -1,13 +1,38 @@
+import json
+import re
+
 from Products.CMFPlone.interfaces import IResourceRegistry
 from Products.Five.browser import BrowserView
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-import re
-import json
 
 
-configjs = """requirejs.config(%s);"""
+configjs = """requirejs.config({
+    baseUrl: '%s',
+    paths: %s,
+    shim: %s,
+    optimize: 'uglify',
+    wrapShim: true
+});"""
+
+
+def _format_shims(shims):
+    result = []
+    for name, val in shims.items():
+        options = []
+        if val.get('exports'):
+            options.append('exports: "%s"' % val['exports'])
+        if val.get('deps'):
+            options.append('deps: ' + json.dumps(val['deps']))
+        if val.get('init'):
+            # function, no escaping here
+            options.append('init: %s' % val['init'])
+        result.append("""
+        "%s": {
+            %s
+        }""" % (name, ',\n            '.join(options)))
+    return '{' + ','.join(result) + '\n    }'
 
 
 class RequireJsView(BrowserView):
@@ -70,10 +95,8 @@ def __call__(self):
         (baseUrl, paths, shims) = self.get_requirejs_config()
         self.request.response.setHeader("Content-Type",
                                         "application/javascript")
-        return configjs % json.dumps({
-            'baseUrl': baseUrl,
-            'paths': paths,
-            'shim': shims,
-            'optimize': 'uglify',
-            'wrapShim': True
-        }, indent=4)
+        return configjs % (
+            baseUrl,
+            json.dumps(paths, indent=4),
+            _format_shims(shims)
+        )
diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py
index 18c42fb..207fa35 100644
--- a/Products/CMFPlone/tests/testResourceRegistries.py
+++ b/Products/CMFPlone/tests/testResourceRegistries.py
@@ -232,6 +232,13 @@ def test_be_able_to_disable_but_not_remove(self):
                           len([x.js for x in self._get_resources().values()]))
 
 
+class TestConfigJs(PloneTestCase.PloneTestCase):
+
+    def test_init_shim_works_with_function(self):
+        config = self.portal.restrictedTraverse('config.js')()
+        self.assertTrue('init: function' in config)
+
+
 class TestControlPanel(PloneTestCase.PloneTestCase):
 
     def test_save_override_file(self):


