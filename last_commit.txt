Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-20T14:53:00-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1476eacdb42835f467f4e8e64bb062c815a52b3e

Fix ATTopic migration to work with latest changes in plone.app.querystring

Files changed:
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/tests/test_migration_topic.py

diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index 0e6081c..2944e37 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -273,7 +273,7 @@ def add_row(operation, value=None):
 class ATSimpleStringCriterionConverter(CriterionConverter):
     operator_code = 'string.contains'
     # review_state could be a string criterion, but should become a selection.
-    alt_operator_code = 'selection.is'
+    alt_operator_code = 'selection.any'
 
 
 class ATCurrentAuthorCriterionConverter(CriterionConverter):
@@ -281,7 +281,7 @@ class ATCurrentAuthorCriterionConverter(CriterionConverter):
 
 
 class ATSelectionCriterionConverter(CriterionConverter):
-    operator_code = 'selection.is'
+    operator_code = 'selection.any'
     # alt_operator_code = 'selection.any'
 
     def get_operation(self, value, index, criterion):
@@ -399,7 +399,7 @@ def get_query_value(self, value, index, criterion):
 
 
 class ATPortalTypeCriterionConverter(CriterionConverter):
-    operator_code = 'selection.is'
+    operator_code = 'selection.any'
 
     def get_query_value(self, value, index, criterion):
         # Special handling for portal_type=Topic.
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 90b7413..677face 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -136,7 +136,7 @@ def test_ATSimpleStringCriterionToSelection(self):
         self.assertEqual(
             self.portal.topic.query,
             [{'i': 'review_state',
-              'o': 'plone.app.querystring.operation.selection.is',
+              'o': 'plone.app.querystring.operation.selection.any',
               'v': 'published'}]
         )
 
@@ -350,7 +350,7 @@ def test_ATListCriterion(self):
                           'v': ('foo', 'bar')})
         self.assertEqual(query[1],
                          {'i': 'portal_type',
-                          'o': 'plone.app.querystring.operation.selection.is',
+                          'o': 'plone.app.querystring.operation.selection.any',
                           'v': ('Document', 'Folder')})
 
         # Check that the resulting query does not give an error.
@@ -530,7 +530,7 @@ def test_ATPortalTypeCriterion(self):
         self.assertEqual(
             query,
             [{'i': 'portal_type',
-              'o': 'plone.app.querystring.operation.selection.is',
+              'o': 'plone.app.querystring.operation.selection.any',
               'v': ('Document', 'Folder')}]
         )
 
@@ -549,7 +549,7 @@ def test_ATPortalTypeCriterionOfTopic(self):
         query = self.portal.topic.query
         self.assertEqual(query,
                          [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.is',
+                           'o': 'plone.app.querystring.operation.selection.any',
                            'v': ('Collection',)}])
 
         # Check that the resulting query does not give an error.
@@ -584,7 +584,7 @@ def test_ATSelectionCriterion(self):
                           'v': ('foo', 'bar')})
         self.assertEqual(query[1],
                          {'i': 'portal_type',
-                          'o': 'plone.app.querystring.operation.selection.is',
+                          'o': 'plone.app.querystring.operation.selection.any',
                           'v': ('Document', 'Collection')})
 
         # Check that the resulting query does not give an error.
@@ -604,7 +604,7 @@ def test_ATSelectionCriterionForTypeTitle(self):
         query = self.portal.topic.query
         self.assertEqual(query,
                          [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.is',
+                           'o': 'plone.app.querystring.operation.selection.any',
                            'v': ['Document', 'Folder']}])
 
         # Check that the resulting query does not give an error.


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-21T17:04:11+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/5292083cfd894a28f5ce40431f28a330b63fc171

Merge pull request #258 from plone/collection-fixes

Fix ATTopic migration to work with latest changes in plone.app.querystring

Files changed:
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/tests/test_migration_topic.py

diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index 0e6081c..2944e37 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -273,7 +273,7 @@ def add_row(operation, value=None):
 class ATSimpleStringCriterionConverter(CriterionConverter):
     operator_code = 'string.contains'
     # review_state could be a string criterion, but should become a selection.
-    alt_operator_code = 'selection.is'
+    alt_operator_code = 'selection.any'
 
 
 class ATCurrentAuthorCriterionConverter(CriterionConverter):
@@ -281,7 +281,7 @@ class ATCurrentAuthorCriterionConverter(CriterionConverter):
 
 
 class ATSelectionCriterionConverter(CriterionConverter):
-    operator_code = 'selection.is'
+    operator_code = 'selection.any'
     # alt_operator_code = 'selection.any'
 
     def get_operation(self, value, index, criterion):
@@ -399,7 +399,7 @@ def get_query_value(self, value, index, criterion):
 
 
 class ATPortalTypeCriterionConverter(CriterionConverter):
-    operator_code = 'selection.is'
+    operator_code = 'selection.any'
 
     def get_query_value(self, value, index, criterion):
         # Special handling for portal_type=Topic.
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 90b7413..677face 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -136,7 +136,7 @@ def test_ATSimpleStringCriterionToSelection(self):
         self.assertEqual(
             self.portal.topic.query,
             [{'i': 'review_state',
-              'o': 'plone.app.querystring.operation.selection.is',
+              'o': 'plone.app.querystring.operation.selection.any',
               'v': 'published'}]
         )
 
@@ -350,7 +350,7 @@ def test_ATListCriterion(self):
                           'v': ('foo', 'bar')})
         self.assertEqual(query[1],
                          {'i': 'portal_type',
-                          'o': 'plone.app.querystring.operation.selection.is',
+                          'o': 'plone.app.querystring.operation.selection.any',
                           'v': ('Document', 'Folder')})
 
         # Check that the resulting query does not give an error.
@@ -530,7 +530,7 @@ def test_ATPortalTypeCriterion(self):
         self.assertEqual(
             query,
             [{'i': 'portal_type',
-              'o': 'plone.app.querystring.operation.selection.is',
+              'o': 'plone.app.querystring.operation.selection.any',
               'v': ('Document', 'Folder')}]
         )
 
@@ -549,7 +549,7 @@ def test_ATPortalTypeCriterionOfTopic(self):
         query = self.portal.topic.query
         self.assertEqual(query,
                          [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.is',
+                           'o': 'plone.app.querystring.operation.selection.any',
                            'v': ('Collection',)}])
 
         # Check that the resulting query does not give an error.
@@ -584,7 +584,7 @@ def test_ATSelectionCriterion(self):
                           'v': ('foo', 'bar')})
         self.assertEqual(query[1],
                          {'i': 'portal_type',
-                          'o': 'plone.app.querystring.operation.selection.is',
+                          'o': 'plone.app.querystring.operation.selection.any',
                           'v': ('Document', 'Collection')})
 
         # Check that the resulting query does not give an error.
@@ -604,7 +604,7 @@ def test_ATSelectionCriterionForTypeTitle(self):
         query = self.portal.topic.query
         self.assertEqual(query,
                          [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.is',
+                           'o': 'plone.app.querystring.operation.selection.any',
                            'v': ['Document', 'Folder']}])
 
         # Check that the resulting query does not give an error.


