Repository: plone.batching
Branch: refs/heads/master
Date: 2015-04-28T13:44:23+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/plone.batching/commit/df92c3bc22240dc0eb7fed4edec5e7af22c1f19c

Added failing test to explain problem about lastpage

Files changed:
M plone/batching/tests.py

diff --git a/plone/batching/tests.py b/plone/batching/tests.py
index 3e5654a..ad7a825 100644
--- a/plone/batching/tests.py
+++ b/plone/batching/tests.py
@@ -102,9 +102,10 @@ def test_lastpage_with_orphans(self):
         self.assertEqual(1, batch.lastpage)
         batch = BaseBatch(range(109), 10, orphan=9)
         self.assertEqual(10, batch.lastpage)
+        batch = BaseBatch(range(71), 10, orphan=2)
+        self.assertEqual(7, batch.lastpage)
         self.assertRaises(AssertionError, BaseBatch, [], 10, orphan=20)
 
-
     def test_items_not_on_page(self):
         batch = BaseBatch(range(20), 5, start=5)
         self.assertEqual(batch.items_not_on_page,


Repository: plone.batching
Branch: refs/heads/master
Date: 2015-04-28T14:05:05+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/plone.batching/commit/4151149aee46e6abf00328834194762d84ca633c

Fix lastpage computation with orphaning

Files changed:
M CHANGES.rst
M plone/batching/batch.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35e465d..77f33a8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.0.4 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix lastpage computation with orphaning
+  [gbastien]
 
 
 1.0.3 (2015-02-20)
@@ -54,4 +55,3 @@ Changelog
 
 - Factored out Plone batching implementation to seperate egg (PLIP #12235)
   [tom_gross]
-
diff --git a/plone/batching/batch.py b/plone/batching/batch.py
index f6d3e87..817a2b2 100644
--- a/plone/batching/batch.py
+++ b/plone/batching/batch.py
@@ -156,10 +156,7 @@ def firstpage(self):
     def lastpage(self):
         """ Last page of batch
         """
-        pages = self.sequence_length / self.pagesize
-        if (self.sequence_length - self.orphan) % self.pagesize:
-            pages += 1
-        return pages
+        return self.numpages
 
     @property
     def islastpage(self):


Repository: plone.batching
Branch: refs/heads/master
Date: 2015-04-28T14:08:16+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/plone.batching/commit/d53d18229c15c6764dbcd6db2a9d042d561b5656

Basic PEP8

Files changed:
M plone/batching/tests.py

diff --git a/plone/batching/tests.py b/plone/batching/tests.py
index ad7a825..c0e7853 100644
--- a/plone/batching/tests.py
+++ b/plone/batching/tests.py
@@ -112,7 +112,6 @@ def test_items_not_on_page(self):
             [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
         self.assertEqual(list(batch), [5, 6, 7, 8, 9])
 
-
     def test_batch_bsize(self):
         sequence = range(279)
         # Random page
@@ -200,6 +199,7 @@ def test_batchview_plone(self):
         self.assertEqual(view.make_link(3),
                          'http://nohost/dummy?a=foo&b_start:int=6')
 
+
 def test_suite():
     suite = unittest.TestSuite()
     suite.addTests([
@@ -209,8 +209,9 @@ def test_suite():
         unittest.makeSuite(TestBrowser),
         unittest.makeSuite(TestQuantumBatch),
         doctest.DocFileSuite('batching.rst',
-            package='plone.batching',
-            optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE,
-            setUp=setUp, tearDown=tearDown),
-        ])
+                             package='plone.batching',
+                             optionflags=doctest.ELLIPSIS |
+                             doctest.REPORT_ONLY_FIRST_FAILURE,
+                             setUp=setUp, tearDown=tearDown),
+    ])
     return suite


Repository: plone.batching
Branch: refs/heads/master
Date: 2015-04-28T14:37:13+02:00
Author: Patrick Gerken (do3cc) <do3cc@patrick-gerken.de>
Commit: https://github.com/plone/plone.batching/commit/98f98850d57a5937c4d8ae00d05befb832c5132e

Merge pull request #7 from gbastien/master

Fix lastpage computation with orphaning

Files changed:
M CHANGES.rst
M plone/batching/batch.py
M plone/batching/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35e465d..77f33a8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.0.4 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix lastpage computation with orphaning
+  [gbastien]
 
 
 1.0.3 (2015-02-20)
@@ -54,4 +55,3 @@ Changelog
 
 - Factored out Plone batching implementation to seperate egg (PLIP #12235)
   [tom_gross]
-
diff --git a/plone/batching/batch.py b/plone/batching/batch.py
index f6d3e87..817a2b2 100644
--- a/plone/batching/batch.py
+++ b/plone/batching/batch.py
@@ -156,10 +156,7 @@ def firstpage(self):
     def lastpage(self):
         """ Last page of batch
         """
-        pages = self.sequence_length / self.pagesize
-        if (self.sequence_length - self.orphan) % self.pagesize:
-            pages += 1
-        return pages
+        return self.numpages
 
     @property
     def islastpage(self):
diff --git a/plone/batching/tests.py b/plone/batching/tests.py
index 3e5654a..c0e7853 100644
--- a/plone/batching/tests.py
+++ b/plone/batching/tests.py
@@ -102,16 +102,16 @@ def test_lastpage_with_orphans(self):
         self.assertEqual(1, batch.lastpage)
         batch = BaseBatch(range(109), 10, orphan=9)
         self.assertEqual(10, batch.lastpage)
+        batch = BaseBatch(range(71), 10, orphan=2)
+        self.assertEqual(7, batch.lastpage)
         self.assertRaises(AssertionError, BaseBatch, [], 10, orphan=20)
 
-
     def test_items_not_on_page(self):
         batch = BaseBatch(range(20), 5, start=5)
         self.assertEqual(batch.items_not_on_page,
             [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
         self.assertEqual(list(batch), [5, 6, 7, 8, 9])
 
-
     def test_batch_bsize(self):
         sequence = range(279)
         # Random page
@@ -199,6 +199,7 @@ def test_batchview_plone(self):
         self.assertEqual(view.make_link(3),
                          'http://nohost/dummy?a=foo&b_start:int=6')
 
+
 def test_suite():
     suite = unittest.TestSuite()
     suite.addTests([
@@ -208,8 +209,9 @@ def test_suite():
         unittest.makeSuite(TestBrowser),
         unittest.makeSuite(TestQuantumBatch),
         doctest.DocFileSuite('batching.rst',
-            package='plone.batching',
-            optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE,
-            setUp=setUp, tearDown=tearDown),
-        ])
+                             package='plone.batching',
+                             optionflags=doctest.ELLIPSIS |
+                             doctest.REPORT_ONLY_FIRST_FAILURE,
+                             setUp=setUp, tearDown=tearDown),
+    ])
     return suite


