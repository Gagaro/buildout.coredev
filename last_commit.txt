Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-13T20:49:33+02:00
Author: Patrick Gerken (do3cc) <do3cc@patrick-gerken.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/a6d5f3e124e2da41a9c219061c785281be1b81fc

Update tests

- Remove workaround for plone.app.testing bug
- Remove outdated test that tested templates from skin layers. These
  are going away
- Update tests to new default view names from plone.app.contenttypes
  These test failures were masked by the plone.app.testing bug

Fixes some of the tests for d57a09966865809b27f6e3a1b4a1fdd851112a2a

Files changed:
M Products/CMFPlone/tests/testBrowserDefault.py

diff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py
index f264f50..11cfc79 100644
--- a/Products/CMFPlone/tests/testBrowserDefault.py
+++ b/Products/CMFPlone/tests/testBrowserDefault.py
@@ -32,9 +32,6 @@ def setUp(self):
         self.portal = self.layer['portal']
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
 
-        # make sure the test request gets marked with the default theme layer
-        notify(BeforeTraverseEvent(self.portal, self.layer['app'].REQUEST))
-
         # disable diazo theming
         self.portal.portal_registry[
             'plone.app.theming.interfaces.IThemeSettings.enabled'
@@ -261,12 +258,6 @@ def setUp(self):
                                       title='Welcome to Plone')
         self.portal.setDefaultPage('front-page')
 
-        # Also make sure we have folder_listing as a template
-        self.portal.getTypeInfo().manage_changeProperties(
-            view_methods=['folder_listing'],
-            default_view='folder_listing'
-        )
-
     def assertFalseDiff(self, text1, text2):
         """
         Compare two bodies of text.  If they are not the same, fail and output
@@ -283,12 +274,12 @@ def testCall(self):
         self.assertFalseDiff(resolved, target)
 
     def testDefaultViews(self):
-        self.assertEqual(self.portal.getLayout(), 'folder_listing')
+        self.assertEqual(self.portal.getLayout(), 'listing_view')
         self.assertEqual(self.portal.getDefaultPage(), 'front-page')
         self.assertEqual(self.portal.defaultView(), 'front-page')
-        self.assertEqual(self.portal.getDefaultLayout(), 'folder_listing')
+        self.assertEqual(self.portal.getDefaultLayout(), 'listing_view')
         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]
-        self.assertTrue('folder_listing' in layoutKeys)
+        self.assertTrue('listing_view' in layoutKeys)
         self.assertEqual(self.portal.__browser_default__(None),
                          (self.portal, ['front-page', ]))
 
@@ -298,13 +289,13 @@ def testCanSetLayout(self):
         self.assertFalse(self.portal.canSetLayout())  # Not permitted
 
     def testSetLayout(self):
-        self.portal.setLayout('folder_listing')
-        self.assertEqual(self.portal.getLayout(), 'folder_listing')
+        self.portal.setLayout('summary_view')
+        self.assertEqual(self.portal.getLayout(), 'summary_view')
         self.assertEqual(self.portal.getDefaultPage(), None)
-        self.assertEqual(self.portal.defaultView(), 'folder_listing')
-        self.assertEqual(self.portal.getDefaultLayout(), 'folder_listing')
+        self.assertEqual(self.portal.defaultView(), 'summary_view')
+        self.assertEqual(self.portal.getDefaultLayout(), 'listing_view')
         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]
-        self.assertTrue('folder_listing' in layoutKeys)
+        self.assertTrue('summary_view' in layoutKeys)
 
         view = self.portal.view()
         browserDefault = self.portal.__browser_default__(None)[1][0]
@@ -332,10 +323,10 @@ def testSetDefaultPage(self):
                          (self.portal, ['ad', ]))
 
         # still have layout settings
-        self.assertEqual(self.portal.getLayout(), 'folder_listing')
-        self.assertEqual(self.portal.getDefaultLayout(), 'folder_listing')
+        self.assertEqual(self.portal.getLayout(), 'listing_view')
+        self.assertEqual(self.portal.getDefaultLayout(), 'listing_view')
         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]
-        self.assertTrue('folder_listing' in layoutKeys)
+        self.assertTrue('listing_view' in layoutKeys)
 
     def testSetDefaultPageUpdatesCatalog(self):
         # Ensure that Default page changes update the catalog
@@ -378,31 +369,13 @@ def testSetLayoutUnsetsDefaultPage(self):
 
     def testMissingTemplatesIgnored(self):
         self.portal.getTypeInfo() \
-            .manage_changeProperties(view_methods=['folder_listing', 'foo'])
+            .manage_changeProperties(view_methods=['listing_view', 'foo'])
         views = [v[0] for v in self.portal.getAvailableLayouts()]
-        self.assertTrue(views == ['folder_listing'])
+        self.assertTrue(views == ['listing_view'])
 
     def testMissingPageIgnored(self):
         self.portal.setDefaultPage('inexistent')
         self.assertEqual(self.portal.getDefaultPage(), None)
-        self.assertEqual(self.portal.defaultView(), 'folder_listing')
+        self.assertEqual(self.portal.defaultView(), 'listing_view')
         self.assertEqual(self.portal.__browser_default__(None),
-                         (self.portal, ['folder_listing', ]))
-
-    def testTemplateTitles(self):
-        views = [
-            v for v in self.portal.getAvailableLayouts()
-            if v[0] == 'folder_listing'
-        ]
-        self.assertEqual(views[0][1], 'Standard view')
-        try:
-            folderListing = self.portal.unrestrictedTraverse('folder_listing')
-            folderListing.title = 'foo'
-            views = [
-                v for v in self.portal.getAvailableLayouts()
-                if v[0] == 'folder_listing'
-            ]
-            self.assertEqual(views[0][1], 'foo')
-        finally:
-            # Restore title to avoid side-effects
-            folderListing.title = 'Standard view'
+                         (self.portal, ['listing_view', ]))


