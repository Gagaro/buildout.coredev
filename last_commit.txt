Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-05-02T02:22:06-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/cada54a496afd03ffd8c826ea838f606aa794579

bah, missed saving dev bundle is not saved with rest of data by default

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.py

diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py
index f51664d..38a4693 100644
--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py
+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py
@@ -144,27 +144,16 @@ def registry(self):
 
     def update_registry_collection(self, itype, prefix, newdata):
         rdata = self.registry.collectionOfInterface(itype, prefix=prefix, check=False)
-        set_legacy_import_dt = False
         for key, data in newdata.items():
             if key not in rdata:
                 record = rdata.add(key)
             else:
                 record = rdata[key]
-            if key == 'plone-legacy':
-                # special case here. need to set last compiled time
-                if set(record.resources) != set(data.get('resources', [])):
-                    set_legacy_import_dt = True
             updateRecordFromDict(record, data)
         # remove missing ones
         for key in set(rdata.keys()) - set(newdata.keys()):
             del rdata[key]
 
-        if set_legacy_import_dt:
-            if 'plone.resources.last_legacy_import' in self.registry.records:  # noqa
-                self.registry.records[
-                    'plone.resources.last_legacy_import'
-                ].value = datetime.now()
-
     def save_registry(self):
         req = self.request
 
@@ -175,6 +164,11 @@ def save_registry(self):
             IBundleRegistry, "plone.bundles",
             json.loads(req.get('bundles')))
 
+        if self.request.form.get('value', '').lower() == 'true':
+            self.registry['plone.resources.development'] = True
+        else:
+            self.registry['plone.resources.development'] = False
+
         # it'd be difficult to know if the legacy bundle settings
         # changed or not so we need to just set the last import date
         # back so it gets re-built


