Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-03T14:39:26+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c734b424923bd865b49eccb2291646226ee6d1dc

minor plone code convention changes

Files changed:
M Products/CMFPlone/browser/ploneview.py

diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index 6a5e611..6e88a53 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -1,22 +1,23 @@
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from plone.memoize.view import memoize
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import utils
 from Products.CMFPlone.browser.interfaces import IPlone
 from Products.CMFPlone.log import log_deprecated
 from Products.Five import BrowserView
 from plone.app.content.browser.folderfactories import _allowedTypes
-from plone.memoize.view import memoize
 from zope.component import getMultiAdapter
 from zope.deprecation import deprecated
 from zope.i18n import translate
-from zope.interface import implements
+from zope.interface import implementer
 from zope.size import byteDisplay
 
 _marker = []
 
 
+@implementer(IPlone)
 class Plone(BrowserView):
-    implements(IPlone)
 
     # Utility methods
 
@@ -82,8 +83,10 @@ def showToolbar(self):
         if portal_membership.isAnonymousUser():
             return False
 
-        context_state = getMultiAdapter((context, request),
-                                        name="plone_context_state")
+        context_state = getMultiAdapter(
+            (context, request),
+            name="plone_context_state"
+        )
         actions = context_state.actions
 
         if actions('workflow', max=1):
@@ -118,9 +121,10 @@ def showToolbar(self):
 
         return False
 
+    @deprecated('showEditableBorder is renamed to showToolbar')
     def showEditableBorder(self):
+        # remove in 5.1
         return self.showToolbar()
-    deprecated(showEditableBorder, 'showEditableBorder is renamed to showToolbar')
 
     def normalizeString(self, text):
         """Normalizes a title to an id.
@@ -232,30 +236,47 @@ def mark_view(self, view):
         """Adds a marker interface to the view if it is "the" view for the
         context May only be called from a template.
         """
-        log_deprecated("@@plone_view/mark_view as been deprecated, you should use "
-                       "@@plone_layout/mark_view")
+        log_deprecated(
+            "@@plone_view/mark_view as been deprecated, you should use "
+            "@@plone_layout/mark_view"
+        )
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         layout.mark_view(view)
 
+    @memoize
+    def patterns_settings(self):
+        context = aq_inner(self.context)
+        return getMultiAdapter(
+            (context, self.request),
+            name=u'plone_patterns_settings')()
+
+    @deprecated(  # remove in Plone 5.1
+        "@@plone_view/hide_columns as been deprecated, you should use "
+        "@@plone_layout/hide_columns"
+    )
     def hide_columns(self, column_left, column_right):
         """Returns a CSS class matching the current column status.
         """
-        log_deprecated("@@plone_view/hide_columns as been deprecated, you should use "
-                       "@@plone_layout/hide_columns")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.hide_columns(column_left, column_right)
 
+    @deprecated(  # remove in Plone 5.1
+        "@@plone_view/icons_visible as been deprecated, you should use "
+        "@@plone_layout/icons_visible"
+    )
     def icons_visible(self):
         """Returns True if icons should be shown or False otherwise.
         """
-        log_deprecated("@@plone_view/icons_visible as been deprecated, you should use "
-                       "@@plone_layout/icons_visible")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.icons_visible()
 
+    @deprecated(  # remove in Plone 5.1
+        "@@plone_view/getIcon as been deprecated, you should use "
+        "@@plone_layout/getIcon"
+    )
     def getIcon(self, item):
         """Returns an object which implements the IContentIcon interface and
         provides the informations necessary to render an icon. The item
@@ -263,34 +284,29 @@ def getIcon(self, item):
         globally or just for anonymous users with the icon_visibility property
         in site_properties.
         """
-        log_deprecated("@@plone_view/getIcon as been deprecated, you should use "
-                       "@@plone_layout/getIcon")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.getIcon(item)
 
+    @deprecated(  # remove in Plone 5.1
+        "@@plone_view/have_portlets as been deprecated, you should "
+        "use @@plone_layout/have_portlets"
+    )
     def have_portlets(self, manager_name, view=None):
         """Determine whether a column should be shown. The left column is
         called plone.leftcolumn; the right column is called plone.rightcolumn.
         """
-        log_deprecated("@@plone_view/have_portlets as been deprecated, you should "
-                       "use @@plone_layout/have_portlets")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.have_portlets(manager_name, view=view)
 
+    @deprecated(  # remove in Plone 5.1
+        "@@plone_view/bodyClass as been deprecated, you should use "
+        "@@plone_layout/bodyClass"
+    )
     def bodyClass(self, template, view):
         """Returns the CSS class to be used on the body tag.
         """
-        log_deprecated("@@plone_view/bodyClass as been deprecated, you should use "
-                       "@@plone_layout/bodyClass")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.bodyClass(template, view)
-
-    @memoize
-    def patterns_settings(self):
-        context = aq_inner(self.context)
-        return getMultiAdapter(
-            (context, self.request),
-            name=u'plone_patterns_settings')()


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-03T15:03:42+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/31931b052580d899b904b071c3d02c35a9310969

fix #350 - critizized part

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/ploneview.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c25e0c1..eab71eb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
 5.0b4 (unreleased)
 ------------------
 
+- fix #350: "plone.app.content circular dependency on Products.CMFPlone" - this
+  fixes the imports only, not on zcml/genericsetup level.
+  [jensens]
+
 - move Plone specific ``getDefaultPage`` (magic) code from plone.app.layout
   over to Products.CMFPlone. This avoids a circular dependency. Also its
   not really layout only related code.
diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index 6e88a53..d2e49f7 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -6,7 +6,6 @@
 from Products.CMFPlone.browser.interfaces import IPlone
 from Products.CMFPlone.log import log_deprecated
 from Products.Five import BrowserView
-from plone.app.content.browser.folderfactories import _allowedTypes
 from zope.component import getMultiAdapter
 from zope.deprecation import deprecated
 from zope.i18n import translate
@@ -115,7 +114,7 @@ def showToolbar(self):
                 return True
 
         # Check to see if the user is able to add content
-        allowedTypes = [fti for fti in _allowedTypes(request, context)]
+        allowedTypes = context.allowedContentTypes()
         if allowedTypes:
             return True
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-03T15:48:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/745d1057d80e1b3d8b55ee58158e08514969a58d

use the correct function as @deprecate decorator.

Files changed:
M Products/CMFPlone/browser/ploneview.py

diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index d2e49f7..3231ee4 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -4,10 +4,9 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import utils
 from Products.CMFPlone.browser.interfaces import IPlone
-from Products.CMFPlone.log import log_deprecated
 from Products.Five import BrowserView
 from zope.component import getMultiAdapter
-from zope.deprecation import deprecated
+from zope.deprecation import deprecate
 from zope.i18n import translate
 from zope.interface import implementer
 from zope.size import byteDisplay
@@ -120,7 +119,7 @@ def showToolbar(self):
 
         return False
 
-    @deprecated('showEditableBorder is renamed to showToolbar')
+    @deprecate('showEditableBorder is renamed to showToolbar')
     def showEditableBorder(self):
         # remove in 5.1
         return self.showToolbar()
@@ -229,16 +228,14 @@ def getViewTemplateId(self):
             name=u'plone_context_state')
         return context_state.view_template_id()
 
-    # Deprecated in favour of @@plone_layout
-
+    @deprecate(
+        "@@plone_view/mark_view as been deprecated, you should use "
+        "@@plone_layout/mark_view"
+    )
     def mark_view(self, view):
         """Adds a marker interface to the view if it is "the" view for the
         context May only be called from a template.
         """
-        log_deprecated(
-            "@@plone_view/mark_view as been deprecated, you should use "
-            "@@plone_layout/mark_view"
-        )
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         layout.mark_view(view)
@@ -250,7 +247,7 @@ def patterns_settings(self):
             (context, self.request),
             name=u'plone_patterns_settings')()
 
-    @deprecated(  # remove in Plone 5.1
+    @deprecate(  # remove in Plone 5.1
         "@@plone_view/hide_columns as been deprecated, you should use "
         "@@plone_layout/hide_columns"
     )
@@ -261,7 +258,7 @@ def hide_columns(self, column_left, column_right):
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.hide_columns(column_left, column_right)
 
-    @deprecated(  # remove in Plone 5.1
+    @deprecate(  # remove in Plone 5.1
         "@@plone_view/icons_visible as been deprecated, you should use "
         "@@plone_layout/icons_visible"
     )
@@ -272,7 +269,7 @@ def icons_visible(self):
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.icons_visible()
 
-    @deprecated(  # remove in Plone 5.1
+    @deprecate(  # remove in Plone 5.1
         "@@plone_view/getIcon as been deprecated, you should use "
         "@@plone_layout/getIcon"
     )
@@ -287,7 +284,7 @@ def getIcon(self, item):
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.getIcon(item)
 
-    @deprecated(  # remove in Plone 5.1
+    @deprecate(  # remove in Plone 5.1
         "@@plone_view/have_portlets as been deprecated, you should "
         "use @@plone_layout/have_portlets"
     )
@@ -299,7 +296,7 @@ def have_portlets(self, manager_name, view=None):
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.have_portlets(manager_name, view=view)
 
-    @deprecated(  # remove in Plone 5.1
+    @deprecate(  # remove in Plone 5.1
         "@@plone_view/bodyClass as been deprecated, you should use "
         "@@plone_layout/bodyClass"
     )


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-08-04T15:09:35+02:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/8ad859f1493f9ae0550dd14b79de59ceb798778c

Merge pull request #781 from plone/fix-305

Fix 305

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/ploneview.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c25e0c1..eab71eb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
 5.0b4 (unreleased)
 ------------------
 
+- fix #350: "plone.app.content circular dependency on Products.CMFPlone" - this
+  fixes the imports only, not on zcml/genericsetup level.
+  [jensens]
+
 - move Plone specific ``getDefaultPage`` (magic) code from plone.app.layout
   over to Products.CMFPlone. This avoids a circular dependency. Also its
   not really layout only related code.
diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index 6a5e611..3231ee4 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -1,22 +1,21 @@
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from plone.memoize.view import memoize
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import utils
 from Products.CMFPlone.browser.interfaces import IPlone
-from Products.CMFPlone.log import log_deprecated
 from Products.Five import BrowserView
-from plone.app.content.browser.folderfactories import _allowedTypes
-from plone.memoize.view import memoize
 from zope.component import getMultiAdapter
-from zope.deprecation import deprecated
+from zope.deprecation import deprecate
 from zope.i18n import translate
-from zope.interface import implements
+from zope.interface import implementer
 from zope.size import byteDisplay
 
 _marker = []
 
 
+@implementer(IPlone)
 class Plone(BrowserView):
-    implements(IPlone)
 
     # Utility methods
 
@@ -82,8 +81,10 @@ def showToolbar(self):
         if portal_membership.isAnonymousUser():
             return False
 
-        context_state = getMultiAdapter((context, request),
-                                        name="plone_context_state")
+        context_state = getMultiAdapter(
+            (context, request),
+            name="plone_context_state"
+        )
         actions = context_state.actions
 
         if actions('workflow', max=1):
@@ -112,15 +113,16 @@ def showToolbar(self):
                 return True
 
         # Check to see if the user is able to add content
-        allowedTypes = [fti for fti in _allowedTypes(request, context)]
+        allowedTypes = context.allowedContentTypes()
         if allowedTypes:
             return True
 
         return False
 
+    @deprecate('showEditableBorder is renamed to showToolbar')
     def showEditableBorder(self):
+        # remove in 5.1
         return self.showToolbar()
-    deprecated(showEditableBorder, 'showEditableBorder is renamed to showToolbar')
 
     def normalizeString(self, text):
         """Normalizes a title to an id.
@@ -226,36 +228,51 @@ def getViewTemplateId(self):
             name=u'plone_context_state')
         return context_state.view_template_id()
 
-    # Deprecated in favour of @@plone_layout
-
+    @deprecate(
+        "@@plone_view/mark_view as been deprecated, you should use "
+        "@@plone_layout/mark_view"
+    )
     def mark_view(self, view):
         """Adds a marker interface to the view if it is "the" view for the
         context May only be called from a template.
         """
-        log_deprecated("@@plone_view/mark_view as been deprecated, you should use "
-                       "@@plone_layout/mark_view")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         layout.mark_view(view)
 
+    @memoize
+    def patterns_settings(self):
+        context = aq_inner(self.context)
+        return getMultiAdapter(
+            (context, self.request),
+            name=u'plone_patterns_settings')()
+
+    @deprecate(  # remove in Plone 5.1
+        "@@plone_view/hide_columns as been deprecated, you should use "
+        "@@plone_layout/hide_columns"
+    )
     def hide_columns(self, column_left, column_right):
         """Returns a CSS class matching the current column status.
         """
-        log_deprecated("@@plone_view/hide_columns as been deprecated, you should use "
-                       "@@plone_layout/hide_columns")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.hide_columns(column_left, column_right)
 
+    @deprecate(  # remove in Plone 5.1
+        "@@plone_view/icons_visible as been deprecated, you should use "
+        "@@plone_layout/icons_visible"
+    )
     def icons_visible(self):
         """Returns True if icons should be shown or False otherwise.
         """
-        log_deprecated("@@plone_view/icons_visible as been deprecated, you should use "
-                       "@@plone_layout/icons_visible")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.icons_visible()
 
+    @deprecate(  # remove in Plone 5.1
+        "@@plone_view/getIcon as been deprecated, you should use "
+        "@@plone_layout/getIcon"
+    )
     def getIcon(self, item):
         """Returns an object which implements the IContentIcon interface and
         provides the informations necessary to render an icon. The item
@@ -263,34 +280,29 @@ def getIcon(self, item):
         globally or just for anonymous users with the icon_visibility property
         in site_properties.
         """
-        log_deprecated("@@plone_view/getIcon as been deprecated, you should use "
-                       "@@plone_layout/getIcon")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.getIcon(item)
 
+    @deprecate(  # remove in Plone 5.1
+        "@@plone_view/have_portlets as been deprecated, you should "
+        "use @@plone_layout/have_portlets"
+    )
     def have_portlets(self, manager_name, view=None):
         """Determine whether a column should be shown. The left column is
         called plone.leftcolumn; the right column is called plone.rightcolumn.
         """
-        log_deprecated("@@plone_view/have_portlets as been deprecated, you should "
-                       "use @@plone_layout/have_portlets")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.have_portlets(manager_name, view=view)
 
+    @deprecate(  # remove in Plone 5.1
+        "@@plone_view/bodyClass as been deprecated, you should use "
+        "@@plone_layout/bodyClass"
+    )
     def bodyClass(self, template, view):
         """Returns the CSS class to be used on the body tag.
         """
-        log_deprecated("@@plone_view/bodyClass as been deprecated, you should use "
-                       "@@plone_layout/bodyClass")
         context = aq_inner(self.context)
         layout = getMultiAdapter((context, self.request), name=u'plone_layout')
         return layout.bodyClass(template, view)
-
-    @memoize
-    def patterns_settings(self):
-        context = aq_inner(self.context)
-        return getMultiAdapter(
-            (context, self.request),
-            name=u'plone_patterns_settings')()


