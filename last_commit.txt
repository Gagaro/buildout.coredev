Repository: plone.dexterity


Branch: refs/heads/master
Date: 2015-06-25T20:11:02-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/d240bb2dd81971358baf65ab134bdcf3494414d3

check allowed types for add form

Files changed:
M CHANGES.rst
M plone/dexterity/browser/add.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 832497c..1c79137 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.3.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- check allowed types for add form
+  [vangheem]
 
 
 2.3.1 (2015-05-31)
diff --git a/plone/dexterity/browser/add.py b/plone/dexterity/browser/add.py
index 21ba9d1..d92db51 100644
--- a/plone/dexterity/browser/add.py
+++ b/plone/dexterity/browser/add.py
@@ -118,6 +118,12 @@ def handleCancel(self, action):
         notify(AddCancelledEvent(self.context))
 
     def update(self):
+        allowed_ids = [fti.getId() for fti in self.context.allowedContentTypes()]
+        if self.portal_type not in allowed_ids:
+            raise ValueError(
+                'Subobject type disallowed by IConstrainTypes adapter: %s'
+                % self.portal_type
+            )
         super(DefaultAddForm, self).update()
         # fire the edit begun only if no action was executed
         if len(self.actions.executedActions) == 0:


Repository: plone.dexterity


Branch: refs/heads/master
Date: 2015-06-25T22:35:38-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/7966d95137ae2cfc25decefc1ad38b1ec0d6173b

fix test for add form, mocks

Files changed:
M plone/dexterity/tests/test_views.py

diff --git a/plone/dexterity/tests/test_views.py b/plone/dexterity/tests/test_views.py
index ff01cae..ce100e6 100644
--- a/plone/dexterity/tests/test_views.py
+++ b/plone/dexterity/tests/test_views.py
@@ -356,7 +356,9 @@ def test_fires_add_begun_event(self):
 
         # Context and request
 
-        context_mock = self.create_dummy(portal_type=u'testtype')
+        context_mock = self.create_dummy(
+            portal_type=u'testtype',
+            allowedContentTypes=lambda: [self.create_dummy(getId=lambda: 'testtype')])
         request_mock = TestRequest()
 
         # FTI


Repository: plone.dexterity


Branch: refs/heads/master
Date: 2015-06-26T09:17:19-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/e41a1cc6e7c0a9a497bc12ffe0da706a9f1b9800

Merge pull request #31 from plone/check-allowed-types

check allowed types for add form

Files changed:
M CHANGES.rst
M plone/dexterity/browser/add.py
M plone/dexterity/tests/test_views.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 832497c..1c79137 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.3.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- check allowed types for add form
+  [vangheem]
 
 
 2.3.1 (2015-05-31)
diff --git a/plone/dexterity/browser/add.py b/plone/dexterity/browser/add.py
index 21ba9d1..d92db51 100644
--- a/plone/dexterity/browser/add.py
+++ b/plone/dexterity/browser/add.py
@@ -118,6 +118,12 @@ def handleCancel(self, action):
         notify(AddCancelledEvent(self.context))
 
     def update(self):
+        allowed_ids = [fti.getId() for fti in self.context.allowedContentTypes()]
+        if self.portal_type not in allowed_ids:
+            raise ValueError(
+                'Subobject type disallowed by IConstrainTypes adapter: %s'
+                % self.portal_type
+            )
         super(DefaultAddForm, self).update()
         # fire the edit begun only if no action was executed
         if len(self.actions.executedActions) == 0:
diff --git a/plone/dexterity/tests/test_views.py b/plone/dexterity/tests/test_views.py
index ff01cae..ce100e6 100644
--- a/plone/dexterity/tests/test_views.py
+++ b/plone/dexterity/tests/test_views.py
@@ -356,7 +356,9 @@ def test_fires_add_begun_event(self):
 
         # Context and request
 
-        context_mock = self.create_dummy(portal_type=u'testtype')
+        context_mock = self.create_dummy(
+            portal_type=u'testtype',
+            allowedContentTypes=lambda: [self.create_dummy(getId=lambda: 'testtype')])
         request_mock = TestRequest()
 
         # FTI


