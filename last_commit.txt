Repository: plone.app.users


Branch: refs/heads/master
Date: 2015-07-14T13:02:00+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.users/commit/cb6ce7a9bdf1599957b17f89a3e0eda00d0c868d

Solving plone/Products.CMFPlone#571

Files changed:
M plone/app/users/browser/registersettingspanel.py

diff --git a/plone/app/users/browser/registersettingspanel.py b/plone/app/users/browser/registersettingspanel.py
index da740ff..39db1a9 100644
--- a/plone/app/users/browser/registersettingspanel.py
+++ b/plone/app/users/browser/registersettingspanel.py
@@ -29,7 +29,7 @@ def getContent(self):
         return {'user_registration_fields': props.getProperty(
             'user_registration_fields', [])}
 
-    @button.buttonAndHandler(_(u'label_save', default=u'Save'), name='save')
+    @button.buttonAndHandler(_(u'label_apply_changes', default=u'Apply Changes'), name='save')
     def action_save(self, action):
         # CSRF protection
         CheckAuthenticator(self.request)
@@ -53,18 +53,23 @@ def action_save(self, action):
             msg = _("No changes made.")
         IStatusMessage(self.request).addStatusMessage(msg, type="info")
 
-    @button.buttonAndHandler(
-        _(u'label_cancel', default=u'Cancel'), name='cancel'
-    )
-    def action_cancel(self, action):
-        IStatusMessage(self.request).addStatusMessage(
-            _("Changes canceled."), type="info"
-        )
-        url = getMultiAdapter(
-            (self.context, self.request),
-            name='absolute_url'
-        )()
-        self.request.response.redirect(url + '/plone_control_panel')
+    # @button.buttonAndHandler(
+    #     _(u'label_cancel', default=u'Cancel'), name='cancel'
+    # )
+    # def action_cancel(self, action):
+    #     IStatusMessage(self.request).addStatusMessage(
+    #         _("Changes canceled."), type="info"
+    #     )
+    #     url = getMultiAdapter(
+    #         (self.context, self.request),
+    #         name='absolute_url'
+    #     )()
+    #     self.request.response.redirect(url + '/plone_control_panel')
+
+    def updateActions(self):
+        super(RegistrationControlPanel, self).updateActions()
+        if self.actions and 'save' in self.actions:
+            self.actions['save'].addClass('context')
 
     def props(self):
         pprop = getToolByName(self.context, 'portal_properties')


