Repository: mockup
Branch: refs/heads/master
Date: 2015-05-14T14:28:53-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/946f2e8b5ae7cda42e4d9345251f2b065aed6994

update loading icon to work without font icons and handle
  using with modals and backdrops better

Files changed:
M CHANGES.rst
M mockup/js/utils.js
M mockup/less/ui.less
M mockup/patterns/modal/pattern.js
M mockup/patterns/structure/less/pattern.structure.less

diff --git a/CHANGES.rst b/CHANGES.rst
index 0834f6f..a513799 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0.4 (Unreleased)
 ------------------
 
+- update loading icon to work without font icons and handle
+  using with modals and backdrops better
+  [vangheem]
+
 - fix selecting a folder to upload to for upload pattern
   [vangheem]
 
diff --git a/mockup/js/utils.js b/mockup/js/utils.js
index e867a73..fd6e661 100644
--- a/mockup/js/utils.js
+++ b/mockup/js/utils.js
@@ -190,7 +190,7 @@ define([
      *   zIndex(integer or function): to override default z-index used
      */
     var self = this;
-    self.className = 'mockup-loader-icon';
+    self.className = 'plone-loader';
     var defaults = {
       backdrop: null,
       zIndex: 10005 // can be a function
@@ -201,7 +201,7 @@ define([
     self.options = $.extend({}, defaults, options);
     self.$el = $('.' + self.className);
     if(self.$el.length === 0){
-      self.$el = $('<div><span class="glyphicon glyphicon-refresh" /></div>');
+      self.$el = $('<div><div></div></div>');
       self.$el.addClass(self.className).hide().appendTo('body');
     }
 
@@ -209,7 +209,15 @@ define([
       self.$el.show();
       var zIndex = self.options.zIndex;
       if (typeof(zIndex) === 'function') {
-        zIndex = zIndex();
+        zIndex = Math.max(zIndex(), 10005);
+      }else{
+        // go through all modals and backdrops and make sure we have a higher
+        // z-index to use
+        zIndex = 10005;
+        $('.plone-modal-wrapper,.plone-modal-backdrop').each(function(){
+          zIndex = Math.max(zIndex, $(this).css('zIndex') || 10005);
+        });
+        zIndex += 1;
       }
       self.$el.css('zIndex', zIndex);
 
@@ -268,6 +276,8 @@ define([
     },
     QueryHelper: QueryHelper,
     Loading: Loading,
+    // provide default loader
+    loading: new Loading(),
     getAuthenticator: function() {
       return $('input[name="_authenticator"]').val();
     }
diff --git a/mockup/less/ui.less b/mockup/less/ui.less
index 2c8fec6..74d36ec 100644
--- a/mockup/less/ui.less
+++ b/mockup/less/ui.less
@@ -2,25 +2,50 @@
 @import "@{mockuplessPath}/base.less";
 
 /* loading icon animation */
-.mockup-loader-icon {
-    position: fixed;
-    top: 50%;
-    left: 50%;
-    font-size: 30px;
-    .glyphicon-refresh {
-        .animation-name(rotateThis);
-        .animation-duration(2s);
-        .animation-iteration-count(infinite);
-        .animation-timing-function(linear);
-    }
-}
-
-@-webkit-keyframes rotateThis{
- from { -webkit-transform: rotate( 0deg ); }
- to  { -webkit-transform: rotate( 360deg ); }
-}
+.plone-loader{
+  display:none;
+  position: fixed;
+  top: 50%;
+  left: 50%;
 
-@keyframes rotateThis{
-  from { transform: rotate( 0deg ); }
-  to { transform: rotate( 360deg ); }
-}
+  div {
+    margin: -6em auto;
+    font-size: 5px;
+    text-indent: -9999em;
+    border-top: 1.1em solid rgba(39, 33, 33, 0.2);
+    border-right: 1.1em solid rgba(218, 211, 211, 0.2);
+    border-bottom: 1.1em solid rgba(218, 211, 211, 0.2);
+    border-left: 1.1em solid rgba(218, 211, 211, 0.2);
+    -webkit-transform: translateZ(0);
+    -ms-transform: translateZ(0);
+    transform: translateZ(0);
+    -webkit-animation: load8 1.1s infinite linear;
+    animation: load8 1.1s infinite linear;
+  }
+  div,
+  div:after {
+    border-radius: 50%;
+    width: 10em;
+    height: 10em;
+  }
+  @-webkit-keyframes load8 {
+    0% {
+      -webkit-transform: rotate(0deg);
+      transform: rotate(0deg);
+    }
+    100% {
+      -webkit-transform: rotate(360deg);
+      transform: rotate(360deg);
+    }
+  }
+  @keyframes load8 {
+    0% {
+      -webkit-transform: rotate(0deg);
+      transform: rotate(0deg);
+    }
+    100% {
+      -webkit-transform: rotate(360deg);
+      transform: rotate(360deg);
+    }
+  }
+}
\ No newline at end of file
diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index 4e00fcc..d1eb125 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -558,17 +558,7 @@ define([
       }
 
       self.loading = new utils.Loading({
-        backdrop: self.backdrop,
-        zIndex: function() {
-          if (self.modalInitialized()) {
-            var zIndex = self.$modal.css('zIndex');
-            if (zIndex) {
-              return parseInt(zIndex, 10) + 1;
-            }
-          } else {
-            return 10005;
-          }
-        }
+        backdrop: self.backdrop
       });
 
       $(window.parent).resize(function() {
diff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less
index 0305335..cd42fa3 100644
--- a/mockup/patterns/structure/less/pattern.structure.less
+++ b/mockup/patterns/structure/less/pattern.structure.less
@@ -1,6 +1,7 @@
 @import "@{bowerPath}/bootstrap/less/variables.less"; // Modify this for custom colors, font-sizes, etc
 @icon-font-path: "@{bowerPath}/bootstrap/dist/fonts/";
 @import "@{bowerPath}/bootstrap/less/glyphicons.less";
+@import "@{mockuplessPath}/ui.less";
 
 @import "@{bowerPath}/bootstrap/less/mixins.less";
 @import "@{bowerPath}/bootstrap/less/utilities.less";


