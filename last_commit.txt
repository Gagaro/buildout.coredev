Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-19T15:04:36+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.vocabularies/commit/dd443d088e75563db1abd1029610bb9fcd32faec

Pull default_charset from registry.

Files changed:
M CHANGES.rst
M plone/app/vocabularies/catalog.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e6506cd..188b75b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,8 +4,8 @@ Changelog
 2.1.22 (unreleased)
 -------------------
 
-- Nothing changed yet.
-
+- Pull default_charset value from the configuration registry.
+  [esteele]
 
 2.1.21 (2015-09-07)
 -------------------
diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py
index 42b9c0e..5411c30 100644
--- a/plone/app/vocabularies/catalog.py
+++ b/plone/app/vocabularies/catalog.py
@@ -3,12 +3,14 @@
 from plone.app.querystring import queryparser
 from plone.app.vocabularies import SlicableVocabulary
 from plone.app.vocabularies.terms import BrowsableTerm
+from plone.registry.interfaces import IRegistry
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.ZCTextIndex.ParseTree import ParseError
 from zope.browser.interfaces import ITerms
+from zope.component import getUtility
 from zope.formlib.interfaces import ISourceQueryView
 from zope.interface import implementer
 from zope.interface import provider
@@ -149,11 +151,8 @@ def __init__(self, context, base_query={}, default_query=None):
         self.catalog = getToolByName(context, "portal_catalog")
         self.portal_tool = getToolByName(context, "portal_url")
         self.portal_path = self.portal_tool.getPortalPath()
-        try:
-            self.encoding = getToolByName(
-                context, "portal_properties").site_properties.default_charset
-        except AttributeError:
-            self.encoding = 'ascii'
+        registry = getUtility(IRegistry)
+        self.encoding = registry.get('plone.default_charset', 'ascii')
 
     def __contains__(self, value):
         """Return whether the value is available in this source


Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-20T11:00:15+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.vocabularies/commit/3c9b7acf3979db8b4e1e17377ad4000cf60f19a9

Failover if registry can't be found. Mainly for tests, because I don't want to figure out how to add a mock registry in a docstring doctest. Grr.

Files changed:
M plone/app/vocabularies/catalog.py

diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py
index 5411c30..1516b92 100644
--- a/plone/app/vocabularies/catalog.py
+++ b/plone/app/vocabularies/catalog.py
@@ -10,7 +10,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.ZCTextIndex.ParseTree import ParseError
 from zope.browser.interfaces import ITerms
-from zope.component import getUtility
+from zope.component import queryUtility
 from zope.formlib.interfaces import ISourceQueryView
 from zope.interface import implementer
 from zope.interface import provider
@@ -151,8 +151,12 @@ def __init__(self, context, base_query={}, default_query=None):
         self.catalog = getToolByName(context, "portal_catalog")
         self.portal_tool = getToolByName(context, "portal_url")
         self.portal_path = self.portal_tool.getPortalPath()
-        registry = getUtility(IRegistry)
-        self.encoding = registry.get('plone.default_charset', 'ascii')
+
+        registry = queryUtility(IRegistry)
+        if registry is not None:
+            self.encoding = registry.get('plone.default_charset', 'ascii')
+        else:
+            self.encoding = 'ascii'
 
     def __contains__(self, value):
         """Return whether the value is available in this source


Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-20T11:01:09+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.vocabularies/commit/7bf7da97206a7ecd3f45563f015c468e2a98e607

Use utf-8 as fallback encoding, since that's what we use elsewhere in core.

Files changed:
M plone/app/vocabularies/catalog.py

diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py
index 1516b92..890cc72 100644
--- a/plone/app/vocabularies/catalog.py
+++ b/plone/app/vocabularies/catalog.py
@@ -154,9 +154,9 @@ def __init__(self, context, base_query={}, default_query=None):
 
         registry = queryUtility(IRegistry)
         if registry is not None:
-            self.encoding = registry.get('plone.default_charset', 'ascii')
+            self.encoding = registry.get('plone.default_charset', 'utf-8')
         else:
-            self.encoding = 'ascii'
+            self.encoding = 'utf-8'
 
     def __contains__(self, value):
         """Return whether the value is available in this source


Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-20T12:22:19+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.vocabularies/commit/5d75ed4a2203fe5c4c6d6f45ec13c3e44a3892ed

Default to utf8

Files changed:
M plone/app/vocabularies/catalog.py

diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py
index 890cc72..4379486 100644
--- a/plone/app/vocabularies/catalog.py
+++ b/plone/app/vocabularies/catalog.py
@@ -151,12 +151,7 @@ def __init__(self, context, base_query={}, default_query=None):
         self.catalog = getToolByName(context, "portal_catalog")
         self.portal_tool = getToolByName(context, "portal_url")
         self.portal_path = self.portal_tool.getPortalPath()
-
-        registry = queryUtility(IRegistry)
-        if registry is not None:
-            self.encoding = registry.get('plone.default_charset', 'utf-8')
-        else:
-            self.encoding = 'utf-8'
+        self.encoding = 'utf-8'
 
     def __contains__(self, value):
         """Return whether the value is available in this source


Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-20T17:33:05+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.vocabularies/commit/19a981f1e097c95c400e3d5520c3cdb70921cd09

Merge pull request #22 from plone/portal-properties-cleanup

Portal properties cleanup

Files changed:
M CHANGES.rst
M plone/app/vocabularies/catalog.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e6506cd..188b75b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,8 +4,8 @@ Changelog
 2.1.22 (unreleased)
 -------------------
 
-- Nothing changed yet.
-
+- Pull default_charset value from the configuration registry.
+  [esteele]
 
 2.1.21 (2015-09-07)
 -------------------
diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py
index 42b9c0e..4379486 100644
--- a/plone/app/vocabularies/catalog.py
+++ b/plone/app/vocabularies/catalog.py
@@ -3,12 +3,14 @@
 from plone.app.querystring import queryparser
 from plone.app.vocabularies import SlicableVocabulary
 from plone.app.vocabularies.terms import BrowsableTerm
+from plone.registry.interfaces import IRegistry
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.ZCTextIndex.ParseTree import ParseError
 from zope.browser.interfaces import ITerms
+from zope.component import queryUtility
 from zope.formlib.interfaces import ISourceQueryView
 from zope.interface import implementer
 from zope.interface import provider
@@ -149,11 +151,7 @@ def __init__(self, context, base_query={}, default_query=None):
         self.catalog = getToolByName(context, "portal_catalog")
         self.portal_tool = getToolByName(context, "portal_url")
         self.portal_path = self.portal_tool.getPortalPath()
-        try:
-            self.encoding = getToolByName(
-                context, "portal_properties").site_properties.default_charset
-        except AttributeError:
-            self.encoding = 'ascii'
+        self.encoding = 'utf-8'
 
     def __contains__(self, value):
         """Return whether the value is available in this source


