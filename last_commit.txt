Repository: Products.PlonePAS
Branch: refs/heads/master
Date: 2015-04-30T23:56:53-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/869939c1d16376ceb32d57c66fe084fb500e26e1

Prevent CRSF protecting errors when logging out because of
  Zope2 write on read issues

Files changed:
M CHANGES.rst
M src/Products/PlonePAS/tools/membership.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a4085df..75484bc 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 5.0.2 (unreleased)
 ------------------
 
+- Prevent CRSF protecting errors when logging out because of 
+  Zope2 write on read issues
+  [vangheem]
+
 - Reduce logging level for while patching from info down to debug.
   [jensens]
 
diff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py
index d8d8acb..69e0807 100644
--- a/src/Products/PlonePAS/tools/membership.py
+++ b/src/Products/PlonePAS/tools/membership.py
@@ -28,12 +28,14 @@
 from Products.PlonePAS.interfaces import membership
 from Products.PlonePAS.utils import cleanId
 from Products.PlonePAS.utils import scale_image
+from plone.protect.interfaces import IDisableCSRFProtection
 from ZODB.POSException import ConflictError
 from cStringIO import StringIO
 from zExceptions import BadRequest
 from zope import event
 from zope.component import getUtility
 from zope.interface import implementer
+from zope.interface import alsoProvides
 import logging
 import transaction
 
@@ -667,9 +669,17 @@ def logoutUser(self, REQUEST=None):
         # Invalidate existing sessions, but only if they exist.
         sdm = getToolByName(self, 'session_data_manager', None)
         if sdm is not None:
-                session = sdm.getSessionData(create=0)
-                if session is not None:
-                            session.invalidate()
+            try:
+                # XXX This causes write on read to happen which
+                # causes plone.protect to freak out.
+                # Please remove this once write on read is fixed
+                req = REQUEST or self.REQUEST
+                alsoProvides(req, IDisableCSRFProtection)
+            except AttributeError:
+                pass
+            session = sdm.getSessionData(create=0)
+            if session is not None:
+                session.invalidate()
 
         if REQUEST is None:
             REQUEST = getattr(self, 'REQUEST', None)


