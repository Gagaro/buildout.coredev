Repository: plone.app.layout
Branch: refs/heads/master
Date: 2015-06-04T15:59:16-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/ba36d51204a8001723358fba4e46b99521eba25e

Add social meta tags viewlet

Files changed:
A plone/app/layout/viewlets/social.py
A plone/app/layout/viewlets/social_tags.pt
A plone/app/layout/viewlets/tests/test_social.py
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 1ce13a5..0349374 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.5.7 (unreleased)
 ------------------
 
+- Add social meta tags viewlet
+  [vangheem]
+
 - render the footer portlets in a way where they can still
   be edited with @@manage-portlets
   [vangheem]
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 4586ccb..0ed05db 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -263,6 +263,14 @@
         permission="zope2.View"
         />
 
+    <!-- Render the social media metadata -->
+    <browser:viewlet
+        name="plone.htmlhead.socialtags"
+        manager=".interfaces.IHtmlHead"
+        class=".social.SocialTagsViewlet"
+        permission="zope2.View"
+        />
+
     <!-- Render the viewport -->
     <browser:viewlet
         name="plone.htmlhead.viewport"
diff --git a/plone/app/layout/viewlets/social.py b/plone/app/layout/viewlets/social.py
new file mode 100644
index 0000000..a869331
--- /dev/null
+++ b/plone/app/layout/viewlets/social.py
@@ -0,0 +1,75 @@
+from Products.CMFPlone.browser.syndication.adapters import FolderFeed
+from zope.component import queryMultiAdapter
+from Products.CMFPlone.interfaces import ISocialMediaSchema
+from Products.CMFPlone.interfaces.syndication import IFeedItem
+from plone.app.layout.viewlets.common import TitleViewlet
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from zope.component import getUtility
+from plone.registry.interfaces import IRegistry
+from zope.component.hooks import getSite
+
+
+class SocialTagsViewlet(TitleViewlet):
+    index = ViewPageTemplateFile('social_tags.pt')
+
+    def update(self):
+        super(SocialTagsViewlet, self).update()
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+
+        if not settings.share_social_data:
+            self.tags = []
+            return
+
+        self.tags = [
+            dict(name="twitter:card", content="summary"),
+            dict(name="twitter:title", content=self.page_title),
+            dict(property="og:title", content=self.page_title),
+            dict(property="og:type", content="website"),
+            dict(property="og:site_name", content=self.site_title),
+        ]
+        if settings.twitter_username:
+            self.tags.append(dict(name="twitter:site",
+                                  content="@" + settings.twitter_username))
+        if settings.facebook_app_id:
+            self.tags.append(dict(property="fb:app_id",
+                                  content=settings.facebook_app_id))
+        if settings.facebook_username:
+            self.tags.append(
+                dict(property="og:article:publisher",
+                     content="https://www.facebook.com/" + settings.facebook_username))
+
+        # reuse syndication since that packages the data
+        # the way we'd prefer likely
+        item = queryMultiAdapter((self.context, FolderFeed(getSite())),
+                                 IFeedItem, default=None)
+        if item is None:
+            # this should not happen but we can be careful
+            return
+
+        self.tags.extend([
+            dict(name="twitter:description", content=item.description),
+            dict(property="og:description", content=item.description),
+            dict(name="twitter:url", content=item.link),
+            dict(property="og:url", content=item.link),
+        ])
+
+        if item.has_enclosure and item.file_length > 0:
+            if item.file_type.startswith('image'):
+                self.tags.extend([
+                    dict(name="twitter:image", content=item.file_url),
+                    dict(property="og:image", content=item.file_url),
+                    dict(property="og:image:type", content=item.file_type)
+                ])
+            elif (item.file_type.startswith('video')
+                    or item.file_type == "application/x-shockwave-flash"):
+                self.tags.extend([
+                    dict(property="og:video", content=item.file_url),
+                    dict(property="og:video:type", content=item.file_type)
+                ])
+            elif item.file_type.startswith('audio'):
+                self.tags.extend([
+                    dict(property="og:audio", content=item.file_url),
+                    dict(property="og:audio:type", content=item.file_type)
+                ])
diff --git a/plone/app/layout/viewlets/social_tags.pt b/plone/app/layout/viewlets/social_tags.pt
new file mode 100644
index 0000000..7e6a752
--- /dev/null
+++ b/plone/app/layout/viewlets/social_tags.pt
@@ -0,0 +1 @@
+<meta tal:repeat="tag view/tags" tal:attributes="tag" />
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/tests/test_social.py b/plone/app/layout/viewlets/tests/test_social.py
new file mode 100644
index 0000000..1e2ef9a
--- /dev/null
+++ b/plone/app/layout/viewlets/tests/test_social.py
@@ -0,0 +1,75 @@
+# -*- coding: utf-8 -*-
+from Products.CMFPlone.interfaces import ISocialMediaSchema
+from plone.app.layout.viewlets.social import SocialTagsViewlet
+from plone.app.layout.viewlets.tests.base import ViewletsTestCase
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+
+from plone.namedfile import NamedBlobFile
+
+
+# Red pixel with filename pixel.png
+IMAGE_BASE64 = 'filenameb64:cGl4ZWwucG5n;datab64:iVBORw0KGgoAAAANSUhEUgAA'\
+               'AAEAAAABCAIAAACQd1PeAAAADElEQVQI12P4z8AAAAMBAQAY3Y2wAAAAA'\
+               'ElFTkSuQmCC'
+
+
+class TestSocialViewlet(ViewletsTestCase):
+    """Test the content views viewlet.
+    """
+
+    def afterSetUp(self):
+        self.loginAsPortalOwner()
+        self.folder.invokeFactory('News Item', 'news-item',
+                                  title='News Item')
+        self.news = self.folder['news-item']
+        self.news.lead = NamedBlobFile(
+            data=IMAGE_BASE64, contentType='image/png',
+            filename=u'test.png')
+
+    def tagFound(self, viewlet, attr, name, value):
+        for meta in viewlet.tags:
+            if attr in meta:
+                if meta[attr] == name:
+                    return meta['content'] == value
+        return False
+
+    def hasTag(self, viewlet, attr, name):
+        for meta in viewlet.tags:
+            if attr in meta:
+                return meta[attr] == name
+        return False
+
+    def testBasicTags(self):
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:card', "summary"))
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:title',
+                                      viewlet.page_title))
+        self.assertTrue(self.tagFound(viewlet, 'property', 'og:site_name',
+                                      viewlet.site_title))
+
+    def testDisabled(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+        settings.share_social_data = False
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertEquals(len(viewlet.tags), 0)
+
+    def testIncludeSocialSettings(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+        settings.twitter_username = u'foobar'
+        settings.facebook_app_id = u'foobar'
+        settings.facebook_username = u'foobar'
+
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:site', "@foobar"))
+        self.assertTrue(self.tagFound(viewlet, 'property', 'fb:app_id', 'foobar'))
+        self.assertTrue(
+            self.tagFound(viewlet, 'property',
+                          'og:article:publisher', 'https://www.facebook.com/foobar'))


Repository: plone.app.layout
Branch: refs/heads/master
Date: 2015-06-04T15:59:16-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/34e356031082b500927907567230b201d85c8827

also add google+ compatible tags

Files changed:
M plone/app/layout/viewlets/social.py

diff --git a/plone/app/layout/viewlets/social.py b/plone/app/layout/viewlets/social.py
index a869331..ea0ebcf 100644
--- a/plone/app/layout/viewlets/social.py
+++ b/plone/app/layout/viewlets/social.py
@@ -26,6 +26,7 @@ def update(self):
             dict(name="twitter:card", content="summary"),
             dict(name="twitter:title", content=self.page_title),
             dict(property="og:title", content=self.page_title),
+            dict(itemprop="name", content=self.page_title),
             dict(property="og:type", content="website"),
             dict(property="og:site_name", content=self.site_title),
         ]
@@ -51,6 +52,7 @@ def update(self):
         self.tags.extend([
             dict(name="twitter:description", content=item.description),
             dict(property="og:description", content=item.description),
+            dict(itemprop="description", content=item.description),
             dict(name="twitter:url", content=item.link),
             dict(property="og:url", content=item.link),
         ])
@@ -60,6 +62,7 @@ def update(self):
                 self.tags.extend([
                     dict(name="twitter:image", content=item.file_url),
                     dict(property="og:image", content=item.file_url),
+                    dict(itemprop="image", content=item.file_url),
                     dict(property="og:image:type", content=item.file_type)
                 ])
             elif (item.file_type.startswith('video')


Repository: plone.app.layout
Branch: refs/heads/master
Date: 2015-06-04T23:00:50+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/3ea46746eda2ac8b9a492347dfdeda63db2c14b3

Merge pull request #41 from plone/social-tags

PLIP#20256 Add social meta tags viewlet

Files changed:
A plone/app/layout/viewlets/social.py
A plone/app/layout/viewlets/social_tags.pt
A plone/app/layout/viewlets/tests/test_social.py
M CHANGES.rst
M plone/app/layout/viewlets/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 1ce13a5..0349374 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.5.7 (unreleased)
 ------------------
 
+- Add social meta tags viewlet
+  [vangheem]
+
 - render the footer portlets in a way where they can still
   be edited with @@manage-portlets
   [vangheem]
diff --git a/plone/app/layout/viewlets/configure.zcml b/plone/app/layout/viewlets/configure.zcml
index 4586ccb..0ed05db 100644
--- a/plone/app/layout/viewlets/configure.zcml
+++ b/plone/app/layout/viewlets/configure.zcml
@@ -263,6 +263,14 @@
         permission="zope2.View"
         />
 
+    <!-- Render the social media metadata -->
+    <browser:viewlet
+        name="plone.htmlhead.socialtags"
+        manager=".interfaces.IHtmlHead"
+        class=".social.SocialTagsViewlet"
+        permission="zope2.View"
+        />
+
     <!-- Render the viewport -->
     <browser:viewlet
         name="plone.htmlhead.viewport"
diff --git a/plone/app/layout/viewlets/social.py b/plone/app/layout/viewlets/social.py
new file mode 100644
index 0000000..ea0ebcf
--- /dev/null
+++ b/plone/app/layout/viewlets/social.py
@@ -0,0 +1,78 @@
+from Products.CMFPlone.browser.syndication.adapters import FolderFeed
+from zope.component import queryMultiAdapter
+from Products.CMFPlone.interfaces import ISocialMediaSchema
+from Products.CMFPlone.interfaces.syndication import IFeedItem
+from plone.app.layout.viewlets.common import TitleViewlet
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from zope.component import getUtility
+from plone.registry.interfaces import IRegistry
+from zope.component.hooks import getSite
+
+
+class SocialTagsViewlet(TitleViewlet):
+    index = ViewPageTemplateFile('social_tags.pt')
+
+    def update(self):
+        super(SocialTagsViewlet, self).update()
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+
+        if not settings.share_social_data:
+            self.tags = []
+            return
+
+        self.tags = [
+            dict(name="twitter:card", content="summary"),
+            dict(name="twitter:title", content=self.page_title),
+            dict(property="og:title", content=self.page_title),
+            dict(itemprop="name", content=self.page_title),
+            dict(property="og:type", content="website"),
+            dict(property="og:site_name", content=self.site_title),
+        ]
+        if settings.twitter_username:
+            self.tags.append(dict(name="twitter:site",
+                                  content="@" + settings.twitter_username))
+        if settings.facebook_app_id:
+            self.tags.append(dict(property="fb:app_id",
+                                  content=settings.facebook_app_id))
+        if settings.facebook_username:
+            self.tags.append(
+                dict(property="og:article:publisher",
+                     content="https://www.facebook.com/" + settings.facebook_username))
+
+        # reuse syndication since that packages the data
+        # the way we'd prefer likely
+        item = queryMultiAdapter((self.context, FolderFeed(getSite())),
+                                 IFeedItem, default=None)
+        if item is None:
+            # this should not happen but we can be careful
+            return
+
+        self.tags.extend([
+            dict(name="twitter:description", content=item.description),
+            dict(property="og:description", content=item.description),
+            dict(itemprop="description", content=item.description),
+            dict(name="twitter:url", content=item.link),
+            dict(property="og:url", content=item.link),
+        ])
+
+        if item.has_enclosure and item.file_length > 0:
+            if item.file_type.startswith('image'):
+                self.tags.extend([
+                    dict(name="twitter:image", content=item.file_url),
+                    dict(property="og:image", content=item.file_url),
+                    dict(itemprop="image", content=item.file_url),
+                    dict(property="og:image:type", content=item.file_type)
+                ])
+            elif (item.file_type.startswith('video')
+                    or item.file_type == "application/x-shockwave-flash"):
+                self.tags.extend([
+                    dict(property="og:video", content=item.file_url),
+                    dict(property="og:video:type", content=item.file_type)
+                ])
+            elif item.file_type.startswith('audio'):
+                self.tags.extend([
+                    dict(property="og:audio", content=item.file_url),
+                    dict(property="og:audio:type", content=item.file_type)
+                ])
diff --git a/plone/app/layout/viewlets/social_tags.pt b/plone/app/layout/viewlets/social_tags.pt
new file mode 100644
index 0000000..7e6a752
--- /dev/null
+++ b/plone/app/layout/viewlets/social_tags.pt
@@ -0,0 +1 @@
+<meta tal:repeat="tag view/tags" tal:attributes="tag" />
\ No newline at end of file
diff --git a/plone/app/layout/viewlets/tests/test_social.py b/plone/app/layout/viewlets/tests/test_social.py
new file mode 100644
index 0000000..1e2ef9a
--- /dev/null
+++ b/plone/app/layout/viewlets/tests/test_social.py
@@ -0,0 +1,75 @@
+# -*- coding: utf-8 -*-
+from Products.CMFPlone.interfaces import ISocialMediaSchema
+from plone.app.layout.viewlets.social import SocialTagsViewlet
+from plone.app.layout.viewlets.tests.base import ViewletsTestCase
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+
+from plone.namedfile import NamedBlobFile
+
+
+# Red pixel with filename pixel.png
+IMAGE_BASE64 = 'filenameb64:cGl4ZWwucG5n;datab64:iVBORw0KGgoAAAANSUhEUgAA'\
+               'AAEAAAABCAIAAACQd1PeAAAADElEQVQI12P4z8AAAAMBAQAY3Y2wAAAAA'\
+               'ElFTkSuQmCC'
+
+
+class TestSocialViewlet(ViewletsTestCase):
+    """Test the content views viewlet.
+    """
+
+    def afterSetUp(self):
+        self.loginAsPortalOwner()
+        self.folder.invokeFactory('News Item', 'news-item',
+                                  title='News Item')
+        self.news = self.folder['news-item']
+        self.news.lead = NamedBlobFile(
+            data=IMAGE_BASE64, contentType='image/png',
+            filename=u'test.png')
+
+    def tagFound(self, viewlet, attr, name, value):
+        for meta in viewlet.tags:
+            if attr in meta:
+                if meta[attr] == name:
+                    return meta['content'] == value
+        return False
+
+    def hasTag(self, viewlet, attr, name):
+        for meta in viewlet.tags:
+            if attr in meta:
+                return meta[attr] == name
+        return False
+
+    def testBasicTags(self):
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:card', "summary"))
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:title',
+                                      viewlet.page_title))
+        self.assertTrue(self.tagFound(viewlet, 'property', 'og:site_name',
+                                      viewlet.site_title))
+
+    def testDisabled(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+        settings.share_social_data = False
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertEquals(len(viewlet.tags), 0)
+
+    def testIncludeSocialSettings(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISocialMediaSchema, prefix="plone",
+                                         check=False)
+        settings.twitter_username = u'foobar'
+        settings.facebook_app_id = u'foobar'
+        settings.facebook_username = u'foobar'
+
+        viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
+        viewlet.update()
+        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:site', "@foobar"))
+        self.assertTrue(self.tagFound(viewlet, 'property', 'fb:app_id', 'foobar'))
+        self.assertTrue(
+            self.tagFound(viewlet, 'property',
+                          'og:article:publisher', 'https://www.facebook.com/foobar'))


