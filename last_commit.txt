Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-01-02T15:16:09+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e3b61bfc4bccb8bfadaa12583ea3a6c00646f41f

allow comment-migration for folders

Files changed:
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/utils.py

diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index 4d23a87..5f28383 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -313,6 +313,13 @@ def __init__(self, *args, **kwargs):
         logger.info(
             "Migrating object {}".format('/'.join(self.old.getPhysicalPath())))
 
+    def beforeChange_store_comments_on_portal(self):
+        """Comments from plone.app.discussion are lost when the
+           old object is renamed...
+           We save the comments in a safe place..."""
+        portal = getToolByName(self.old, 'portal_url').getPortalObject()
+        move_comments(self.old, portal)
+
     def migrate_atctmetadata(self):
         field = self.old.getField('excludeFromNav')
         self.new.exclude_from_nav = field.get(self.old)
@@ -329,6 +336,13 @@ def migrate_portlets(self):
     def migrate_contentrules(self):
         copy_contentrules(self.old, self.new)
 
+    def last_migrate_comments(self):
+        """Migrate the plone.app.discussion comments.
+           Comments were stored on the portal, get them and
+           Copy the conversations from old to new object."""
+        portal = getToolByName(self.old, 'portal_url').getPortalObject()
+        move_comments(portal, self.new)
+
 
 class DocumentMigrator(ATCTContentMigrator):
 
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index 35073bb..5eb6d15 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -151,7 +151,7 @@ def copy_contentrules(source_object, target_object):
         try:
             IRuleAssignmentManager(target_object)
         except TypeError:
-            logger.info("Cound not migrate contentrule to {0}".format(
+            logger.info("Cound not assign contentrules to {0}".format(
                 target_object.absolute_url()))
             return
         for rule_id in source_assignable:


