Repository: plone.app.event


Branch: refs/heads/master
Date: 2015-06-23T13:31:46+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/7fa59dc12bc01fa6afd616afcfab9f95c2f79469

For the event portlet, don't cache the list of events on memoize instance, which creates a write transaction. Remove the caching until a solid cache key is found, which also works for multiple portlet instances.

Files changed:
M CHANGES.rst
M plone/app/event/portlets/portlet_events.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4a9065c..4e21d44 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,13 +4,13 @@ Changelog
 2.0a13 (unreleased)
 -------------------
 
-- BBB portlets: do the version comparison with LooseVersion, so that
-  Plone-style development version numbers like ``2.5.4.dev0`` also work.
+- For the event portlet, don't cache the list of events on memoize instance,
+  which creates a write transaction. Remove the caching until a solid cache key
+  is found, which also works for multiple portlet instances.
   [thet]
 
-- For the event portlet, cache the list of events on the request
-  (plone.memoize.view) instead of the instance, which creates a write
-  transaction.
+- BBB portlets: do the version comparison with LooseVersion, so that
+  Plone-style development version numbers like ``2.5.4.dev0`` also work.
   [thet]
 
 - Let ``date_speller`` return the short, 2-letter weekday abbreviation instead
diff --git a/plone/app/event/portlets/portlet_events.py b/plone/app/event/portlets/portlet_events.py
index 5fc5568..eff12c6 100644
--- a/plone/app/event/portlets/portlet_events.py
+++ b/plone/app/event/portlets/portlet_events.py
@@ -17,7 +17,6 @@
 from plone.app.uuid.utils import uuidToObject
 from plone.app.vocabularies.catalog import CatalogSource
 from plone.memoize.compress import xhtml_compress
-from plone.memoize import view
 from plone.portlets.interfaces import IPortletDataProvider
 from zExceptions import NotFound
 from zope import schema
@@ -145,7 +144,6 @@ def available(self):
         return self.data.count > 0 and len(self.events)
 
     @property
-    @view.memoize
     def events(self):
         context = aq_inner(self.context)
         data = self.data


