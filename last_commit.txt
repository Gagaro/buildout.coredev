Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-10-19T17:58:34Z
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/fde77697a75181c73a6ff14abf1ce3812a67c8b9

added failing test to demonstrate #1178

Files changed:
M plone/app/layout/viewlets/tests/test_common.py

diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py
index 753b6d1..1a9c567 100644
--- a/plone/app/layout/viewlets/tests/test_common.py
+++ b/plone/app/layout/viewlets/tests/test_common.py
@@ -3,6 +3,7 @@
 from Products.CMFPlone.interfaces import ISiteSchema
 from plone.app.layout.navigation.interfaces import INavigationRoot
 from plone.app.layout.viewlets.common import ContentViewsViewlet
+from plone.app.layout.viewlets.common import GlobalSectionsViewlet
 from plone.app.layout.viewlets.common import LogoViewlet
 from plone.app.layout.viewlets.common import TitleViewlet
 from plone.app.layout.viewlets.common import ViewletBase
@@ -139,3 +140,36 @@ def testLogoViewletRegistry(self):
         self.assertTrue(
             'http://nohost/plone/@@site-logo/pixel.png'
             in viewlet.img_src)
+
+
+class TestGlobalSectionsViewlet(ViewletsTestCase):
+    """Test the global sections views viewlet.
+    """
+
+    def test_selectedtabs(self):
+        """ Test selected tabs the simplest case
+        """
+        request = self.layer['request']
+        request['URL'] = self.folder.absolute_url()
+        gsv = GlobalSectionsViewlet(self.folder, request, None)
+        gsv.update()
+        self.assertEqual(gsv.selected_tabs, {'portal': 'Members'})
+        self.assertEqual(gsv.selected_portal_tab, 'Members')
+
+    def test_selectedtabs_navroot(self):
+        """ Test selected tabs with a INavigationroot folder involved
+        """
+        self.setRoles(('Manager',))
+        self.portal.invokeFactory('Folder', 'navroot', title='My new root')
+        navroot = self.portal['navroot']
+        alsoProvides(navroot, INavigationRoot)
+        navroot.invokeFactory('Folder', 'abc', title='short')
+        navroot.invokeFactory('Folder',
+                              'xyz',
+                              title='Folder with a looong name')
+        request = self.layer['request']
+        request['URL'] = navroot['abc'].absolute_url()
+        gsv = GlobalSectionsViewlet(navroot, request, None)
+        gsv.update()
+        self.assertEqual(gsv.selected_tabs, {'portal': 'abc'})
+        self.assertEqual(gsv.selected_portal_tab, 'abz')


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-10-19T18:03:55Z
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/101fd36ed1a25e62f7ff674a8daa4751f353c078

use navigation root instead of portal to calculate tabs

Files changed:
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/tests/test_common.py

diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 67d1e7c..1340147 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -25,6 +25,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 
 from plone.app.layout.globals.interfaces import IViewView
+from plone.app.layout.navigation.root import getNavigationRootObject
 from plone.protect.utils import addTokenToUrl
 
 
@@ -206,7 +207,8 @@ def update(self):
         self.selected_portal_tab = self.selected_tabs['portal']
 
     def selectedTabs(self, default_tab='index_html', portal_tabs=()):
-        plone_url = getToolByName(self.context, 'portal_url')()
+        portal = getToolByName(self.context, 'portal_url').getPortalObject()
+        plone_url = getNavigationRootObject(self.context, portal).absolute_url()
         plone_url_len = len(plone_url)
         request = self.request
         valid_actions = []
diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py
index 1a9c567..25b45e7 100644
--- a/plone/app/layout/viewlets/tests/test_common.py
+++ b/plone/app/layout/viewlets/tests/test_common.py
@@ -172,4 +172,4 @@ def test_selectedtabs_navroot(self):
         gsv = GlobalSectionsViewlet(navroot, request, None)
         gsv.update()
         self.assertEqual(gsv.selected_tabs, {'portal': 'abc'})
-        self.assertEqual(gsv.selected_portal_tab, 'abz')
+        self.assertEqual(gsv.selected_portal_tab, 'abc')


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-10-19T18:05:04Z
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/29f478133819488e2215edaae9aa9f4e1a0bbeed

document changes

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index a1eca8a..12002cd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,6 +7,9 @@ Changelog
 - fix icon rendering ... CMFPlone#1151
   [fgrcon]
 
+- fix global sections tabs ... CMFPlone#1178
+  [tomgross]
+
 
 2.5.15 (2015-09-20)
 -------------------


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-10-21T23:50:44+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/dd107021d074ade295dbc4418171462e527827b4

Merge pull request #69 from plone/tomgross-fix1178

Correctly select tab in GlobalSectionsViewlet

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/tests/test_common.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8896138..12277cc 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,9 @@ Changelog
 - fix icon rendering ... CMFPlone#1151
   [fgrcon]
 
+- fix global sections tabs ... CMFPlone#1178
+  [tomgross]
+
 
 2.5.15 (2015-09-20)
 -------------------
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 67d1e7c..1340147 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -25,6 +25,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 
 from plone.app.layout.globals.interfaces import IViewView
+from plone.app.layout.navigation.root import getNavigationRootObject
 from plone.protect.utils import addTokenToUrl
 
 
@@ -206,7 +207,8 @@ def update(self):
         self.selected_portal_tab = self.selected_tabs['portal']
 
     def selectedTabs(self, default_tab='index_html', portal_tabs=()):
-        plone_url = getToolByName(self.context, 'portal_url')()
+        portal = getToolByName(self.context, 'portal_url').getPortalObject()
+        plone_url = getNavigationRootObject(self.context, portal).absolute_url()
         plone_url_len = len(plone_url)
         request = self.request
         valid_actions = []
diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py
index 753b6d1..25b45e7 100644
--- a/plone/app/layout/viewlets/tests/test_common.py
+++ b/plone/app/layout/viewlets/tests/test_common.py
@@ -3,6 +3,7 @@
 from Products.CMFPlone.interfaces import ISiteSchema
 from plone.app.layout.navigation.interfaces import INavigationRoot
 from plone.app.layout.viewlets.common import ContentViewsViewlet
+from plone.app.layout.viewlets.common import GlobalSectionsViewlet
 from plone.app.layout.viewlets.common import LogoViewlet
 from plone.app.layout.viewlets.common import TitleViewlet
 from plone.app.layout.viewlets.common import ViewletBase
@@ -139,3 +140,36 @@ def testLogoViewletRegistry(self):
         self.assertTrue(
             'http://nohost/plone/@@site-logo/pixel.png'
             in viewlet.img_src)
+
+
+class TestGlobalSectionsViewlet(ViewletsTestCase):
+    """Test the global sections views viewlet.
+    """
+
+    def test_selectedtabs(self):
+        """ Test selected tabs the simplest case
+        """
+        request = self.layer['request']
+        request['URL'] = self.folder.absolute_url()
+        gsv = GlobalSectionsViewlet(self.folder, request, None)
+        gsv.update()
+        self.assertEqual(gsv.selected_tabs, {'portal': 'Members'})
+        self.assertEqual(gsv.selected_portal_tab, 'Members')
+
+    def test_selectedtabs_navroot(self):
+        """ Test selected tabs with a INavigationroot folder involved
+        """
+        self.setRoles(('Manager',))
+        self.portal.invokeFactory('Folder', 'navroot', title='My new root')
+        navroot = self.portal['navroot']
+        alsoProvides(navroot, INavigationRoot)
+        navroot.invokeFactory('Folder', 'abc', title='short')
+        navroot.invokeFactory('Folder',
+                              'xyz',
+                              title='Folder with a looong name')
+        request = self.layer['request']
+        request['URL'] = navroot['abc'].absolute_url()
+        gsv = GlobalSectionsViewlet(navroot, request, None)
+        gsv.update()
+        self.assertEqual(gsv.selected_tabs, {'portal': 'abc'})
+        self.assertEqual(gsv.selected_portal_tab, 'abc')


