Repository: plone.formwidget.contenttree
Branch: refs/heads/master
Date: 2015-01-15T11:12:40Z
Author: Matthew Wilkes (MatthewWilkes) <git@matthewwilkes.name>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/2aab7ce04ab883d02fb4669907f37c64de8a383a

Update buildout to work with brave new world of setuptools being maintained and distribute being dead

Files changed:
M bootstrap.py
M buildout.cfg

diff --git a/bootstrap.py b/bootstrap.py
index ec3757a..a629566 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -18,7 +18,11 @@
 use the -c option to specify an alternate configuration file.
 """
 
-import os, shutil, sys, tempfile
+import os
+import shutil
+import sys
+import tempfile
+
 from optparse import OptionParser
 
 tmpeggs = tempfile.mkdtemp()
@@ -31,8 +35,8 @@
 Simply run this script in a directory containing a buildout.cfg, using the
 Python that you want bin/buildout to use.
 
-Note that by using --setup-source and --download-base to point to
-local resources, you can keep this script from going over the network.
+Note that by using --find-links to point to local resources, you can keep
+this script from going over the network.
 '''
 
 parser = OptionParser(usage=usage)
@@ -48,48 +52,63 @@
                         "bootstrap and buildout will get the newest releases "
                         "even if they are alphas or betas."))
 parser.add_option("-c", "--config-file",
-                   help=("Specify the path to the buildout configuration "
-                         "file to be used."))
+                  help=("Specify the path to the buildout configuration "
+                        "file to be used."))
 parser.add_option("-f", "--find-links",
-                   help=("Specify a URL to search for buildout releases"))
+                  help=("Specify a URL to search for buildout releases"))
+parser.add_option("--allow-site-packages",
+                  action="store_true", default=False,
+                  help=("Let bootstrap.py use existing site packages"))
+parser.add_option("--setuptools-version",
+                  help="use a specific setuptools version")
 
 
 options, args = parser.parse_args()
 
 ######################################################################
-# load/install distribute
+# load/install setuptools
 
-to_reload = False
 try:
-    import pkg_resources, setuptools
-    if not hasattr(pkg_resources, '_distribute'):
-        to_reload = True
-        raise ImportError
+    if options.allow_site_packages:
+        import setuptools
+        import pkg_resources
+    from urllib.request import urlopen
 except ImportError:
-    ez = {}
-
-    try:
-        from urllib.request import urlopen
-    except ImportError:
-        from urllib2 import urlopen
-
-    exec(urlopen('http://python-distribute.org/distribute_setup.py').read(), ez)
-    setup_args = dict(to_dir=tmpeggs, download_delay=0, no_fake=True)
-    ez['use_setuptools'](**setup_args)
-
-    if to_reload:
-        reload(pkg_resources)
-    import pkg_resources
-    # This does not (always?) update the default working set.  We will
-    # do it.
-    for path in sys.path:
-        if path not in pkg_resources.working_set.entries:
-            pkg_resources.working_set.add_entry(path)
+    from urllib2 import urlopen
+
+ez = {}
+exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
+
+if not options.allow_site_packages:
+    # ez_setup imports site, which adds site packages
+    # this will remove them from the path to ensure that incompatible versions
+    # of setuptools are not in the path
+    import site
+    # inside a virtualenv, there is no 'getsitepackages'.
+    # We can't remove these reliably
+    if hasattr(site, 'getsitepackages'):
+        for sitepackage_path in site.getsitepackages():
+            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
+
+setup_args = dict(to_dir=tmpeggs, download_delay=0)
+
+if options.setuptools_version is not None:
+    setup_args['version'] = options.setuptools_version
+
+ez['use_setuptools'](**setup_args)
+import setuptools
+import pkg_resources
+
+# This does not (always?) update the default working set.  We will
+# do it.
+for path in sys.path:
+    if path not in pkg_resources.working_set.entries:
+        pkg_resources.working_set.add_entry(path)
 
 ######################################################################
 # Install buildout
 
-ws  = pkg_resources.working_set
+ws = pkg_resources.working_set
 
 cmd = [sys.executable, '-c',
        'from setuptools.command.easy_install import main; main()',
@@ -104,8 +123,8 @@
 if find_links:
     cmd.extend(['-f', find_links])
 
-distribute_path = ws.find(
-    pkg_resources.Requirement.parse('distribute')).location
+setuptools_path = ws.find(
+    pkg_resources.Requirement.parse('setuptools')).location
 
 requirement = 'zc.buildout'
 version = options.version
@@ -113,13 +132,19 @@
     # Figure out the most recent final version of zc.buildout.
     import setuptools.package_index
     _final_parts = '*final-', '*final'
+
     def _final_version(parsed_version):
-        for part in parsed_version:
-            if (part[:1] == '*') and (part not in _final_parts):
-                return False
-        return True
+        try:
+            return not parsed_version.is_prerelease
+        except AttributeError:
+            # Older setuptools
+            for part in parsed_version:
+                if (part[:1] == '*') and (part not in _final_parts):
+                    return False
+            return True
+
     index = setuptools.package_index.PackageIndex(
-        search_path=[distribute_path])
+        search_path=[setuptools_path])
     if find_links:
         index.add_find_links((find_links,))
     req = pkg_resources.Requirement.parse(requirement)
@@ -142,10 +167,9 @@ def _final_version(parsed_version):
 cmd.append(requirement)
 
 import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=distribute_path)) != 0:
+if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
     raise Exception(
-        "Failed to execute command:\n%s",
-        repr(cmd)[1:-1])
+        "Failed to execute command:\n%s" % repr(cmd)[1:-1])
 
 ######################################################################
 # Import and run buildout
diff --git a/buildout.cfg b/buildout.cfg
index ff66b9f..3479d76 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,2 +1,7 @@
 [buildout]
 extends = test-plone-4.3.x.cfg
+versions = versions
+
+[versions]
+setuptools = 7.0
+pytz = 2014.10


Repository: plone.formwidget.contenttree
Branch: refs/heads/master
Date: 2015-01-15T11:13:15Z
Author: Matthew Wilkes (MatthewWilkes) <git@matthewwilkes.name>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/bc602b45b950ba5e1ff4ad89fc8d4eeefd50bb14

Unquote paths passed in to the widget, to allow expanding of directories that have a different representation when quoted (such as those containing spaces)

Files changed:
M plone/formwidget/contenttree/widget.py

diff --git a/plone/formwidget/contenttree/widget.py b/plone/formwidget/contenttree/widget.py
index be2ea62..087609e 100644
--- a/plone/formwidget/contenttree/widget.py
+++ b/plone/formwidget/contenttree/widget.py
@@ -1,3 +1,5 @@
+import urllib
+
 from AccessControl import getSecurityManager
 from Acquisition import Explicit
 from Acquisition.interfaces import IAcquirer
@@ -78,6 +80,8 @@ def __call__(self):
 
         # Convert token from request to the path to the object
         token = self.request.form.get('href', None)
+        if token is not None:
+            token = urllib.unquote(token)
         directory = self.context.bound_source.tokenToPath(token)
         level = self.request.form.get('rel', 0)
 


Repository: plone.formwidget.contenttree
Branch: refs/heads/master
Date: 2015-01-15T11:16:04Z
Author: Matthew Wilkes (MatthewWilkes) <git@matthewwilkes.name>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/266a5b54bab0bfdbfa3f9d7626c344eabe78e992

Update HISTORY.rst

Files changed:
M docs/HISTORY.rst

diff --git a/docs/HISTORY.rst b/docs/HISTORY.rst
index 6e3337b..23da822 100644
--- a/docs/HISTORY.rst
+++ b/docs/HISTORY.rst
@@ -8,6 +8,8 @@ Changelog
   link rendered css and gives better asynchronous download behavior.
   [thet]
 
+- Add support for navigating into objects with spaces in their ids
+  [MatthewWilkes]
 
 1.0.9 (2014-10-25)
 ------------------


