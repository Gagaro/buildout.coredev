Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-14T12:16:23+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/989fb6db309a27bc8e23a40a385b3fa1cba24b2f

get rid of more options

Files changed:
M plone/app/contentmenu/contentmenu.pt
M plone/app/contentmenu/menu.py
M plone/app/contentmenu/view.py

diff --git a/plone/app/contentmenu/contentmenu.pt b/plone/app/contentmenu/contentmenu.pt
index ad2cb0b..d55f160 100644
--- a/plone/app/contentmenu/contentmenu.pt
+++ b/plone/app/contentmenu/contentmenu.pt
@@ -1,10 +1,8 @@
-<tal:contentactionmenus define="menu_dict view/menu;
-                                level0 python:menu_dict['level0'];
-                                level1 python:menu_dict['level1']"
+<tal:contentactionmenus define="menu view/menu;"
                         condition="view/available"
                         i18n:domain="plone">
 
-  <tal:menus repeat="menuItem level0">
+  <tal:menus repeat="menuItem menu">
     <li tal:define="submenu menuItem/submenu;
                     identifier menuItem/extra/id"
         tal:attributes="id menuItem/extra/id">
@@ -87,61 +85,4 @@
       </ul>
     </li>
   </tal:menus>
-
-  <tal:moreoptions tal:condition="level1">
-    <li id="plone-contentmenu-moreoptions">
-      <a href="#"
-         title="More options"
-         i18n:attributes="title;">
-          <span class="icon-moreOptions" aria-hidden="true"></span>
-          <span i18n:translate="">More options</span>
-          <span class="plone-toolbar-caret"></span>
-      </a>
-      <ul>
-        <tal:elements repeat="menuItem level1">
-          <tal:menulevel1 define="submenu menuItem/submenu;
-                                  identifier menuItem/extra/id">
-            <li class="plone-toolbar-submenu-header"
-                tal:attributes="id menuItem/extra/id">
-              <a tal:attributes="href menuItem/action;
-                                 title menuItem/description;"
-                 i18n:attributes="title;">
-                  <tal:title tal:content="menuItem/title"
-                        i18n:translate="">
-                    SubMenu title
-                  </tal:title>
-              </a>
-            </li>
-            <tal:block repeat="subMenuItem submenu">
-              <li tal:attributes="class string:${menuItem/extra/li_class | nothing} ${subMenuItem/extra/separator}">
-                <a href="#"
-                   tal:condition="subMenuItem/action"
-                   tal:attributes="href subMenuItem/action;
-                                   title subMenuItem/description;
-                                   id subMenuItem/extra/id | nothing;
-                                   data-pat-plone-modal subMenuItem/extra/modal | nothing;
-                                   class subMenuItem/extra/class | nothing"
-                   i18n:attributes="title">
-                    <tal:title tal:content="structure subMenuItem/title"
-                          i18n:translate="">
-                        Title
-                    </tal:title>
-                </a>
-                <span tal:condition="not:subMenuItem/action"
-                     tal:attributes="id subMenuItem/extra/id | nothing;
-                                     class subMenuItem/extra/class | nothing">
-
-                    <tal:title tal:content="structure subMenuItem/title"
-                          i18n:translate="">
-                        Title
-                    </tal:title>
-                </span>
-              </li>
-            </tal:block>
-          </tal:menulevel1>
-        </tal:elements>
-      </ul>
-    </li>
-  </tal:moreoptions>
-
 </tal:contentactionmenus>
diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py
index 2c288a8..c4b05ec 100644
--- a/plone/app/contentmenu/menu.py
+++ b/plone/app/contentmenu/menu.py
@@ -59,7 +59,6 @@ class ActionsSubMenuItem(BrowserSubMenuItem):
     order = 10
     extra = {
         'id': 'plone-contentmenu-actions',
-        'level': 1,
         'li_class': 'plonetoolbar-content-action'
     }
 
@@ -147,7 +146,6 @@ def extra(self):
         return {
             'id': 'plone-contentmenu-display',
             'disabled': self.disabled(),
-            'level': 1,
             'li_class': 'plonetoolbar-display-view'
         }
 
@@ -503,7 +501,6 @@ def __init__(self, context, request):
     @property
     def extra(self):
         return {'id': 'plone-contentmenu-factories',
-                'level': 0,
                 'li_class': 'plonetoolbar-contenttype'}
 
     @property
@@ -644,7 +641,7 @@ def getMenuItems(self, context, request):
                 'extra': {
                     'id': 'plone-contentmenu-add-to-default-page',
                     'separator': None,
-                    'class': 'pat-plone-modal',},
+                    'class': 'pat-plone-modal'},
                 'submenu': None,
                 })
 
@@ -683,7 +680,6 @@ def extra(self):
                 'class': 'state-%s' % state,
                 'state': state,
                 'stateTitle': stateTitle,
-                'level': 0,
                 'li_class': 'plonetoolbar-workfow-transition'}
 
     @property
@@ -852,8 +848,7 @@ def __init__(self, context, request):
     @property
     def extra(self):
         return {'id': 'plone-contentmenu-portetmanager',
-                'li_class': 'plonetoolbar-portlet-manager',
-                'level': 1}
+                'li_class': 'plonetoolbar-portlet-manager'}
 
     @property
     def description(self):
diff --git a/plone/app/contentmenu/view.py b/plone/app/contentmenu/view.py
index c828321..6a5bed6 100644
--- a/plone/app/contentmenu/view.py
+++ b/plone/app/contentmenu/view.py
@@ -27,13 +27,4 @@ def available(self):
     def menu(self):
         menu = getUtility(IBrowserMenu, name='plone_contentmenu')
         items = menu.getMenuItems(self.context, self.request)
-        level1_items = []
-        level0_items = []
-        for item in items:
-            if 'extra' in item and 'level' in item['extra'] and item['extra']['level']:
-                level1_items.append(item)
-            else:
-                level0_items.append(item)
-        level0_items.reverse()
-        level1_items.reverse()
-        return {'level0': level0_items, 'level1': level1_items}
+        return items


Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-15T11:48:32+02:00
Author: Peter Holzer (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/50a7a6127e375bdd1d2a59cbcbb22c47266714c6

typo

Files changed:
M plone/app/contentmenu/menu.py

diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py
index c4b05ec..4edb865 100644
--- a/plone/app/contentmenu/menu.py
+++ b/plone/app/contentmenu/menu.py
@@ -847,7 +847,7 @@ def __init__(self, context, request):
 
     @property
     def extra(self):
-        return {'id': 'plone-contentmenu-portetmanager',
+        return {'id': 'plone-contentmenu-portletmanager',
                 'li_class': 'plonetoolbar-portlet-manager'}
 
     @property


Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-16T00:57:20+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/98f36a0e0ba48060e1a9e9be877868c2107021b0

reorder menu items

Files changed:
M plone/app/contentmenu/menu.py

diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py
index 4edb865..f8b4fc8 100644
--- a/plone/app/contentmenu/menu.py
+++ b/plone/app/contentmenu/menu.py
@@ -56,7 +56,7 @@ class ActionsSubMenuItem(BrowserSubMenuItem):
                     default=u'Actions for the current content item')
     submenuId = 'plone_contentmenu_actions'
 
-    order = 10
+    order = 30
     extra = {
         'id': 'plone-contentmenu-actions',
         'li_class': 'plonetoolbar-content-action'
@@ -134,7 +134,7 @@ class DisplaySubMenuItem(BrowserSubMenuItem):
     title = _(u'label_choose_template', default=u'Display')
     submenuId = 'plone_contentmenu_display'
 
-    order = 20
+    order = 40
 
     def __init__(self, context, request):
         BrowserSubMenuItem.__init__(self, context, request)
@@ -488,7 +488,7 @@ class FactoriesSubMenuItem(BrowserSubMenuItem):
     implements(IFactoriesSubMenuItem)
 
     submenuId = 'plone_contentmenu_factory'
-    order = 30
+    order = 10
     title = _(u'label_add_new_item', default=u'Add new\u2026')
     description = _(u'title_add_new_items_inside_item',
                     default=u'Add new items inside this item')
@@ -663,7 +663,7 @@ class WorkflowSubMenuItem(BrowserSubMenuItem):
 
     title = _(u'label_state', default=u'State:')
     submenuId = 'plone_contentmenu_workflow'
-    order = 40
+    order = 20
 
     def __init__(self, context, request):
         BrowserSubMenuItem.__init__(self, context, request)


Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-16T06:55:53+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/01a9f98c102c3ed4ab52baa488bbb459dcd0f227

show actions in folder contents

Files changed:
M plone/app/contentmenu/menu.py

diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py
index f8b4fc8..580041a 100644
--- a/plone/app/contentmenu/menu.py
+++ b/plone/app/contentmenu/menu.py
@@ -2,7 +2,6 @@
 
 from plone.memoize.instance import memoize
 from plone.app.content.browser.folderfactories import _allowedTypes
-from plone.app.content.browser.interfaces import IContentsPage
 from zope.browsermenu.menu import BrowserMenu
 from zope.browsermenu.menu import BrowserSubMenuItem
 from zope.interface import implements
@@ -76,12 +75,6 @@ def action(self):
 
     @memoize
     def available(self):
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
-        if IContentsPage.providedBy(self.request):
-            # Don't display action menu on folder_contents page.
-            # The cut/copy/paste submenu items are too confusing in this view.
-            return False
         actions_tool = getToolByName(self.context, 'portal_actions')
         editActions = actions_tool.listActionInfos(
             object=self.context, categories=('object_buttons',), max=1)
@@ -227,10 +220,6 @@ def selected(self):
     def disabled(self):
         # As we don't have the view we need to parse the url to see
         # if its folder_contents
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return True
-        if IContentsPage.providedBy(self.request):
-            return True
         context = self.context
         if self.context_state.is_default_page():
             context = utils.parent(context)
@@ -512,8 +501,6 @@ def action(self):
     def available(self):
         itemsToAdd = self._itemsToAdd()
         showConstrainOptions = self._showConstrainOptions()
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         if self._addingToParent() and not self.context_state.is_default_page():
             return False
         return (len(itemsToAdd) > 0 or showConstrainOptions)
@@ -699,8 +686,6 @@ def action(self):
 
     @memoize
     def available(self):
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         return (self.context_state.workflow_state() is not None)
 
     def selected(self):
@@ -866,10 +851,6 @@ def action(self):
 
     @memoize
     def available(self):
-        # As we don't have the view we need to parse the url to see
-        # if its folder_contents
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         secman = getSecurityManager()
         has_manage_portlets_permission = secman.checkPermission(
             'Portlets: Manage portlets',


Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-16T06:59:19+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/f5282a150af2cc892999e058183daffcfd8dc69f

hide submenu so screen readers do not read full contents every time

Files changed:
M plone/app/contentmenu/contentmenu.pt

diff --git a/plone/app/contentmenu/contentmenu.pt b/plone/app/contentmenu/contentmenu.pt
index d55f160..39ba007 100644
--- a/plone/app/contentmenu/contentmenu.pt
+++ b/plone/app/contentmenu/contentmenu.pt
@@ -44,7 +44,8 @@
           </span>
       </a>
 
-      <ul tal:condition="not:menuItem/extra/hideChildren | not:submenu | nothing">
+      <ul tal:condition="not:menuItem/extra/hideChildren | not:submenu | nothing"
+          aria-hidden="true">
         <li class="plone-toolbar-submenu-header">
           <span tal:omit-tag="not:menuItem/extra/stateTitle | nothing">
             <span tal:content="menuItem/title">Menu Title</span>


Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2015-07-16T18:32:50+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/391704d68cc4f16afcfae5eebeb46444c0c673d0

Merge pull request #10 from plone/toolbar-fixup

Toolbar fixup

Files changed:
M plone/app/contentmenu/contentmenu.pt
M plone/app/contentmenu/menu.py
M plone/app/contentmenu/view.py

diff --git a/plone/app/contentmenu/contentmenu.pt b/plone/app/contentmenu/contentmenu.pt
index ad2cb0b..39ba007 100644
--- a/plone/app/contentmenu/contentmenu.pt
+++ b/plone/app/contentmenu/contentmenu.pt
@@ -1,10 +1,8 @@
-<tal:contentactionmenus define="menu_dict view/menu;
-                                level0 python:menu_dict['level0'];
-                                level1 python:menu_dict['level1']"
+<tal:contentactionmenus define="menu view/menu;"
                         condition="view/available"
                         i18n:domain="plone">
 
-  <tal:menus repeat="menuItem level0">
+  <tal:menus repeat="menuItem menu">
     <li tal:define="submenu menuItem/submenu;
                     identifier menuItem/extra/id"
         tal:attributes="id menuItem/extra/id">
@@ -46,7 +44,8 @@
           </span>
       </a>
 
-      <ul tal:condition="not:menuItem/extra/hideChildren | not:submenu | nothing">
+      <ul tal:condition="not:menuItem/extra/hideChildren | not:submenu | nothing"
+          aria-hidden="true">
         <li class="plone-toolbar-submenu-header">
           <span tal:omit-tag="not:menuItem/extra/stateTitle | nothing">
             <span tal:content="menuItem/title">Menu Title</span>
@@ -87,61 +86,4 @@
       </ul>
     </li>
   </tal:menus>
-
-  <tal:moreoptions tal:condition="level1">
-    <li id="plone-contentmenu-moreoptions">
-      <a href="#"
-         title="More options"
-         i18n:attributes="title;">
-          <span class="icon-moreOptions" aria-hidden="true"></span>
-          <span i18n:translate="">More options</span>
-          <span class="plone-toolbar-caret"></span>
-      </a>
-      <ul>
-        <tal:elements repeat="menuItem level1">
-          <tal:menulevel1 define="submenu menuItem/submenu;
-                                  identifier menuItem/extra/id">
-            <li class="plone-toolbar-submenu-header"
-                tal:attributes="id menuItem/extra/id">
-              <a tal:attributes="href menuItem/action;
-                                 title menuItem/description;"
-                 i18n:attributes="title;">
-                  <tal:title tal:content="menuItem/title"
-                        i18n:translate="">
-                    SubMenu title
-                  </tal:title>
-              </a>
-            </li>
-            <tal:block repeat="subMenuItem submenu">
-              <li tal:attributes="class string:${menuItem/extra/li_class | nothing} ${subMenuItem/extra/separator}">
-                <a href="#"
-                   tal:condition="subMenuItem/action"
-                   tal:attributes="href subMenuItem/action;
-                                   title subMenuItem/description;
-                                   id subMenuItem/extra/id | nothing;
-                                   data-pat-plone-modal subMenuItem/extra/modal | nothing;
-                                   class subMenuItem/extra/class | nothing"
-                   i18n:attributes="title">
-                    <tal:title tal:content="structure subMenuItem/title"
-                          i18n:translate="">
-                        Title
-                    </tal:title>
-                </a>
-                <span tal:condition="not:subMenuItem/action"
-                     tal:attributes="id subMenuItem/extra/id | nothing;
-                                     class subMenuItem/extra/class | nothing">
-
-                    <tal:title tal:content="structure subMenuItem/title"
-                          i18n:translate="">
-                        Title
-                    </tal:title>
-                </span>
-              </li>
-            </tal:block>
-          </tal:menulevel1>
-        </tal:elements>
-      </ul>
-    </li>
-  </tal:moreoptions>
-
 </tal:contentactionmenus>
diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py
index 2c288a8..580041a 100644
--- a/plone/app/contentmenu/menu.py
+++ b/plone/app/contentmenu/menu.py
@@ -2,7 +2,6 @@
 
 from plone.memoize.instance import memoize
 from plone.app.content.browser.folderfactories import _allowedTypes
-from plone.app.content.browser.interfaces import IContentsPage
 from zope.browsermenu.menu import BrowserMenu
 from zope.browsermenu.menu import BrowserSubMenuItem
 from zope.interface import implements
@@ -56,10 +55,9 @@ class ActionsSubMenuItem(BrowserSubMenuItem):
                     default=u'Actions for the current content item')
     submenuId = 'plone_contentmenu_actions'
 
-    order = 10
+    order = 30
     extra = {
         'id': 'plone-contentmenu-actions',
-        'level': 1,
         'li_class': 'plonetoolbar-content-action'
     }
 
@@ -77,12 +75,6 @@ def action(self):
 
     @memoize
     def available(self):
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
-        if IContentsPage.providedBy(self.request):
-            # Don't display action menu on folder_contents page.
-            # The cut/copy/paste submenu items are too confusing in this view.
-            return False
         actions_tool = getToolByName(self.context, 'portal_actions')
         editActions = actions_tool.listActionInfos(
             object=self.context, categories=('object_buttons',), max=1)
@@ -135,7 +127,7 @@ class DisplaySubMenuItem(BrowserSubMenuItem):
     title = _(u'label_choose_template', default=u'Display')
     submenuId = 'plone_contentmenu_display'
 
-    order = 20
+    order = 40
 
     def __init__(self, context, request):
         BrowserSubMenuItem.__init__(self, context, request)
@@ -147,7 +139,6 @@ def extra(self):
         return {
             'id': 'plone-contentmenu-display',
             'disabled': self.disabled(),
-            'level': 1,
             'li_class': 'plonetoolbar-display-view'
         }
 
@@ -229,10 +220,6 @@ def selected(self):
     def disabled(self):
         # As we don't have the view we need to parse the url to see
         # if its folder_contents
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return True
-        if IContentsPage.providedBy(self.request):
-            return True
         context = self.context
         if self.context_state.is_default_page():
             context = utils.parent(context)
@@ -490,7 +477,7 @@ class FactoriesSubMenuItem(BrowserSubMenuItem):
     implements(IFactoriesSubMenuItem)
 
     submenuId = 'plone_contentmenu_factory'
-    order = 30
+    order = 10
     title = _(u'label_add_new_item', default=u'Add new\u2026')
     description = _(u'title_add_new_items_inside_item',
                     default=u'Add new items inside this item')
@@ -503,7 +490,6 @@ def __init__(self, context, request):
     @property
     def extra(self):
         return {'id': 'plone-contentmenu-factories',
-                'level': 0,
                 'li_class': 'plonetoolbar-contenttype'}
 
     @property
@@ -515,8 +501,6 @@ def action(self):
     def available(self):
         itemsToAdd = self._itemsToAdd()
         showConstrainOptions = self._showConstrainOptions()
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         if self._addingToParent() and not self.context_state.is_default_page():
             return False
         return (len(itemsToAdd) > 0 or showConstrainOptions)
@@ -644,7 +628,7 @@ def getMenuItems(self, context, request):
                 'extra': {
                     'id': 'plone-contentmenu-add-to-default-page',
                     'separator': None,
-                    'class': 'pat-plone-modal',},
+                    'class': 'pat-plone-modal'},
                 'submenu': None,
                 })
 
@@ -666,7 +650,7 @@ class WorkflowSubMenuItem(BrowserSubMenuItem):
 
     title = _(u'label_state', default=u'State:')
     submenuId = 'plone_contentmenu_workflow'
-    order = 40
+    order = 20
 
     def __init__(self, context, request):
         BrowserSubMenuItem.__init__(self, context, request)
@@ -683,7 +667,6 @@ def extra(self):
                 'class': 'state-%s' % state,
                 'state': state,
                 'stateTitle': stateTitle,
-                'level': 0,
                 'li_class': 'plonetoolbar-workfow-transition'}
 
     @property
@@ -703,8 +686,6 @@ def action(self):
 
     @memoize
     def available(self):
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         return (self.context_state.workflow_state() is not None)
 
     def selected(self):
@@ -851,9 +832,8 @@ def __init__(self, context, request):
 
     @property
     def extra(self):
-        return {'id': 'plone-contentmenu-portetmanager',
-                'li_class': 'plonetoolbar-portlet-manager',
-                'level': 1}
+        return {'id': 'plone-contentmenu-portletmanager',
+                'li_class': 'plonetoolbar-portlet-manager'}
 
     @property
     def description(self):
@@ -871,10 +851,6 @@ def action(self):
 
     @memoize
     def available(self):
-        # As we don't have the view we need to parse the url to see
-        # if its folder_contents
-        if 'folder_contents' in self.request.getURL().split('/'):
-            return False
         secman = getSecurityManager()
         has_manage_portlets_permission = secman.checkPermission(
             'Portlets: Manage portlets',
diff --git a/plone/app/contentmenu/view.py b/plone/app/contentmenu/view.py
index c828321..6a5bed6 100644
--- a/plone/app/contentmenu/view.py
+++ b/plone/app/contentmenu/view.py
@@ -27,13 +27,4 @@ def available(self):
     def menu(self):
         menu = getUtility(IBrowserMenu, name='plone_contentmenu')
         items = menu.getMenuItems(self.context, self.request)
-        level1_items = []
-        level0_items = []
-        for item in items:
-            if 'extra' in item and 'level' in item['extra'] and item['extra']['level']:
-                level1_items.append(item)
-            else:
-                level0_items.append(item)
-        level0_items.reverse()
-        level1_items.reverse()
-        return {'level0': level0_items, 'level1': level1_items}
+        return items


