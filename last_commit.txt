Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T16:56:49+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/78bf600eeab0d1b09e47c8af1ec7fb7807ea2734

Add Patternslib as a bower dependency

Files changed:
M mockup/bower.json

diff --git a/mockup/bower.json b/mockup/bower.json
index da5915a..d472032 100644
--- a/mockup/bower.json
+++ b/mockup/bower.json
@@ -19,10 +19,15 @@
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",
     "select2": "3.5.1",
-    "tinymce-builded": "4.1.6"
+    "tinymce-builded": "4.1.6",
+    "patternslib": "~2.0.6"
   },
   "devDependencies": {
     "expect": "0.3.1",
     "sinonjs": "1.10.2"
+  },
+  "resolutions": {
+    "jquery": "1.11.1",
+    "select2": "3.5.1"
   }
 }


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T17:47:28+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/be2dd39080958148967035e27d93afd1691934a3

Replace mockup-registry with pat-registry.

Files changed:
M mockup/LEARN.md
M mockup/bower.json
M mockup/js/config.js
M mockup/patterns/textareamimetypeselector/pattern.js

diff --git a/mockup/LEARN.md b/mockup/LEARN.md
index 1e43654..1e33020 100644
--- a/mockup/LEARN.md
+++ b/mockup/LEARN.md
@@ -353,7 +353,7 @@ we create a file called *tests/pattern-helloworld-test.js* and put the following
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-helloworld'
 ], function (expect, $, registry, HelloWorld) {
   "use strict";
@@ -392,7 +392,7 @@ Let's first explain some of the dependencies:
 * **[expect](https://github.com/LearnBoost/expect.js)** -
   A minimalistic BDD assertion toolkit based on the should.js test framework.
    <code>expect(result).to.be.above(0).and.not.equal(7)</code>.
-* **mockup-registry** -
+* **pat-registry** -
   the *registry* is a collection of tools used for managing the patterns.
   It also keeps track of which patterns have been registered, hence its name.  
   In our example we use its **scan()** method,
@@ -584,7 +584,7 @@ We need to include require.js and our js/config.js and then we need to scan the
     &lt;script src="node_modules/requirejs/require.js"&gt;&lt;/script&gt;
     &lt;script src="js/config.js"&gt;&lt;/script&gt;
     &lt;script&gt;
-       require(['jquery', 'mockup-registry','mockup-patterns-helloworld'],
+       require(['jquery', 'pat-registry','mockup-patterns-helloworld'],
          function($, registry) {
            $(document).ready(function (){
              registry.scan($('body'));
@@ -663,7 +663,7 @@ Note, we need to map the jquery.foggy Pattern name to the path and we also need
     &lt;script src="node_modules/requirejs/require.js"&gt;&lt;/script&gt;
     &lt;script src="js/config.js"&gt;&lt;/script&gt;
     &lt;script&gt;
-       require(['jquery', 'mockup-registry','mockup-patterns-foggy'],
+       require(['jquery', 'pat-registry','mockup-patterns-foggy'],
          function($, registry) {
            $(document).ready(function (){
              registry.scan($('body'));
diff --git a/mockup/bower.json b/mockup/bower.json
index d472032..b924566 100644
--- a/mockup/bower.json
+++ b/mockup/bower.json
@@ -14,13 +14,14 @@
     "jquery-form": "3.46.0",
     "jquery.cookie": "1.4.1",
     "lodash": "2.4.1",
-    "mockup-core": "1.2.15",
+    "logging": "",
+    "mockup-core": "master",
     "moment": "2.8.3",
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",
     "select2": "3.5.1",
     "tinymce-builded": "4.1.6",
-    "patternslib": "~2.0.6"
+    "patternslib": "master"
   },
   "devDependencies": {
     "expect": "0.3.1",
diff --git a/mockup/js/config.js b/mockup/js/config.js
index f4224c2..19026b3 100644
--- a/mockup/js/config.js
+++ b/mockup/js/config.js
@@ -98,7 +98,7 @@
       'mockup-patterns-upload-url': 'patterns/upload',
       'mockup-patterns-passwordstrength': 'patterns/passwordstrength/pattern',
       'mockup-patterns-passwordstrength-url': 'patterns/passwordstrength',
-      'mockup-registry': 'bower_components/mockup-core/js/registry',
+      'mockup-registry': 'bower_components/patternslib/src/core/registry',
       'mockup-router': 'js/router',
       'mockup-ui-url': 'js/ui',
       'mockup-utils': 'js/utils',
@@ -112,7 +112,15 @@
       'text': 'bower_components/requirejs-text/text',
       'tinymce': 'bower_components/tinymce-builded/js/tinymce/tinymce',
       'tinymce-modern-theme': 'bower_components/tinymce-builded/js/tinymce/themes/modern/theme',
-      'underscore': 'bower_components/lodash/dist/lodash.underscore'
+      'underscore': 'bower_components/lodash/dist/lodash.underscore',
+
+      // Patternslib
+      "pat-compat": "bower_components/patternslib/src/core/compat",
+      "pat-jquery-ext": "bower_components/patternslib/src/core/jquery-ext",
+      "pat-logger": "bower_components/patternslib/src/core/logger",
+      "pat-registry": "bower_components/patternslib/src/core/registry",
+      "pat-utils": "bower_components/patternslib/src/core/utils",
+      "logging": "bower_components/logging/src/logging"
     },
     shim: {
       'JSXTransformer': { exports: 'window.JSXTransformer' },
diff --git a/mockup/patterns/textareamimetypeselector/pattern.js b/mockup/patterns/textareamimetypeselector/pattern.js
index 5a0c84c..3faf66f 100644
--- a/mockup/patterns/textareamimetypeselector/pattern.js
+++ b/mockup/patterns/textareamimetypeselector/pattern.js
@@ -59,7 +59,7 @@
 define([
   'jquery',
   'mockup-patterns-base',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tinymce'
 ], function ($, Base, registry, tinymce) {
   'use strict';


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T18:36:43+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/50399a67dc504a88c0b479324755106da9a86276

Merge branch 'master' into patternslib-merge

Files changed:
M mockup/package.json

diff --git a/mockup/package.json b/mockup/package.json
index c36cee5..2e0fbfb 100644
--- a/mockup/package.json
+++ b/mockup/package.json
@@ -26,9 +26,11 @@
     "karma-requirejs": "~0.2.1",
     "karma-sauce-launcher": "~0.2.10",
     "karma-script-launcher": "~0.1.0",
+    "karma-spec-reporter": "0.0.16",
     "lcov-result-merger": "~0.0.2",
     "less": "~1.7.0",
     "mocha": "~1.18.2",
+    "phantomjs": "^1.9.13",
     "requirejs": "~2.1.11"
   },
   "maintainers": [


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T21:07:57+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/debe7f6f1bcd4e81a654781b1f26eacdc312120e

The trigger method has been renamed to emit.

This is to avoid conflict with the "trigger" attribute of Patternslib which
contains the CSS query that identifies DOM elements on which a pattern
applies.

Files changed:
M mockup/patterns/backdrop/pattern.js
M mockup/patterns/modal/pattern.js
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/querystring/pattern.js
M mockup/patterns/relateditems/pattern.js
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/toggle/pattern.js

diff --git a/mockup/patterns/backdrop/pattern.js b/mockup/patterns/backdrop/pattern.js
index ce2baf8..4eb218d 100644
--- a/mockup/patterns/backdrop/pattern.js
+++ b/mockup/patterns/backdrop/pattern.js
@@ -64,20 +64,20 @@ define([
     show: function() {
       var self = this;
       if (!self.$el.hasClass(self.options.classActiveName)) {
-        self.trigger('show');
+        self.emit('show');
         self.$backdrop.css('opacity', '0').show();
         self.$el.addClass(self.options.classActiveName);
         self.$backdrop.animate({ opacity: self.options.opacity }, 500);
-        self.trigger('shown');
+        self.emit('shown');
       }
     },
     hide: function() {
       var self = this;
       if (self.$el.hasClass(self.options.classActiveName)) {
-        self.trigger('hide');
+        self.emit('hide');
         self.$backdrop.animate({ opacity: '0' }, 500).hide();
         self.$el.removeClass(self.options.classActiveName);
-        self.trigger('hidden');
+        self.emit('hidden');
       }
     }
   });
diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index 5f1c3e1..f44a855 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -264,7 +264,7 @@ define([
             } else {
               console.log('error happened do something');
             }
-            self.trigger('formActionError', [xhr, textStatus, errorStatus]);
+            self.emit('formActionError', [xhr, textStatus, errorStatus]);
           },
           success: function(response, state, xhr, form) {
             self.loading.hide();
@@ -302,7 +302,7 @@ define([
                 self.reloadWindow();
               }
             }
-            self.trigger('formActionSuccess', [response, state, xhr, form]);
+            self.emit('formActionSuccess', [response, state, xhr, form]);
           }
         });
       },
@@ -341,7 +341,7 @@ define([
               console.log('error happened do something');
             }
             self.loading.hide();
-            self.trigger('linkActionError', [xhr, textStatus, errorStatus]);
+            self.emit('linkActionError', [xhr, textStatus, errorStatus]);
           },
           success: function(response, state, xhr) {
             self.redraw(response, patternOptions);
@@ -349,14 +349,14 @@ define([
               options.onSuccess(self, response, state, xhr);
             }
             self.loading.hide();
-            self.trigger('linkActionSuccess', [response, state, xhr]);
+            self.emit('linkActionSuccess', [response, state, xhr]);
           }
         });
       },
       render: function(options) {
         var self = this;
 
-        self.trigger('before-render');
+        self.emit('before-render');
 
         if (!self.$raw) {
           return;
@@ -436,7 +436,7 @@ define([
           $button.hide();
         });
 
-        self.trigger('before-events-setup');
+        self.emit('before-events-setup');
 
         // Wire up events
         $('.plone-modal-header > a.plone-modal-close, .plone-modal-footer > a.plone-modal-close', self.$modal)
@@ -479,7 +479,7 @@ define([
           .appendTo(self.$wrapperInner);
         self.$modal.data('pattern-' + self.name, self);
 
-        self.trigger('after-render');
+        self.emit('after-render');
       }
     },
     reloadWindow: function() {
@@ -607,7 +607,7 @@ define([
     },
     createAjaxModal: function() {
       var self = this;
-      self.trigger('before-ajax');
+      self.emit('before-ajax');
       self.loading.show();
       self.ajaxXHR = $.ajax({
         url: self.options.ajaxUrl,
@@ -616,7 +616,7 @@ define([
         self.ajaxXHR = undefined;
         self.loading.hide();
         self.$raw = $('<div />').append($(utils.parseBodyTag(response)));
-        self.trigger('after-ajax', self, textStatus, xhr);
+        self.emit('after-ajax', self, textStatus, xhr);
         self._show();
       });
     },
@@ -780,9 +780,9 @@ define([
     },
     render: function(options) {
       var self = this;
-      self.trigger('render');
+      self.emit('render');
       self.options.render.apply(self, [options]);
-      self.trigger('rendered');
+      self.emit('rendered');
     },
     show: function() {
       var self = this;
@@ -791,7 +791,7 @@ define([
     _show: function() {
       var self = this;
       self.render.apply(self, [ self.options ]);
-      self.trigger('show');
+      self.emit('show');
       self.backdrop.show();
       self.$wrapper.show();
       self.loading.hide();
@@ -806,7 +806,7 @@ define([
       $(window.parent).on('resize.modal.patterns', function() {
         self.positionModal();
       });
-      self.trigger('shown');
+      self.emit('shown');
       $('body').addClass('plone-modal-open');
     },
     hide: function() {
@@ -814,7 +814,7 @@ define([
       if (self.ajaxXHR) {
         self.ajaxXHR.abort();
       }
-      self.trigger('hide');
+      self.emit('hide');
       if (self._suppressHide) {
         if (!confirm(self._suppressHide)) {
           return;
@@ -832,19 +832,19 @@ define([
         self.initModal();
       }
       $(window.parent).off('resize.modal.patterns');
-      self.trigger('hidden');
+      self.emit('hidden');
       $('body').removeClass('plone-modal-open');
     },
     redraw: function(response, options) {
       var self = this;
-      self.trigger('beforeDraw');
+      self.emit('beforeDraw');
       self.$modal.remove();
       self.$raw = $('<div />').append($(utils.parseBodyTag(response)));
       self.render.apply(self, [options || self.options]);
       self.$modal.addClass(self.options.templateOptions.classActiveName);
       self.positionModal();
       registry.scan(self.$modal);
-      self.trigger('afterDraw');
+      self.emit('afterDraw');
     }
   });
 
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index c756e88..e672562 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -301,7 +301,7 @@ define([
 
       self.$el.attr('value', value);
 
-      self.trigger('updated');
+      self.emit('updated');
     }
   });
 
diff --git a/mockup/patterns/querystring/pattern.js b/mockup/patterns/querystring/pattern.js
index 852f036..3637c74 100644
--- a/mockup/patterns/querystring/pattern.js
+++ b/mockup/patterns/querystring/pattern.js
@@ -128,7 +128,7 @@ define([
           self.removeValue();
           self.createOperator(e.val);
           self.createClear();
-          self.trigger('index-changed');
+          self.emit('index-changed');
         });
 
       if (index !== undefined) {
@@ -137,7 +137,7 @@ define([
         self.createClear();
       }
 
-      self.trigger('create-criteria');
+      self.emit('create-criteria');
     },
     createOperator: function(index, operator, value) {
       var self = this;
@@ -167,7 +167,7 @@ define([
         .on('change', function(e) {
           self.createValue(index);
           self.createClear();
-          self.trigger('operator-changed');
+          self.emit('operator-changed');
         });
 
       if (operator === undefined) {
@@ -177,7 +177,7 @@ define([
       self.$operator.select2('val', operator);
       self.createValue(index, value);
 
-      self.trigger('create-operator');
+      self.emit('create-operator');
     },
     createValue: function(index, value) {
       var self = this,
@@ -194,7 +194,7 @@ define([
                 .val(value)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'DateWidget') {
@@ -206,7 +206,7 @@ define([
                   date: { format: 'dd/mm/yyyy' }
                 })
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'DateRangeWidget') {
@@ -234,7 +234,7 @@ define([
                           date: { format: 'dd/mm/yyyy' }
                         });
         $wrapper.find('.picker__input').change(function() {
-          self.trigger('value-changed');
+          self.emit('value-changed');
         });
         self.$value = [startdt, enddt];
 
@@ -244,7 +244,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'ReferenceWidget') {
@@ -252,7 +252,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'RelativePathWidget') {
@@ -261,7 +261,7 @@ define([
                 .appendTo($wrapper)
                 .val(value)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'MultipleSelectionWidget') {
@@ -269,7 +269,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
         if (self.indexes[index]) {
           $.each(self.indexes[index].values, function(value, options) {
@@ -286,7 +286,7 @@ define([
         self.$value.select2('val', value);
       }
 
-      self.trigger('create-value');
+      self.emit('create-value');
 
     },
     createClear: function() {
@@ -298,7 +298,7 @@ define([
     },
     remove: function() {
       var self = this;
-      self.trigger('remove');
+      self.emit('remove');
       self.$remove.remove();
       self.$index.parent().remove();
       self.removeOperator();
@@ -308,21 +308,21 @@ define([
     },
     removeClear: function() {
       var self = this;
-      self.trigger('remove-clear');
+      self.emit('remove-clear');
       if (self.$clear) {
         self.$clear.remove();
       }
     },
     removeOperator: function() {
       var self = this;
-      self.trigger('remove-operator');
+      self.emit('remove-operator');
       if (self.$operator) {
         self.$operator.parent().remove();
       }
     },
     removeValue: function() {
       var self = this;
-      self.trigger('remove-value');
+      self.emit('remove-value');
       if (self.$value) {
         if ($.isArray(self.$value)) { // date ranges have 2 values
           self.$value[0].parents('.querystring-criteria-value').remove();
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index fed64eb..5380960 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -181,7 +181,7 @@ define([
     },
     browseTo: function(path) {
       var self = this;
-      self.trigger('before-browse');
+      self.emit('before-browse');
       self.currentPath = path;
       if (path === '/' && self.options.mode === 'search') {
         self.deactivateBrowsing();
@@ -190,7 +190,7 @@ define([
       }
       self.$el.select2('close');
       self.$el.select2('open');
-      self.trigger('after-browse');
+      self.emit('after-browse');
     },
     setBreadCrumbs: function() {
       var self = this;
@@ -286,16 +286,16 @@ define([
     },
     selectItem: function(item) {
       var self = this;
-      self.trigger('selecting');
+      self.emit('selecting');
       var data = self.$el.select2('data');
       data.push(item);
       self.$el.select2('data', data);
       item.selected = true;
-      self.trigger('selected');
+      self.emit('selected');
     },
     deselectItem: function(item) {
       var self = this;
-      self.trigger('deselecting');
+      self.emit('deselecting');
       var data = self.$el.select2('data');
       _.each(data, function(obj, i) {
         if (obj.UID === item.UID) {
@@ -304,7 +304,7 @@ define([
       });
       self.$el.select2('data', data);
       item.selected = false;
-      self.trigger('deselected');
+      self.emit('deselected');
     },
     isSelectable: function(item) {
       var self = this;
diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js
index 7b80c37..da2096c 100644
--- a/mockup/patterns/structure/js/views/app.js
+++ b/mockup/patterns/structure/js/views/app.js
@@ -164,7 +164,7 @@ define([
             url: self.getAjaxUrl(self.contextInfoUrl),
             dataType: 'json',
             success: function(data) {
-              self.trigger('context-info-loaded', data);
+              self.emit('context-info-loaded', data);
             },
             error: function(response) {
               // XXX handle error?
diff --git a/mockup/patterns/toggle/pattern.js b/mockup/patterns/toggle/pattern.js
index 5664bd3..d06e9df 100644
--- a/mockup/patterns/toggle/pattern.js
+++ b/mockup/patterns/toggle/pattern.js
@@ -187,23 +187,23 @@ define([
     },
     remove: function() {
       var self = this;
-      self.trigger('remove-attr');
+      self.emit('remove-attr');
       if (self.options.attribute === 'class') {
         self.$target.removeClass(self.options.value);
       } else {
         self.$target.removeAttr(self.options.attribute);
       }
-      self.trigger('attr-removed');
+      self.emit('attr-removed');
     },
     add: function() {
       var self = this;
-      self.trigger('add-attr');
+      self.emit('add-attr');
       if (self.options.attribute === 'class') {
         self.$target.addClass(self.options.value);
       } else {
         self.$target.attr(self.options.attribute, self.options.value);
       }
-      self.trigger('added-attr');
+      self.emit('added-attr');
     }
   });
 


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T21:32:48+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/690fc0d67a912f1f6d345b9cd6a4b785bd10d3c4

Add an explicit trigger for each patterns.

Files changed:
M mockup/patterns/accessibility/pattern.js
M mockup/patterns/autotoc/pattern.js
M mockup/patterns/backdrop/pattern.js
M mockup/patterns/cookietrigger/pattern.js
M mockup/patterns/eventedit/pattern.js
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/formautofocus/pattern.js
M mockup/patterns/formunloadalert/pattern.js
M mockup/patterns/inlinevalidation/pattern.js
M mockup/patterns/markspeciallinks/pattern.js
M mockup/patterns/modal/pattern.js
M mockup/patterns/moment/pattern.js
M mockup/patterns/passwordstrength/pattern.js
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/preventdoublesubmit/pattern.js
M mockup/patterns/querystring/pattern.js
M mockup/patterns/relateditems/pattern.js
M mockup/patterns/resourceregistry/pattern.js
M mockup/patterns/select2/pattern.js
M mockup/patterns/sortable/pattern.js
M mockup/patterns/structure/pattern.js
M mockup/patterns/tablesorter/pattern.js
M mockup/patterns/textareamimetypeselector/pattern.js
M mockup/patterns/texteditor/pattern.js
M mockup/patterns/thememapper/pattern.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/toggle/pattern.js
M mockup/patterns/tooltip/pattern.js
M mockup/patterns/tree/pattern.js
M mockup/patterns/upload/pattern.js

diff --git a/mockup/patterns/accessibility/pattern.js b/mockup/patterns/accessibility/pattern.js
index aaafebd..5891e85 100644
--- a/mockup/patterns/accessibility/pattern.js
+++ b/mockup/patterns/accessibility/pattern.js
@@ -48,6 +48,7 @@ define([
 
   var Accessibility = Base.extend({
     name: 'accessibility',
+    trigger: '.pat-accessibility',
     defaults: {
       'smallbtn': null,
       'normalbtn': null,
diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js
index caada30..501fdd1 100644
--- a/mockup/patterns/autotoc/pattern.js
+++ b/mockup/patterns/autotoc/pattern.js
@@ -77,6 +77,7 @@ define([
 
   var AutoTOC = Base.extend({
     name: 'autotoc',
+    trigger: '.pat-autotoc',
     defaults: {
       section: 'section',
       levels: 'h1,h2,h3',
diff --git a/mockup/patterns/backdrop/pattern.js b/mockup/patterns/backdrop/pattern.js
index 4eb218d..ede1246 100644
--- a/mockup/patterns/backdrop/pattern.js
+++ b/mockup/patterns/backdrop/pattern.js
@@ -24,6 +24,7 @@ define([
 
   var Backdrop = Base.extend({
     name: 'backdrop',
+    trigger: '.pat-backdrop',
     defaults: {
       zIndex: null,
       opacity: 0.8,
diff --git a/mockup/patterns/cookietrigger/pattern.js b/mockup/patterns/cookietrigger/pattern.js
index f13b7c8..20669f8 100644
--- a/mockup/patterns/cookietrigger/pattern.js
+++ b/mockup/patterns/cookietrigger/pattern.js
@@ -20,6 +20,7 @@ define([
 
   var CookieTrigger = Base.extend({
     name: 'cookietrigger',
+    trigger: '.pat-cookietrigger',
 
     isCookiesEnabled: function() {
       /* Test whether cookies are enabled by attempting to set a cookie
diff --git a/mockup/patterns/eventedit/pattern.js b/mockup/patterns/eventedit/pattern.js
index d60b8a7..623afbb 100644
--- a/mockup/patterns/eventedit/pattern.js
+++ b/mockup/patterns/eventedit/pattern.js
@@ -78,6 +78,7 @@ define([
 
   var EventEdit = Base.extend({
     name: 'eventedit',
+    trigger: '.pat-eventedit',
     defaults: {
       errorClass: 'error'
     },
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 4d19d96..978d92e 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -59,6 +59,7 @@ define([
 
   var FileManager = Base.extend({
     name: 'filemanager',
+    trigger: '.pat-filemanager',
     template: _.template(AppTemplate),
     tabItemTemplate: _.template(
       '<li class="active" data-path="<%= path %>">' +
diff --git a/mockup/patterns/formautofocus/pattern.js b/mockup/patterns/formautofocus/pattern.js
index 43b62f4..44704bc 100644
--- a/mockup/patterns/formautofocus/pattern.js
+++ b/mockup/patterns/formautofocus/pattern.js
@@ -21,6 +21,7 @@ define([
 
   var FormAutoFocus = Base.extend({
     name: 'formautofocus',
+    trigger: '.pat-formautofocus',
     defaults: {
       condition: 'div.error',
       target: 'div.error :input:not(.formTabs):visible:first',
diff --git a/mockup/patterns/formunloadalert/pattern.js b/mockup/patterns/formunloadalert/pattern.js
index 12c66ba..11e7427 100644
--- a/mockup/patterns/formunloadalert/pattern.js
+++ b/mockup/patterns/formunloadalert/pattern.js
@@ -36,6 +36,7 @@ define([
 
   var FormUnloadAlert = Base.extend({
     name: 'formunloadalert',
+    trigger: '.pat-formunloadalert',
     _changed : false,       // Stores a listing of raised changes by their key
     _suppressed : false,     // whether or not warning should be suppressed
     defaults: {
diff --git a/mockup/patterns/inlinevalidation/pattern.js b/mockup/patterns/inlinevalidation/pattern.js
index 52ccbc8..182ba32 100644
--- a/mockup/patterns/inlinevalidation/pattern.js
+++ b/mockup/patterns/inlinevalidation/pattern.js
@@ -26,6 +26,7 @@ define([
 
   var InlineValidation = Base.extend({
     name: 'inlinevalidation',
+    trigger: '.pat-inlinevalidation',
 
     render_error: function ($field, errmsg) {
        var $errbox = $('div.fieldErrorBox', $field);
diff --git a/mockup/patterns/markspeciallinks/pattern.js b/mockup/patterns/markspeciallinks/pattern.js
index 73f8eff..40ca92f 100644
--- a/mockup/patterns/markspeciallinks/pattern.js
+++ b/mockup/patterns/markspeciallinks/pattern.js
@@ -86,6 +86,7 @@ define([
 
   var MarkSpecialLinks = Base.extend({
     name: 'markspeciallinks',
+    trigger: '.pat-markspeciallinks',
     defaults: {
       external_links_open_new_window: false,
       mark_special_links: true
diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index f44a855..b81cbea 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -83,6 +83,7 @@ define([
 
   var Modal = Base.extend({
     name: 'modal',
+    trigger: '.pat-modal',
     createModal: null,
     $model: null,
     defaults: {
diff --git a/mockup/patterns/moment/pattern.js b/mockup/patterns/moment/pattern.js
index 25283ff..17c1867 100644
--- a/mockup/patterns/moment/pattern.js
+++ b/mockup/patterns/moment/pattern.js
@@ -89,6 +89,7 @@ define([
 
   var Moment = Base.extend({
     name: 'moment',
+    trigger: '.pat-moment',
     defaults: {
       // selector of elements to format dates for
       selector: null,
diff --git a/mockup/patterns/passwordstrength/pattern.js b/mockup/patterns/passwordstrength/pattern.js
index 25b93d7..cad33b4 100644
--- a/mockup/patterns/passwordstrength/pattern.js
+++ b/mockup/patterns/passwordstrength/pattern.js
@@ -56,6 +56,7 @@ define([
 
   var PasswordStrength = Base.extend({
     name: 'passwordstrength',
+    trigger: '.pat-passwordstrength',
     defaults: {
         zxcvbn: '//cdnjs.cloudflare.com/ajax/libs/zxcvbn/1.0/zxcvbn.js'
     },
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index e672562..2324b9e 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -95,6 +95,7 @@ define([
 
   var PickADate = Base.extend({
     name: 'pickadate',
+    trigger: '.pat-pickadate',
     defaults: {
       separator: ' ',
       date: {
diff --git a/mockup/patterns/preventdoublesubmit/pattern.js b/mockup/patterns/preventdoublesubmit/pattern.js
index fb80ef0..167ad7b 100644
--- a/mockup/patterns/preventdoublesubmit/pattern.js
+++ b/mockup/patterns/preventdoublesubmit/pattern.js
@@ -29,6 +29,7 @@ define([
 
   var PreventDoubleSubmit = Base.extend({
     name: 'preventdoublesubmit',
+    trigger: '.pat-preventdoublesubmit',
     defaults: {
       message : _t('You already clicked the submit button. ' +
                 'Do you really want to submit this form again?'),
diff --git a/mockup/patterns/querystring/pattern.js b/mockup/patterns/querystring/pattern.js
index 3637c74..c3d141c 100644
--- a/mockup/patterns/querystring/pattern.js
+++ b/mockup/patterns/querystring/pattern.js
@@ -417,6 +417,7 @@ define([
 
   var QueryString = Base.extend({
     name: 'querystring',
+    trigger: '.pat-querystring',
     defaults: {
       indexes: [],
       classWrapperName: 'querystring-wrapper',
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 5380960..bccd3ad 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -83,6 +83,7 @@ define([
 
   var RelatedItems = Base.extend({
     name: 'relateditems',
+    trigger: '.pat-relateditems',
     browsing: false,
     currentPath: null,
     defaults: {
diff --git a/mockup/patterns/resourceregistry/pattern.js b/mockup/patterns/resourceregistry/pattern.js
index 89bdc62..863a068 100644
--- a/mockup/patterns/resourceregistry/pattern.js
+++ b/mockup/patterns/resourceregistry/pattern.js
@@ -213,6 +213,7 @@ define([
 
   var ResourceRegistry = Base.extend({
     name: 'resourceregistry',
+    trigger: '.pat-resourceregistry',
     defaults: {
       bundles: {},
       resources: {},
diff --git a/mockup/patterns/select2/pattern.js b/mockup/patterns/select2/pattern.js
index 6b25e26..c012d66 100644
--- a/mockup/patterns/select2/pattern.js
+++ b/mockup/patterns/select2/pattern.js
@@ -71,6 +71,7 @@ define([
 
   var Select2 = Base.extend({
     name: 'select2',
+    trigger: '.pat-select2',
     defaults: {
       separator: ','
     },
diff --git a/mockup/patterns/sortable/pattern.js b/mockup/patterns/sortable/pattern.js
index e2a0a73..7c7487d 100644
--- a/mockup/patterns/sortable/pattern.js
+++ b/mockup/patterns/sortable/pattern.js
@@ -54,6 +54,7 @@ define([
 
   var SortablePattern = Base.extend({
     name: 'sortable',
+    trigger: '.pat-sortable',
     defaults: {
       selector: 'li',
       dragClass: 'item-dragging',
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index ea9fe66..ee1d4d9 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -43,6 +43,7 @@ define([
 
   var Structure = Base.extend({
     name: 'structure',
+    trigger: '.pat-structure',
     defaults: {
       vocabularyUrl: null,
       tagsVocabularyUrl: null,
diff --git a/mockup/patterns/tablesorter/pattern.js b/mockup/patterns/tablesorter/pattern.js
index 4e3df09..4176567 100644
--- a/mockup/patterns/tablesorter/pattern.js
+++ b/mockup/patterns/tablesorter/pattern.js
@@ -79,6 +79,7 @@ define([
 
   var TableSorter = Base.extend({
     name: 'tablesorter',
+    trigger: '.pat-tablesorter',
     defaults: {},
     sortabledataclass: function (cell) {
       var re, matches;
diff --git a/mockup/patterns/textareamimetypeselector/pattern.js b/mockup/patterns/textareamimetypeselector/pattern.js
index 3faf66f..9be19b1 100644
--- a/mockup/patterns/textareamimetypeselector/pattern.js
+++ b/mockup/patterns/textareamimetypeselector/pattern.js
@@ -66,6 +66,7 @@ define([
 
   var TextareaMimetypeSelector = Base.extend({
     name: 'textareamimetypeselector',
+    trigger: '.pat-textareamimetypeselector',
     textarea: undefined,
     currentWidget: undefined,
     defaults: {
diff --git a/mockup/patterns/texteditor/pattern.js b/mockup/patterns/texteditor/pattern.js
index 7f03733..6c173b9 100644
--- a/mockup/patterns/texteditor/pattern.js
+++ b/mockup/patterns/texteditor/pattern.js
@@ -68,6 +68,7 @@ define([
 
   var AcePattern = Base.extend({
     name: 'texteditor',
+    trigger: '.pat-texteditor',
     defaults: {
       theme: null,
       mode: 'text',
diff --git a/mockup/patterns/thememapper/pattern.js b/mockup/patterns/thememapper/pattern.js
index be9acee..6dfe6f0 100644
--- a/mockup/patterns/thememapper/pattern.js
+++ b/mockup/patterns/thememapper/pattern.js
@@ -420,6 +420,7 @@ define([
 
   var ThemeMapper = Base.extend({
     name: 'thememapper',
+    trigger: '.pat-thememapper',
     defaults: {
       filemanagerConfig: {},
       mockupUrl: null,
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 74ac881..2511b89 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -78,6 +78,7 @@ define([
 
   var TinyMCE = Base.extend({
     name: 'tinymce',
+    trigger: '.pat-tinymce',
     defaults: {
       upload: {
         uploadMultiple: false,
diff --git a/mockup/patterns/toggle/pattern.js b/mockup/patterns/toggle/pattern.js
index d06e9df..212ce4f 100644
--- a/mockup/patterns/toggle/pattern.js
+++ b/mockup/patterns/toggle/pattern.js
@@ -127,6 +127,7 @@ define([
 
   var Toggle = Base.extend({
     name: 'toggle',
+    trigger: '.pat-toggle',
     defaults: {
       attribute: 'class',
       event: 'click',
diff --git a/mockup/patterns/tooltip/pattern.js b/mockup/patterns/tooltip/pattern.js
index 66f1210..189fc42 100644
--- a/mockup/patterns/tooltip/pattern.js
+++ b/mockup/patterns/tooltip/pattern.js
@@ -62,6 +62,7 @@ define([
 
   var ToolTip = Base.extend({
     name: 'tooltip',
+    trigger: '.pat-tooltip',
     defaults: {
       attribute: 'class',
       enterEvent: 'mouseenter',
diff --git a/mockup/patterns/tree/pattern.js b/mockup/patterns/tree/pattern.js
index b061e27..cb310dd 100644
--- a/mockup/patterns/tree/pattern.js
+++ b/mockup/patterns/tree/pattern.js
@@ -61,6 +61,7 @@ define([
 
   var Tree = Base.extend({
     name: 'tree',
+    trigger: '.pat-tree',
     defaults: {
       dragAndDrop: false,
       autoOpen: false,
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index 1f84094..b587f99 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -58,6 +58,7 @@ define([
 
   var UploadPattern = Base.extend({
     name: 'upload',
+    trigger: '.pat-upload',
     defaults: {
       showTitle: true,
       url: null, // XXX MUST provide url to submit to OR be in a form


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-21T21:47:00+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/e0ce4ff8f2be20d8d73ef4410fd00dcf26918779

No need to listen to "scan-completed" now that we use Patternslib

Because patterns are now scanned inside out the eventedit pattern will be
called after any pickadate patterns have fired.

This removes the need for the "scan-completed.registry.mockup-core" event
which was listened to only in eventedit.

Files changed:
M mockup/patterns/eventedit/pattern.js

diff --git a/mockup/patterns/eventedit/pattern.js b/mockup/patterns/eventedit/pattern.js
index 623afbb..5b1f872 100644
--- a/mockup/patterns/eventedit/pattern.js
+++ b/mockup/patterns/eventedit/pattern.js
@@ -84,30 +84,23 @@ define([
     },
     init: function () {
       var self = this, $el = self.$el, jq_open_end, jq_end, jq_start;
+      var jq_whole_day, jq_time;
+      jq_whole_day = self.aOrB(
+        $('#formfield-form-widgets-IEventBasic-whole_day input', $el),
+        $('#archetypes-fieldname-wholeDay input#wholeDay', $el)
+      );
 
-      $(document).on('scan-completed.registry.mockup-core', function(event) {
-        // Wait for the registry scan to be finished, because we depend on DOM
-        // structures from pickadate, which are not ready yet.
-        var jq_whole_day, jq_time;
-
-        jq_whole_day = self.aOrB(
-          $('#formfield-form-widgets-IEventBasic-whole_day input', $el),
-          $('#archetypes-fieldname-wholeDay input#wholeDay', $el)
-        );
-
-        jq_time = self.aOrB(
-          $('#formfield-form-widgets-IEventBasic-start .pattern-pickadate-time-wrapper, #formfield-form-widgets-IEventBasic-end .pattern-pickadate-time-wrapper', $el),
-          $('#archetypes-fieldname-startDate .pattern-pickadate-time-wrapper, #archetypes-fieldname-endDate .pattern-pickadate-time-wrapper', $el)
-        );
-
-        if (jq_whole_day.length > 0 && jq_time.length > 0) {
-          jq_whole_day.bind('change', function (e) {
-            self.showHideWidget(jq_time, e.target.checked, true);
-          });
-          self.showHideWidget(jq_time, jq_whole_day.get(0).checked, false);
-        }
+      jq_time = self.aOrB(
+        $('#formfield-form-widgets-IEventBasic-start .pattern-pickadate-time-wrapper, #formfield-form-widgets-IEventBasic-end .pattern-pickadate-time-wrapper', $el),
+        $('#archetypes-fieldname-startDate .pattern-pickadate-time-wrapper, #archetypes-fieldname-endDate .pattern-pickadate-time-wrapper', $el)
+      );
 
-      });
+      if (jq_whole_day.length > 0 && jq_time.length > 0) {
+        jq_whole_day.bind('change', function (e) {
+          self.showHideWidget(jq_time, e.target.checked, true);
+        });
+        self.showHideWidget(jq_time, jq_whole_day.get(0).checked, false);
+      }
 
       // OPEN END INIT
       jq_open_end = self.aOrB(
@@ -240,8 +233,6 @@ define([
             else { $widget.show(); }
         }
     }
-
   });
-
   return EventEdit;
 });


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T14:31:57+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/c3712efd6cb2f8a8db828ff87626b4063ad5b783

Restore mockup-registry.

The docs still need it and due to some git submodule/Makefile magic it's
too much effort to fix right now.

Files changed:
M mockup/js/config.js

diff --git a/mockup/js/config.js b/mockup/js/config.js
index 19026b3..110a38c 100644
--- a/mockup/js/config.js
+++ b/mockup/js/config.js
@@ -98,7 +98,7 @@
       'mockup-patterns-upload-url': 'patterns/upload',
       'mockup-patterns-passwordstrength': 'patterns/passwordstrength/pattern',
       'mockup-patterns-passwordstrength-url': 'patterns/passwordstrength',
-      'mockup-registry': 'bower_components/patternslib/src/core/registry',
+      'mockup-registry': 'bower_components/mockup-core/js/registry',
       'mockup-router': 'js/router',
       'mockup-ui-url': 'js/ui',
       'mockup-utils': 'js/utils',


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T15:00:48+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/2a53fca5d7fa23aa8cac8396119a22dd1a0a9458

Replace mockup-parser with pat-parser in tests.

Files changed:
M mockup/tests/fakeserver.js
M mockup/tests/pattern-accessibility-test.js
M mockup/tests/pattern-autotoc-test.js
M mockup/tests/pattern-backdrop-test.js
M mockup/tests/pattern-cookietrigger-test.js
M mockup/tests/pattern-eventedit-test.js
M mockup/tests/pattern-filemanager-test.js
M mockup/tests/pattern-formautofocus-test.js
M mockup/tests/pattern-formunloadalert-test.js
M mockup/tests/pattern-inlinevalidation-test.js
M mockup/tests/pattern-markspeciallinks-test.js
M mockup/tests/pattern-modal-test.js
M mockup/tests/pattern-moment-test.js
M mockup/tests/pattern-passwordstrength-test.js
M mockup/tests/pattern-pickadate-test.js
M mockup/tests/pattern-preventdoublesubmit-test.js
M mockup/tests/pattern-relateditems-test.js
M mockup/tests/pattern-resourceregistry-test.js
M mockup/tests/pattern-select2-test.js
M mockup/tests/pattern-sortable-test.js
M mockup/tests/pattern-structure-test.js
M mockup/tests/pattern-tablesorter-test.js
M mockup/tests/pattern-textareamimetypeselector-test.js
M mockup/tests/pattern-tinymce-test.js
M mockup/tests/pattern-toggle-test.js
M mockup/tests/pattern-tooltip-test.js
M mockup/tests/pattern-tree-test.js
M mockup/tests/pattern-upload-test.js

diff --git a/mockup/tests/fakeserver.js b/mockup/tests/fakeserver.js
index 0cf55ec..f283eeb 100644
--- a/mockup/tests/fakeserver.js
+++ b/mockup/tests/fakeserver.js
@@ -657,7 +657,7 @@ define([
           'autotoc': 'patterns/autotoc/pattern',
           'mockup-patterns-base': 'bower_components/mockup-core/js/pattern',
           'jquery': 'bower_components/jquery/dist/jquery',
-          'mockup-registry': 'bower_components/mockup-core/js/registry'
+          "pat-registry": "bower_components/patternslib/src/core/registry",
         },
         include: ['autotoc']
       };
@@ -678,4 +678,4 @@ define([
   });
   return server;
 
-});
\ No newline at end of file
+});
diff --git a/mockup/tests/pattern-accessibility-test.js b/mockup/tests/pattern-accessibility-test.js
index 9ad242f..5249bf7 100644
--- a/mockup/tests/pattern-accessibility-test.js
+++ b/mockup/tests/pattern-accessibility-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-accessibility'
 ], function(expect, $, registry, Accessibility) {
   'use strict';
diff --git a/mockup/tests/pattern-autotoc-test.js b/mockup/tests/pattern-autotoc-test.js
index e11950b..b52b077 100644
--- a/mockup/tests/pattern-autotoc-test.js
+++ b/mockup/tests/pattern-autotoc-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-autotoc'
 ], function(expect, $, Registry, AutoTOC) {
   'use strict';
diff --git a/mockup/tests/pattern-backdrop-test.js b/mockup/tests/pattern-backdrop-test.js
index 1939052..24df487 100644
--- a/mockup/tests/pattern-backdrop-test.js
+++ b/mockup/tests/pattern-backdrop-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-backdrop'
 ], function(expect, $, registry, Backdrop) {
   'use strict';
diff --git a/mockup/tests/pattern-cookietrigger-test.js b/mockup/tests/pattern-cookietrigger-test.js
index 1d837cc..dc469ed 100644
--- a/mockup/tests/pattern-cookietrigger-test.js
+++ b/mockup/tests/pattern-cookietrigger-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-cookietrigger'
 ], function(expect, $, sinon, registry, Pattern) {
   'use strict';
diff --git a/mockup/tests/pattern-eventedit-test.js b/mockup/tests/pattern-eventedit-test.js
index 1a2d8da..bce1a38 100644
--- a/mockup/tests/pattern-eventedit-test.js
+++ b/mockup/tests/pattern-eventedit-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-eventedit'
 ], function(expect, $, registry, EventEdit) {
   'use strict';
diff --git a/mockup/tests/pattern-filemanager-test.js b/mockup/tests/pattern-filemanager-test.js
index f40002f..1789b42 100644
--- a/mockup/tests/pattern-filemanager-test.js
+++ b/mockup/tests/pattern-filemanager-test.js
@@ -2,7 +2,7 @@ define([
   'sinon',
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-filemanager'
 ], function(sinon, expect, $, registry, Tree) {
   'use strict';
diff --git a/mockup/tests/pattern-formautofocus-test.js b/mockup/tests/pattern-formautofocus-test.js
index 406db72..da83e68 100644
--- a/mockup/tests/pattern-formautofocus-test.js
+++ b/mockup/tests/pattern-formautofocus-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-formautofocus'
 ], function(expect, $, registry, FormAutoFocus) {
   'use strict';
diff --git a/mockup/tests/pattern-formunloadalert-test.js b/mockup/tests/pattern-formunloadalert-test.js
index bc5717a..7915fb6 100644
--- a/mockup/tests/pattern-formunloadalert-test.js
+++ b/mockup/tests/pattern-formunloadalert-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-formunloadalert'
 ], function(expect, $, registry, FormUnloadAlert) {
   'use strict';
diff --git a/mockup/tests/pattern-inlinevalidation-test.js b/mockup/tests/pattern-inlinevalidation-test.js
index 8795c65..84c5c3f 100644
--- a/mockup/tests/pattern-inlinevalidation-test.js
+++ b/mockup/tests/pattern-inlinevalidation-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-inlinevalidation'
 ], function(expect, $, sinon, registry, Pattern) {
   'use strict';
diff --git a/mockup/tests/pattern-markspeciallinks-test.js b/mockup/tests/pattern-markspeciallinks-test.js
index a2a2e5f..2959204 100644
--- a/mockup/tests/pattern-markspeciallinks-test.js
+++ b/mockup/tests/pattern-markspeciallinks-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-markspeciallinks'
 ], function(expect, $, registry, MarkSpecialLinks) {
   'use strict';
diff --git a/mockup/tests/pattern-modal-test.js b/mockup/tests/pattern-modal-test.js
index 21acaa4..5c06bef 100644
--- a/mockup/tests/pattern-modal-test.js
+++ b/mockup/tests/pattern-modal-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-modal'
 ], function(expect, $, sinon, registry, Modal) {
   'use strict';
diff --git a/mockup/tests/pattern-moment-test.js b/mockup/tests/pattern-moment-test.js
index f048895..8b49c60 100644
--- a/mockup/tests/pattern-moment-test.js
+++ b/mockup/tests/pattern-moment-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-moment'
 ], function(expect, $, registry, Moment) {
   'use strict';
diff --git a/mockup/tests/pattern-passwordstrength-test.js b/mockup/tests/pattern-passwordstrength-test.js
index 695c765..de540bd 100644
--- a/mockup/tests/pattern-passwordstrength-test.js
+++ b/mockup/tests/pattern-passwordstrength-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-passwordstrength'
 ], function(expect, $, registry, PasswordStrength) {
   'use strict';
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index 10d4ce0..cddc6eb 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-pickadate',
   'mockup-patterns-select2'
 ], function(expect, $, sinon, registry, PickADate, Select2) {
diff --git a/mockup/tests/pattern-preventdoublesubmit-test.js b/mockup/tests/pattern-preventdoublesubmit-test.js
index 65d4c1d..83e2b75 100644
--- a/mockup/tests/pattern-preventdoublesubmit-test.js
+++ b/mockup/tests/pattern-preventdoublesubmit-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-preventdoublesubmit'
 ], function(expect, $, registry, PreventDoubleSubmit) {
   'use strict';
diff --git a/mockup/tests/pattern-relateditems-test.js b/mockup/tests/pattern-relateditems-test.js
index b877685..08ddde7 100644
--- a/mockup/tests/pattern-relateditems-test.js
+++ b/mockup/tests/pattern-relateditems-test.js
@@ -3,7 +3,7 @@ define([
   'jquery',
   'underscore',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-relateditems'
 ], function(expect, $, _, sinon, registry, RelatedItems) {
   'use strict';
diff --git a/mockup/tests/pattern-resourceregistry-test.js b/mockup/tests/pattern-resourceregistry-test.js
index a05c403..a20dd6e 100644
--- a/mockup/tests/pattern-resourceregistry-test.js
+++ b/mockup/tests/pattern-resourceregistry-test.js
@@ -2,7 +2,7 @@ define([
   'sinon',
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-resourceregistry'
 ], function(sinon, expect, $, registry) {
   'use strict';
diff --git a/mockup/tests/pattern-select2-test.js b/mockup/tests/pattern-select2-test.js
index 17174a0..c49bdc9 100644
--- a/mockup/tests/pattern-select2-test.js
+++ b/mockup/tests/pattern-select2-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-select2'
 ], function(expect, $, sinon, registry, Select2) {
   'use strict';
diff --git a/mockup/tests/pattern-sortable-test.js b/mockup/tests/pattern-sortable-test.js
index 8949ea3..3acba00 100644
--- a/mockup/tests/pattern-sortable-test.js
+++ b/mockup/tests/pattern-sortable-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-sortable'
 ], function(expect, $, registry, Sortable) {
   'use strict';
diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js
index 120624c..1bbb6e9 100644
--- a/mockup/tests/pattern-structure-test.js
+++ b/mockup/tests/pattern-structure-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-structure',
   'sinon',
 ], function(expect, $, registry, Structure, sinon) {
diff --git a/mockup/tests/pattern-tablesorter-test.js b/mockup/tests/pattern-tablesorter-test.js
index cedbf27..827f071 100644
--- a/mockup/tests/pattern-tablesorter-test.js
+++ b/mockup/tests/pattern-tablesorter-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tablesorter'
 ], function(expect, $, registry, Tablesorter) {
   'use strict';
diff --git a/mockup/tests/pattern-textareamimetypeselector-test.js b/mockup/tests/pattern-textareamimetypeselector-test.js
index 413e18a..585da9c 100644
--- a/mockup/tests/pattern-textareamimetypeselector-test.js
+++ b/mockup/tests/pattern-textareamimetypeselector-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-textareamimetypeselector',
   'mockup-patterns-tinymce'
 ], function(expect, $, registry, textareamimetypeselector, tinymce) {
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index 118ca95..f731bdb 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'tinymce',
   'mockup-patterns-tinymce'
 ], function(expect, $, sinon, registry, tinymce, TinyMCE) {
diff --git a/mockup/tests/pattern-toggle-test.js b/mockup/tests/pattern-toggle-test.js
index aa65f5c..054ccdc 100644
--- a/mockup/tests/pattern-toggle-test.js
+++ b/mockup/tests/pattern-toggle-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-toggle'
 ], function(expect, $, registry, Toggle) {
   'use strict';
diff --git a/mockup/tests/pattern-tooltip-test.js b/mockup/tests/pattern-tooltip-test.js
index 4683d7a..ff9555e 100644
--- a/mockup/tests/pattern-tooltip-test.js
+++ b/mockup/tests/pattern-tooltip-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tooltip'
 ], function(expect, $, registry, ToolTip) {
   'use strict';
diff --git a/mockup/tests/pattern-tree-test.js b/mockup/tests/pattern-tree-test.js
index 9b242dc..273eeef 100644
--- a/mockup/tests/pattern-tree-test.js
+++ b/mockup/tests/pattern-tree-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tree'
 ], function(expect, $, registry, Tree) {
   'use strict';
diff --git a/mockup/tests/pattern-upload-test.js b/mockup/tests/pattern-upload-test.js
index 7c55df2..dc2ec63 100644
--- a/mockup/tests/pattern-upload-test.js
+++ b/mockup/tests/pattern-upload-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-upload'
 ], function(expect, $, registry, Upload) {
   'use strict';


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T15:42:17+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/7f102f0cbad3fa591bac8b42f76f232945746dfe

Found two more patterns which didn't have a "trigger" attribute

Files changed:
M mockup/patterns/tinymce/js/links.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index 1bf69dd..e1f98ab 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -14,6 +14,7 @@ define([
 
   var LinkType = Base.extend({
     name: 'linktype',
+    trigger: '.pat-linktype',
     defaults: {
       linkModal: null // required
     },
@@ -296,6 +297,7 @@ define([
 
   var LinkModal = Base.extend({
     name: 'linkmodal',
+    trigger: '.pat-linkmodal',
     defaults: {
       anchorSelector: 'h1,h2,h3',
       linkTypes: [


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T18:38:18+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/ccd65f29e7bd74f9334081de1c578721cc819031

The trigger method is not from the base pattern and was wrongly changed before.

Files changed:
M mockup/patterns/structure/js/views/app.js

diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js
index da2096c..7b80c37 100644
--- a/mockup/patterns/structure/js/views/app.js
+++ b/mockup/patterns/structure/js/views/app.js
@@ -164,7 +164,7 @@ define([
             url: self.getAjaxUrl(self.contextInfoUrl),
             dataType: 'json',
             success: function(data) {
-              self.emit('context-info-loaded', data);
+              self.trigger('context-info-loaded', data);
             },
             error: function(response) {
               // XXX handle error?


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T18:39:33+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/708ab1b9b9cfbe837bc4957cd847328a2c4d5d77

Don't call the extend method from the base pattern.

It tries to register the pattern again which we don't want.

Also, the init method for Mockup pattens have been moved to their Base object
and is not in the registry anymore.

Files changed:
M mockup/tests/pattern-cookietrigger-test.js
M mockup/tests/pattern-inlinevalidation-test.js

diff --git a/mockup/tests/pattern-cookietrigger-test.js b/mockup/tests/pattern-cookietrigger-test.js
index dc469ed..3c7d5eb 100644
--- a/mockup/tests/pattern-cookietrigger-test.js
+++ b/mockup/tests/pattern-cookietrigger-test.js
@@ -26,9 +26,9 @@ define([
         '</div>';
 
       var $el = $(widget).appendTo('body').hide();
-      Pattern.extend({isCookiesEnabled: sinon.stub().returns(0)});
+      $.extend(true, Pattern.prototype, {isCookiesEnabled: sinon.stub().returns(0)});
       expect($el.is(':visible')).to.equal(false);
-      var pattern = registry.init($el, 'cookietrigger');
+      var pattern = registry.patterns.cookietrigger.init($el);
       expect($el.is(':visible')).to.equal(true);
     });
 
@@ -39,9 +39,9 @@ define([
         '</div>';
 
       var $el = $(widget).appendTo('body').hide();
-      Pattern.extend({isCookiesEnabled: sinon.stub().returns(1)});
+      $.extend(true, Pattern.prototype, {isCookiesEnabled: sinon.stub().returns(1)});
       expect($el.is(':visible')).to.equal(false);
-      var pattern = registry.init($el, 'cookietrigger');
+      var pattern = registry.patterns.cookietrigger.init($el);
       expect($el.is(':visible')).to.equal(false);
     });
   });
diff --git a/mockup/tests/pattern-inlinevalidation-test.js b/mockup/tests/pattern-inlinevalidation-test.js
index 84c5c3f..51c95fc 100644
--- a/mockup/tests/pattern-inlinevalidation-test.js
+++ b/mockup/tests/pattern-inlinevalidation-test.js
@@ -27,8 +27,9 @@ define([
         '         value="Welcome to Plone" type="text">' +
         '</div>';
       var $el = $(widget).appendTo('body');
-      Pattern.extend({validate_z3cform_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'z3c.form'});
+      $.extend(true, Pattern.prototype, {validate_z3cform_field: sinon.spy()});
+      debugger;
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'z3c.form'});
       expect(pattern.validate_z3cform_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_z3cform_field.called).to.equal(true);
@@ -37,8 +38,8 @@ define([
     it('A formlib input is validated on the "blur" event', function() {
       var $el = $('<div class="pat-inlinevalidation" data-pat-inlinevalidation=\'{"type": "formlib"}\'> <input type="text"> </div>')
                 .appendTo('body');
-      Pattern.extend({validate_formlib_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'formlib'});
+      $.extend(true, Pattern.prototype, {validate_formlib_field: sinon.spy()});
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'formlib'});
       expect(pattern.validate_formlib_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_formlib_field.called).to.equal(true);
@@ -47,8 +48,8 @@ define([
     it('An archetypes input is validated on the "blur" event', function() {
       var $el = $('<div class="pat-inlinevalidation" data-pat-inlinevalidation=\'{"type": "archetypes"}\'> <input class="blurrable" type="text"> </div>')
                 .appendTo('body');
-      Pattern.extend({validate_archetypes_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'archetypes'});
+      $.extend(true, Pattern.prototype, {validate_archetypes_field: sinon.spy()});
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'archetypes'});
       expect(pattern.validate_archetypes_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_archetypes_field.called).to.equal(true);


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-22T18:53:49+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/0838a26088d19feb642821ea4ed11956a92a794b

Bugfix. Specify pattern to scan for.

Files changed:
M mockup/tests/pattern-pickadate-test.js

diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index cddc6eb..5a48d4e 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -423,7 +423,7 @@ define([
                                           ']}}'
               );
         self.$el.appendTo('body');
-        registry.scan($input);
+        registry.scan($input, ['pickadate']);
 
         // check if visible and data value are set to default
         expect($('.pattern-pickadate-timezone .select2-chosen').text()).to.equal('Enter timezone...');
@@ -439,7 +439,7 @@ define([
                                           ']}}'
               );
         self.$el.appendTo('body');
-        registry.scan($input);
+        registry.scan($input, ['pickadate']);
 
         var $time = $('.pattern-pickadate-timezone');
 


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T10:27:33+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/581bcdbaa70577510bd00de579d52d54f7e37a17

Don't expect the global jQuery obj to be available.

Files changed:
M mockup/patterns/markspeciallinks/pattern.js

diff --git a/mockup/patterns/markspeciallinks/pattern.js b/mockup/patterns/markspeciallinks/pattern.js
index 40ca92f..25475e4 100644
--- a/mockup/patterns/markspeciallinks/pattern.js
+++ b/mockup/patterns/markspeciallinks/pattern.js
@@ -141,12 +141,11 @@ define([
                 res = protocols.exec(this.href);
                 if (res) {
                     var iconclass = 'glyphicon link-' + res[0];
-                    jQuery(this).before('<i class="' + iconclass + '"></i>');
+                    $(this).before('<i class="' + iconclass + '"></i>');
                 }
             }
         );
       }
-
     }
   });
   return MarkSpecialLinks;


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T10:29:26+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/4c6dde0f4cfd0551729f3e25a65344d3ca3e586b

Revert "Revert "fix test failure""

This reverts commit f4d926966132e1139232dd23d06331f188d4d9fe.

Files changed:
M mockup/tests/pattern-markspeciallinks-test.js

diff --git a/mockup/tests/pattern-markspeciallinks-test.js b/mockup/tests/pattern-markspeciallinks-test.js
index 2959204..4fe355c 100644
--- a/mockup/tests/pattern-markspeciallinks-test.js
+++ b/mockup/tests/pattern-markspeciallinks-test.js
@@ -52,29 +52,29 @@ define([
     it('normal external links have target=_blank', function() {
       registry.scan(this.$el);
       var link = this.$el.find('a');
-      expect(link.eq(0).attr("target")===undefined).to.be.equal(true);
-      expect(link.eq(1).attr("target")===undefined).to.be.equal(true);
-      expect(link.eq(2).attr("target")).to.be.equal("_blank");
-      expect(link.eq(3).attr("target")===undefined).to.be.equal(true);
-      expect(link.eq(0).parent("i").length).to.be.equal(1);
-      expect(link.eq(1).parent("i").length).to.be.equal(0);
-      expect(link.eq(4).parent("i").length).to.be.equal(0);
-      expect(link.eq(5).parent("i").length).to.be.equal(0);
+      expect(link.eq(0).attr('target')===undefined).to.be.equal(true);
+      expect(link.eq(1).attr('target')===undefined).to.be.equal(true);
+      expect(link.eq(2).attr('target')).to.be.equal('_blank');
+      expect(link.eq(3).attr('target')===undefined).to.be.equal(true);
+      expect(link.eq(0).prev()[0].tagName).to.be.equal('I');
+      expect(link.eq(1).prev()[0].tagName).not.to.equal('I');
+      expect(link.eq(4).prev().length).to.be.equal(0);
+      expect(link.eq(5).prev()[0].tagName).not.to.equal('I');
     });
     it('check for correct icon classes per protocol', function() {
       registry.scan(this.$el);
       var listel = this.$el.next('.icons').find('li');
-      expect(listel.eq(0).find("i").hasClass('link-external')).to.be.equal(true);
-      expect(listel.eq(1).find("i").hasClass('link-https')).to.be.equal(true);
-      expect(listel.eq(2).find("i").hasClass('link-mailto')).to.be.equal(true);
-      expect(listel.eq(3).find("i").hasClass('link-ftp')).to.be.equal(true);
-      expect(listel.eq(4).find("i").hasClass('link-news')).to.be.equal(true);
-      expect(listel.eq(5).find("i").hasClass('link-irc')).to.be.equal(true);
-      expect(listel.eq(6).find("i").hasClass('link-h323')).to.be.equal(true);
-      expect(listel.eq(7).find("i").hasClass('link-sip')).to.be.equal(true);
-      expect(listel.eq(8).find("i").hasClass('link-callto')).to.be.equal(true);
-      expect(listel.eq(9).find("i").hasClass('link-feed')).to.be.equal(true);
-      expect(listel.eq(10).find("i").hasClass('link-webcal')).to.be.equal(true);
+      expect(listel.eq(0).find('i').hasClass('link-external')).to.be.equal(true);
+      expect(listel.eq(1).find('i').hasClass('link-https')).to.be.equal(true);
+      expect(listel.eq(2).find('i').hasClass('link-mailto')).to.be.equal(true);
+      expect(listel.eq(3).find('i').hasClass('link-ftp')).to.be.equal(true);
+      expect(listel.eq(4).find('i').hasClass('link-news')).to.be.equal(true);
+      expect(listel.eq(5).find('i').hasClass('link-irc')).to.be.equal(true);
+      expect(listel.eq(6).find('i').hasClass('link-h323')).to.be.equal(true);
+      expect(listel.eq(7).find('i').hasClass('link-sip')).to.be.equal(true);
+      expect(listel.eq(8).find('i').hasClass('link-callto')).to.be.equal(true);
+      expect(listel.eq(9).find('i').hasClass('link-feed')).to.be.equal(true);
+      expect(listel.eq(10).find('i').hasClass('link-webcal')).to.be.equal(true);
     });
   });
 });


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T11:21:51+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/236c15f115ff412589e55e7a79666876fd8ea90a

Fire "focusin" event instead of "focus".

This fixes failing tests where the event handler for "focus" wasn't being
called.

From https://api.jquery.com/on :

"The focus and blur events are specified by the W3C to not bubble, but jQuery
defines cross-browser focusin and focusout events that do bubble. When focus
and blur are used to attach delegated event handlers, jQuery maps the names and
delivers them as focusin and focusout respectively. For consistency and
clarity, use the bubbling event type names."

Files changed:
M mockup/patterns/formautofocus/pattern.js
M mockup/tests/pattern-formautofocus-test.js

diff --git a/mockup/patterns/formautofocus/pattern.js b/mockup/patterns/formautofocus/pattern.js
index 44704bc..310a238 100644
--- a/mockup/patterns/formautofocus/pattern.js
+++ b/mockup/patterns/formautofocus/pattern.js
@@ -30,9 +30,9 @@ define([
     init: function() {
       var self = this;
       if ($(self.options.condition, self.$el).size() !== 0) {
-        $(self.options.target, self.$el).focus();
+        $(self.options.target, self.$el).focusin();
       } else {
-        $(self.options.always, self.$el).focus();
+        $(self.options.always, self.$el).focusin();
       }
 
     }
diff --git a/mockup/tests/pattern-formautofocus-test.js b/mockup/tests/pattern-formautofocus-test.js
index da83e68..c835b2c 100644
--- a/mockup/tests/pattern-formautofocus-test.js
+++ b/mockup/tests/pattern-formautofocus-test.js
@@ -46,7 +46,7 @@ define([
         '</div>')
         .appendTo('body');
       expect($('input#first-input').is(':focus')).to.be.equal(false);
-      $('input').on('focus', function() {
+      $('input').on('focusin', function() {
         expect($(this).attr('id')).to.equal('input1-inside-error');
         expect($('input#first-input-should-not-focus').is(':focus')).to.be.equal(false);
         expect($('input#input-inside-error-should-not-focus').is(':focus')).to.be.equal(false);
@@ -55,6 +55,7 @@ define([
       registry.scan($el);
       $el.remove();
     });
+
     it('when the condition is not met, focus on the first input', function(done) {
       var $el = $('' +
         '<div>' +
@@ -65,7 +66,7 @@ define([
         '</div>')
         .appendTo('body');
       expect($('input#first-input').is(':focus')).to.be.equal(false);
-      $('input').on('focus', function() {
+      $('input').on('focusin', function() {
         expect($(this).attr('id')).to.equal('first-input');
         expect($('input#first-input-should-not-focus').is(':focus')).to.be.equal(false);
         expect($('input#input-inside-error-should-not-focus').is(':focus')).to.be.equal(false);


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T12:09:46+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/2359f8f6799bdeb13c6463a80f74d5de29dbca65

Remove debugger statement.

Files changed:
M mockup/tests/pattern-inlinevalidation-test.js

diff --git a/mockup/tests/pattern-inlinevalidation-test.js b/mockup/tests/pattern-inlinevalidation-test.js
index 51c95fc..c4f425c 100644
--- a/mockup/tests/pattern-inlinevalidation-test.js
+++ b/mockup/tests/pattern-inlinevalidation-test.js
@@ -28,7 +28,6 @@ define([
         '</div>';
       var $el = $(widget).appendTo('body');
       $.extend(true, Pattern.prototype, {validate_z3cform_field: sinon.spy()});
-      debugger;
       var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'z3c.form'});
       expect(pattern.validate_z3cform_field.called).to.equal(false);
       $el.children('input').blur();


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T12:10:01+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/24235ba1b0477a355f61857724745e863fe6d024

Don't listen to focus event in order to set the time delta.

* Newest chromium doesn't catch these focus events
    (see 236c15f115ff412589e55e7a79666876fd8ea90a)
* It's not necessary to wait until focus before setting the delta.
    This looks to be due to unsureness on whether pat-pickadate has been
    initialized due to Mockup's parser parsing pat-event edit first (due to
    outside-in parsing). This is not a problem anymore because the Patternslib
    parser parses pat-pickadate first (due to inside-out parsing).

Files changed:
M mockup/patterns/eventedit/pattern.js

diff --git a/mockup/patterns/eventedit/pattern.js b/mockup/patterns/eventedit/pattern.js
index 5b1f872..79e7039 100644
--- a/mockup/patterns/eventedit/pattern.js
+++ b/mockup/patterns/eventedit/pattern.js
@@ -124,15 +124,13 @@ define([
         $('#archetypes-fieldname-startDate', $el)
       );
       jq_start.each(function () {
-        $(this).on('focus', '.picker__input', function () { self.initDelta(); });
         $(this).on('change', '.picker__input', function () { self.updateEndDate(); });
       });
       jq_end.each(function () {
-        $(this).on('focus', '.picker__input', function () { self.initDelta(); });
         $(this).on('change', '.picker__input', function () { self.validateEndDate(); });
       });
-
     },
+
     aOrB: function (a, b) {
       /* Return element a or element b, depending on which is available.
        * Parameter a and b: CSS selectors.
@@ -146,6 +144,7 @@ define([
       }
       return $(ret);
     },
+
     getDateTime: function (datetimewidget) {
       var date, time, datetime;
       date = $('.pattern-pickadate-date-wrapper input[name="_submit"]', datetimewidget).prop('value');
@@ -166,7 +165,9 @@ define([
       );
       return datetime;
     },
-    initDelta: function () {
+
+    getTimeDelta: function () {
+        // Return time delta between the start and end dates in days
         var self = this, $el = self.$el, start_datetime, end_datetime;
         start_datetime = self.getDateTime(
           self.aOrB(
@@ -180,9 +181,9 @@ define([
             $('#archetypes-fieldname-endDate', $el)
           )
         );
-        // delta in days
-        self.startEndDelta = (end_datetime - start_datetime) / 1000 / 60;
+        return (end_datetime - start_datetime) / 1000 / 60;
     },
+
     updateEndDate: function () {
         var self = this, $el = self.$el, jq_start, jq_end, start_date, new_end_date;
         jq_start = self.aOrB(
@@ -196,13 +197,14 @@ define([
 
         start_date = self.getDateTime(jq_start);
         new_end_date = new Date(start_date);
-        new_end_date.setMinutes(start_date.getMinutes() + self.startEndDelta);
+        new_end_date.setMinutes(start_date.getMinutes() + self.getTimeDelta());
 
         if (new_end_date) {
           $('.pattern-pickadate-date', jq_end).pickadate('picker').set('select', new_end_date);
           $('.pattern-pickadate-time', jq_end).pickatime('picker').set('select', new_end_date);
         }
     },
+
     validateEndDate: function () {
         var self = this, $el = self.$el, jq_start, jq_end, start_datetime, end_datetime;
         jq_start = self.aOrB(
@@ -213,16 +215,15 @@ define([
           $('#formfield-form-widgets-IEventBasic-end', $el),
           $('#archetypes-fieldname-endDate', $el)
         );
-
         start_datetime = self.getDateTime(jq_start);
         end_datetime = self.getDateTime(jq_end);
-
         if (end_datetime < start_datetime) {
             jq_end.addClass(self.options.errorClass);
         } else {
             jq_end.removeClass(self.options.errorClass);
         }
     },
+
     showHideWidget: function (widget, hide, fade) {
         var $widget = $(widget);
         if (hide === true) {


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T12:13:25+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/7da8701a672c4660fd29771eb2765ea033000933

Fix failing test.

Why would the end date change if the start date has been changed?

Files changed:
M mockup/tests/pattern-eventedit-test.js

diff --git a/mockup/tests/pattern-eventedit-test.js b/mockup/tests/pattern-eventedit-test.js
index bce1a38..4e0c205 100644
--- a/mockup/tests/pattern-eventedit-test.js
+++ b/mockup/tests/pattern-eventedit-test.js
@@ -49,12 +49,11 @@ define([
       $(sel_whole_day + ' input', $el).trigger('change');
       expect($('.pattern-pickadate-time-wrapper', $el).is(':visible')).to.be.equal(true);
 
-
       // changing start time
       $(sel_start + ' .pattern-pickadate-time', $el).click();
       $(sel_start + ' .pattern-pickadate-time-wrapper li:contains("10:00 AM")', $el).click();
       expect($(sel_start + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('10:00');
-      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('11:30');
+      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('15:30');
 
       // wrong end time
       $(sel_end + ' .pattern-pickadate-time', $el).click();


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T15:17:50+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/f4ff4a15791df0c2dea0085bf2ced6f2b138ec38

Found one more pattern using the old Mockup parser.

Files changed:
M mockup/patterns/modal/pattern.js

diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index b81cbea..d8cfce9 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -74,7 +74,7 @@ define([
   'underscore',
   'mockup-patterns-base',
   'mockup-patterns-backdrop',
-  'mockup-registry',
+  'pat-registry',
   'mockup-router',
   'mockup-utils',
   'jquery.form'
@@ -603,9 +603,9 @@ define([
           self.show();
         });
       }
-
       self.initModal();
     },
+
     createAjaxModal: function() {
       var self = this;
       self.emit('before-ajax');
@@ -621,22 +621,26 @@ define([
         self._show();
       });
     },
+
     createTargetModal: function() {
       var self = this;
       self.$raw = $(self.options.target).clone();
       self._show();
     },
+
     createBasicModal: function() {
       var self = this;
       self.$raw = $('<div/>').html(self.$el.clone());
       self._show();
     },
+
     createHtmlModal: function() {
       var self = this;
       var $el = $(self.options.html);
       self.$raw = $el;
       self._show();
     },
+
     initModal: function() {
       var self = this;
       if (self.options.ajaxUrl) {


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T15:19:14+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/3b0e412e2c3ef2700b9a9ff15ffa45c757238697

Use the registry to create new instances of patterns.

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/tests/pattern-tinymce-test.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index e1f98ab..d768967 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -1,6 +1,7 @@
 define([
   'jquery',
   'underscore',
+  'pat-registry',
   'mockup-patterns-base',
   'mockup-patterns-relateditems',
   'mockup-patterns-modal',
@@ -8,8 +9,7 @@ define([
   'mockup-patterns-upload',
   'text!mockup-patterns-tinymce-url/templates/link.xml',
   'text!mockup-patterns-tinymce-url/templates/image.xml'
-], function($, _, Base, RelatedItems, Modal, tinymce, Upload,
-            LinkTemplate, ImageTemplate) {
+], function($, _, registry, Base, RelatedItems, Modal, tinymce, Upload, LinkTemplate, ImageTemplate) {
   'use strict';
 
   var LinkType = Base.extend({
@@ -353,7 +353,7 @@ define([
       self.dom = self.tiny.dom;
       self.linkType = self.options.initialLinkType;
       self.linkTypes = {};
-      self.modal = new Modal(self.$el, {
+      self.modal = registry.patterns.modal.init(self.$el, null, null, {
         html: self.generateModalHtml(),
         content: null,
         buttons: '.btn'
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index f731bdb..e346d52 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -16,8 +16,7 @@ define([
       options = {};
     }
     var $el = $('<textarea class="pat-tinymce"></textarea>').appendTo('body');
-
-    return new TinyMCE($el, options);
+    return registry.patterns.tinymce.init($el, null, null, options);
   };
 
   describe('TinyMCE', function() {
@@ -197,7 +196,6 @@ define([
           ajaxvocabulary: '/data.json'
         }
       });
-
       pattern.addLinkClicked();
       pattern.linkModal.linkTypes.internal.$input.select2('data', {
         UID: 'foobar',
@@ -207,6 +205,7 @@ define([
       });
       expect(pattern.linkModal.getLinkUrl()).to.equal('resolveuid/foobar');
     });
+
     it('test add external link', function() {
       var pattern = createTinymce();
       pattern.addLinkClicked();
@@ -243,7 +242,6 @@ define([
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();
-
       pattern.addLinkClicked();
       pattern.linkModal.linkTypes.internal.$input.select2('data', {
         UID: 'foobar',


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T15:19:42+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/90294418fa2410eaa8bb42fcfa72fbfec8807b5e

Formatting.

Files changed:
M mockup/patterns/tinymce/pattern.js

diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 2511b89..ae9f6d3 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -59,21 +59,48 @@ define([
   'mockup-utils',
   'mockup-patterns-tinymce-url/js/links',
   'translate',
-  'tinymce-modern-theme', 'tinymce-advlist', 'tinymce-anchor', 'tinymce-autolink',
-  'tinymce-autoresize', 'tinymce-autosave', 'tinymce-bbcode', 'tinymce-charmap',
-  'tinymce-code', 'tinymce-colorpicker', 'tinymce-contextmenu', 'tinymce-directionality',
-  'tinymce-emoticons', 'tinymce-fullpage', 'tinymce-fullscreen', 'tinymce-hr',
-  'tinymce-image', 'tinymce-importcss', 'tinymce-insertdatetime', 'tinymce-layer',
-  'tinymce-legacyoutput', 'tinymce-link', 'tinymce-lists', 'tinymce-media',
-  'tinymce-nonbreaking', 'tinymce-noneditable', 'tinymce-pagebreak', 'tinymce-paste',
-  'tinymce-preview', 'tinymce-print', 'tinymce-save', 'tinymce-searchreplace',
-  'tinymce-spellchecker', 'tinymce-tabfocus', 'tinymce-table', 'tinymce-template',
-  'tinymce-textcolor', 'tinymce-textpattern', 'tinymce-visualblocks', 'tinymce-visualchars',
+  'tinymce-modern-theme',
+  'tinymce-advlist',
+  'tinymce-anchor',
+  'tinymce-autolink',
+  'tinymce-autoresize',
+  'tinymce-autosave',
+  'tinymce-bbcode',
+  'tinymce-charmap',
+  'tinymce-code',
+  'tinymce-colorpicker',
+  'tinymce-contextmenu',
+  'tinymce-directionality',
+  'tinymce-emoticons',
+  'tinymce-fullpage',
+  'tinymce-fullscreen',
+  'tinymce-hr',
+  'tinymce-image',
+  'tinymce-importcss',
+  'tinymce-insertdatetime',
+  'tinymce-layer',
+  'tinymce-legacyoutput',
+  'tinymce-link',
+  'tinymce-lists',
+  'tinymce-media',
+  'tinymce-nonbreaking',
+  'tinymce-noneditable',
+  'tinymce-pagebreak',
+  'tinymce-paste',
+  'tinymce-preview',
+  'tinymce-print',
+  'tinymce-save',
+  'tinymce-searchreplace',
+  'tinymce-spellchecker',
+  'tinymce-tabfocus',
+  'tinymce-table',
+  'tinymce-template',
+  'tinymce-textcolor',
+  'tinymce-textpattern',
+  'tinymce-visualblocks',
+  'tinymce-visualchars',
   'tinymce-wordcount'
-], function($, _,
-            Base, RelatedItems, Modal, tinymce,
-            AutoTOC, ResultTemplate, SelectionTemplate,
-            utils, LinkModal, _t) {
+], function($, _, Base, RelatedItems, Modal, tinymce, AutoTOC, ResultTemplate, SelectionTemplate, utils, LinkModal, _t) {
   'use strict';
 
   var TinyMCE = Base.extend({


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T15:25:49+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/b35714bb085af8638aff6c138017a712c4ed236e

let travis build this branch.

Files changed:
M .travis.yml

diff --git a/.travis.yml b/.travis.yml
index 25c3b51..579cad8 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -40,4 +40,4 @@ matrix:
     - env: BROWSERS="SL_Android"
 branches:
   only:
-    - master
+    - patternslib-merge


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-23T17:40:22+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/8c4ae24208e1e5114cb5d9e4fa4377a44ba802f9

Configure path for pat-parser

Files changed:
M mockup/js/config.js

diff --git a/mockup/js/config.js b/mockup/js/config.js
index 110a38c..2d2deb3 100644
--- a/mockup/js/config.js
+++ b/mockup/js/config.js
@@ -118,6 +118,7 @@
       "pat-compat": "bower_components/patternslib/src/core/compat",
       "pat-jquery-ext": "bower_components/patternslib/src/core/jquery-ext",
       "pat-logger": "bower_components/patternslib/src/core/logger",
+      "pat-parser": "bower_components/patternslib/src/core/parser",
       "pat-registry": "bower_components/patternslib/src/core/registry",
       "pat-utils": "bower_components/patternslib/src/core/utils",
       "logging": "bower_components/logging/src/logging"


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T10:23:07+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/2fe96827dfffa4d2d2cce51d595abb916012bd65

Expose the new testrunner which runs a webserver.

Files changed:
M mockup/Makefile

diff --git a/mockup/Makefile b/mockup/Makefile
index a27bbdb..89e2e1d 100644
--- a/mockup/Makefile
+++ b/mockup/Makefile
@@ -87,6 +87,9 @@ test-once:
 test-dev:
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test_dev $(DEBUG) $(VERBOSE) --pattern=$(pattern)
 
+test-serve:
+	NODE_PATH=$(NODE_PATH) $(GRUNT) test_serve $(DEBUG) $(VERBOSE) --pattern=$(pattern)
+
 test-ci:
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test_ci $(DEBUG) $(VERBOSE)
 


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T10:23:55+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/a564196129cded34a7b435a69e86490c094da84e

bugfix. The init method was called with wrong par signature

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/tests/pattern-tinymce-test.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index d768967..ff95e76 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -353,7 +353,7 @@ define([
       self.dom = self.tiny.dom;
       self.linkType = self.options.initialLinkType;
       self.linkTypes = {};
-      self.modal = registry.patterns.modal.init(self.$el, null, null, {
+      self.modal = registry.patterns.modal.init(self.$el, {
         html: self.generateModalHtml(),
         content: null,
         buttons: '.btn'
@@ -417,8 +417,7 @@ define([
     },
     getLinkUrl: function() {
       // get the url, only get one uid
-      var self = this;
-      return self.linkTypes[self.linkType].toUrl();
+      return this.linkTypes[this.linkType].toUrl();
     },
     getValue: function() {
       return this.linkTypes[this.linkType].value();
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index e346d52..35d7eca 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -12,11 +12,10 @@ define([
   $.fx.off = true;
 
   var createTinymce = function(options) {
-    if (options === undefined) {
-      options = {};
-    }
-    var $el = $('<textarea class="pat-tinymce"></textarea>').appendTo('body');
-    return registry.patterns.tinymce.init($el, null, null, options);
+    return registry.patterns.tinymce.init(
+      $('<textarea class="pat-tinymce"></textarea>').appendTo('body'),
+        options || {}
+      );
   };
 
   describe('TinyMCE', function() {
@@ -187,7 +186,6 @@ define([
       expect(pattern.getScaleFromUrl('foobar/somescale/image_large')).to.equal('large');
     });
 
-
     it('test add link', function() {
       var pattern = createTinymce({
         prependToUrl: 'resolveuid/',


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T11:03:13+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/d8a7d52ac04b4f498a51e81166f9d4f1b6d8e421

Fix linting errors and use this parameter when there's no scope confusion.

Files changed:
M mockup/patterns/tinymce/js/links.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index ff95e76..42af3cb 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -18,6 +18,7 @@ define([
     defaults: {
       linkModal: null // required
     },
+
     init: function() {
       this.linkModal = this.options.linkModal;
       this.tinypattern = this.options.tinypattern;
@@ -25,18 +26,23 @@ define([
       this.dom = this.tiny.dom;
       this.$input = this.$el.find('input');
     },
+
     value: function() {
       return this.$input.val();
     },
+
     toUrl: function() {
       return this.value();
     },
+
     load: function(element) {
       this.$input.attr('value', this.tiny.dom.getAttrib(element, 'data-val'));
     },
+
     set: function(val) {
       this.$input.attr('value', val);
     },
+
     attributes: function() {
       return {
         'data-val': this.value()
@@ -46,23 +52,24 @@ define([
 
   var InternalLink = LinkType.extend({
     init: function() {
-      var self = this;
-      LinkType.prototype.init.call(self);
-      self.$input.addClass('pat-relateditems');
-      self.createRelatedItems();
+      LinkType.prototype.init.call(this);
+      this.$input.addClass('pat-relateditems');
+      this.createRelatedItems();
     },
+
     createRelatedItems: function() {
       this.relatedItems = new RelatedItems(this.$input,
         this.linkModal.options.relatedItems);
     },
+
     value: function() {
-      var self = this;
-      var val = self.$input.select2('data');
+      var val = this.$input.select2('data');
       if (val && typeof(val) === 'object') {
         val = val[0];
       }
       return val;
     },
+
     toUrl: function() {
       var value = this.value();
       if (value) {
@@ -76,6 +83,7 @@ define([
         this.set(val);
       }
     },
+
     set: function(val) {
       // kill it and then reinitialize since select2 will load data then
       this.$input.select2('destroy');
@@ -84,6 +92,7 @@ define([
       this.$input.attr('value', val);
       this.createRelatedItems();
     },
+
     attributes: function() {
       var val = this.value();
       if (val) {
@@ -93,7 +102,6 @@ define([
       }
       return {};
     }
-
   });
 
   var UploadLink = InternalLink.extend({
@@ -106,7 +114,6 @@ define([
       }
       return paths.join('/');
     }
-
   });
 
   var ImageLink = InternalLink.extend({
@@ -130,13 +137,16 @@ define([
       }
       return null;
     },
+
     load: function(element) {
       LinkType.prototype.load.apply(this, [element]);
       this.linkModal.$subject.val(this.tiny.dom.getAttrib(element, 'data-subject'));
     },
+
     getSubject: function() {
       return this.linkModal.$subject.val();
     },
+
     attributes: function() {
       var attribs = LinkType.prototype.attributes.call(this);
       attribs['data-subject'] = this.getSubject();
@@ -146,21 +156,21 @@ define([
 
   var AnchorLink = LinkType.extend({
     init: function() {
-      var self = this;
-      LinkType.prototype.init.call(self);
-      self.$select = self.$el.find('select');
-      self.anchorNodes = [];
-      self.anchorData = [];
-      self.populate();
+      LinkType.prototype.init.call(this);
+      this.$select = this.$el.find('select');
+      this.anchorNodes = [];
+      this.anchorData = [];
+      this.populate();
     },
+
     value: function() {
-      var self = this;
-      var val = self.$select.select2('data');
+      var val = this.$select.select2('data');
       if (val && typeof(val) === 'object') {
-        val = val['id'];
+        val = val.id;
       }
       return val;
     },
+
     populate: function() {
       var self = this;
       self.$select.find('option').remove();
@@ -217,23 +227,23 @@ define([
         self.$select.append('<option>No anchors found..</option>');
       }
     },
+
     getIndex: function(name) {
-      var self = this;
-      for (var i = 0; i < self.anchorData.length; i = i + 1) {
-        var data = self.anchorData[i];
+      for (var i = 0; i < this.anchorData.length; i = i + 1) {
+        var data = this.anchorData[i];
         if (data.name === name) {
           return i;
         }
       }
       return 0;
     },
+
     toUrl: function() {
-      var self = this;
-      var val = self.value();
+      var val = this.value();
       if (val) {
         var index = parseInt(val, 10);
-        var node = self.anchorNodes[index];
-        var data = self.anchorData[index];
+        var node = this.anchorNodes[index];
+        var data = this.anchorData[index];
         if (data.newAnchor) {
           node.innerHTML = '<a name="' + data.name + '" class="mce-item-anchor"></a>' + node.innerHTML;
         }
@@ -241,6 +251,7 @@ define([
       }
       return null;
     },
+
     set: function(val) {
       var anchor = this.getIndex(val);
       this.$select.select2('data', '' + anchor);
@@ -362,29 +373,31 @@ define([
         self.modalShown.apply(self, [e]);
       });
     },
+
     generateModalHtml: function() {
-      var self = this;
-      return self.template({
-        text: self.options.text,
-        insertHeading: self.options.text.insertHeading,
-        linkTypes: self.options.linkTypes,
-        externalText: self.options.text.external,
-        emailText: self.options.text.email,
-        subjectText: self.options.text.subject,
-        targetList: self.options.targetList,
-        titleText: self.options.text.title,
-        externalImageText: self.options.text.externalImage,
-        altText: self.options.text.alt,
-        imageAlignText: self.options.text.imageAlign,
-        scaleText: self.options.text.scale,
-        scales: self.options.scales,
-        cancelBtn: self.options.text.cancelBtn,
-        insertBtn: self.options.text.insertBtn
+      return this.template({
+        text: this.options.text,
+        insertHeading: this.options.text.insertHeading,
+        linkTypes: this.options.linkTypes,
+        externalText: this.options.text.external,
+        emailText: this.options.text.email,
+        subjectText: this.options.text.subject,
+        targetList: this.options.targetList,
+        titleText: this.options.text.title,
+        externalImageText: this.options.text.externalImage,
+        altText: this.options.text.alt,
+        imageAlignText: this.options.text.imageAlign,
+        scaleText: this.options.text.scale,
+        scales: this.options.scales,
+        cancelBtn: this.options.text.cancelBtn,
+        insertBtn: this.options.text.insertBtn
       });
     },
+
     isImageMode: function() {
       return ['image', 'uploadImage', 'externalImage'].indexOf(this.linkType) !== -1;
     },
+
     initElements: function() {
       var self = this;
       self.$target = $('select[name="target"]', self.modal.$modal);
@@ -415,13 +428,16 @@ define([
         });
       });
     },
+
     getLinkUrl: function() {
       // get the url, only get one uid
       return this.linkTypes[this.linkType].toUrl();
     },
+
     getValue: function() {
       return this.linkTypes[this.linkType].value();
     },
+
     updateAnchor: function(href) {
       var self = this;
       var target = self.$target.val();
@@ -434,12 +450,13 @@ define([
       }, self.linkTypes[self.linkType].attributes());
       self.tiny.execCommand('mceInsertLink', false, data);
     },
+
     focusElement: function(elm) {
-      var self = this;
-      self.tiny.focus();
-      self.tiny.selection.select(elm);
-      self.tiny.nodeChanged();
+      this.tiny.focus();
+      this.tiny.selection.select(elm);
+      this.tiny.nodeChanged();
     },
+
     updateImage: function(src) {
       var self = this;
       var data = $.extend(true, {}, {
@@ -477,12 +494,11 @@ define([
         self.focusElement(self.imgElm);
       }
     },
+
     modalShown: function(e) {
       var self = this;
-
       self.initElements();
       self.initData();
-
       // upload init
       self.$upload = $('.uploadify-me', self.modal.$modal);
       self.options.upload.relatedItems = self.options.relatedItems;
@@ -516,18 +532,19 @@ define([
         self.hide();
       });
     },
+
     show: function() {
       this.modal.show();
     },
+
     hide: function() {
       this.modal.hide();
     },
+
     initData: function() {
       var self = this;
-
       self.selection = self.tiny.selection;
       self.tiny.focus();
-
       var selectedElm = self.imgElm = self.selection.getNode();
       self.anchorElm = self.dom.getParent(selectedElm, 'a[href]');
 
@@ -583,41 +600,42 @@ define([
         }
       }
     },
+
     guessImageLink: function(src) {
-      var self = this;
-      if (src.indexOf(self.options.prependToScalePart) !== -1) {
-        self.linkType = 'image';
-        self.$scale.val(self.tinypattern.getScaleFromUrl(src));
-        self.linkTypes.image.set(self.tinypattern.stripGeneratedUrl(src));
+      if (src.indexOf(this.options.prependToScalePart) !== -1) {
+        this.linkType = 'image';
+        this.$scale.val(this.tinypattern.getScaleFromUrl(src));
+        this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));
       } else {
-        self.linkType = 'externalImage';
-        self.linkTypes.externalImage.set(src);
+        this.linkType = 'externalImage';
+        this.linkTypes.externalImage.set(src);
       }
     },
+
     guessAnchorLink: function(href) {
-      var self = this;
-      if (self.options.prependToUrl &&
-          href.indexOf(self.options.prependToUrl) !== -1) {
+      if (this.options.prependToUrl &&
+          href.indexOf(this.options.prependToUrl) !== -1) {
         // XXX if using default configuration, it gets more difficult
         // here to detect internal urls so this might need to change...
-        self.linkType = 'internal';
-        self.linkTypes.internal.set(self.tinypattern.stripGeneratedUrl(href));
+        this.linkType = 'internal';
+        this.linkTypes.internal.set(this.tinypattern.stripGeneratedUrl(href));
       } else if (href.indexOf('mailto:') !== -1) {
-        self.linkType = 'email';
+        this.linkType = 'email';
         var email = href.substring('mailto:'.length, href.length);
         var split = email.split('?subject=');
-        self.linkTypes.email.set(split[0]);
+        this.linkTypes.email.set(split[0]);
         if (split.length > 1) {
-          self.$subject.val(decodeURIComponent(split[1]));
+          this.$subject.val(decodeURIComponent(split[1]));
         }
       } else if (href[0] === '#') {
-        self.linkType = 'anchor';
-        self.linkTypes.anchor.setRaw(href.substring(1));
+        this.linkType = 'anchor';
+        this.linkTypes.anchor.setRaw(href.substring(1));
       } else {
-        self.linkType = 'external';
-        self.linkTypes.external.setRaw(href);
+        this.linkType = 'external';
+        this.linkTypes.external.setRaw(href);
       }
     },
+
     setSelectElement: function($el, val) {
       $el.find('option:selected').prop('selected', false);
       if (val) {
@@ -625,17 +643,16 @@ define([
         $el.find('option[value="' + val + '"]').prop('selected', true);
       }
     },
+
     reinitialize: function() {
       /*
        * This will probably be called before show is run.
        * It will overwrite the base html template given to
        * be able to privde default values for the overlay
        */
-      var self = this;
-      self.modal.options.html = self.generateModalHtml();
+      this.modal.options.html = this.generateModalHtml();
     }
   });
-
   return LinkModal;
 
 });


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T11:23:39+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/497e4348d9c4340aef3fab845be439dbbaad2406

Configure path for the mockup-parser.

Files changed:
M mockup/js/config.js

diff --git a/mockup/js/config.js b/mockup/js/config.js
index 2d2deb3..45c67e5 100644
--- a/mockup/js/config.js
+++ b/mockup/js/config.js
@@ -60,6 +60,7 @@
       'mockup-docs-view': 'bower_components/mockup-core/js/docs/view',
       'mockup-fakeserver': 'tests/fakeserver',
       'mockup-i18n': 'js/i18n',
+      'mockup-parser': 'bower_components/mockup-core/js/parser',
       'mockup-patterns-accessibility': 'patterns/accessibility/pattern',
       'mockup-patterns-autotoc': 'patterns/autotoc/pattern',
       'mockup-patterns-backdrop': 'patterns/backdrop/pattern',


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T15:42:51+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/4f4326280b149fd769b78563edcc1d7e36ff7a87

Use the patternslib-merge branch of mockup-core

Files changed:
M mockup/bower.json

diff --git a/mockup/bower.json b/mockup/bower.json
index b924566..be18752 100644
--- a/mockup/bower.json
+++ b/mockup/bower.json
@@ -15,7 +15,7 @@
     "jquery.cookie": "1.4.1",
     "lodash": "2.4.1",
     "logging": "",
-    "mockup-core": "master",
+    "mockup-core": "#patternslib-merge",
     "moment": "2.8.3",
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-24T16:22:23+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/a023dc5addbb0c4019f34eb8619b163600b3cf19

Merge branch 'master' into patternslib-merge

Conflicts:
	mockup/bower.json
	mockup/patterns/eventedit/pattern.js
	mockup/tests/pattern-tinymce-test.js

Files changed:
M .gitignore
M .travis.yml
M mockup/Makefile
M mockup/js/i18n-wrapper.js
M mockup/js/i18n.js
M mockup/package.json
M mockup/patterns/eventedit/pattern.js
M mockup/patterns/relateditems/pattern.js
M mockup/patterns/structure/js/views/properties.js
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/upload.js
M mockup/patterns/structure/pattern.js
M mockup/patterns/structure/templates/tablerow.xml
M mockup/patterns/upload/less/pattern.upload.less
M mockup/patterns/upload/pattern.js
M mockup/tests/i18n-test.js
M mockup/tests/pattern-passwordstrength-test.js
M mockup/tests/pattern-tinymce-test.js
M mockup/tests/utils-test.js

diff --git a/.gitignore b/.gitignore
index 3489b3d..7e4e7ad 100644
--- a/.gitignore
+++ b/.gitignore
@@ -9,3 +9,5 @@ nixenv/
 node_modules/
 sauce_connect.log*
 test-results.xml
+stamp-bower
+stamp-npm
diff --git a/.travis.yml b/.travis.yml
index 579cad8..d2fae57 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -8,8 +8,9 @@ env:
     - secure: lLMAD0VmG1/SpfuJKwOT9xn4lV1pUq71WszWjpF8TgxJfIgRBYLp9QkRTXQ6pfTwXTL22YSsc8N5yhJsALKV2V57Og6Pfta6jQqRIzJU6maIZBBLqW6LQThuazF6tmEcTpty1j1LdFf3tuNVchsbsii2eRhXNdIPXLjBliMJkuo=
     - SAUCE_CONNECT_READY_FILE=/tmp/sauce-connect-ready
   matrix:
-    - BROWSERS="SL_Chrome,SL_Firefox"
-    - BROWSERS="SL_IE_8,SL_IE_9"
+    - BROWSERS="SL_Chrome"
+    - BROWSERS="SL_Firefox"
+    - BROWSERS="SL_IE_9"
     - BROWSERS="SL_IE_10,SL_IE_11"
     - BROWSERS="SL_Opera,SL_Safari"
     - BROWSERS="SL_IPhone"
@@ -28,11 +29,11 @@ script:
   - if [ "$TRAVIS_BRANCH" == "master" ]; then make test-ci; fi
   - make docs
 after_success:
-  - if [ "$BROWSERS" == "SL_Chrome,SL_Firefox" ]; then ./node_modules/.bin/lcov-result-merger "coverage/**/lcov.info" | ./node_modules/.bin/coveralls; fi
+  - if [ "$BROWSERS" == "SL_Chrome" ]; then ./node_modules/.bin/lcov-result-merger "coverage/**/lcov.info" | ./node_modules/.bin/coveralls; fi
 matrix:
   fast_finish: true
   allow_failures:
-    - env: BROWSERS="SL_IE_8,SL_IE_9"
+    - env: BROWSERS="SL_IE_9"
     - env: BROWSERS="SL_IE_10,SL_IE_11"
     - env: BROWSERS="SL_Opera,SL_Safari"
     - env: BROWSERS="SL_IPhone"
diff --git a/mockup/Makefile b/mockup/Makefile
index 89e2e1d..cfd344a 100644
--- a/mockup/Makefile
+++ b/mockup/Makefile
@@ -21,7 +21,15 @@ endif
 
 all: test-once bundles docs
 
-bundles: bundle-widgets bundle-structure bundle-plone
+stamp-npm: package.json
+	npm install
+	touch stamp-npm
+
+stamp-bower: stamp-npm bower.json
+	$(BOWER) install
+	touch stamp-bower
+
+bundles: stamp-bower bundle-widgets bundle-structure bundle-plone
 	# ----------------------------------------------------------------------- #
 	# cp build/widgets* path/to/plone.app.widgets/plone/app/widgets/static
 	# cp build/structure* path/to/wildcard.foldercontents/wildcard/foldercontents/static
@@ -81,7 +89,7 @@ watch:
 test:
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test $(DEBUG) $(VERBOSE) --pattern=$(pattern)
 
-test-once:
+test-once: stamp-bower
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test_once $(DEBUG) $(VERBOSE) --pattern=$(pattern)
 
 test-dev:
@@ -98,6 +106,8 @@ clean:
 	rm -rf build
 	rm -rf node_modules
 	rm -rf bower_components
+	rm -f stamp-npm stamp-bower
+	rm -rf node_modules src/bower_components
 
 clean-deep: clean
 	if test -f $(BOWER); then $(BOWER) cache clean; fi
diff --git a/mockup/js/i18n-wrapper.js b/mockup/js/i18n-wrapper.js
index 72c174b..f9cb00b 100644
--- a/mockup/js/i18n-wrapper.js
+++ b/mockup/js/i18n-wrapper.js
@@ -2,9 +2,9 @@
  *
  * This is a singleton.
  * Configuration is done on the body tag data-i18ncatalogurl attribute
- *     <body data-i18ncatalogurl="/jsi18n">
+ *     <body data-i18ncatalogurl="/plonejsi18n">
  *
- *  Or, it'll default to "/jsi18n"
+ *  Or, it'll default to "/plonejsi18n"
  */
 
 define([
diff --git a/mockup/js/i18n.js b/mockup/js/i18n.js
index 6161195..cd9cc36 100644
--- a/mockup/js/i18n.js
+++ b/mockup/js/i18n.js
@@ -2,9 +2,9 @@
  *
  * This is a singleton.
  * Configuration is done on the body tag data-i18ncatalogurl attribute
- *     <body data-i18ncatalogurl="/jsi18n">
+ *     <body data-i18ncatalogurl="/plonejsi18n">
  *
- *  Or, it'll default to "/jsi18n"
+ *  Or, it'll default to "/plonejsi18n"
  */
 
 /* global portal_url:true */
@@ -20,7 +20,7 @@ define([
 
     self.baseUrl = $('body').attr('data-i18ncatalogurl');
     if (!self.baseUrl) {
-      self.baseUrl = '/jsi18n';
+      self.baseUrl = '/plonejsi18n';
     }
     self.currentLanguage = $('html').attr('lang') || 'en';
     self.storage = null;
diff --git a/mockup/package.json b/mockup/package.json
index 2e0fbfb..b06ba85 100644
--- a/mockup/package.json
+++ b/mockup/package.json
@@ -19,6 +19,7 @@
     "grunt-sed": "~0.1.1",
     "karma": "~0.12.9",
     "karma-chrome-launcher": "~0.1.3",
+    "karma-firefox-launcher": "~0.1.4",
     "karma-coverage": "~0.2.1",
     "karma-junit-reporter": "~0.2.2",
     "karma-mocha": "~0.1.3",
diff --git a/mockup/patterns/eventedit/pattern.js b/mockup/patterns/eventedit/pattern.js
index 79e7039..01dedef 100644
--- a/mockup/patterns/eventedit/pattern.js
+++ b/mockup/patterns/eventedit/pattern.js
@@ -196,10 +196,10 @@ define([
         );
 
         start_date = self.getDateTime(jq_start);
-        new_end_date = new Date(start_date);
+        new_end_date = new Date(start_date.getTime());
         new_end_date.setMinutes(start_date.getMinutes() + self.getTimeDelta());
 
-        if (new_end_date) {
+        if (new_end_date && !isNaN(new_end_date.getTime())) {
           $('.pattern-pickadate-date', jq_end).pickadate('picker').set('select', new_end_date);
           $('.pattern-pickadate-time', jq_end).pickatime('picker').set('select', new_end_date);
         }
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index bccd3ad..2bb697f 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -28,7 +28,7 @@
  *    separator(string): Select2 option. String which separates multiple items. (',')
  *    tokenSeparators(array): Select2 option, refer to select2 documentation.
  *    ([",", " "])
- *    width(string): Specify a width for the widget. ('300px')
+ *    width(string): Specify a width for the widget. ('100%')
  *
  * Documentation:
  *    The Related Items pattern is based on Select2 so many of the same options will work here as well.
@@ -88,7 +88,7 @@ define([
     currentPath: null,
     defaults: {
       vocabularyUrl: null, // must be set to work
-      width: '300px',
+      width: '100%',
       multiple: true,
       tokenSeparators: [',', ' '],
       separator: ',',
diff --git a/mockup/patterns/structure/js/views/properties.js b/mockup/patterns/structure/js/views/properties.js
index 4090dd8..1ed4de9 100644
--- a/mockup/patterns/structure/js/views/properties.js
+++ b/mockup/patterns/structure/js/views/properties.js
@@ -77,10 +77,10 @@ define([
     },
     applyButtonClicked: function(e) {
       var data = {
-        effectiveDate: this.effectivePickADate.$date.attr('value'),
-        effectiveTime: this.effectivePickADate.$time.attr('value'),
-        expirationDate: this.expirationPickADate.$date.attr('value'),
-        expirationTime: this.expirationPickADate.$time.attr('value'),
+        effectiveDate: this.effectivePickADate.$date.val(),
+        effectiveTime: this.effectivePickADate.$time.val(),
+        expirationDate: this.expirationPickADate.$date.val(),
+        expirationTime: this.expirationPickADate.$time.val(),
         copyright: this.$copyright.val(),
         contributors: JSON.stringify(this.$contributors.select2('data')),
         creators: JSON.stringify(this.$creators.select2('data'))
diff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js
index e598087..7d4f476 100644
--- a/mockup/patterns/structure/js/views/table.js
+++ b/mockup/patterns/structure/js/views/table.js
@@ -101,7 +101,7 @@ define([
       }
 
       self.moment = new Moment(self.$el, {
-        selector: '.ModificationDate,.EffectiveDate,.CreationDate',
+        selector: '.ModificationDate,.EffectiveDate,.CreationDate,.ExpirationDate',
         format: 'relative'
       });
       self.addReordering();
diff --git a/mockup/patterns/structure/js/views/upload.js b/mockup/patterns/structure/js/views/upload.js
index 68cb636..5f03a70 100644
--- a/mockup/patterns/structure/js/views/upload.js
+++ b/mockup/patterns/structure/js/views/upload.js
@@ -54,7 +54,7 @@ define([
         } else {
           relatedItems.$el.select2('data', [self.currentPathData.object]);
         }
-        self.upload.currentPath = currentPath;
+        self.upload.setPath(currentPath);
       }
     }
 
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index ee1d4d9..a203a27 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -66,6 +66,7 @@ define([
       availableColumns: {
         'ModificationDate': _t('Last modified'),
         'EffectiveDate': _t('Published'),
+        'ExpirationDate': _t('Expiration'),
         'CreationDate': _t('Created'),
         'review_state': _t('Review state'),
         'Subject': _t('Tags'),
diff --git a/mockup/patterns/structure/templates/tablerow.xml b/mockup/patterns/structure/templates/tablerow.xml
index 8583088..4714066 100644
--- a/mockup/patterns/structure/templates/tablerow.xml
+++ b/mockup/patterns/structure/templates/tablerow.xml
@@ -1,14 +1,6 @@
 <td class="selection"><input type="checkbox" <% if(selected){ %> checked="checked" <% } %>/></td>
 <td class="title">
-  <a href="<%- getURL %>">
-    <% if(['File', 'Image'].indexOf(attributes.Type) !== -1){ %>
-      <span class="glyphicon glyphicon-file"></span>
-    <% } %>
-    <% if(attributes.is_folderish) { %>
-      <span class="glyphicon glyphicon-folder-open"></span>
-    <% } %>
-    <%- Title %>
-  </a>
+  <a href="<%- getURL %>" class="state-<%- review_state %> contenttype-<%- Type.toLowerCase() %>">
 </td>
 <% _.each(activeColumns, function(column){ %>
   <% if(_.has(availableColumns, column)) { %>
diff --git a/mockup/patterns/upload/less/pattern.upload.less b/mockup/patterns/upload/less/pattern.upload.less
index 7184337..24767cb 100644
--- a/mockup/patterns/upload/less/pattern.upload.less
+++ b/mockup/patterns/upload/less/pattern.upload.less
@@ -26,9 +26,9 @@
             padding-top: 10px;
         }
         .previews{
-            margin-top: 2em;
-            .item{ padding: 5px 0; }
-            .title{ padding-left: 0; }
+            margin-top: 4em;
+            .item{ padding: 5px 0; clear: both;}
+            .title{ padding-left: 3px; }
             .info img {
                 width: 32px;
                 height: 32px;
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index b587f99..4fa932c 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -392,6 +392,12 @@ define([
       return Math.round(mb / 1024) + ' GB';
     },
 
+    setPath: function(path){
+      var self = this;
+      self.currentPath = path;
+      self.options.url = self.dropzone.options.url = self.getUrl();
+    },
+
     setupRelatedItems: function($input) {
       var self = this;
       var options = self.options.relatedItems;
@@ -401,12 +407,11 @@ define([
       var ri = new RelatedItems($input, options);
       ri.$el.on('change', function() {
         var result = $(this).select2('data');
+        var path = null;
         if (result.length > 0){
-          self.currentPath = result[0].path;
-        } else {
-          self.currentPath = null;
+          path = result[0].path;
         }
-        self.options.url = self.dropzone.options.url = self.getUrl();
+        self.setPath(path);
       });
       return ri;
     }
diff --git a/mockup/tests/i18n-test.js b/mockup/tests/i18n-test.js
index 31f1677..d2b9259 100644
--- a/mockup/tests/i18n-test.js
+++ b/mockup/tests/i18n-test.js
@@ -20,7 +20,7 @@ define([
       it('baseUrl', function() {
         i18n.configure({ baseUrl: '/something' });
         expect(i18n.baseUrl).to.be('/something');
-        i18n.configure({ baseUrl: '/jsi18n' });
+        i18n.configure({ baseUrl: '/plonejsi18n' });
       });
     });
 
@@ -29,7 +29,7 @@ define([
       it('correct params', function() {
         i18n.configure({ baseUrl: '/foobar' });
         expect(i18n.getUrl('foobar', 'es')).to.be('/foobar?domain=foobar&language=es');
-        i18n.configure({ baseUrl: '/jsi18n' });
+        i18n.configure({ baseUrl: '/plonejsi18n' });
       });
     });
 
@@ -64,14 +64,14 @@ define([
         server.autoRespond = true;
         var clock = sinon.useFakeTimers();
 
-        server.respondWith('GET', /jsi18n/, function (xhr) {
+        server.respondWith('GET', /plonejsi18n/, function (xhr) {
           xhr.respond(200, { 'Content-Type': 'application/json' }, JSON.stringify({
             foo: 'bar',
           }));
         });
         i18n.configure({
           currentLanguage: 'en',
-          baseUrl: '/jsi18n'
+          baseUrl: '/plonejsi18n'
         });
         i18n.loadCatalog('foobar');
         clock.tick(500);
diff --git a/mockup/tests/pattern-passwordstrength-test.js b/mockup/tests/pattern-passwordstrength-test.js
index de540bd..f2c55fc 100644
--- a/mockup/tests/pattern-passwordstrength-test.js
+++ b/mockup/tests/pattern-passwordstrength-test.js
@@ -48,11 +48,8 @@ define([
       window.zxcvbn = fakeZxcvbn;
       registry.scan($el);
 
-      expect($el.html()).to.equal(
-          '<input type="password" class="pat-passwordstrength">' +
-          '<div class="pat-passwordstrength-meter level-0">' +
-          '<div></div>' + '<div></div>' + '<div></div>' + '<div></div>' +
-          '</div>');
+      expect($el.find('.pat-passwordstrength').size()).to.be.equal(1);
+      expect($el.find('.pat-passwordstrength-meter').hasClass('level-0')).to.be.equal(true);
     });
 
     it('tries to load zxcvbn once if not available', function() {
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index 35d7eca..905321b 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -240,6 +240,7 @@ define([
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();
+      pattern.tiny.setContent('<p>blah</p>');
       pattern.addLinkClicked();
       pattern.linkModal.linkTypes.internal.$input.select2('data', {
         UID: 'foobar',
@@ -247,7 +248,6 @@ define([
         Title: 'Foobar',
         path: '/foobar'
       });
-      pattern.tiny.setContent('<p>blah</p>');
       pattern.linkModal.focusElement(pattern.tiny.dom.getRoot().getElementsByTagName('p')[0]);
       pattern.linkModal.$button.trigger('click');
       expect(pattern.tiny.getContent()).to.contain('data-val="foobar"');
diff --git a/mockup/tests/utils-test.js b/mockup/tests/utils-test.js
index 3123450..3f72935 100644
--- a/mockup/tests/utils-test.js
+++ b/mockup/tests/utils-test.js
@@ -183,7 +183,7 @@ define([
           zIndex: function() { return 999; }
         });
         loading.show();
-        expect(loading.$el[0].style.zIndex).to.equal('999');
+        expect(loading.$el[0].style.zIndex + '').to.equal('999');
       });
       it('works with backdrop', function() {
         var initCalled = false;


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-25T13:45:12+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/d30436f881bcc4f738078de0a07f940c0cbe232b

Add karma-chai as NPM dependency.

Files changed:
M mockup/package.json

diff --git a/mockup/package.json b/mockup/package.json
index b06ba85..9da756d 100644
--- a/mockup/package.json
+++ b/mockup/package.json
@@ -5,6 +5,7 @@
   "homepage": "http://plone.github.io/mockup",
   "devDependencies": {
     "bower": "~1.3.2",
+    "chai": "^1.10.0",
     "coveralls": "~2.10.0",
     "extend": "~1.2.1",
     "grunt": "~0.4.4",
@@ -18,9 +19,10 @@
     "grunt-karma": "~0.8.2",
     "grunt-sed": "~0.1.1",
     "karma": "~0.12.9",
+    "karma-chai": "^0.1.0",
     "karma-chrome-launcher": "~0.1.3",
-    "karma-firefox-launcher": "~0.1.4",
     "karma-coverage": "~0.2.1",
+    "karma-firefox-launcher": "~0.1.4",
     "karma-junit-reporter": "~0.2.2",
     "karma-mocha": "~0.1.3",
     "karma-phantomjs-launcher": "~0.1.4",


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-25T14:01:35+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/319d20325dd8a7d2b0c42f2889962e4d784864f6

Set branches back to master in anticipation of merge.

Files changed:
M .travis.yml
M mockup/bower.json

diff --git a/.travis.yml b/.travis.yml
index d2fae57..f085097 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -41,4 +41,4 @@ matrix:
     - env: BROWSERS="SL_Android"
 branches:
   only:
-    - patternslib-merge
+    - master
diff --git a/mockup/bower.json b/mockup/bower.json
index be18752..b924566 100644
--- a/mockup/bower.json
+++ b/mockup/bower.json
@@ -15,7 +15,7 @@
     "jquery.cookie": "1.4.1",
     "lodash": "2.4.1",
     "logging": "",
-    "mockup-core": "#patternslib-merge",
+    "mockup-core": "master",
     "moment": "2.8.3",
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",


Repository: mockup
Branch: refs/heads/master
Date: 2015-01-26T10:30:38+01:00
Author: JC Brand (jcbrand) <jc@opkode.com>
Commit: https://github.com/plone/mockup/commit/a5339fb6e4594ba4c5aa97c713c5c2c7f14e9987

Merge pull request #460 from plone/patternslib-merge

Patternslib merge: Use Patternslib's scanner and registry

Files changed:
M mockup/LEARN.md
M mockup/Makefile
M mockup/bower.json
M mockup/js/config.js
M mockup/package.json
M mockup/patterns/accessibility/pattern.js
M mockup/patterns/autotoc/pattern.js
M mockup/patterns/backdrop/pattern.js
M mockup/patterns/cookietrigger/pattern.js
M mockup/patterns/eventedit/pattern.js
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/formautofocus/pattern.js
M mockup/patterns/formunloadalert/pattern.js
M mockup/patterns/inlinevalidation/pattern.js
M mockup/patterns/markspeciallinks/pattern.js
M mockup/patterns/modal/pattern.js
M mockup/patterns/moment/pattern.js
M mockup/patterns/passwordstrength/pattern.js
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/preventdoublesubmit/pattern.js
M mockup/patterns/querystring/pattern.js
M mockup/patterns/relateditems/pattern.js
M mockup/patterns/resourceregistry/pattern.js
M mockup/patterns/select2/pattern.js
M mockup/patterns/sortable/pattern.js
M mockup/patterns/structure/pattern.js
M mockup/patterns/tablesorter/pattern.js
M mockup/patterns/textareamimetypeselector/pattern.js
M mockup/patterns/texteditor/pattern.js
M mockup/patterns/thememapper/pattern.js
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/toggle/pattern.js
M mockup/patterns/tooltip/pattern.js
M mockup/patterns/tree/pattern.js
M mockup/patterns/upload/pattern.js
M mockup/tests/fakeserver.js
M mockup/tests/pattern-accessibility-test.js
M mockup/tests/pattern-autotoc-test.js
M mockup/tests/pattern-backdrop-test.js
M mockup/tests/pattern-cookietrigger-test.js
M mockup/tests/pattern-eventedit-test.js
M mockup/tests/pattern-filemanager-test.js
M mockup/tests/pattern-formautofocus-test.js
M mockup/tests/pattern-formunloadalert-test.js
M mockup/tests/pattern-inlinevalidation-test.js
M mockup/tests/pattern-markspeciallinks-test.js
M mockup/tests/pattern-modal-test.js
M mockup/tests/pattern-moment-test.js
M mockup/tests/pattern-passwordstrength-test.js
M mockup/tests/pattern-pickadate-test.js
M mockup/tests/pattern-preventdoublesubmit-test.js
M mockup/tests/pattern-relateditems-test.js
M mockup/tests/pattern-resourceregistry-test.js
M mockup/tests/pattern-select2-test.js
M mockup/tests/pattern-sortable-test.js
M mockup/tests/pattern-structure-test.js
M mockup/tests/pattern-tablesorter-test.js
M mockup/tests/pattern-textareamimetypeselector-test.js
M mockup/tests/pattern-tinymce-test.js
M mockup/tests/pattern-toggle-test.js
M mockup/tests/pattern-tooltip-test.js
M mockup/tests/pattern-tree-test.js
M mockup/tests/pattern-upload-test.js

diff --git a/mockup/LEARN.md b/mockup/LEARN.md
index 1e43654..1e33020 100644
--- a/mockup/LEARN.md
+++ b/mockup/LEARN.md
@@ -353,7 +353,7 @@ we create a file called *tests/pattern-helloworld-test.js* and put the following
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-helloworld'
 ], function (expect, $, registry, HelloWorld) {
   "use strict";
@@ -392,7 +392,7 @@ Let's first explain some of the dependencies:
 * **[expect](https://github.com/LearnBoost/expect.js)** -
   A minimalistic BDD assertion toolkit based on the should.js test framework.
    <code>expect(result).to.be.above(0).and.not.equal(7)</code>.
-* **mockup-registry** -
+* **pat-registry** -
   the *registry* is a collection of tools used for managing the patterns.
   It also keeps track of which patterns have been registered, hence its name.  
   In our example we use its **scan()** method,
@@ -584,7 +584,7 @@ We need to include require.js and our js/config.js and then we need to scan the
     &lt;script src="node_modules/requirejs/require.js"&gt;&lt;/script&gt;
     &lt;script src="js/config.js"&gt;&lt;/script&gt;
     &lt;script&gt;
-       require(['jquery', 'mockup-registry','mockup-patterns-helloworld'],
+       require(['jquery', 'pat-registry','mockup-patterns-helloworld'],
          function($, registry) {
            $(document).ready(function (){
              registry.scan($('body'));
@@ -663,7 +663,7 @@ Note, we need to map the jquery.foggy Pattern name to the path and we also need
     &lt;script src="node_modules/requirejs/require.js"&gt;&lt;/script&gt;
     &lt;script src="js/config.js"&gt;&lt;/script&gt;
     &lt;script&gt;
-       require(['jquery', 'mockup-registry','mockup-patterns-foggy'],
+       require(['jquery', 'pat-registry','mockup-patterns-foggy'],
          function($, registry) {
            $(document).ready(function (){
              registry.scan($('body'));
diff --git a/mockup/Makefile b/mockup/Makefile
index f5e173b..cfd344a 100644
--- a/mockup/Makefile
+++ b/mockup/Makefile
@@ -95,6 +95,9 @@ test-once: stamp-bower
 test-dev:
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test_dev $(DEBUG) $(VERBOSE) --pattern=$(pattern)
 
+test-serve:
+	NODE_PATH=$(NODE_PATH) $(GRUNT) test_serve $(DEBUG) $(VERBOSE) --pattern=$(pattern)
+
 test-ci:
 	NODE_PATH=$(NODE_PATH) $(GRUNT) test_ci $(DEBUG) $(VERBOSE)
 
diff --git a/mockup/bower.json b/mockup/bower.json
index 13a69e2..b924566 100644
--- a/mockup/bower.json
+++ b/mockup/bower.json
@@ -14,15 +14,21 @@
     "jquery-form": "3.46.0",
     "jquery.cookie": "1.4.1",
     "lodash": "2.4.1",
-    "mockup-core": "1.2.16",
+    "logging": "",
+    "mockup-core": "master",
     "moment": "2.8.3",
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",
     "select2": "3.5.1",
-    "tinymce-builded": "4.1.6"
+    "tinymce-builded": "4.1.6",
+    "patternslib": "master"
   },
   "devDependencies": {
     "expect": "0.3.1",
     "sinonjs": "1.10.2"
+  },
+  "resolutions": {
+    "jquery": "1.11.1",
+    "select2": "3.5.1"
   }
 }
diff --git a/mockup/js/config.js b/mockup/js/config.js
index f4224c2..45c67e5 100644
--- a/mockup/js/config.js
+++ b/mockup/js/config.js
@@ -60,6 +60,7 @@
       'mockup-docs-view': 'bower_components/mockup-core/js/docs/view',
       'mockup-fakeserver': 'tests/fakeserver',
       'mockup-i18n': 'js/i18n',
+      'mockup-parser': 'bower_components/mockup-core/js/parser',
       'mockup-patterns-accessibility': 'patterns/accessibility/pattern',
       'mockup-patterns-autotoc': 'patterns/autotoc/pattern',
       'mockup-patterns-backdrop': 'patterns/backdrop/pattern',
@@ -112,7 +113,16 @@
       'text': 'bower_components/requirejs-text/text',
       'tinymce': 'bower_components/tinymce-builded/js/tinymce/tinymce',
       'tinymce-modern-theme': 'bower_components/tinymce-builded/js/tinymce/themes/modern/theme',
-      'underscore': 'bower_components/lodash/dist/lodash.underscore'
+      'underscore': 'bower_components/lodash/dist/lodash.underscore',
+
+      // Patternslib
+      "pat-compat": "bower_components/patternslib/src/core/compat",
+      "pat-jquery-ext": "bower_components/patternslib/src/core/jquery-ext",
+      "pat-logger": "bower_components/patternslib/src/core/logger",
+      "pat-parser": "bower_components/patternslib/src/core/parser",
+      "pat-registry": "bower_components/patternslib/src/core/registry",
+      "pat-utils": "bower_components/patternslib/src/core/utils",
+      "logging": "bower_components/logging/src/logging"
     },
     shim: {
       'JSXTransformer': { exports: 'window.JSXTransformer' },
diff --git a/mockup/package.json b/mockup/package.json
index b06ba85..9da756d 100644
--- a/mockup/package.json
+++ b/mockup/package.json
@@ -5,6 +5,7 @@
   "homepage": "http://plone.github.io/mockup",
   "devDependencies": {
     "bower": "~1.3.2",
+    "chai": "^1.10.0",
     "coveralls": "~2.10.0",
     "extend": "~1.2.1",
     "grunt": "~0.4.4",
@@ -18,9 +19,10 @@
     "grunt-karma": "~0.8.2",
     "grunt-sed": "~0.1.1",
     "karma": "~0.12.9",
+    "karma-chai": "^0.1.0",
     "karma-chrome-launcher": "~0.1.3",
-    "karma-firefox-launcher": "~0.1.4",
     "karma-coverage": "~0.2.1",
+    "karma-firefox-launcher": "~0.1.4",
     "karma-junit-reporter": "~0.2.2",
     "karma-mocha": "~0.1.3",
     "karma-phantomjs-launcher": "~0.1.4",
diff --git a/mockup/patterns/accessibility/pattern.js b/mockup/patterns/accessibility/pattern.js
index aaafebd..5891e85 100644
--- a/mockup/patterns/accessibility/pattern.js
+++ b/mockup/patterns/accessibility/pattern.js
@@ -48,6 +48,7 @@ define([
 
   var Accessibility = Base.extend({
     name: 'accessibility',
+    trigger: '.pat-accessibility',
     defaults: {
       'smallbtn': null,
       'normalbtn': null,
diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js
index caada30..501fdd1 100644
--- a/mockup/patterns/autotoc/pattern.js
+++ b/mockup/patterns/autotoc/pattern.js
@@ -77,6 +77,7 @@ define([
 
   var AutoTOC = Base.extend({
     name: 'autotoc',
+    trigger: '.pat-autotoc',
     defaults: {
       section: 'section',
       levels: 'h1,h2,h3',
diff --git a/mockup/patterns/backdrop/pattern.js b/mockup/patterns/backdrop/pattern.js
index ce2baf8..ede1246 100644
--- a/mockup/patterns/backdrop/pattern.js
+++ b/mockup/patterns/backdrop/pattern.js
@@ -24,6 +24,7 @@ define([
 
   var Backdrop = Base.extend({
     name: 'backdrop',
+    trigger: '.pat-backdrop',
     defaults: {
       zIndex: null,
       opacity: 0.8,
@@ -64,20 +65,20 @@ define([
     show: function() {
       var self = this;
       if (!self.$el.hasClass(self.options.classActiveName)) {
-        self.trigger('show');
+        self.emit('show');
         self.$backdrop.css('opacity', '0').show();
         self.$el.addClass(self.options.classActiveName);
         self.$backdrop.animate({ opacity: self.options.opacity }, 500);
-        self.trigger('shown');
+        self.emit('shown');
       }
     },
     hide: function() {
       var self = this;
       if (self.$el.hasClass(self.options.classActiveName)) {
-        self.trigger('hide');
+        self.emit('hide');
         self.$backdrop.animate({ opacity: '0' }, 500).hide();
         self.$el.removeClass(self.options.classActiveName);
-        self.trigger('hidden');
+        self.emit('hidden');
       }
     }
   });
diff --git a/mockup/patterns/cookietrigger/pattern.js b/mockup/patterns/cookietrigger/pattern.js
index f13b7c8..20669f8 100644
--- a/mockup/patterns/cookietrigger/pattern.js
+++ b/mockup/patterns/cookietrigger/pattern.js
@@ -20,6 +20,7 @@ define([
 
   var CookieTrigger = Base.extend({
     name: 'cookietrigger',
+    trigger: '.pat-cookietrigger',
 
     isCookiesEnabled: function() {
       /* Test whether cookies are enabled by attempting to set a cookie
diff --git a/mockup/patterns/eventedit/pattern.js b/mockup/patterns/eventedit/pattern.js
index 43b7aa9..01dedef 100644
--- a/mockup/patterns/eventedit/pattern.js
+++ b/mockup/patterns/eventedit/pattern.js
@@ -78,35 +78,29 @@ define([
 
   var EventEdit = Base.extend({
     name: 'eventedit',
+    trigger: '.pat-eventedit',
     defaults: {
       errorClass: 'error'
     },
     init: function () {
       var self = this, $el = self.$el, jq_open_end, jq_end, jq_start;
+      var jq_whole_day, jq_time;
+      jq_whole_day = self.aOrB(
+        $('#formfield-form-widgets-IEventBasic-whole_day input', $el),
+        $('#archetypes-fieldname-wholeDay input#wholeDay', $el)
+      );
 
-      $(document).on('scan-completed.registry.mockup-core', function(event) {
-        // Wait for the registry scan to be finished, because we depend on DOM
-        // structures from pickadate, which are not ready yet.
-        var jq_whole_day, jq_time;
-
-        jq_whole_day = self.aOrB(
-          $('#formfield-form-widgets-IEventBasic-whole_day input', $el),
-          $('#archetypes-fieldname-wholeDay input#wholeDay', $el)
-        );
-
-        jq_time = self.aOrB(
-          $('#formfield-form-widgets-IEventBasic-start .pattern-pickadate-time-wrapper, #formfield-form-widgets-IEventBasic-end .pattern-pickadate-time-wrapper', $el),
-          $('#archetypes-fieldname-startDate .pattern-pickadate-time-wrapper, #archetypes-fieldname-endDate .pattern-pickadate-time-wrapper', $el)
-        );
-
-        if (jq_whole_day.length > 0 && jq_time.length > 0) {
-          jq_whole_day.bind('change', function (e) {
-            self.showHideWidget(jq_time, e.target.checked, true);
-          });
-          self.showHideWidget(jq_time, jq_whole_day.get(0).checked, false);
-        }
+      jq_time = self.aOrB(
+        $('#formfield-form-widgets-IEventBasic-start .pattern-pickadate-time-wrapper, #formfield-form-widgets-IEventBasic-end .pattern-pickadate-time-wrapper', $el),
+        $('#archetypes-fieldname-startDate .pattern-pickadate-time-wrapper, #archetypes-fieldname-endDate .pattern-pickadate-time-wrapper', $el)
+      );
 
-      });
+      if (jq_whole_day.length > 0 && jq_time.length > 0) {
+        jq_whole_day.bind('change', function (e) {
+          self.showHideWidget(jq_time, e.target.checked, true);
+        });
+        self.showHideWidget(jq_time, jq_whole_day.get(0).checked, false);
+      }
 
       // OPEN END INIT
       jq_open_end = self.aOrB(
@@ -130,15 +124,13 @@ define([
         $('#archetypes-fieldname-startDate', $el)
       );
       jq_start.each(function () {
-        $(this).on('focus', '.picker__input', function () { self.initDelta(); });
         $(this).on('change', '.picker__input', function () { self.updateEndDate(); });
       });
       jq_end.each(function () {
-        $(this).on('focus', '.picker__input', function () { self.initDelta(); });
         $(this).on('change', '.picker__input', function () { self.validateEndDate(); });
       });
-
     },
+
     aOrB: function (a, b) {
       /* Return element a or element b, depending on which is available.
        * Parameter a and b: CSS selectors.
@@ -152,6 +144,7 @@ define([
       }
       return $(ret);
     },
+
     getDateTime: function (datetimewidget) {
       var date, time, datetime;
       date = $('.pattern-pickadate-date-wrapper input[name="_submit"]', datetimewidget).prop('value');
@@ -172,7 +165,9 @@ define([
       );
       return datetime;
     },
-    initDelta: function () {
+
+    getTimeDelta: function () {
+        // Return time delta between the start and end dates in days
         var self = this, $el = self.$el, start_datetime, end_datetime;
         start_datetime = self.getDateTime(
           self.aOrB(
@@ -186,9 +181,9 @@ define([
             $('#archetypes-fieldname-endDate', $el)
           )
         );
-        // delta in days
-        self.startEndDelta = (end_datetime - start_datetime) / 1000 / 60;
+        return (end_datetime - start_datetime) / 1000 / 60;
     },
+
     updateEndDate: function () {
         var self = this, $el = self.$el, jq_start, jq_end, start_date, new_end_date;
         jq_start = self.aOrB(
@@ -202,13 +197,14 @@ define([
 
         start_date = self.getDateTime(jq_start);
         new_end_date = new Date(start_date.getTime());
-        new_end_date.setMinutes(start_date.getMinutes() + 90);
+        new_end_date.setMinutes(start_date.getMinutes() + self.getTimeDelta());
 
         if (new_end_date && !isNaN(new_end_date.getTime())) {
           $('.pattern-pickadate-date', jq_end).pickadate('picker').set('select', new_end_date);
           $('.pattern-pickadate-time', jq_end).pickatime('picker').set('select', new_end_date);
         }
     },
+
     validateEndDate: function () {
         var self = this, $el = self.$el, jq_start, jq_end, start_datetime, end_datetime;
         jq_start = self.aOrB(
@@ -219,16 +215,15 @@ define([
           $('#formfield-form-widgets-IEventBasic-end', $el),
           $('#archetypes-fieldname-endDate', $el)
         );
-
         start_datetime = self.getDateTime(jq_start);
         end_datetime = self.getDateTime(jq_end);
-
         if (end_datetime < start_datetime) {
             jq_end.addClass(self.options.errorClass);
         } else {
             jq_end.removeClass(self.options.errorClass);
         }
     },
+
     showHideWidget: function (widget, hide, fade) {
         var $widget = $(widget);
         if (hide === true) {
@@ -239,8 +234,6 @@ define([
             else { $widget.show(); }
         }
     }
-
   });
-
   return EventEdit;
 });
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 4d19d96..978d92e 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -59,6 +59,7 @@ define([
 
   var FileManager = Base.extend({
     name: 'filemanager',
+    trigger: '.pat-filemanager',
     template: _.template(AppTemplate),
     tabItemTemplate: _.template(
       '<li class="active" data-path="<%= path %>">' +
diff --git a/mockup/patterns/formautofocus/pattern.js b/mockup/patterns/formautofocus/pattern.js
index 8e41ec1..310a238 100644
--- a/mockup/patterns/formautofocus/pattern.js
+++ b/mockup/patterns/formautofocus/pattern.js
@@ -21,6 +21,7 @@ define([
 
   var FormAutoFocus = Base.extend({
     name: 'formautofocus',
+    trigger: '.pat-formautofocus',
     defaults: {
       condition: 'div.error',
       target: 'div.error :input:not(.formTabs):visible:first',
diff --git a/mockup/patterns/formunloadalert/pattern.js b/mockup/patterns/formunloadalert/pattern.js
index 12c66ba..11e7427 100644
--- a/mockup/patterns/formunloadalert/pattern.js
+++ b/mockup/patterns/formunloadalert/pattern.js
@@ -36,6 +36,7 @@ define([
 
   var FormUnloadAlert = Base.extend({
     name: 'formunloadalert',
+    trigger: '.pat-formunloadalert',
     _changed : false,       // Stores a listing of raised changes by their key
     _suppressed : false,     // whether or not warning should be suppressed
     defaults: {
diff --git a/mockup/patterns/inlinevalidation/pattern.js b/mockup/patterns/inlinevalidation/pattern.js
index 52ccbc8..182ba32 100644
--- a/mockup/patterns/inlinevalidation/pattern.js
+++ b/mockup/patterns/inlinevalidation/pattern.js
@@ -26,6 +26,7 @@ define([
 
   var InlineValidation = Base.extend({
     name: 'inlinevalidation',
+    trigger: '.pat-inlinevalidation',
 
     render_error: function ($field, errmsg) {
        var $errbox = $('div.fieldErrorBox', $field);
diff --git a/mockup/patterns/markspeciallinks/pattern.js b/mockup/patterns/markspeciallinks/pattern.js
index 73f8eff..25475e4 100644
--- a/mockup/patterns/markspeciallinks/pattern.js
+++ b/mockup/patterns/markspeciallinks/pattern.js
@@ -86,6 +86,7 @@ define([
 
   var MarkSpecialLinks = Base.extend({
     name: 'markspeciallinks',
+    trigger: '.pat-markspeciallinks',
     defaults: {
       external_links_open_new_window: false,
       mark_special_links: true
@@ -140,12 +141,11 @@ define([
                 res = protocols.exec(this.href);
                 if (res) {
                     var iconclass = 'glyphicon link-' + res[0];
-                    jQuery(this).before('<i class="' + iconclass + '"></i>');
+                    $(this).before('<i class="' + iconclass + '"></i>');
                 }
             }
         );
       }
-
     }
   });
   return MarkSpecialLinks;
diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index 5f1c3e1..d8cfce9 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -74,7 +74,7 @@ define([
   'underscore',
   'mockup-patterns-base',
   'mockup-patterns-backdrop',
-  'mockup-registry',
+  'pat-registry',
   'mockup-router',
   'mockup-utils',
   'jquery.form'
@@ -83,6 +83,7 @@ define([
 
   var Modal = Base.extend({
     name: 'modal',
+    trigger: '.pat-modal',
     createModal: null,
     $model: null,
     defaults: {
@@ -264,7 +265,7 @@ define([
             } else {
               console.log('error happened do something');
             }
-            self.trigger('formActionError', [xhr, textStatus, errorStatus]);
+            self.emit('formActionError', [xhr, textStatus, errorStatus]);
           },
           success: function(response, state, xhr, form) {
             self.loading.hide();
@@ -302,7 +303,7 @@ define([
                 self.reloadWindow();
               }
             }
-            self.trigger('formActionSuccess', [response, state, xhr, form]);
+            self.emit('formActionSuccess', [response, state, xhr, form]);
           }
         });
       },
@@ -341,7 +342,7 @@ define([
               console.log('error happened do something');
             }
             self.loading.hide();
-            self.trigger('linkActionError', [xhr, textStatus, errorStatus]);
+            self.emit('linkActionError', [xhr, textStatus, errorStatus]);
           },
           success: function(response, state, xhr) {
             self.redraw(response, patternOptions);
@@ -349,14 +350,14 @@ define([
               options.onSuccess(self, response, state, xhr);
             }
             self.loading.hide();
-            self.trigger('linkActionSuccess', [response, state, xhr]);
+            self.emit('linkActionSuccess', [response, state, xhr]);
           }
         });
       },
       render: function(options) {
         var self = this;
 
-        self.trigger('before-render');
+        self.emit('before-render');
 
         if (!self.$raw) {
           return;
@@ -436,7 +437,7 @@ define([
           $button.hide();
         });
 
-        self.trigger('before-events-setup');
+        self.emit('before-events-setup');
 
         // Wire up events
         $('.plone-modal-header > a.plone-modal-close, .plone-modal-footer > a.plone-modal-close', self.$modal)
@@ -479,7 +480,7 @@ define([
           .appendTo(self.$wrapperInner);
         self.$modal.data('pattern-' + self.name, self);
 
-        self.trigger('after-render');
+        self.emit('after-render');
       }
     },
     reloadWindow: function() {
@@ -602,12 +603,12 @@ define([
           self.show();
         });
       }
-
       self.initModal();
     },
+
     createAjaxModal: function() {
       var self = this;
-      self.trigger('before-ajax');
+      self.emit('before-ajax');
       self.loading.show();
       self.ajaxXHR = $.ajax({
         url: self.options.ajaxUrl,
@@ -616,26 +617,30 @@ define([
         self.ajaxXHR = undefined;
         self.loading.hide();
         self.$raw = $('<div />').append($(utils.parseBodyTag(response)));
-        self.trigger('after-ajax', self, textStatus, xhr);
+        self.emit('after-ajax', self, textStatus, xhr);
         self._show();
       });
     },
+
     createTargetModal: function() {
       var self = this;
       self.$raw = $(self.options.target).clone();
       self._show();
     },
+
     createBasicModal: function() {
       var self = this;
       self.$raw = $('<div/>').html(self.$el.clone());
       self._show();
     },
+
     createHtmlModal: function() {
       var self = this;
       var $el = $(self.options.html);
       self.$raw = $el;
       self._show();
     },
+
     initModal: function() {
       var self = this;
       if (self.options.ajaxUrl) {
@@ -780,9 +785,9 @@ define([
     },
     render: function(options) {
       var self = this;
-      self.trigger('render');
+      self.emit('render');
       self.options.render.apply(self, [options]);
-      self.trigger('rendered');
+      self.emit('rendered');
     },
     show: function() {
       var self = this;
@@ -791,7 +796,7 @@ define([
     _show: function() {
       var self = this;
       self.render.apply(self, [ self.options ]);
-      self.trigger('show');
+      self.emit('show');
       self.backdrop.show();
       self.$wrapper.show();
       self.loading.hide();
@@ -806,7 +811,7 @@ define([
       $(window.parent).on('resize.modal.patterns', function() {
         self.positionModal();
       });
-      self.trigger('shown');
+      self.emit('shown');
       $('body').addClass('plone-modal-open');
     },
     hide: function() {
@@ -814,7 +819,7 @@ define([
       if (self.ajaxXHR) {
         self.ajaxXHR.abort();
       }
-      self.trigger('hide');
+      self.emit('hide');
       if (self._suppressHide) {
         if (!confirm(self._suppressHide)) {
           return;
@@ -832,19 +837,19 @@ define([
         self.initModal();
       }
       $(window.parent).off('resize.modal.patterns');
-      self.trigger('hidden');
+      self.emit('hidden');
       $('body').removeClass('plone-modal-open');
     },
     redraw: function(response, options) {
       var self = this;
-      self.trigger('beforeDraw');
+      self.emit('beforeDraw');
       self.$modal.remove();
       self.$raw = $('<div />').append($(utils.parseBodyTag(response)));
       self.render.apply(self, [options || self.options]);
       self.$modal.addClass(self.options.templateOptions.classActiveName);
       self.positionModal();
       registry.scan(self.$modal);
-      self.trigger('afterDraw');
+      self.emit('afterDraw');
     }
   });
 
diff --git a/mockup/patterns/moment/pattern.js b/mockup/patterns/moment/pattern.js
index 25283ff..17c1867 100644
--- a/mockup/patterns/moment/pattern.js
+++ b/mockup/patterns/moment/pattern.js
@@ -89,6 +89,7 @@ define([
 
   var Moment = Base.extend({
     name: 'moment',
+    trigger: '.pat-moment',
     defaults: {
       // selector of elements to format dates for
       selector: null,
diff --git a/mockup/patterns/passwordstrength/pattern.js b/mockup/patterns/passwordstrength/pattern.js
index 25b93d7..cad33b4 100644
--- a/mockup/patterns/passwordstrength/pattern.js
+++ b/mockup/patterns/passwordstrength/pattern.js
@@ -56,6 +56,7 @@ define([
 
   var PasswordStrength = Base.extend({
     name: 'passwordstrength',
+    trigger: '.pat-passwordstrength',
     defaults: {
         zxcvbn: '//cdnjs.cloudflare.com/ajax/libs/zxcvbn/1.0/zxcvbn.js'
     },
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index c756e88..2324b9e 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -95,6 +95,7 @@ define([
 
   var PickADate = Base.extend({
     name: 'pickadate',
+    trigger: '.pat-pickadate',
     defaults: {
       separator: ' ',
       date: {
@@ -301,7 +302,7 @@ define([
 
       self.$el.attr('value', value);
 
-      self.trigger('updated');
+      self.emit('updated');
     }
   });
 
diff --git a/mockup/patterns/preventdoublesubmit/pattern.js b/mockup/patterns/preventdoublesubmit/pattern.js
index fb80ef0..167ad7b 100644
--- a/mockup/patterns/preventdoublesubmit/pattern.js
+++ b/mockup/patterns/preventdoublesubmit/pattern.js
@@ -29,6 +29,7 @@ define([
 
   var PreventDoubleSubmit = Base.extend({
     name: 'preventdoublesubmit',
+    trigger: '.pat-preventdoublesubmit',
     defaults: {
       message : _t('You already clicked the submit button. ' +
                 'Do you really want to submit this form again?'),
diff --git a/mockup/patterns/querystring/pattern.js b/mockup/patterns/querystring/pattern.js
index 852f036..c3d141c 100644
--- a/mockup/patterns/querystring/pattern.js
+++ b/mockup/patterns/querystring/pattern.js
@@ -128,7 +128,7 @@ define([
           self.removeValue();
           self.createOperator(e.val);
           self.createClear();
-          self.trigger('index-changed');
+          self.emit('index-changed');
         });
 
       if (index !== undefined) {
@@ -137,7 +137,7 @@ define([
         self.createClear();
       }
 
-      self.trigger('create-criteria');
+      self.emit('create-criteria');
     },
     createOperator: function(index, operator, value) {
       var self = this;
@@ -167,7 +167,7 @@ define([
         .on('change', function(e) {
           self.createValue(index);
           self.createClear();
-          self.trigger('operator-changed');
+          self.emit('operator-changed');
         });
 
       if (operator === undefined) {
@@ -177,7 +177,7 @@ define([
       self.$operator.select2('val', operator);
       self.createValue(index, value);
 
-      self.trigger('create-operator');
+      self.emit('create-operator');
     },
     createValue: function(index, value) {
       var self = this,
@@ -194,7 +194,7 @@ define([
                 .val(value)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'DateWidget') {
@@ -206,7 +206,7 @@ define([
                   date: { format: 'dd/mm/yyyy' }
                 })
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'DateRangeWidget') {
@@ -234,7 +234,7 @@ define([
                           date: { format: 'dd/mm/yyyy' }
                         });
         $wrapper.find('.picker__input').change(function() {
-          self.trigger('value-changed');
+          self.emit('value-changed');
         });
         self.$value = [startdt, enddt];
 
@@ -244,7 +244,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'ReferenceWidget') {
@@ -252,7 +252,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'RelativePathWidget') {
@@ -261,7 +261,7 @@ define([
                 .appendTo($wrapper)
                 .val(value)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
 
       } else if (widget === 'MultipleSelectionWidget') {
@@ -269,7 +269,7 @@ define([
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
-                  self.trigger('value-changed');
+                  self.emit('value-changed');
                 });
         if (self.indexes[index]) {
           $.each(self.indexes[index].values, function(value, options) {
@@ -286,7 +286,7 @@ define([
         self.$value.select2('val', value);
       }
 
-      self.trigger('create-value');
+      self.emit('create-value');
 
     },
     createClear: function() {
@@ -298,7 +298,7 @@ define([
     },
     remove: function() {
       var self = this;
-      self.trigger('remove');
+      self.emit('remove');
       self.$remove.remove();
       self.$index.parent().remove();
       self.removeOperator();
@@ -308,21 +308,21 @@ define([
     },
     removeClear: function() {
       var self = this;
-      self.trigger('remove-clear');
+      self.emit('remove-clear');
       if (self.$clear) {
         self.$clear.remove();
       }
     },
     removeOperator: function() {
       var self = this;
-      self.trigger('remove-operator');
+      self.emit('remove-operator');
       if (self.$operator) {
         self.$operator.parent().remove();
       }
     },
     removeValue: function() {
       var self = this;
-      self.trigger('remove-value');
+      self.emit('remove-value');
       if (self.$value) {
         if ($.isArray(self.$value)) { // date ranges have 2 values
           self.$value[0].parents('.querystring-criteria-value').remove();
@@ -417,6 +417,7 @@ define([
 
   var QueryString = Base.extend({
     name: 'querystring',
+    trigger: '.pat-querystring',
     defaults: {
       indexes: [],
       classWrapperName: 'querystring-wrapper',
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 4b3a8ab..2bb697f 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -83,6 +83,7 @@ define([
 
   var RelatedItems = Base.extend({
     name: 'relateditems',
+    trigger: '.pat-relateditems',
     browsing: false,
     currentPath: null,
     defaults: {
@@ -181,7 +182,7 @@ define([
     },
     browseTo: function(path) {
       var self = this;
-      self.trigger('before-browse');
+      self.emit('before-browse');
       self.currentPath = path;
       if (path === '/' && self.options.mode === 'search') {
         self.deactivateBrowsing();
@@ -190,7 +191,7 @@ define([
       }
       self.$el.select2('close');
       self.$el.select2('open');
-      self.trigger('after-browse');
+      self.emit('after-browse');
     },
     setBreadCrumbs: function() {
       var self = this;
@@ -286,16 +287,16 @@ define([
     },
     selectItem: function(item) {
       var self = this;
-      self.trigger('selecting');
+      self.emit('selecting');
       var data = self.$el.select2('data');
       data.push(item);
       self.$el.select2('data', data);
       item.selected = true;
-      self.trigger('selected');
+      self.emit('selected');
     },
     deselectItem: function(item) {
       var self = this;
-      self.trigger('deselecting');
+      self.emit('deselecting');
       var data = self.$el.select2('data');
       _.each(data, function(obj, i) {
         if (obj.UID === item.UID) {
@@ -304,7 +305,7 @@ define([
       });
       self.$el.select2('data', data);
       item.selected = false;
-      self.trigger('deselected');
+      self.emit('deselected');
     },
     isSelectable: function(item) {
       var self = this;
diff --git a/mockup/patterns/resourceregistry/pattern.js b/mockup/patterns/resourceregistry/pattern.js
index 89bdc62..863a068 100644
--- a/mockup/patterns/resourceregistry/pattern.js
+++ b/mockup/patterns/resourceregistry/pattern.js
@@ -213,6 +213,7 @@ define([
 
   var ResourceRegistry = Base.extend({
     name: 'resourceregistry',
+    trigger: '.pat-resourceregistry',
     defaults: {
       bundles: {},
       resources: {},
diff --git a/mockup/patterns/select2/pattern.js b/mockup/patterns/select2/pattern.js
index 6b25e26..c012d66 100644
--- a/mockup/patterns/select2/pattern.js
+++ b/mockup/patterns/select2/pattern.js
@@ -71,6 +71,7 @@ define([
 
   var Select2 = Base.extend({
     name: 'select2',
+    trigger: '.pat-select2',
     defaults: {
       separator: ','
     },
diff --git a/mockup/patterns/sortable/pattern.js b/mockup/patterns/sortable/pattern.js
index e2a0a73..7c7487d 100644
--- a/mockup/patterns/sortable/pattern.js
+++ b/mockup/patterns/sortable/pattern.js
@@ -54,6 +54,7 @@ define([
 
   var SortablePattern = Base.extend({
     name: 'sortable',
+    trigger: '.pat-sortable',
     defaults: {
       selector: 'li',
       dragClass: 'item-dragging',
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index 9f80fe5..a203a27 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -43,6 +43,7 @@ define([
 
   var Structure = Base.extend({
     name: 'structure',
+    trigger: '.pat-structure',
     defaults: {
       vocabularyUrl: null,
       tagsVocabularyUrl: null,
diff --git a/mockup/patterns/tablesorter/pattern.js b/mockup/patterns/tablesorter/pattern.js
index 4e3df09..4176567 100644
--- a/mockup/patterns/tablesorter/pattern.js
+++ b/mockup/patterns/tablesorter/pattern.js
@@ -79,6 +79,7 @@ define([
 
   var TableSorter = Base.extend({
     name: 'tablesorter',
+    trigger: '.pat-tablesorter',
     defaults: {},
     sortabledataclass: function (cell) {
       var re, matches;
diff --git a/mockup/patterns/textareamimetypeselector/pattern.js b/mockup/patterns/textareamimetypeselector/pattern.js
index 5a0c84c..9be19b1 100644
--- a/mockup/patterns/textareamimetypeselector/pattern.js
+++ b/mockup/patterns/textareamimetypeselector/pattern.js
@@ -59,13 +59,14 @@
 define([
   'jquery',
   'mockup-patterns-base',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tinymce'
 ], function ($, Base, registry, tinymce) {
   'use strict';
 
   var TextareaMimetypeSelector = Base.extend({
     name: 'textareamimetypeselector',
+    trigger: '.pat-textareamimetypeselector',
     textarea: undefined,
     currentWidget: undefined,
     defaults: {
diff --git a/mockup/patterns/texteditor/pattern.js b/mockup/patterns/texteditor/pattern.js
index 7f03733..6c173b9 100644
--- a/mockup/patterns/texteditor/pattern.js
+++ b/mockup/patterns/texteditor/pattern.js
@@ -68,6 +68,7 @@ define([
 
   var AcePattern = Base.extend({
     name: 'texteditor',
+    trigger: '.pat-texteditor',
     defaults: {
       theme: null,
       mode: 'text',
diff --git a/mockup/patterns/thememapper/pattern.js b/mockup/patterns/thememapper/pattern.js
index be9acee..6dfe6f0 100644
--- a/mockup/patterns/thememapper/pattern.js
+++ b/mockup/patterns/thememapper/pattern.js
@@ -420,6 +420,7 @@ define([
 
   var ThemeMapper = Base.extend({
     name: 'thememapper',
+    trigger: '.pat-thememapper',
     defaults: {
       filemanagerConfig: {},
       mockupUrl: null,
diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index 1bf69dd..42af3cb 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -1,6 +1,7 @@
 define([
   'jquery',
   'underscore',
+  'pat-registry',
   'mockup-patterns-base',
   'mockup-patterns-relateditems',
   'mockup-patterns-modal',
@@ -8,15 +9,16 @@ define([
   'mockup-patterns-upload',
   'text!mockup-patterns-tinymce-url/templates/link.xml',
   'text!mockup-patterns-tinymce-url/templates/image.xml'
-], function($, _, Base, RelatedItems, Modal, tinymce, Upload,
-            LinkTemplate, ImageTemplate) {
+], function($, _, registry, Base, RelatedItems, Modal, tinymce, Upload, LinkTemplate, ImageTemplate) {
   'use strict';
 
   var LinkType = Base.extend({
     name: 'linktype',
+    trigger: '.pat-linktype',
     defaults: {
       linkModal: null // required
     },
+
     init: function() {
       this.linkModal = this.options.linkModal;
       this.tinypattern = this.options.tinypattern;
@@ -24,18 +26,23 @@ define([
       this.dom = this.tiny.dom;
       this.$input = this.$el.find('input');
     },
+
     value: function() {
       return this.$input.val();
     },
+
     toUrl: function() {
       return this.value();
     },
+
     load: function(element) {
       this.$input.attr('value', this.tiny.dom.getAttrib(element, 'data-val'));
     },
+
     set: function(val) {
       this.$input.attr('value', val);
     },
+
     attributes: function() {
       return {
         'data-val': this.value()
@@ -45,23 +52,24 @@ define([
 
   var InternalLink = LinkType.extend({
     init: function() {
-      var self = this;
-      LinkType.prototype.init.call(self);
-      self.$input.addClass('pat-relateditems');
-      self.createRelatedItems();
+      LinkType.prototype.init.call(this);
+      this.$input.addClass('pat-relateditems');
+      this.createRelatedItems();
     },
+
     createRelatedItems: function() {
       this.relatedItems = new RelatedItems(this.$input,
         this.linkModal.options.relatedItems);
     },
+
     value: function() {
-      var self = this;
-      var val = self.$input.select2('data');
+      var val = this.$input.select2('data');
       if (val && typeof(val) === 'object') {
         val = val[0];
       }
       return val;
     },
+
     toUrl: function() {
       var value = this.value();
       if (value) {
@@ -75,6 +83,7 @@ define([
         this.set(val);
       }
     },
+
     set: function(val) {
       // kill it and then reinitialize since select2 will load data then
       this.$input.select2('destroy');
@@ -83,6 +92,7 @@ define([
       this.$input.attr('value', val);
       this.createRelatedItems();
     },
+
     attributes: function() {
       var val = this.value();
       if (val) {
@@ -92,7 +102,6 @@ define([
       }
       return {};
     }
-
   });
 
   var UploadLink = InternalLink.extend({
@@ -105,7 +114,6 @@ define([
       }
       return paths.join('/');
     }
-
   });
 
   var ImageLink = InternalLink.extend({
@@ -129,13 +137,16 @@ define([
       }
       return null;
     },
+
     load: function(element) {
       LinkType.prototype.load.apply(this, [element]);
       this.linkModal.$subject.val(this.tiny.dom.getAttrib(element, 'data-subject'));
     },
+
     getSubject: function() {
       return this.linkModal.$subject.val();
     },
+
     attributes: function() {
       var attribs = LinkType.prototype.attributes.call(this);
       attribs['data-subject'] = this.getSubject();
@@ -145,21 +156,21 @@ define([
 
   var AnchorLink = LinkType.extend({
     init: function() {
-      var self = this;
-      LinkType.prototype.init.call(self);
-      self.$select = self.$el.find('select');
-      self.anchorNodes = [];
-      self.anchorData = [];
-      self.populate();
+      LinkType.prototype.init.call(this);
+      this.$select = this.$el.find('select');
+      this.anchorNodes = [];
+      this.anchorData = [];
+      this.populate();
     },
+
     value: function() {
-      var self = this;
-      var val = self.$select.select2('data');
+      var val = this.$select.select2('data');
       if (val && typeof(val) === 'object') {
-        val = val['id'];
+        val = val.id;
       }
       return val;
     },
+
     populate: function() {
       var self = this;
       self.$select.find('option').remove();
@@ -216,23 +227,23 @@ define([
         self.$select.append('<option>No anchors found..</option>');
       }
     },
+
     getIndex: function(name) {
-      var self = this;
-      for (var i = 0; i < self.anchorData.length; i = i + 1) {
-        var data = self.anchorData[i];
+      for (var i = 0; i < this.anchorData.length; i = i + 1) {
+        var data = this.anchorData[i];
         if (data.name === name) {
           return i;
         }
       }
       return 0;
     },
+
     toUrl: function() {
-      var self = this;
-      var val = self.value();
+      var val = this.value();
       if (val) {
         var index = parseInt(val, 10);
-        var node = self.anchorNodes[index];
-        var data = self.anchorData[index];
+        var node = this.anchorNodes[index];
+        var data = this.anchorData[index];
         if (data.newAnchor) {
           node.innerHTML = '<a name="' + data.name + '" class="mce-item-anchor"></a>' + node.innerHTML;
         }
@@ -240,6 +251,7 @@ define([
       }
       return null;
     },
+
     set: function(val) {
       var anchor = this.getIndex(val);
       this.$select.select2('data', '' + anchor);
@@ -296,6 +308,7 @@ define([
 
   var LinkModal = Base.extend({
     name: 'linkmodal',
+    trigger: '.pat-linkmodal',
     defaults: {
       anchorSelector: 'h1,h2,h3',
       linkTypes: [
@@ -351,7 +364,7 @@ define([
       self.dom = self.tiny.dom;
       self.linkType = self.options.initialLinkType;
       self.linkTypes = {};
-      self.modal = new Modal(self.$el, {
+      self.modal = registry.patterns.modal.init(self.$el, {
         html: self.generateModalHtml(),
         content: null,
         buttons: '.btn'
@@ -360,29 +373,31 @@ define([
         self.modalShown.apply(self, [e]);
       });
     },
+
     generateModalHtml: function() {
-      var self = this;
-      return self.template({
-        text: self.options.text,
-        insertHeading: self.options.text.insertHeading,
-        linkTypes: self.options.linkTypes,
-        externalText: self.options.text.external,
-        emailText: self.options.text.email,
-        subjectText: self.options.text.subject,
-        targetList: self.options.targetList,
-        titleText: self.options.text.title,
-        externalImageText: self.options.text.externalImage,
-        altText: self.options.text.alt,
-        imageAlignText: self.options.text.imageAlign,
-        scaleText: self.options.text.scale,
-        scales: self.options.scales,
-        cancelBtn: self.options.text.cancelBtn,
-        insertBtn: self.options.text.insertBtn
+      return this.template({
+        text: this.options.text,
+        insertHeading: this.options.text.insertHeading,
+        linkTypes: this.options.linkTypes,
+        externalText: this.options.text.external,
+        emailText: this.options.text.email,
+        subjectText: this.options.text.subject,
+        targetList: this.options.targetList,
+        titleText: this.options.text.title,
+        externalImageText: this.options.text.externalImage,
+        altText: this.options.text.alt,
+        imageAlignText: this.options.text.imageAlign,
+        scaleText: this.options.text.scale,
+        scales: this.options.scales,
+        cancelBtn: this.options.text.cancelBtn,
+        insertBtn: this.options.text.insertBtn
       });
     },
+
     isImageMode: function() {
       return ['image', 'uploadImage', 'externalImage'].indexOf(this.linkType) !== -1;
     },
+
     initElements: function() {
       var self = this;
       self.$target = $('select[name="target"]', self.modal.$modal);
@@ -413,14 +428,16 @@ define([
         });
       });
     },
+
     getLinkUrl: function() {
       // get the url, only get one uid
-      var self = this;
-      return self.linkTypes[self.linkType].toUrl();
+      return this.linkTypes[this.linkType].toUrl();
     },
+
     getValue: function() {
       return this.linkTypes[this.linkType].value();
     },
+
     updateAnchor: function(href) {
       var self = this;
       var target = self.$target.val();
@@ -433,12 +450,13 @@ define([
       }, self.linkTypes[self.linkType].attributes());
       self.tiny.execCommand('mceInsertLink', false, data);
     },
+
     focusElement: function(elm) {
-      var self = this;
-      self.tiny.focus();
-      self.tiny.selection.select(elm);
-      self.tiny.nodeChanged();
+      this.tiny.focus();
+      this.tiny.selection.select(elm);
+      this.tiny.nodeChanged();
     },
+
     updateImage: function(src) {
       var self = this;
       var data = $.extend(true, {}, {
@@ -476,12 +494,11 @@ define([
         self.focusElement(self.imgElm);
       }
     },
+
     modalShown: function(e) {
       var self = this;
-
       self.initElements();
       self.initData();
-
       // upload init
       self.$upload = $('.uploadify-me', self.modal.$modal);
       self.options.upload.relatedItems = self.options.relatedItems;
@@ -515,18 +532,19 @@ define([
         self.hide();
       });
     },
+
     show: function() {
       this.modal.show();
     },
+
     hide: function() {
       this.modal.hide();
     },
+
     initData: function() {
       var self = this;
-
       self.selection = self.tiny.selection;
       self.tiny.focus();
-
       var selectedElm = self.imgElm = self.selection.getNode();
       self.anchorElm = self.dom.getParent(selectedElm, 'a[href]');
 
@@ -582,41 +600,42 @@ define([
         }
       }
     },
+
     guessImageLink: function(src) {
-      var self = this;
-      if (src.indexOf(self.options.prependToScalePart) !== -1) {
-        self.linkType = 'image';
-        self.$scale.val(self.tinypattern.getScaleFromUrl(src));
-        self.linkTypes.image.set(self.tinypattern.stripGeneratedUrl(src));
+      if (src.indexOf(this.options.prependToScalePart) !== -1) {
+        this.linkType = 'image';
+        this.$scale.val(this.tinypattern.getScaleFromUrl(src));
+        this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));
       } else {
-        self.linkType = 'externalImage';
-        self.linkTypes.externalImage.set(src);
+        this.linkType = 'externalImage';
+        this.linkTypes.externalImage.set(src);
       }
     },
+
     guessAnchorLink: function(href) {
-      var self = this;
-      if (self.options.prependToUrl &&
-          href.indexOf(self.options.prependToUrl) !== -1) {
+      if (this.options.prependToUrl &&
+          href.indexOf(this.options.prependToUrl) !== -1) {
         // XXX if using default configuration, it gets more difficult
         // here to detect internal urls so this might need to change...
-        self.linkType = 'internal';
-        self.linkTypes.internal.set(self.tinypattern.stripGeneratedUrl(href));
+        this.linkType = 'internal';
+        this.linkTypes.internal.set(this.tinypattern.stripGeneratedUrl(href));
       } else if (href.indexOf('mailto:') !== -1) {
-        self.linkType = 'email';
+        this.linkType = 'email';
         var email = href.substring('mailto:'.length, href.length);
         var split = email.split('?subject=');
-        self.linkTypes.email.set(split[0]);
+        this.linkTypes.email.set(split[0]);
         if (split.length > 1) {
-          self.$subject.val(decodeURIComponent(split[1]));
+          this.$subject.val(decodeURIComponent(split[1]));
         }
       } else if (href[0] === '#') {
-        self.linkType = 'anchor';
-        self.linkTypes.anchor.setRaw(href.substring(1));
+        this.linkType = 'anchor';
+        this.linkTypes.anchor.setRaw(href.substring(1));
       } else {
-        self.linkType = 'external';
-        self.linkTypes.external.setRaw(href);
+        this.linkType = 'external';
+        this.linkTypes.external.setRaw(href);
       }
     },
+
     setSelectElement: function($el, val) {
       $el.find('option:selected').prop('selected', false);
       if (val) {
@@ -624,17 +643,16 @@ define([
         $el.find('option[value="' + val + '"]').prop('selected', true);
       }
     },
+
     reinitialize: function() {
       /*
        * This will probably be called before show is run.
        * It will overwrite the base html template given to
        * be able to privde default values for the overlay
        */
-      var self = this;
-      self.modal.options.html = self.generateModalHtml();
+      this.modal.options.html = this.generateModalHtml();
     }
   });
-
   return LinkModal;
 
 });
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 74ac881..ae9f6d3 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -59,25 +59,53 @@ define([
   'mockup-utils',
   'mockup-patterns-tinymce-url/js/links',
   'translate',
-  'tinymce-modern-theme', 'tinymce-advlist', 'tinymce-anchor', 'tinymce-autolink',
-  'tinymce-autoresize', 'tinymce-autosave', 'tinymce-bbcode', 'tinymce-charmap',
-  'tinymce-code', 'tinymce-colorpicker', 'tinymce-contextmenu', 'tinymce-directionality',
-  'tinymce-emoticons', 'tinymce-fullpage', 'tinymce-fullscreen', 'tinymce-hr',
-  'tinymce-image', 'tinymce-importcss', 'tinymce-insertdatetime', 'tinymce-layer',
-  'tinymce-legacyoutput', 'tinymce-link', 'tinymce-lists', 'tinymce-media',
-  'tinymce-nonbreaking', 'tinymce-noneditable', 'tinymce-pagebreak', 'tinymce-paste',
-  'tinymce-preview', 'tinymce-print', 'tinymce-save', 'tinymce-searchreplace',
-  'tinymce-spellchecker', 'tinymce-tabfocus', 'tinymce-table', 'tinymce-template',
-  'tinymce-textcolor', 'tinymce-textpattern', 'tinymce-visualblocks', 'tinymce-visualchars',
+  'tinymce-modern-theme',
+  'tinymce-advlist',
+  'tinymce-anchor',
+  'tinymce-autolink',
+  'tinymce-autoresize',
+  'tinymce-autosave',
+  'tinymce-bbcode',
+  'tinymce-charmap',
+  'tinymce-code',
+  'tinymce-colorpicker',
+  'tinymce-contextmenu',
+  'tinymce-directionality',
+  'tinymce-emoticons',
+  'tinymce-fullpage',
+  'tinymce-fullscreen',
+  'tinymce-hr',
+  'tinymce-image',
+  'tinymce-importcss',
+  'tinymce-insertdatetime',
+  'tinymce-layer',
+  'tinymce-legacyoutput',
+  'tinymce-link',
+  'tinymce-lists',
+  'tinymce-media',
+  'tinymce-nonbreaking',
+  'tinymce-noneditable',
+  'tinymce-pagebreak',
+  'tinymce-paste',
+  'tinymce-preview',
+  'tinymce-print',
+  'tinymce-save',
+  'tinymce-searchreplace',
+  'tinymce-spellchecker',
+  'tinymce-tabfocus',
+  'tinymce-table',
+  'tinymce-template',
+  'tinymce-textcolor',
+  'tinymce-textpattern',
+  'tinymce-visualblocks',
+  'tinymce-visualchars',
   'tinymce-wordcount'
-], function($, _,
-            Base, RelatedItems, Modal, tinymce,
-            AutoTOC, ResultTemplate, SelectionTemplate,
-            utils, LinkModal, _t) {
+], function($, _, Base, RelatedItems, Modal, tinymce, AutoTOC, ResultTemplate, SelectionTemplate, utils, LinkModal, _t) {
   'use strict';
 
   var TinyMCE = Base.extend({
     name: 'tinymce',
+    trigger: '.pat-tinymce',
     defaults: {
       upload: {
         uploadMultiple: false,
diff --git a/mockup/patterns/toggle/pattern.js b/mockup/patterns/toggle/pattern.js
index 5664bd3..212ce4f 100644
--- a/mockup/patterns/toggle/pattern.js
+++ b/mockup/patterns/toggle/pattern.js
@@ -127,6 +127,7 @@ define([
 
   var Toggle = Base.extend({
     name: 'toggle',
+    trigger: '.pat-toggle',
     defaults: {
       attribute: 'class',
       event: 'click',
@@ -187,23 +188,23 @@ define([
     },
     remove: function() {
       var self = this;
-      self.trigger('remove-attr');
+      self.emit('remove-attr');
       if (self.options.attribute === 'class') {
         self.$target.removeClass(self.options.value);
       } else {
         self.$target.removeAttr(self.options.attribute);
       }
-      self.trigger('attr-removed');
+      self.emit('attr-removed');
     },
     add: function() {
       var self = this;
-      self.trigger('add-attr');
+      self.emit('add-attr');
       if (self.options.attribute === 'class') {
         self.$target.addClass(self.options.value);
       } else {
         self.$target.attr(self.options.attribute, self.options.value);
       }
-      self.trigger('added-attr');
+      self.emit('added-attr');
     }
   });
 
diff --git a/mockup/patterns/tooltip/pattern.js b/mockup/patterns/tooltip/pattern.js
index 66f1210..189fc42 100644
--- a/mockup/patterns/tooltip/pattern.js
+++ b/mockup/patterns/tooltip/pattern.js
@@ -62,6 +62,7 @@ define([
 
   var ToolTip = Base.extend({
     name: 'tooltip',
+    trigger: '.pat-tooltip',
     defaults: {
       attribute: 'class',
       enterEvent: 'mouseenter',
diff --git a/mockup/patterns/tree/pattern.js b/mockup/patterns/tree/pattern.js
index b061e27..cb310dd 100644
--- a/mockup/patterns/tree/pattern.js
+++ b/mockup/patterns/tree/pattern.js
@@ -61,6 +61,7 @@ define([
 
   var Tree = Base.extend({
     name: 'tree',
+    trigger: '.pat-tree',
     defaults: {
       dragAndDrop: false,
       autoOpen: false,
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index 87375fa..4fa932c 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -58,6 +58,7 @@ define([
 
   var UploadPattern = Base.extend({
     name: 'upload',
+    trigger: '.pat-upload',
     defaults: {
       showTitle: true,
       url: null, // XXX MUST provide url to submit to OR be in a form
diff --git a/mockup/tests/fakeserver.js b/mockup/tests/fakeserver.js
index 0cf55ec..f283eeb 100644
--- a/mockup/tests/fakeserver.js
+++ b/mockup/tests/fakeserver.js
@@ -657,7 +657,7 @@ define([
           'autotoc': 'patterns/autotoc/pattern',
           'mockup-patterns-base': 'bower_components/mockup-core/js/pattern',
           'jquery': 'bower_components/jquery/dist/jquery',
-          'mockup-registry': 'bower_components/mockup-core/js/registry'
+          "pat-registry": "bower_components/patternslib/src/core/registry",
         },
         include: ['autotoc']
       };
@@ -678,4 +678,4 @@ define([
   });
   return server;
 
-});
\ No newline at end of file
+});
diff --git a/mockup/tests/pattern-accessibility-test.js b/mockup/tests/pattern-accessibility-test.js
index 9ad242f..5249bf7 100644
--- a/mockup/tests/pattern-accessibility-test.js
+++ b/mockup/tests/pattern-accessibility-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-accessibility'
 ], function(expect, $, registry, Accessibility) {
   'use strict';
diff --git a/mockup/tests/pattern-autotoc-test.js b/mockup/tests/pattern-autotoc-test.js
index e11950b..b52b077 100644
--- a/mockup/tests/pattern-autotoc-test.js
+++ b/mockup/tests/pattern-autotoc-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-autotoc'
 ], function(expect, $, Registry, AutoTOC) {
   'use strict';
diff --git a/mockup/tests/pattern-backdrop-test.js b/mockup/tests/pattern-backdrop-test.js
index 1939052..24df487 100644
--- a/mockup/tests/pattern-backdrop-test.js
+++ b/mockup/tests/pattern-backdrop-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-backdrop'
 ], function(expect, $, registry, Backdrop) {
   'use strict';
diff --git a/mockup/tests/pattern-cookietrigger-test.js b/mockup/tests/pattern-cookietrigger-test.js
index 1d837cc..3c7d5eb 100644
--- a/mockup/tests/pattern-cookietrigger-test.js
+++ b/mockup/tests/pattern-cookietrigger-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-cookietrigger'
 ], function(expect, $, sinon, registry, Pattern) {
   'use strict';
@@ -26,9 +26,9 @@ define([
         '</div>';
 
       var $el = $(widget).appendTo('body').hide();
-      Pattern.extend({isCookiesEnabled: sinon.stub().returns(0)});
+      $.extend(true, Pattern.prototype, {isCookiesEnabled: sinon.stub().returns(0)});
       expect($el.is(':visible')).to.equal(false);
-      var pattern = registry.init($el, 'cookietrigger');
+      var pattern = registry.patterns.cookietrigger.init($el);
       expect($el.is(':visible')).to.equal(true);
     });
 
@@ -39,9 +39,9 @@ define([
         '</div>';
 
       var $el = $(widget).appendTo('body').hide();
-      Pattern.extend({isCookiesEnabled: sinon.stub().returns(1)});
+      $.extend(true, Pattern.prototype, {isCookiesEnabled: sinon.stub().returns(1)});
       expect($el.is(':visible')).to.equal(false);
-      var pattern = registry.init($el, 'cookietrigger');
+      var pattern = registry.patterns.cookietrigger.init($el);
       expect($el.is(':visible')).to.equal(false);
     });
   });
diff --git a/mockup/tests/pattern-eventedit-test.js b/mockup/tests/pattern-eventedit-test.js
index 5aaddf6..4e0c205 100644
--- a/mockup/tests/pattern-eventedit-test.js
+++ b/mockup/tests/pattern-eventedit-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-eventedit'
 ], function(expect, $, registry, EventEdit) {
   'use strict';
@@ -49,12 +49,11 @@ define([
       $(sel_whole_day + ' input', $el).trigger('change');
       expect($('.pattern-pickadate-time-wrapper', $el).is(':visible')).to.be.equal(true);
 
-
       // changing start time
       $(sel_start + ' .pattern-pickadate-time', $el).click();
       $(sel_start + ' .pattern-pickadate-time-wrapper li:contains("10:00 AM")', $el).click();
       expect($(sel_start + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('10:00');
-      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('11:30');
+      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('15:30');
 
       // wrong end time
       $(sel_end + ' .pattern-pickadate-time', $el).click();
@@ -68,7 +67,7 @@ define([
       $(sel_start + ' .pattern-pickadate-time', $el).click();
       $(sel_start + ' .pattern-pickadate-time-wrapper li:contains("10:00 AM")', $el).click();
       expect($(sel_start + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('10:00');
-      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('11:30');
+      expect($(sel_end + ' .pattern-pickadate-time-wrapper input[name="_submit"]', $el).prop('value')).to.be.equal('10:30');
     }
 
     it('Editing an Dexterity event', function() {
diff --git a/mockup/tests/pattern-filemanager-test.js b/mockup/tests/pattern-filemanager-test.js
index f40002f..1789b42 100644
--- a/mockup/tests/pattern-filemanager-test.js
+++ b/mockup/tests/pattern-filemanager-test.js
@@ -2,7 +2,7 @@ define([
   'sinon',
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-filemanager'
 ], function(sinon, expect, $, registry, Tree) {
   'use strict';
diff --git a/mockup/tests/pattern-formautofocus-test.js b/mockup/tests/pattern-formautofocus-test.js
index 9f8d3de..c835b2c 100644
--- a/mockup/tests/pattern-formautofocus-test.js
+++ b/mockup/tests/pattern-formautofocus-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-formautofocus'
 ], function(expect, $, registry, FormAutoFocus) {
   'use strict';
@@ -55,6 +55,7 @@ define([
       registry.scan($el);
       $el.remove();
     });
+
     it('when the condition is not met, focus on the first input', function(done) {
       var $el = $('' +
         '<div>' +
diff --git a/mockup/tests/pattern-formunloadalert-test.js b/mockup/tests/pattern-formunloadalert-test.js
index bc5717a..7915fb6 100644
--- a/mockup/tests/pattern-formunloadalert-test.js
+++ b/mockup/tests/pattern-formunloadalert-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-formunloadalert'
 ], function(expect, $, registry, FormUnloadAlert) {
   'use strict';
diff --git a/mockup/tests/pattern-inlinevalidation-test.js b/mockup/tests/pattern-inlinevalidation-test.js
index 8795c65..c4f425c 100644
--- a/mockup/tests/pattern-inlinevalidation-test.js
+++ b/mockup/tests/pattern-inlinevalidation-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-inlinevalidation'
 ], function(expect, $, sinon, registry, Pattern) {
   'use strict';
@@ -27,8 +27,8 @@ define([
         '         value="Welcome to Plone" type="text">' +
         '</div>';
       var $el = $(widget).appendTo('body');
-      Pattern.extend({validate_z3cform_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'z3c.form'});
+      $.extend(true, Pattern.prototype, {validate_z3cform_field: sinon.spy()});
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'z3c.form'});
       expect(pattern.validate_z3cform_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_z3cform_field.called).to.equal(true);
@@ -37,8 +37,8 @@ define([
     it('A formlib input is validated on the "blur" event', function() {
       var $el = $('<div class="pat-inlinevalidation" data-pat-inlinevalidation=\'{"type": "formlib"}\'> <input type="text"> </div>')
                 .appendTo('body');
-      Pattern.extend({validate_formlib_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'formlib'});
+      $.extend(true, Pattern.prototype, {validate_formlib_field: sinon.spy()});
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'formlib'});
       expect(pattern.validate_formlib_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_formlib_field.called).to.equal(true);
@@ -47,8 +47,8 @@ define([
     it('An archetypes input is validated on the "blur" event', function() {
       var $el = $('<div class="pat-inlinevalidation" data-pat-inlinevalidation=\'{"type": "archetypes"}\'> <input class="blurrable" type="text"> </div>')
                 .appendTo('body');
-      Pattern.extend({validate_archetypes_field: sinon.spy()});
-      var pattern = registry.init($el, 'inlinevalidation', {type: 'archetypes'});
+      $.extend(true, Pattern.prototype, {validate_archetypes_field: sinon.spy()});
+      var pattern = registry.patterns.inlinevalidation.init($el, null, {type: 'archetypes'});
       expect(pattern.validate_archetypes_field.called).to.equal(false);
       $el.children('input').blur();
       expect(pattern.validate_archetypes_field.called).to.equal(true);
diff --git a/mockup/tests/pattern-markspeciallinks-test.js b/mockup/tests/pattern-markspeciallinks-test.js
index e60e7b2..4fe355c 100644
--- a/mockup/tests/pattern-markspeciallinks-test.js
+++ b/mockup/tests/pattern-markspeciallinks-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-markspeciallinks'
 ], function(expect, $, registry, MarkSpecialLinks) {
   'use strict';
diff --git a/mockup/tests/pattern-modal-test.js b/mockup/tests/pattern-modal-test.js
index 21acaa4..5c06bef 100644
--- a/mockup/tests/pattern-modal-test.js
+++ b/mockup/tests/pattern-modal-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-modal'
 ], function(expect, $, sinon, registry, Modal) {
   'use strict';
diff --git a/mockup/tests/pattern-moment-test.js b/mockup/tests/pattern-moment-test.js
index f048895..8b49c60 100644
--- a/mockup/tests/pattern-moment-test.js
+++ b/mockup/tests/pattern-moment-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-moment'
 ], function(expect, $, registry, Moment) {
   'use strict';
diff --git a/mockup/tests/pattern-passwordstrength-test.js b/mockup/tests/pattern-passwordstrength-test.js
index 3af5bc3..f2c55fc 100644
--- a/mockup/tests/pattern-passwordstrength-test.js
+++ b/mockup/tests/pattern-passwordstrength-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-passwordstrength'
 ], function(expect, $, registry, PasswordStrength) {
   'use strict';
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index 10d4ce0..5a48d4e 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-pickadate',
   'mockup-patterns-select2'
 ], function(expect, $, sinon, registry, PickADate, Select2) {
@@ -423,7 +423,7 @@ define([
                                           ']}}'
               );
         self.$el.appendTo('body');
-        registry.scan($input);
+        registry.scan($input, ['pickadate']);
 
         // check if visible and data value are set to default
         expect($('.pattern-pickadate-timezone .select2-chosen').text()).to.equal('Enter timezone...');
@@ -439,7 +439,7 @@ define([
                                           ']}}'
               );
         self.$el.appendTo('body');
-        registry.scan($input);
+        registry.scan($input, ['pickadate']);
 
         var $time = $('.pattern-pickadate-timezone');
 
diff --git a/mockup/tests/pattern-preventdoublesubmit-test.js b/mockup/tests/pattern-preventdoublesubmit-test.js
index 65d4c1d..83e2b75 100644
--- a/mockup/tests/pattern-preventdoublesubmit-test.js
+++ b/mockup/tests/pattern-preventdoublesubmit-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-preventdoublesubmit'
 ], function(expect, $, registry, PreventDoubleSubmit) {
   'use strict';
diff --git a/mockup/tests/pattern-relateditems-test.js b/mockup/tests/pattern-relateditems-test.js
index b877685..08ddde7 100644
--- a/mockup/tests/pattern-relateditems-test.js
+++ b/mockup/tests/pattern-relateditems-test.js
@@ -3,7 +3,7 @@ define([
   'jquery',
   'underscore',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-relateditems'
 ], function(expect, $, _, sinon, registry, RelatedItems) {
   'use strict';
diff --git a/mockup/tests/pattern-resourceregistry-test.js b/mockup/tests/pattern-resourceregistry-test.js
index a05c403..a20dd6e 100644
--- a/mockup/tests/pattern-resourceregistry-test.js
+++ b/mockup/tests/pattern-resourceregistry-test.js
@@ -2,7 +2,7 @@ define([
   'sinon',
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-resourceregistry'
 ], function(sinon, expect, $, registry) {
   'use strict';
diff --git a/mockup/tests/pattern-select2-test.js b/mockup/tests/pattern-select2-test.js
index 17174a0..c49bdc9 100644
--- a/mockup/tests/pattern-select2-test.js
+++ b/mockup/tests/pattern-select2-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-select2'
 ], function(expect, $, sinon, registry, Select2) {
   'use strict';
diff --git a/mockup/tests/pattern-sortable-test.js b/mockup/tests/pattern-sortable-test.js
index 8949ea3..3acba00 100644
--- a/mockup/tests/pattern-sortable-test.js
+++ b/mockup/tests/pattern-sortable-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-sortable'
 ], function(expect, $, registry, Sortable) {
   'use strict';
diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js
index 120624c..1bbb6e9 100644
--- a/mockup/tests/pattern-structure-test.js
+++ b/mockup/tests/pattern-structure-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-structure',
   'sinon',
 ], function(expect, $, registry, Structure, sinon) {
diff --git a/mockup/tests/pattern-tablesorter-test.js b/mockup/tests/pattern-tablesorter-test.js
index cedbf27..827f071 100644
--- a/mockup/tests/pattern-tablesorter-test.js
+++ b/mockup/tests/pattern-tablesorter-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tablesorter'
 ], function(expect, $, registry, Tablesorter) {
   'use strict';
diff --git a/mockup/tests/pattern-textareamimetypeselector-test.js b/mockup/tests/pattern-textareamimetypeselector-test.js
index 413e18a..585da9c 100644
--- a/mockup/tests/pattern-textareamimetypeselector-test.js
+++ b/mockup/tests/pattern-textareamimetypeselector-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-textareamimetypeselector',
   'mockup-patterns-tinymce'
 ], function(expect, $, registry, textareamimetypeselector, tinymce) {
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index 0ec57c4..905321b 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -2,7 +2,7 @@ define([
   'expect',
   'jquery',
   'sinon',
-  'mockup-registry',
+  'pat-registry',
   'tinymce',
   'mockup-patterns-tinymce'
 ], function(expect, $, sinon, registry, tinymce, TinyMCE) {
@@ -12,12 +12,10 @@ define([
   $.fx.off = true;
 
   var createTinymce = function(options) {
-    if (options === undefined) {
-      options = {};
-    }
-    var $el = $('<textarea class="pat-tinymce"></textarea>').appendTo('body');
-
-    return new TinyMCE($el, options);
+    return registry.patterns.tinymce.init(
+      $('<textarea class="pat-tinymce"></textarea>').appendTo('body'),
+        options || {}
+      );
   };
 
   describe('TinyMCE', function() {
@@ -188,7 +186,6 @@ define([
       expect(pattern.getScaleFromUrl('foobar/somescale/image_large')).to.equal('large');
     });
 
-
     it('test add link', function() {
       var pattern = createTinymce({
         prependToUrl: 'resolveuid/',
@@ -197,7 +194,6 @@ define([
           ajaxvocabulary: '/data.json'
         }
       });
-
       pattern.addLinkClicked();
       pattern.linkModal.linkTypes.internal.$input.select2('data', {
         UID: 'foobar',
@@ -207,6 +203,7 @@ define([
       });
       expect(pattern.linkModal.getLinkUrl()).to.equal('resolveuid/foobar');
     });
+
     it('test add external link', function() {
       var pattern = createTinymce();
       pattern.addLinkClicked();
@@ -243,7 +240,6 @@ define([
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();
-
       pattern.tiny.setContent('<p>blah</p>');
       pattern.addLinkClicked();
       pattern.linkModal.linkTypes.internal.$input.select2('data', {
diff --git a/mockup/tests/pattern-toggle-test.js b/mockup/tests/pattern-toggle-test.js
index aa65f5c..054ccdc 100644
--- a/mockup/tests/pattern-toggle-test.js
+++ b/mockup/tests/pattern-toggle-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-toggle'
 ], function(expect, $, registry, Toggle) {
   'use strict';
diff --git a/mockup/tests/pattern-tooltip-test.js b/mockup/tests/pattern-tooltip-test.js
index 4683d7a..ff9555e 100644
--- a/mockup/tests/pattern-tooltip-test.js
+++ b/mockup/tests/pattern-tooltip-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tooltip'
 ], function(expect, $, registry, ToolTip) {
   'use strict';
diff --git a/mockup/tests/pattern-tree-test.js b/mockup/tests/pattern-tree-test.js
index 9b242dc..273eeef 100644
--- a/mockup/tests/pattern-tree-test.js
+++ b/mockup/tests/pattern-tree-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-tree'
 ], function(expect, $, registry, Tree) {
   'use strict';
diff --git a/mockup/tests/pattern-upload-test.js b/mockup/tests/pattern-upload-test.js
index 7c55df2..dc2ec63 100644
--- a/mockup/tests/pattern-upload-test.js
+++ b/mockup/tests/pattern-upload-test.js
@@ -1,7 +1,7 @@
 define([
   'expect',
   'jquery',
-  'mockup-registry',
+  'pat-registry',
   'mockup-patterns-upload'
 ], function(expect, $, registry, Upload) {
   'use strict';


