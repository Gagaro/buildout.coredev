Repository: plone.tiles
Branch: refs/heads/master
Date: 2015-05-01T03:24:09+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/e1daee426edd2d0f18d29e0bfa7a07db36e9ed10

Fix issue where dictionary encoding had side-effects

Files changed:
M plone/tiles/data.py

diff --git a/plone/tiles/data.py b/plone/tiles/data.py
index eaeac98..f27a218 100644
--- a/plone/tiles/data.py
+++ b/plone/tiles/data.py
@@ -204,8 +204,7 @@ def encode(data, schema, ignore=()):
                     item = item and '1' or ''
 
                 if isinstance(item, dict):
-                    for encoded_name, item in map_to_pairs(encoded_name, item):
-                        encode.append((encoded_name, item,))
+                    encode.extend(map_to_pairs(encoded_name, item))
                 else:
                     encode.append((encoded_name, item,))
 
@@ -216,8 +215,7 @@ def encode(data, schema, ignore=()):
                 value = value and '1' or ''
 
             if isinstance(value, dict):
-                for encoded_name, value in map_to_pairs(encoded_name, value):
-                    encode.append((encoded_name, value,))
+                encode.extend(map_to_pairs(encoded_name, value))
             else:
                 encode.append((encoded_name, value))
 


Repository: plone.tiles
Branch: refs/heads/master
Date: 2015-05-01T03:24:42+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/f868d04920f495c3744d3a2a69cddcb02826fc51

Fix issue where saving or deleting transient tile data mutated the current request

Files changed:
M plone/tiles/data.py
M plone/tiles/tiles.rst

diff --git a/plone/tiles/data.py b/plone/tiles/data.py
index f27a218..18cd719 100644
--- a/plone/tiles/data.py
+++ b/plone/tiles/data.py
@@ -43,34 +43,46 @@ class TransientTileDataManager(object):
     def __init__(self, tile):
         self.tile = tile
         self.tileType = queryUtility(ITileType, name=tile.__name__)
+        self.annotations = IAnnotations(self.tile.request,
+                                        self.tile.request.form)
+        self.key = "%s.%s" % (ANNOTATIONS_KEY_PREFIX, tile.id,)
 
-        # try to use a '_tiledata' parameter in the request, falling
-        # back to the request.form object itself if not found
-        request = self.tile.request
+    def get(self):
+        # use explicitly set data (saved as annotation on the request)
+        if self.key in self.annotations:
+            data = dict(self.annotations[self.key])
 
-        if '_tiledata' in request.form:
-            self.data = json.loads(request.form['_tiledata'])
-        else:
-            self.data = request.form
+            if self.tileType is not None and self.tileType.schema is not None:
+                for name, field in getFields(self.tileType.schema).items():
+                    if name not in data:
+                        data[name] = field.missing_value
 
-    def get(self):
-        # If we don't have a schema, just take the request
-        if self.tileType is None or self.tileType.schema is None:
-            return self.data.copy()
+        # try to use a '_tiledata' parameter in the request
+        elif '_tiledata' in self.tile.request.form:
+            data = json.loads(self.tile.request.form['_tiledata'])
 
-        # Try to decode the form data properly if we can
-        try:
-            return decode(self.data, self.tileType.schema, missing=True)
-        except (ValueError, UnicodeDecodeError,):
-            LOGGER.exception(u"Could not convert form data to schema")
-            return self.data.copy()
+        # fall back to the copy of request.form object itself
+        else:
+            # If we don't have a schema, just take the request
+            if self.tileType is None or self.tileType.schema is None:
+                data = self.tile.request.form.copy()
+            else:
+                # Try to decode the form data properly if we can
+                try:
+                    data = decode(self.tile.request.form,
+                                  self.tileType.schema, missing=True)
+                except (ValueError, UnicodeDecodeError,):
+                    LOGGER.exception(u"Could not convert form data to schema")
+                    return self.data.copy()
+
+        return data
 
     def set(self, data):
-        self.data.clear()
-        self.data.update(data)
+        self.annotations[self.key] = data
 
     def delete(self):
-        self.data.clear()
+        if self.key in self.annotations:
+            self.annotations[self.key] = {}
 
 
 class PersistentTileDataManager(object):
diff --git a/plone/tiles/tiles.rst b/plone/tiles/tiles.rst
index 74cbeac..95918ad 100644
--- a/plone/tiles/tiles.rst
+++ b/plone/tiles/tiles.rst
@@ -294,7 +294,7 @@ the request, this one will be used instead::
     >>> tile = tile['tile1']
 
     >>> sorted(tile.data.items())
-    [('count', 6), ('cssClass', 'bar'), ('title', u'Your title')]
+    [(u'count', 6), (u'cssClass', u'bar'), (u'title', u'Your title')]
 
 This way we can use transient tiles safely in contexts where the tile
 data can be confused with raw data coming from a form, e.g. in an edit form.


Repository: plone.tiles
Branch: refs/heads/master
Date: 2015-05-01T03:25:41+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/3d152ac35e5927d4014b91b40c39f2b99eb9b922

Update changelog

Files changed:
M CHANGELOG.rst

diff --git a/CHANGELOG.rst b/CHANGELOG.rst
index 83cafc0..3091c82 100644
--- a/CHANGELOG.rst
+++ b/CHANGELOG.rst
@@ -4,9 +4,11 @@ Changelog
 1.4.0 (unreleased)
 ------------------
 
-- Fix issue where encoding did not support dictionary fields
+- Add support for encoding dictionary fields into tile URL
   [datakurre]
-- Fix issue where non-ascii characters in tiledata raised UnicodeEncode/DecodeErrors
+- Fix issue where saving or deleting transient tile data mutated the current request
+  [datakurre]
+- Fix issue where non-ascii characters in tile data raised UnicodeEncode/DecodeErrors
   [datakurre]
 
 1.3.0 (2015-04-21)


