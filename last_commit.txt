Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-21T17:31:29+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4c9554e5baf7207a64132281bc9dcdc3612e171a

Added clarifying comment in topic migration about selection.all.

Files changed:
M plone/app/contenttypes/migration/topics.py

diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index 2944e37..a2e342a 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -46,9 +46,6 @@ def get_query_value(self, value, index, criterion):
 
     def get_operation(self, value, index, criterion):
         # Get dotted operation method.  This may depend on value.
-        # if index == 'Subject':
-        #
-        #     return "%s.operation.%s" % (prefix, 'selection.any')
         return "%s.operation.%s" % (prefix, self.operator_code)
 
     def get_alt_operation(self, value, index, criterion):
@@ -288,6 +285,10 @@ def get_operation(self, value, index, criterion):
         # Get dotted operation method.  This may depend on value.
         if index == 'Subject':
             if value['operator'] == 'and':
+                # Subject is currently the only index that supports
+                # this, because for others it makes no sense.  See
+                # allowed operations in registry.xml in
+                # plone.app.querystring.
                 suffix = 'all'
             else:
                 suffix = 'any'


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-21T17:32:41+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/9efe726978db0cfe0104ae364bf2f42d078216ed

Selection criterion converter: allow selection.is alternative operation.

This is tried when selection.any is not valid for the index.

Files changed:
M plone/app/contenttypes/migration/topics.py

diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index a2e342a..b3b2fdf 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -279,7 +279,7 @@ class ATCurrentAuthorCriterionConverter(CriterionConverter):
 
 class ATSelectionCriterionConverter(CriterionConverter):
     operator_code = 'selection.any'
-    # alt_operator_code = 'selection.any'
+    alt_operator_code = 'selection.is'
 
     def get_operation(self, value, index, criterion):
         # Get dotted operation method.  This may depend on value.


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-21T17:34:01+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d7c52b937ba64f79ccb93ab3dc034c7ef36dc7bd

Fixed flake8/pep8 failure.

Files changed:
M plone/app/contenttypes/tests/test_migration_topic.py

diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 677face..c5bbcf0 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -547,10 +547,11 @@ def test_ATPortalTypeCriterionOfTopic(self):
         applyProfile(self.portal, 'plone.app.contenttypes:default')
         self.run_migration()
         query = self.portal.topic.query
-        self.assertEqual(query,
-                         [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.any',
-                           'v': ('Collection',)}])
+        self.assertEqual(
+            query,
+            [{'i': 'portal_type',
+              'o': 'plone.app.querystring.operation.selection.any',
+              'v': ('Collection',)}])
 
         # Check that the resulting query does not give an error.
         self.portal.topic.results
@@ -602,10 +603,11 @@ def test_ATSelectionCriterionForTypeTitle(self):
         applyProfile(self.portal, 'plone.app.contenttypes:default')
         self.run_migration()
         query = self.portal.topic.query
-        self.assertEqual(query,
-                         [{'i': 'portal_type',
-                           'o': 'plone.app.querystring.operation.selection.any',
-                           'v': ['Document', 'Folder']}])
+        self.assertEqual(
+            query,
+            [{'i': 'portal_type',
+              'o': 'plone.app.querystring.operation.selection.any',
+              'v': ['Document', 'Folder']}])
 
         # Check that the resulting query does not give an error.
         self.portal.topic.results


