Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-17T11:14:58+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c121e9d38db4f4329e9ffb1e3bb7f6e07db029d6

simpler buildout

Files changed:
A .editorconfig
A .gitattributes
A bootstrap-buildout.py
M .coveragerc
M .travis.yml
M buildout.cfg
M travis.cfg
D archetypes-mentions.txt
D atct-mentions.txt
D bootstrap.py
D buildout.d/base.cfg
D buildout.d/checkouts.cfg
D buildout.d/development.cfg
D buildout.d/jenkins.cfg
D buildout.d/sources.cfg
D buildout.d/versions.cfg
D headers.sh
D jenkins.cfg

diff --git a/.coveragerc b/.coveragerc
index 208e655..50bf7c2 100644
--- a/.coveragerc
+++ b/.coveragerc
@@ -1,9 +1,6 @@
 [report]
 omit =
-    /home/*/.buildout/eggs/*
-    /usr/*
-    bin/test
-    buildout-cache/eggs/*
-    eggs/*
-    parts/*
+    */test*
 
+include =
+    plone/*
diff --git a/.editorconfig b/.editorconfig
new file mode 100644
index 0000000..a83363b
--- /dev/null
+++ b/.editorconfig
@@ -0,0 +1,15 @@
+[*]
+indent_style = space
+end_of_line = lf
+insert_final_newline = true
+trim_trailing_whitespace = true
+charset = utf-8
+
+[{*.py,*.cfg}]
+indent_size = 4
+
+[{*.html,*.dtml,*.pt,*.zpt,*.xml,*.zcml,*.js}]
+indent_size = 2
+
+[Makefile]
+indent_style = tab
diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..af46901
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1 @@
+CHANGES.rst merge=union
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
index 37f7d4a..4220a5a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,22 +1,27 @@
 language: python
-python: "2.7"
-branches:
-  only:
-    - 1.1.x
+sudo: false
+cache:
+  pip: true
+  directories:
+    - $HOME/buildout-cache
+python:
+  - 2.7
 before_install:
-  - pip install http://effbot.org/downloads/Imaging-1.1.7.tar.gz
+  - mkdir -p $HOME/buildout-cache/{eggs,downloads}
+  - mkdir $HOME/.buildout
+  - echo "[buildout]" > $HOME/.buildout/default.cfg
+  - echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
+  - echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
 install:
-  - mkdir -p buildout-cache/eggs
-  - mkdir -p buildout-cache/downloads
-  - python bootstrap.py -c travis.cfg
-  - bin/buildout -N -t 3 -c travis.cfg
+  - python bootstrap-buildout.py -c travis.cfg
+  - bin/buildout -Nc travis.cfg
 before_script:
   - "export DISPLAY=:99.0"
   - "sh -e /etc/init.d/xvfb start"
 script:
-  - bin/test -s plone.app.contenttypes
   - bin/code-analysis
-after_failure:
-  - bin/csslint --version
-  - bin/jshint --version
-
+  - bin/test
+  - bin/createcoverage
+after_success:
+  - pip install coveralls
+  - coveralls
diff --git a/archetypes-mentions.txt b/archetypes-mentions.txt
deleted file mode 100644
index ebbd545..0000000
--- a/archetypes-mentions.txt
+++ /dev/null
@@ -1,2131 +0,0 @@
-The following list was generated from a Plone 4.3 buildout with every package bin/develop'd
-===========================================================================================
-
-./Products.ATContentTypes/Products/ATContentTypes/__init__.py: 2 matches
-    51: from Products.Archetypes.atapi import process_types
-    52: from Products.Archetypes.atapi import listTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/configure.zcml: 1 matches
-    38: factory="Products.Archetypes.uuid.referenceableUUID"
-
-./Products.ATContentTypes/Products/ATContentTypes/content/base.py: 5 matches
-    16: from Products.Archetypes.atapi import BaseContent
-    17: from Products.Archetypes.atapi import BaseFolder
-    18: from Products.Archetypes.atapi import OrderedBaseFolder
-    19: from Products.Archetypes.atapi import BaseBTreeFolder
-    20: from Products.Archetypes.atapi import registerType
-
-./Products.ATContentTypes/Products/ATContentTypes/content/document.py: 7 matches
-    15: from Products.Archetypes.atapi import Schema
-    16: from Products.Archetypes.atapi import TextField
-    17: from Products.Archetypes.atapi import BooleanField
-    18: from Products.Archetypes.atapi import RichWidget
-    19: from Products.Archetypes.atapi import BooleanWidget
-    20: from Products.Archetypes.atapi import RFC822Marshaller
-    21: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/event.py: 11 matches
-    8: from Products.Archetypes.atapi import Schema
-    9: from Products.Archetypes.atapi import DateTimeField
-    10: from Products.Archetypes.atapi import LinesField
-    11: from Products.Archetypes.atapi import StringField
-    12: from Products.Archetypes.atapi import TextField
-    13: from Products.Archetypes.atapi import CalendarWidget
-    14: from Products.Archetypes.atapi import LinesWidget
-    15: from Products.Archetypes.atapi import RichWidget
-    16: from Products.Archetypes.atapi import StringWidget
-    17: from Products.Archetypes.atapi import RFC822Marshaller
-    18: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/file.py: 6 matches
-    11: from Products.Archetypes.atapi import Schema
-    12: from Products.Archetypes.atapi import FileField
-    13: from Products.Archetypes.atapi import FileWidget
-    14: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    15: from Products.Archetypes.atapi import AnnotationStorage
-    16: from Products.Archetypes.BaseContent import BaseContent
-
-./Products.ATContentTypes/Products/ATContentTypes/content/image.py: 5 matches
-    9: from Products.Archetypes.atapi import Schema
-    10: from Products.Archetypes.atapi import ImageField
-    11: from Products.Archetypes.atapi import ImageWidget
-    12: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    13: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/link.py: 3 matches
-    10: from Products.Archetypes.atapi import Schema
-    11: from Products.Archetypes.atapi import StringField
-    12: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/content/newsitem.py: 9 matches
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import ImageField
-    7: from Products.Archetypes.atapi import StringField
-    8: from Products.Archetypes.atapi import TextField
-    9: from Products.Archetypes.atapi import ImageWidget
-    10: from Products.Archetypes.atapi import RichWidget
-    11: from Products.Archetypes.atapi import StringWidget
-    12: from Products.Archetypes.atapi import RFC822Marshaller
-    13: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/schemata.py: 5 matches
-    1: from Products.Archetypes.atapi import BaseSchema
-    2: from Products.Archetypes.atapi import MetadataSchema
-    3: from Products.Archetypes.atapi import ReferenceField
-    4: from Products.Archetypes.atapi import BooleanField
-    5: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/content/topic.py: 11 matches
-    18: from Products.Archetypes.atapi import Schema
-    19: from Products.Archetypes.atapi import TextField
-    20: from Products.Archetypes.atapi import BooleanField
-    21: from Products.Archetypes.atapi import IntegerField
-    22: from Products.Archetypes.atapi import LinesField
-    23: from Products.Archetypes.atapi import BooleanWidget
-    24: from Products.Archetypes.atapi import IntegerWidget
-    25: from Products.Archetypes.atapi import InAndOutWidget
-    26: from Products.Archetypes.atapi import RichWidget
-    27: from Products.Archetypes.atapi import DisplayList
-    28: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/__init__.py: 2 matches
-    2: from Products.Archetypes.atapi import registerType
-    3: from Products.Archetypes.ClassGen import generateClass
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/base.py: 3 matches
-    3: from Products.Archetypes.atapi import BaseContentMixin
-    9: from Products.Archetypes.ClassGen import generateClass
-    13: from Products.Archetypes.interfaces.referenceable import IReferenceable
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/boolean.py: 3 matches
-    8: from Products.Archetypes.atapi import Schema
-    9: from Products.Archetypes.atapi import BooleanField
-    10: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/date.py: 6 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import IntegerField
-    9: from Products.Archetypes.atapi import StringField
-    10: from Products.Archetypes.atapi import SelectionWidget
-    11: from Products.Archetypes.atapi import DisplayList
-    12: from Products.Archetypes.atapi import IntDisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/daterange.py: 3 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import DateTimeField
-    8: from Products.Archetypes.atapi import CalendarWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/list.py: 6 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import LinesField
-    8: from Products.Archetypes.atapi import StringField
-    9: from Products.Archetypes.atapi import SelectionWidget
-    10: from Products.Archetypes.atapi import LinesWidget
-    11: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/path.py: 5 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import BooleanField
-    8: from Products.Archetypes.atapi import BooleanWidget
-    9: from Products.Archetypes.atapi import ReferenceField
-    10: from Products.Archetypes.Referenceable import Referenceable
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/portaltype.py: 1 matches
-    6: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/reference.py: 1 matches
-    10: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/relativepath.py: 3 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import BooleanField, StringField
-    9: from Products.Archetypes.atapi import BooleanWidget, StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/schemata.py: 4 matches
-    1: from Products.Archetypes.atapi import Schema
-    2: from Products.Archetypes.atapi import StringField
-    3: from Products.Archetypes.atapi import IdWidget
-    4: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/selection.py: 6 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import LinesField
-    9: from Products.Archetypes.atapi import MultiSelectionWidget
-    10: from Products.Archetypes.atapi import StringField
-    11: from Products.Archetypes.atapi import SelectionWidget
-    12: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simpleint.py: 6 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import IntegerField
-    8: from Products.Archetypes.atapi import IntegerWidget
-    9: from Products.Archetypes.atapi import StringField
-    10: from Products.Archetypes.atapi import SelectionWidget
-    11: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simplestring.py: 3 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import StringField
-    8: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/sort.py: 3 matches
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import BooleanField
-    7: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/interfaces.py: 3 matches
-    4: from Products.Archetypes.interfaces import IBaseContent
-    5: from Products.Archetypes.interfaces import IBaseFolder
-    7: from Products.Archetypes.interfaces import IATHistoryAware
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/constraintypes.py: 7 matches
-    14: from Products.Archetypes.atapi import Schema
-    15: from Products.Archetypes.atapi import LinesField
-    16: from Products.Archetypes.atapi import IntegerField
-    17: from Products.Archetypes.atapi import MultiSelectionWidget
-    18: from Products.Archetypes.atapi import SelectionWidget
-    19: from Products.Archetypes.atapi import IntDisplayList
-    20: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/historyaware.py: 1 matches
-    12: from Products.Archetypes.atapi import ATHistoryAwareMixin
-
-./Products.ATContentTypes/Products/ATContentTypes/permission.py: 1 matches
-    2: from Products.Archetypes.atapi import listTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_add.cpy: 1 matches
-    12: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_remove.cpy: 1 matches
-    12: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_set_sort.cpy: 1 matches
-    13: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py: 11 matches
-    21: from Products.Archetypes.atapi import AttributeStorage
-    22: from Products.Archetypes.atapi import DisplayList
-    23: from Products.Archetypes.atapi import IdWidget
-    24: from Products.Archetypes.atapi import RFC822Marshaller
-    25: from Products.Archetypes.atapi import MetadataStorage
-    26: from Products.Archetypes.atapi import TextAreaWidget
-    27: from Products.Archetypes.interfaces.base import IBaseContent
-    28: from Products.Archetypes.interfaces.layer import ILayerContainer
-    29: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    30: from Products.Archetypes.interfaces.templatemixin import ITemplateMixin
-    31: from Products.Archetypes.tests.test_baseschema import BaseSchemaTest
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atdocument.py: 2 matches
-    9: from Products.Archetypes.interfaces.layer import ILayerContainer
-    10: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atevent.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py: 2 matches
-    9: from Products.Archetypes.interfaces.layer import ILayerContainer
-    10: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py: 2 matches
-    10: from Products.Archetypes.interfaces.layer import ILayerContainer
-    11: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atlink.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atnewsitem.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_attopic.py: 3 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-    11: from Products.Archetypes.Field import BooleanField
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_criteria.py: 3 matches
-    10: from Products.Archetypes.interfaces.base import IBaseContent
-    11: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    12: from Products.Archetypes.interfaces import IExtensibleMetadata
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_default_mimetypes.py: 1 matches
-    22: from Products.Archetypes.mimetype_utils import setDefaultContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/topic.py: 1 matches
-    13: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/setup.py: 1 matches
-    44: 'Products.Archetypes',
-
-./Products.ATReferenceBrowserWidget/setup.py: 2 matches
-    8: description="ATReferenceBrowserWidget is reference widget for Archetypes.",
-    16: keywords='CMF Plone Archetypes reference widget',
-
-./Products.Archetypes/Products/Archetypes/AllowedTypesByIface.py: 3 matches
-    27: from Products.Archetypes.atapi import BaseFolder
-    28: from Products.Archetypes.ArchetypeTool import listTypes
-    62: >>> from Products.Archetypes.interfaces.base import *
-
-./Products.Archetypes/Products/Archetypes/ApeSupport.py: 4 matches
-    2: Bring generic Ape Support to Archetypes.
-    4: The goal of this module is to implement generic mapping of Archetypes Schema
-    34: from Products.Archetypes.BaseUnit import BaseUnit
-    35: from Products.Archetypes.atapi import Master, __builtin__
-
-./Products.Archetypes/Products/Archetypes/ArchTTWTool.py: 2 matches
-    16: meta_type = 'Archetypes TTW Tool'
-    112: from Products.Archetypes.Registry import typeDescriptionRegistry
-
-./Products.Archetypes/Products/Archetypes/ArchetypeTool.py: 21 matches
-    9: from Products.Archetypes import PloneMessageFactory as _
-    10: from Products.Archetypes.interfaces import IArchetypeTool
-    11: from Products.Archetypes.interfaces import IExtensibleMetadata
-    12: from Products.Archetypes.interfaces.base import IBaseObject
-    13: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    14: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    15: from Products.Archetypes.ClassGen import generateClass
-    16: from Products.Archetypes.ClassGen import generateCtor
-    17: from Products.Archetypes.ClassGen import generateZMICtor
-    18: from Products.Archetypes.SQLStorageConfig import SQLStorageConfig
-    19: from Products.Archetypes.config import TOOL_NAME
-    20: from Products.Archetypes.config import UID_CATALOG
-    21: from Products.Archetypes.config import HAS_GRAPHVIZ
-    22: from Products.Archetypes.log import log
-    23: from Products.Archetypes.utils import findDict
-    24: from Products.Archetypes.utils import DisplayList
-    25: from Products.Archetypes.utils import mapply
-    26: from Products.Archetypes.Renderer import renderer
-    319: log('ArchetypesTool: Trying to register "%s" which ' \
-    519: from Products.Archetypes.Schema import getSchemata
-    1040: from Products.Archetypes.Extensions.migrations import migrate
-
-./Products.Archetypes/Products/Archetypes/BaseBTreeFolder.py: 3 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.atapi import BaseFolder
-    3: from Products.Archetypes.interfaces import IBaseFolder
-
-./Products.Archetypes/Products/Archetypes/BaseContent.py: 7 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.BaseObject import BaseObject
-    3: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    4: from Products.Archetypes.interfaces import IBaseContent
-    5: from Products.Archetypes.interfaces import IReferenceable
-    6: from Products.Archetypes.interfaces import IExtensibleMetadata
-    7: from Products.Archetypes.CatalogMultiplex import CatalogMultiplex
-
-./Products.Archetypes/Products/Archetypes/BaseFolder.py: 9 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.CatalogMultiplex import CatalogMultiplex
-    3: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    4: from Products.Archetypes.BaseObject import BaseObject
-    5: from Products.Archetypes.event import WebDAVObjectInitializedEvent
-    6: from Products.Archetypes.interfaces import IBaseFolder
-    7: from Products.Archetypes.interfaces import IBaseObject
-    8: from Products.Archetypes.interfaces import IReferenceable
-    9: from Products.Archetypes.interfaces import IExtensibleMetadata
-
-./Products.Archetypes/Products/Archetypes/BaseObject.py: 26 matches
-    4: from Products.Archetypes import PloneMessageFactory as _
-    5: from Products.Archetypes.debug import log_exc
-    6: from Products.Archetypes.utils import DisplayList
-    7: from Products.Archetypes.utils import mapply
-    8: from Products.Archetypes.utils import fixSchema
-    9: from Products.Archetypes.utils import shasattr
-    10: from Products.Archetypes.Field import StringField
-    11: from Products.Archetypes.Field import TextField
-    12: from Products.Archetypes.Renderer import renderer
-    13: from Products.Archetypes.Schema import Schema
-    14: from Products.Archetypes.Schema import getSchemata
-    15: from Products.Archetypes.Widget import IdWidget
-    16: from Products.Archetypes.Widget import StringWidget
-    17: from Products.Archetypes.Marshall import RFC822Marshaller
-    18: from Products.Archetypes.interfaces import IBaseObject
-    19: from Products.Archetypes.interfaces import IReferenceable
-    20: from Products.Archetypes.interfaces import ISchema
-    21: from Products.Archetypes.interfaces.field import IFileField
-    22: from Products.Archetypes.validator import AttributeValidator
-    23: from Products.Archetypes.config import ATTRIBUTE_SECURITY
-    24: from Products.Archetypes.config import RENAME_AFTER_CREATION_ATTEMPTS
-    26: from Products.Archetypes.event import ObjectInitializedEvent
-    27: from Products.Archetypes.event import ObjectEditedEvent
-    29: from Products.Archetypes.interfaces import IMultiPageSchema
-    30: from Products.Archetypes.interfaces import IObjectPreValidation
-    31: from Products.Archetypes.interfaces import IObjectPostValidation
-
-./Products.Archetypes/Products/Archetypes/BaseUnit.py: 3 matches
-    4: from Products.Archetypes.interfaces import IBaseUnit
-    5: from Products.Archetypes.log import log
-    6: from Products.Archetypes.utils import shasattr
-
-./Products.Archetypes/Products/Archetypes/CatalogMultiplex.py: 4 matches
-    10: from Products.Archetypes.config import CATALOGMAP_USES_PORTALTYPE, TOOL_NAME
-    11: from Products.Archetypes.log import log
-    12: from Products.Archetypes.Referenceable import Referenceable
-    13: from Products.Archetypes.utils import shasattr, isFactoryContained
-
-./Products.Archetypes/Products/Archetypes/ClassGen.py: 3 matches
-    6: from Products.Archetypes.log import log
-    7: from Products.Archetypes.utils import capitalize
-    8: from Products.Archetypes.utils import _getSecurity
-
-./Products.Archetypes/Products/Archetypes/ExtensibleMetadata.py: 9 matches
-    6: from Products.Archetypes import PloneMessageFactory as _
-    7: from Products.Archetypes.Field import BooleanField, LinesField, TextField, \
-    9: from Products.Archetypes.Widget import BooleanWidget, KeywordWidget, \
-    11: from Products.Archetypes.Schema import Schema
-    12: from Products.Archetypes.Schema import MetadataSchema
-    13: from Products.Archetypes.interfaces import IExtensibleMetadata
-    14: from Products.Archetypes.log import log
-    15: from Products.Archetypes.utils import DisplayList, shasattr
-    16: from Products.Archetypes import config
-
-./Products.Archetypes/Products/Archetypes/Extensions/migrations.py: 12 matches
-    8: from Products.Archetypes.Extensions.utils import install_uidcatalog
-    9: from Products.Archetypes.config import TOOL_NAME, REFERENCE_CATALOG, \
-    11: from Products.Archetypes.interfaces.base import IBaseObject
-    31: def reinstallArchetypes(portal, out):
-    35: products = ('MimetypesRegistry', 'PortalTransforms', 'Archetypes', )
-    36: print >>out, 'Reinstalling Archetypes and it\'s dependencies'
-    47: def fixArchetypesTool(portal, out):
-    75: print >>out, 'migrating reference from Archetypes 1.2'
-    119: print >>out, 'migrating reference from Archetypes 1.3. beta2\n'
-    287: fixArchetypesTool(portal, out)
-    288: reinstallArchetypes(portal, out)
-    295: print >>out, "Archetypes Migration Successful"
-
-./Products.Archetypes/Products/Archetypes/Extensions/utils.py: 11 matches
-    10: from Products.Archetypes.config import REFERENCE_CATALOG
-    11: from Products.Archetypes.ArchetypeTool import fixActionsForType
-    12: from Products.Archetypes.ArchetypeTool import listTypes
-    13: from Products.Archetypes.ArchetypeTool import process_types
-    14: from Products.Archetypes.ArchetypeTool import base_factory_type_information
-    15: from Products.Archetypes import types_globals
-    16: from Products.Archetypes.interfaces.base import IBaseObject
-    17: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    345: if not qi.isProductInstalled('Archetypes'):
-    346: qi.installProduct('Archetypes')
-    347: print >>out, 'Installing Archetypes'
-
-./Products.Archetypes/Products/Archetypes/Field.py: 55 matches
-    35: from Products.Archetypes import PloneMessageFactory as _
-    36: from Products.Archetypes.config import REFERENCE_CATALOG
-    37: from Products.Archetypes.Layer import DefaultLayerContainer
-    38: from Products.Archetypes.interfaces.storage import IStorage
-    39: from Products.Archetypes.interfaces.base import IBaseUnit
-    40: from Products.Archetypes.interfaces.field import IField
-    41: from Products.Archetypes.interfaces.field import IObjectField
-    42: from Products.Archetypes.interfaces.field import IStringField
-    43: from Products.Archetypes.interfaces.field import ITextField
-    44: from Products.Archetypes.interfaces.field import IDateTimeField
-    45: from Products.Archetypes.interfaces.field import ILinesField
-    46: from Products.Archetypes.interfaces.field import IIntegerField
-    47: from Products.Archetypes.interfaces.field import IFloatField
-    48: from Products.Archetypes.interfaces.field import IFileField
-    49: from Products.Archetypes.interfaces.field import IImageField
-    50: from Products.Archetypes.interfaces.field import IFixedPointField
-    51: from Products.Archetypes.interfaces.field import IReferenceField
-    52: from Products.Archetypes.interfaces.field import IComputedField
-    53: from Products.Archetypes.interfaces.field import IBooleanField
-    54: from Products.Archetypes.interfaces.layer import ILayerContainer
-    55: from Products.Archetypes.interfaces import IVocabulary
-    56: from Products.Archetypes.exceptions import ObjectFieldException
-    57: from Products.Archetypes.exceptions import TextFieldException
-    58: from Products.Archetypes.exceptions import FileFieldException
-    59: from Products.Archetypes.exceptions import ReferenceException
-    60: from Products.Archetypes.Widget import BooleanWidget
-    61: from Products.Archetypes.Widget import CalendarWidget
-    62: from Products.Archetypes.Widget import ComputedWidget
-    63: from Products.Archetypes.Widget import DecimalWidget
-    64: from Products.Archetypes.Widget import FileWidget
-    65: from Products.Archetypes.Widget import ImageWidget
-    66: from Products.Archetypes.Widget import IntegerWidget
-    67: from Products.Archetypes.Widget import LinesWidget
-    68: from Products.Archetypes.Widget import StringWidget
-    69: from Products.Archetypes.Widget import ReferenceWidget
-    70: from Products.Archetypes.BaseUnit import BaseUnit
-    71: from Products.Archetypes.ReferenceEngine import Reference
-    72: from Products.Archetypes.log import log
-    73: from Products.Archetypes.utils import DisplayList
-    74: from Products.Archetypes.utils import Vocabulary
-    75: from Products.Archetypes.utils import className
-    76: from Products.Archetypes.utils import mapply
-    77: from Products.Archetypes.utils import shasattr
-    78: from Products.Archetypes.utils import contentDispositionHeader
-    79: from Products.Archetypes.mimetype_utils import getAllowedContentTypes as getAllowedContentTypesProperty
-    80: from Products.Archetypes import config
-    81: from Products.Archetypes.Storage import AttributeStorage
-    82: from Products.Archetypes.Storage import ObjectManagedStorage
-    83: from Products.Archetypes.Storage import ReadOnlyStorage
-    84: from Products.Archetypes.Registry import setSecurity
-    85: from Products.Archetypes.Registry import registerField
-    86: from Products.Archetypes.Registry import registerPropertyType
-    93: from Products.Archetypes.interfaces import IFieldDefaultProvider
-    109: "Archetypes based ImageField's don't scale if neccessary.")
-    2696: 'other Archetypes Objects'))
-
-./Products.Archetypes/Products/Archetypes/Layer.py: 1 matches
-    1: from Products.Archetypes.interfaces.layer import ILayerContainer
-
-./Products.Archetypes/Products/Archetypes/Marshall.py: 7 matches
-    13: from Products.Archetypes.Field import TextField, FileField
-    14: from Products.Archetypes.interfaces.marshall import IMarshall
-    15: from Products.Archetypes.interfaces.layer import ILayer
-    16: from Products.Archetypes.interfaces.base import IBaseUnit
-    17: from Products.Archetypes.log import log
-    18: from Products.Archetypes.utils import shasattr
-    19: from Products.Archetypes.utils import mapply
-
-./Products.Archetypes/Products/Archetypes/OrderedBaseFolder.py: 2 matches
-    16: from Products.Archetypes.BaseFolder import BaseFolder
-    17: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-
-./Products.Archetypes/Products/Archetypes/ReferenceEngine.py: 7 matches
-    8: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    9: from Products.Archetypes.interfaces import IContentReference
-    10: from Products.Archetypes.interfaces import IReference
-    11: from Products.Archetypes.interfaces import IReferenceCatalog
-    13: from Products.Archetypes.utils import make_uuid, getRelURL, shasattr
-    14: from Products.Archetypes.config import (
-    16: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.Archetypes/Products/Archetypes/Referenceable.py: 4 matches
-    5: from Products.Archetypes import config
-    6: from Products.Archetypes.exceptions import ReferenceException
-    7: from Products.Archetypes.interfaces import IReferenceable
-    8: from Products.Archetypes.utils import shasattr, isFactoryContained
-
-./Products.Archetypes/Products/Archetypes/Registry.py: 8 matches
-    3: from Products.Archetypes.utils import className
-    4: from Products.Archetypes.utils import setSecurity
-    5: from Products.Archetypes.ArchetypeTool import listTypes
-    6: from Products.Archetypes.interfaces.base import IBaseObject
-    64: from Products.Archetypes.Registry import availableWidgets
-    73: from Products.Archetypes.Registry import getPropertyType
-    97: from Products.Archetypes.Registry import getPropertyType
-    154: from Products.Archetypes.Schema import getSchemata
-
-./Products.Archetypes/Products/Archetypes/Renderer.py: 3 matches
-    10: class ArchetypesRenderer:
-    65: InitializeClass(ArchetypesRenderer)
-    67: renderer = ArchetypesRenderer()
-
-./Products.Archetypes/Products/Archetypes/SQLMethod.py: 1 matches
-    1: from Products.Archetypes.debug import log_exc
-
-./Products.Archetypes/Products/Archetypes/SQLStorage.py: 7 matches
-    7: from Products.Archetypes.config import TOOL_NAME, MYSQL_SQLSTORAGE_TABLE_TYPE
-    8: from Products.Archetypes.interfaces.field import IObjectField
-    9: from Products.Archetypes.interfaces.layer import ILayer
-    10: from Products.Archetypes.interfaces.storage import ISQLStorage
-    11: from Products.Archetypes.log import log
-    12: from Products.Archetypes.SQLMethod import SQLMethod
-    13: from Products.Archetypes.Storage import StorageLayer, type_map
-
-./Products.Archetypes/Products/Archetypes/SQLStorageConfig.py: 3 matches
-    3: from Products.Archetypes.config import TOOL_NAME
-    4: from Products.Archetypes.interfaces.storage import ISQLStorage
-    5: from Products.Archetypes.interfaces.field import IObjectField
-
-./Products.Archetypes/Products/Archetypes/Schema/Composite.py: 3 matches
-    3: from Products.Archetypes.Schema import Schema
-    4: from Products.Archetypes.interfaces.layer import ILayerContainer, \
-    6: from Products.Archetypes.interfaces.schema import ICompositeSchema, \
-
-./Products.Archetypes/Products/Archetypes/Schema/Facade.py: 6 matches
-    3: from Products.Archetypes.Schema import BasicSchema
-    4: from Products.Archetypes.Field import *
-    5: from Products.Archetypes.interfaces.schema import IBindableSchema
-    6: from Products.Archetypes.Storage.Facade import FacadeMetadataStorage
-    7: from Products.Archetypes.ClassGen import generateMethods
-    99: to groups of Archetypes fields
-
-./Products.Archetypes/Products/Archetypes/Schema/__init__.py: 11 matches
-    4: from Products.Archetypes.Storage import MetadataStorage
-    5: from Products.Archetypes.Layer import DefaultLayerContainer
-    6: from Products.Archetypes.interfaces.field import IField
-    7: from Products.Archetypes.interfaces.layer import ILayerContainer, \
-    9: from Products.Archetypes.interfaces.schema import ISchema, ISchemata, \
-    11: from Products.Archetypes.utils import OrderedDict, mapply, shasattr
-    12: from Products.Archetypes.mimetype_utils import getDefaultContentType
-    13: from Products.Archetypes.exceptions import SchemaException
-    14: from Products.Archetypes.exceptions import ReferenceException
-    734: >>> from Products.Archetypes.atapi import StringField as SF
-    926: from Products.Archetypes.Field import StringField
-
-./Products.Archetypes/Products/Archetypes/Schema/factory.py: 2 matches
-    1: from Products.Archetypes.interfaces import ISchema, IBaseObject
-    34: 2. Run Products.Archetypes.VariableSchemaSupport.VarClassGen on the class.
-
-./Products.Archetypes/Products/Archetypes/Storage/Facade.py: 5 matches
-    2: from Products.Archetypes.Storage import StorageLayer
-    3: from Products.Archetypes.interfaces.storage import IStorage
-    4: from Products.Archetypes.interfaces.layer import ILayer
-    5: from Products.Archetypes.Field import encode
-    8: from Products.Archetypes.Registry import registerStorage
-
-./Products.Archetypes/Products/Archetypes/Storage/__init__.py: 5 matches
-    1: from Products.Archetypes.interfaces.storage import IStorage
-    2: from Products.Archetypes.interfaces.layer import ILayer
-    3: from Products.Archetypes.log import log
-    4: from Products.Archetypes.utils import shasattr
-    10: from Products.Archetypes.Registry import setSecurity, registerStorage
-
-./Products.Archetypes/Products/Archetypes/Storage/annotation.py: 9 matches
-    29: from Products.Archetypes.Storage import Storage
-    30: from Products.Archetypes.Storage import StorageLayer
-    31: from Products.Archetypes.Storage import _marker
-    32: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    33: from Products.Archetypes.annotations import AT_MD_STORAGE
-    34: from Products.Archetypes.annotations import getAnnotation
-    35: from Products.Archetypes.Registry import setSecurity
-    36: from Products.Archetypes.Registry import registerStorage
-    37: from Products.Archetypes.utils import shasattr
-
-./Products.Archetypes/Products/Archetypes/TemplateMixin.py: 7 matches
-    1: from Products.Archetypes import PloneMessageFactory as _
-    2: from Products.Archetypes.Schema import Schema
-    3: from Products.Archetypes.Field import StringField
-    4: from Products.Archetypes.Widget import SelectionWidget
-    5: from Products.Archetypes.config import TOOL_NAME
-    6: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    99: autogenerated form from Archetypes.
-
-./Products.Archetypes/Products/Archetypes/UIDCatalog.py: 5 matches
-    23: from Products.Archetypes.config import UID_CATALOG
-    24: from Products.Archetypes.config import TOOL_NAME
-    25: from Products.Archetypes.interfaces import IUIDCatalog
-    26: from Products.Archetypes.utils import getRelURL
-    32: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/VariableSchemaSupport.py: 1 matches
-    6: from Products.Archetypes.ClassGen import ClassGenerator
-
-./Products.Archetypes/Products/Archetypes/WebDAVSupport.py: 3 matches
-    9: from Products.Archetypes.event import WebDAVObjectInitializedEvent
-    10: from Products.Archetypes.event import WebDAVObjectEditedEvent
-    11: from Products.Archetypes.utils import shasattr, mapply
-
-./Products.Archetypes/Products/Archetypes/Widget.py: 34 matches
-    11: from Products.Archetypes.utils import className
-    12: from Products.Archetypes.utils import unique
-    13: from Products.Archetypes.utils import capitalize
-    14: from Products.Archetypes.generator import macrowidget
-    15: from Products.Archetypes.log import log
-    16: from Products.Archetypes.Registry import registerPropertyType
-    17: from Products.Archetypes.Registry import registerWidget
-    276: log("Warning: in Archetypes.Widget.lookupDestinationsFor: " \
-    865: used_for=('Products.Archetypes.Field.StringField',)
-    872: used_for=('Products.Archetypes.Field.FixedPointField',)
-    879: used_for=('Products.Archetypes.Field.IntegerField',)
-    886: used_for=('Products.Archetypes.Field.ReferenceField',)
-    892: used_for=('Products.Archetypes.Field.ComputedField',)
-    899: used_for=('Products.Archetypes.Field.StringField',
-    900: 'Products.Archetypes.Field.TextField')
-    907: used_for=('Products.Archetypes.Field.LinesField',)
-    913: used_for=('Products.Archetypes.Field.BooleanField',)
-    920: used_for=('Products.Archetypes.Field.DateTimeField',)
-    928: used_for=('Products.Archetypes.Field.StringField',
-    929: 'Products.Archetypes.Field.LinesField',)
-    938: used_for=('Products.Archetypes.Field.StringField')
-    945: used_for=('Products.Archetypes.Field.LinesField',)
-    951: used_for=('Products.Archetypes.Field.LinesField',)
-    959: used_for=('Products.Archetypes.Field.TextField',)
-    965: used_for=('Products.Archetypes.Field.FileField',)
-    971: used_for=('Products.Archetypes.Field.StringField',)
-    977: used_for=('Products.Archetypes.Field.StringField',)
-    984: used_for=('Products.Archetypes.Field.ImageField',)
-    997: used_for=('Products.Archetypes.Field.StringField',)
-    1003: used_for=('Products.Archetypes.Field.StringField',)
-    1009: used_for=('Products.Archetypes.Field.StringField',)
-    1017: used_for=('Products.Archetypes.Field.LinesField',
-    1018: 'Products.Archetypes.Field.ReferenceField',)
-    1026: used_for=('Products.Archetypes.Field.LinesField',)
-
-./Products.Archetypes/Products/Archetypes/__init__.py: 18 matches
-    4: from Products.Archetypes.config import PKG_NAME, REGISTER_DEMO_TYPES
-    5: from Products.Archetypes.utils import DisplayList
-    15: allow_module('Products.Archetypes.utils')
-    17: ModuleSecurityInfo('Products.Archetypes.debug').declarePublic('log')
-    18: ModuleSecurityInfo('Products.Archetypes.debug').declarePublic('log_exc')
-    19: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getAllowableContentTypes')
-    20: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getAllowedContentTypes')
-    21: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getForbiddenContentTypes')
-    22: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getDefaultContentType')
-    23: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declareProtected(permissions.ManagePortal, 'setForbiddenContentTypes')
-    24: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declareProtected(permissions.ManagePortal, 'setDefaultContentType')
-    30: ModuleSecurityInfo('Products.Archetypes').declarePublic('PloneMessageFactory')
-    42: from Products.Archetypes.ArchetypeTool import process_types, listTypes
-    43: from Products.Archetypes.ArchetypeTool import ArchetypeTool
-    45: from Products.Archetypes.ArchTTWTool import ArchTTWTool
-    46: from Products.Archetypes.ReferenceEngine import ReferenceCatalog as RefTool
-    47: from Products.Archetypes.UIDCatalog import UIDCatalog as UIDTool
-    68: import Products.Archetypes.examples
-
-./Products.Archetypes/Products/Archetypes/annotations.py: 6 matches
-    34: from Products.Archetypes.interfaces.annotations import IATAnnotations
-    35: from Products.Archetypes.interfaces.annotations import IATAnnotatable
-    41: AT_ANN_STORAGE = 'Archetypes.storage.AnnotationStorage'
-    42: AT_MD_STORAGE = 'Archetypes.storage.MetadataAnnotationStorage'
-    43: AT_FIELD_MD = 'Archetypes.field.Metadata'
-    44: AT_REF = 'Archetypes.referenceEngine.Reference'
-
-./Products.Archetypes/Products/Archetypes/atapi.py: 56 matches
-    27: from Products.Archetypes.ArchetypeTool import registerType
-    28: from Products.Archetypes.ArchetypeTool import process_types
-    29: from Products.Archetypes.ArchetypeTool import listTypes
-    30: from Products.Archetypes.ArchetypeTool import registerClasses
-    32: from Products.Archetypes.BaseObject import BaseObject
-    33: from Products.Archetypes.BaseContent import BaseContent
-    34: from Products.Archetypes.BaseContent import BaseContentMixin
-    35: from Products.Archetypes.BaseFolder import BaseFolder
-    36: from Products.Archetypes.BaseFolder import BaseFolderMixin
-    37: from Products.Archetypes.BaseBTreeFolder import BaseBTreeFolder
-    38: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolder
-    39: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    41: from Products.Archetypes.BaseObject import MinimalSchema
-    42: from Products.Archetypes.BaseContent import BaseSchema
-    43: from Products.Archetypes.BaseFolder import BaseFolderSchema
-    44: from Products.Archetypes.BaseBTreeFolder import BaseBTreeFolderSchema
-    45: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolderSchema
-    46: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadataSchema
-    48: from Products.Archetypes.Schema import BasicSchema
-    49: from Products.Archetypes.Schema import Schema
-    50: from Products.Archetypes.Schema import MetadataSchema
-    51: from Products.Archetypes.Schema import ManagedSchema
-    52: from Products.Archetypes.TemplateMixin import TemplateMixinSchema
-    53: from Products.Archetypes.Schema.Composite import CompositeSchema
-    54: from Products.Archetypes.Schema.Facade import FacadeMetadataSchema
-    55: from Products.Archetypes.VariableSchemaSupport import VariableSchemaSupport
-    57: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    58: from Products.Archetypes.Marshall import RFC822Marshaller
-    60: from Products.Archetypes.Field import *
-    62: from Products.Archetypes.Widget import *
-    64: from Products.Archetypes.Storage import *
-    65: from Products.Archetypes.Storage.annotation import AnnotationStorage
-    66: from Products.Archetypes.Storage.annotation import MetadataAnnotationStorage
-    67: from Products.Archetypes.SQLStorage import BaseSQLStorage
-    68: from Products.Archetypes.SQLStorage import GadflySQLStorage
-    69: from Products.Archetypes.SQLStorage import MySQLSQLStorage
-    70: from Products.Archetypes.SQLStorage import PostgreSQLStorage
-    71: from Products.Archetypes.SQLStorage import SQLServerStorage
-    73: from Products.Archetypes.annotations import getAnnotation
-    74: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    75: from Products.Archetypes.annotations import AT_MD_STORAGE
-    76: from Products.Archetypes.annotations import AT_FIELD_MD
-    77: from Products.Archetypes.annotations import AT_REF
-    79: from Products.Archetypes.utils import DisplayList
-    80: from Products.Archetypes.utils import IntDisplayList
-    81: from Products.Archetypes.utils import Vocabulary
-    82: from Products.Archetypes.ClassGen import AT_GENERATE_METHOD
-    83: from Products.Archetypes.BaseUnit import BaseUnit
-    84: from Products.Archetypes.TemplateMixin import TemplateMixin
-    85: from Products.Archetypes.debug import log
-    86: from Products.Archetypes.debug import log_exc
-    87: from Products.Archetypes.BaseObject import AttributeValidator
-    88: from Products.Archetypes.athistoryaware import ATHistoryAwareMixin
-    89: from Products.Archetypes.fieldproperty import ATFieldProperty
-    90: from Products.Archetypes.fieldproperty import ATReferenceFieldProperty
-    91: from Products.Archetypes.fieldproperty import ATDateTimeFieldProperty
-
-./Products.Archetypes/Products/Archetypes/bridge.zcml: 3 matches
-    6: zope2="Products.Archetypes.interfaces.orderedfolder.IOrderedFolder"
-    12: zope2="Products.Archetypes.interfaces.templatemixin.ITemplateMixin"
-    18: zope2="Products.Archetypes.interfaces.vocabulary.IVocabulary"
-
-./Products.Archetypes/Products/Archetypes/browser/edit.py: 3 matches
-    9: from Products.Archetypes.interfaces import IEditForm
-    10: from Products.Archetypes.interfaces import IMultiPageSchema
-    12: from Products.Archetypes import PloneMessageFactory as _
-
-./Products.Archetypes/Products/Archetypes/browser/lifecycle.py: 2 matches
-    7: from Products.Archetypes.event import EditBegunEvent
-    8: from Products.Archetypes.event import EditCancelledEvent
-
-./Products.Archetypes/Products/Archetypes/browser/widgets.py: 2 matches
-    41: >>> from Products.Archetypes.utils import DisplayList
-    67: >>> from Products.Archetypes.utils import IntDisplayList
-
-./Products.Archetypes/Products/Archetypes/config.py: 1 matches
-    1: PKG_NAME = "Archetypes"
-
-./Products.Archetypes/Products/Archetypes/debug.py: 2 matches
-    10: from Products.Archetypes.config import DEBUG
-    12: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/event.py: 6 matches
-    9: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    10: from Products.Archetypes.interfaces import IWebDAVObjectInitializedEvent
-    11: from Products.Archetypes.interfaces import IObjectEditedEvent
-    12: from Products.Archetypes.interfaces import IWebDAVObjectEditedEvent
-    13: from Products.Archetypes.interfaces import IEditBegunEvent
-    14: from Products.Archetypes.interfaces import IEditCancelledEvent
-
-./Products.Archetypes/Products/Archetypes/examples/ATBIFolder.py: 3 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-    3: from Products.Archetypes.AllowedTypesByIface import AllowedTypesByIfaceMixin
-
-./Products.Archetypes/Products/Archetypes/examples/ComplexType.py: 3 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes import Field
-    4: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/DDocument.py: 4 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes.TemplateMixin import TemplateMixin
-    3: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    4: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/Fact.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    3: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/RefNode.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleBTreeFolder.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleFile.py: 3 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    3: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleFolder.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleType.py: 4 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes.config import PKG_NAME
-    29: TestView = 'Archetypes Tests: Protected Type View'
-    32: TestWrite = 'Archetypes Tests: Protected Type Write'
-
-./Products.Archetypes/Products/Archetypes/exportimport/archetypetool.py: 2 matches
-    10: from Products.Archetypes.config import TOOL_NAME
-    11: from Products.Archetypes.interfaces import IArchetypeTool
-
-./Products.Archetypes/Products/Archetypes/exportimport/configure.zcml: 5 matches
-    13: title="Archetypes setup"
-    14: description="Import various settings for Archetypes."
-    15: handler="Products.Archetypes.setuphandlers.setupArchetypes">
-    23: handler="Products.Archetypes.exportimport.archetypetool.importArchetypeTool">
-    31: handler="Products.Archetypes.exportimport.archetypetool.exportArchetypeTool">
-
-./Products.Archetypes/Products/Archetypes/exportimport/reference.py: 2 matches
-    5: from Products.Archetypes.exportimport import catalog
-    6: from Products.Archetypes.interfaces import IReferenceCatalog
-
-./Products.Archetypes/Products/Archetypes/exportimport/uid.py: 2 matches
-    5: from Products.Archetypes.exportimport import catalog
-    6: from Products.Archetypes.interfaces import IUIDCatalog
-
-./Products.Archetypes/Products/Archetypes/fieldproperty.py: 7 matches
-    13: These properties can only be used on Archetypes objects. They delegate
-    22: >>> from Products.Archetypes.atapi import *
-    35: >>> registerType(MyContent, 'Archetypes')
-    120: >>> from Products.Archetypes.atapi import *
-    130: >>> registerType(MyContent, 'Archetypes')
-    184: >>> from Products.Archetypes.atapi import *
-    193: >>> registerType(MyContent, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/interfaces/ITemplateMixin.py: 1 matches
-    1: from Products.Archetypes.interfaces.templatemixin import ITemplateMixin
-
-./Products.Archetypes/Products/Archetypes/interfaces/__init__.py: 14 matches
-    9: from Products.Archetypes.interfaces.field import IField
-    10: from Products.Archetypes.interfaces.field import IObjectField
-    11: from Products.Archetypes.interfaces.field import IStringField
-    12: from Products.Archetypes.interfaces.field import ITextField
-    13: from Products.Archetypes.interfaces.field import IDateTimeField
-    14: from Products.Archetypes.interfaces.field import ILinesField
-    15: from Products.Archetypes.interfaces.field import IIntegerField
-    16: from Products.Archetypes.interfaces.field import IFloatField
-    17: from Products.Archetypes.interfaces.field import IFileField
-    18: from Products.Archetypes.interfaces.field import IImageField
-    19: from Products.Archetypes.interfaces.field import IFixedPointField
-    20: from Products.Archetypes.interfaces.field import IReferenceField
-    21: from Products.Archetypes.interfaces.field import IComputedField
-    22: from Products.Archetypes.interfaces.field import IBooleanField
-
-./Products.Archetypes/Products/Archetypes/interfaces/athistoryaware.py: 1 matches
-    6: Provide access to older revisions of persistent Archetypes
-
-./Products.Archetypes/Products/Archetypes/interfaces/base.py: 2 matches
-    141: Products.Archetypes.Referenceable.Referenceable
-    142: Products.Archetypes.CatalogMultiplex.CatalogMultiplex
-
-./Products.Archetypes/Products/Archetypes/interfaces/field.py: 1 matches
-    298: explicitly, Archetypes will find and call this adapter.
-
-./Products.Archetypes/Products/Archetypes/interfaces/marshall.py: 1 matches
-    1: from Products.Archetypes.interfaces.layer import ILayer
-
-./Products.Archetypes/Products/Archetypes/interfaces/vocabulary.py: 1 matches
-    8: Products.Archetypes.utils.
-
-./Products.Archetypes/Products/Archetypes/log.py: 1 matches
-    3: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/profiles.zcml: 3 matches
-    7: name="Archetypes"
-    8: title="Archetypes"
-    10: description="Extension profile for default Archetypes setup."
-
-./Products.Archetypes/Products/Archetypes/profiles/default/skins.xml: 1 matches
-    4: directory="Products.Archetypes:skins/archetypes"/>
-
-./Products.Archetypes/Products/Archetypes/profiles/default/toolset.xml: 3 matches
-    6: class="Products.Archetypes.ArchetypeTool"/>
-    8: class="Products.Archetypes.ReferenceEngine.ReferenceCatalog"/>
-    10: class="Products.Archetypes.UIDCatalog.UIDCatalog"/>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/ATBIFolder.xml: 1 matches
-    9: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/ComplexType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/DDocument.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/Fact.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/MySimpleType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/Refnode.xml: 1 matches
-    9: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleBTreeFolder.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleFile.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleFolder.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleProtectedType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/public.py: 1 matches
-    5: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/references.py: 2 matches
-    1: from Products.Archetypes.ReferenceEngine import Reference
-    2: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.Archetypes/Products/Archetypes/setuphandlers.py: 4 matches
-    2: Archetypes setup handlers.
-    6: from Products.Archetypes.config import TOOL_NAME, REFERENCE_CATALOG, UID_CATALOG
-    57: def setupArchetypes(context):
-    59: Setup Archetypes step.
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/add_reference.cpy: 2 matches
-    12: from Products.Archetypes import PloneMessageFactory as _
-    13: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/content_edit_impl.py: 3 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-    105: from Products.Archetypes.utils import transaction_note
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/go_back.cpy: 2 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/rejectAnonymous.py: 2 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/validate_integrity.cpy: 2 matches
-    12: from Products.Archetypes import PloneMessageFactory as _
-    13: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/field.pt: 2 matches
-    59: tal:attributes="class string:field ArchetypesField-${fieldtypename};
-    82: tal:attributes="class python: test(error_id, 'field error ' + 'Archetypes' + widget.getName(), 'field ' + 'Archetypes' + widget.getName()) + ' ' + kss_class;
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/keyword.pt: 1 matches
-    100: <div class="ArchetypesKeywordValue" id=""
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/multiselection.pt: 1 matches
-    51: <div class="ArchetypesMultiSelectionValue" id=""
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/reference.pt: 2 matches
-    28: tal:condition="python:portal.portal_interface.objectImplements(ref,'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-    47: tal:condition="python:portal.portal_interface.objectImplements(ref,'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-
-./Products.Archetypes/Products/Archetypes/tests/atsitetestcase.py: 4 matches
-    8: from Products.Archetypes.tests import attestcase
-    9: from Products.Archetypes.tests.layer import ArchetypesSite
-    15: layer = ArchetypesSite
-    21: layer = ArchetypesSite
-
-./Products.Archetypes/Products/Archetypes/tests/attestcase.py: 8 matches
-    11: from Products.Archetypes.tests.layer import ZCML
-    18: profile_registry.registerProfile('Archetypes_sampletypes',
-    19: 'Archetypes Sample Content Types',
-    20: 'Extension profile including Archetypes sample content types',
-    22: 'Products.Archetypes',
-    32: ZopeTestCase.installProduct('Archetypes')
-    40: 'Products.Archetypes:Archetypes',
-    41: 'Products.Archetypes:Archetypes_sampletypes'])
-
-./Products.Archetypes/Products/Archetypes/tests/layer.py: 3 matches
-    28: import Products.Archetypes
-    29: zcml.load_config('configure.zcml', Products.Archetypes)
-    45: class ArchetypesSite(ZCML):
-
-./Products.Archetypes/Products/Archetypes/tests/test_annotation.py: 5 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.atapi import BaseSchema, Schema, StringField, \
-    32: from Products.Archetypes.tests.test_classgen import Dummy
-    33: from Products.Archetypes.tests.test_classgen import gen_class
-    34: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_athistoryaware.py: 2 matches
-    14: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    15: from Products.Archetypes.athistoryaware import ATHistoryAwareMixin
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseobject.py: 4 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.tests.utils import mkDummyInContext
-    31: from Products.Archetypes import PloneMessageFactory as _
-    32: from Products.Archetypes import atapi
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseschema.py: 9 matches
-    26: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.tests.test_classgen import Dummy
-    31: from Products.Archetypes import atapi
-    32: from Products.Archetypes.config import PKG_NAME, LANGUAGE_DEFAULT
-    33: from Products.Archetypes.interfaces.layer import ILayerContainer
-    35: from Products.Archetypes.ExtensibleMetadata import FLOOR_DATE
-    36: from Products.Archetypes.ExtensibleMetadata import CEILING_DATE
-    51: atapi.registerType(Dummy, 'Archetypes')
-    395: See Products.Archetypes.Field.DateTimeField.set
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseunit.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    33: from Products.Archetypes.tests.utils import normalize_html
-    34: from Products.Archetypes.atapi import BaseUnit
-    35: from Products.Archetypes.tests.test_classgen import Dummy
-    36: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_classgen.py: 6 matches
-    34: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    35: from Products.Archetypes.tests.utils import mkDummyInContext
-    36: from Products.Archetypes.tests.utils import gen_class
-    37: from Products.Archetypes import atapi
-    38: from Products.Archetypes.interfaces.base import IBaseUnit
-    39: from Products.Archetypes.ClassGen import generateMethods
-
-./Products.Archetypes/Products/Archetypes/tests/test_cmfessentials.py: 3 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_construction.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.Archetypes/Products/Archetypes/tests/test_contenttype.py: 6 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import gen_dummy
-    36: from Products.Archetypes.tests.test_classgen import default_text
-    38: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_copying.py: 6 matches
-    39: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    40: from Products.Archetypes.tests.utils import makeContent
-    41: from Products.Archetypes.tests.atsitetestcase import portal_owner
-    42: from Products.Archetypes.tests.atsitetestcase import portal_name
-    43: from Products.Archetypes.tests.atsitetestcase import default_user
-    45: from Products.Archetypes.tests.utils import PACKAGE_HOME
-
-./Products.Archetypes/Products/Archetypes/tests/test_default_mimetypes.py: 3 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    6: from Products.Archetypes.mimetype_utils import getDefaultContentType
-    7: from Products.Archetypes.mimetype_utils import setDefaultContentType
-
-./Products.Archetypes/Products/Archetypes/tests/test_doctests.py: 12 matches
-    5: 'Products.Archetypes.utils',
-    6: 'Products.Archetypes.Schema',
-    7: 'Products.Archetypes.ArchetypeTool',
-    8: 'Products.Archetypes.AllowedTypesByIface',
-    9: 'Products.Archetypes.Field',
-    10: 'Products.Archetypes.Marshall',
-    11: 'Products.Archetypes.fieldproperty',
-    12: 'Products.Archetypes.browser.widgets',
-    17: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    18: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    19: from Products.Archetypes.tests.doctestcase import ZopeDocTestSuite
-    29: package="Products.Archetypes.tests",
-
-./Products.Archetypes/Products/Archetypes/tests/test_event.py: 8 matches
-    2: Unittests for the events fired by Archetypes.
-    10: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    11: from Products.Archetypes.tests import utils
-    15: from Products.Archetypes.atapi import BaseContent
-    17: from Products.Archetypes.interfaces import IObjectPreValidation
-    18: from Products.Archetypes.interfaces import IObjectPostValidation
-    20: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    21: from Products.Archetypes.interfaces import IObjectEditedEvent
-
-./Products.Archetypes/Products/Archetypes/tests/test_extensions_utils.py: 3 matches
-    5: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    6: from Products.Archetypes.examples.ComplexType import ComplexType
-    7: from Products.Archetypes.Extensions import utils
-
-./Products.Archetypes/Products/Archetypes/tests/test_externaleditor.py: 4 matches
-    26: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    27: from Products.Archetypes.tests.utils import makeContent
-    29: from Products.Archetypes.atapi import *
-    30: from Products.Archetypes.interfaces.base import IBaseUnit
-
-./Products.Archetypes/Products/Archetypes/tests/test_fields.py: 8 matches
-    38: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    39: from Products.Archetypes.tests.atsitetestcase import portal_name
-    40: from Products.Archetypes.tests.utils import mkDummyInContext
-    41: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    43: from Products.Archetypes.atapi import Schema, DisplayList, BaseContentMixin, TextField
-    44: from Products.Archetypes.interfaces import IFieldDefaultProvider
-    45: from Products.Archetypes.interfaces.vocabulary import IVocabulary
-    46: from Products.Archetypes import Field as at_field
-
-./Products.Archetypes/Products/Archetypes/tests/test_fieldvalidation.py: 3 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    32: from Products.Archetypes.atapi import Field, IntegerField
-    33: from Products.Archetypes.BaseObject import BaseObject
-
-./Products.Archetypes/Products/Archetypes/tests/test_file_upload.py: 9 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    33: from Products.Archetypes.atapi import MetadataStorage, BaseContent
-    34: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    66: from Products.Archetypes import Field
-    288: from Products.Archetypes.BaseUnit import BaseUnit
-    296: from Products.Archetypes.BaseUnit import BaseUnit
-    336: from Products.Archetypes import Field
-    347: from Products.Archetypes.BaseUnit import BaseUnit
-    351: from Products.Archetypes import Field
-
-./Products.Archetypes/Products/Archetypes/tests/test_filename.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import gen_dummy
-    36: from Products.Archetypes.tests.test_classgen import default_text
-    38: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_functional.py: 8 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    32: from Products.Archetypes.tests.attestcase import default_user
-    33: from Products.Archetypes.tests.atsitetestcase import portal_owner
-    100: from Products.Archetypes.examples.DDocument import DDocument
-    136: from Products.Archetypes.examples.DDocument import DDocument
-    196: req.form['Archetypes.DDocument'] = True
-    235: from Products.Archetypes.Field import FileField
-    258: suite.addTest(FileSuite(testfile, package="Products.Archetypes.tests",
-
-./Products.Archetypes/Products/Archetypes/tests/test_index.py: 2 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_interfaces.py: 13 matches
-    38: from Products.Archetypes.BaseObject import BaseObject
-    39: from Products.Archetypes.BaseContent import BaseContent
-    40: from Products.Archetypes.BaseFolder import BaseFolder
-    41: from Products.Archetypes.BaseUnit import BaseUnit
-    42: from Products.Archetypes import Field as at_field  # use __all__ field
-    43: from Products.Archetypes.Marshall import Marshaller, PrimaryFieldMarshaller, \
-    45: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolder
-    46: from Products.Archetypes.Schema import Schema
-    47: from Products.Archetypes.SQLStorage import BaseSQLStorage, GadflySQLStorage, \
-    49: from Products.Archetypes.Storage import Storage, ReadOnlyStorage, \
-    51: from Products.Archetypes.atapi import registerType
-    52: from Products.Archetypes.tests.layer import ZCML
-    182: PROJECTNAME = 'Archetypes.tests'
-
-./Products.Archetypes/Products/Archetypes/tests/test_languagevocabulary.py: 8 matches
-    5: from Products.Archetypes.atapi import BaseSchema
-    6: from Products.Archetypes.atapi import listTypes
-    7: from Products.Archetypes.atapi import registerType
-    8: from Products.Archetypes.atapi import process_types
-    9: from Products.Archetypes.config import PKG_NAME
-    10: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    11: from Products.Archetypes.tests.test_classgen import Dummy
-    20: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_marshaller.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-    33: from Products.Archetypes.tests.utils import aputrequest
-    34: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    36: from Products.Archetypes.WebDAVSupport import PdataStreamIterator
-    37: from Products.Archetypes.examples.DDocument import DDocument
-
-./Products.Archetypes/Products/Archetypes/tests/test_metadata.py: 8 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import mkDummyInContext
-    33: from Products.Archetypes.tests.utils import gen_class
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import schema
-    39: from Products.Archetypes.atapi import BaseFolder
-    40: from Products.Archetypes import config
-    349: from Products.Archetypes.examples.DDocument import DDocument
-
-./Products.Archetypes/Products/Archetypes/tests/test_referenceCatalog.py: 5 matches
-    35: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    36: from Products.Archetypes.tests.utils import makeContent
-    38: from Products.Archetypes import config
-    39: from Products.Archetypes.references import HoldingReference, CascadeReference
-    276: self.app.REQUEST.form['Archetypes.Refnode'] = 1
-
-./Products.Archetypes/Products/Archetypes/tests/test_reference_optimizations.py: 2 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    4: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_referenceable.py: 4 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-    34: from Products.Archetypes.config import REFERENCE_CATALOG, UID_CATALOG, UUID_ATTR
-    36: from Products.Archetypes.atapi import DisplayList
-
-./Products.Archetypes/Products/Archetypes/tests/test_rename.py: 8 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    30: from Products.Archetypes.tests.utils import makeContent
-    31: from Products.Archetypes.tests.utils import populateFolder
-    33: from Products.Archetypes.tests.utils import wrap_method
-    34: from Products.Archetypes.tests.utils import unwrap_method
-    35: from Products.Archetypes.utils import shasattr
-    36: from Products.Archetypes.atapi import BaseContent
-    37: from Products.Archetypes.config import UUID_ATTR
-
-./Products.Archetypes/Products/Archetypes/tests/test_schemata.py: 8 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.atapi import BaseSchema, BaseContent, registerType, \
-    33: from Products.Archetypes.config import PKG_NAME
-    34: from Products.Archetypes.Schema import Schemata
-    35: from Products.Archetypes.Schema import getNames
-    36: from Products.Archetypes.Field import StringField
-    37: from Products.Archetypes.exceptions import SchemaException
-    50: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_schemata_manipulation.py: 3 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.atapi import StringField
-    31: from Products.Archetypes.Schema import ManagedSchema
-
-./Products.Archetypes/Products/Archetypes/tests/test_security.py: 8 matches
-    6: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    7: from Products.Archetypes.tests.utils import makeContent
-    9: from Products.Archetypes.Storage import AttributeStorage
-    10: from Products.Archetypes.examples.SimpleType import TestView, TestWrite
-    126: self.check('from Products.Archetypes.utils import transaction_note')
-    129: self.check('from Products.Archetypes.utils import transaction_note;'
-    133: self.check('from Products.Archetypes import DisplayList')
-    136: self.check('from Products.Archetypes import DisplayList;'
-
-./Products.Archetypes/Products/Archetypes/tests/test_storage.py: 5 matches
-    28: from Products.Archetypes.atapi import AttributeStorage, MetadataStorage
-    30: from Products.Archetypes.tests.attestcase import ATTestCase
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.test_classgen import Dummy
-    33: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_templatemixin.py: 3 matches
-    26: from Products.Archetypes.config import TOOL_NAME
-    27: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    28: from Products.Archetypes.TemplateMixin import TemplateMixin
-
-./Products.Archetypes/Products/Archetypes/tests/test_traverse.py: 5 matches
-    6: from Products.Archetypes.traverse import ImageTraverser
-    7: from Products.Archetypes.atapi import ImageField
-    71: context.field = MockField("Products.Archetypes.Field.ImageField")
-    77: context.field = MockField("Products.Archetypes.Field.ImageField")
-    83: context.field = MockField("Products.Archetypes.Field.ImageField")
-
-./Products.Archetypes/Products/Archetypes/tests/test_unicode.py: 2 matches
-    32: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    35: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_update_schema.py: 12 matches
-    32: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    33: from Products.Archetypes.tests.utils import mkDummyInContext
-    34: from Products.Archetypes.atapi import TextField, BaseSchema, Schema, BaseContent
-    36: from Products.Archetypes.ArchetypeTool import registerType
-    85: So: if you copy this test to an earlier Archetypes and it
-    105: registerType(Dummy1, 'Archetypes')
-    164: registerType(Dummy1, 'Archetypes')
-    188: self.attool._types['Archetypes.Dummy1'] = 'cheat'
-    189: self.assertEqual(self.types_to_update(), ['Archetypes.Dummy1'])
-    203: self.attool._types['Archetypes.Dummy1'] = 'cheat'
-    204: self.assertEqual(self.types_to_update(), ['Archetypes.Dummy1'])
-    247: request.form['Archetypes.DDocument'] = True
-
-./Products.Archetypes/Products/Archetypes/tests/test_utils.py: 4 matches
-    29: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.utils import DisplayList
-    31: from Products.Archetypes.utils import IntDisplayList
-    32: from Products.Archetypes.utils import make_uuid
-
-./Products.Archetypes/Products/Archetypes/tests/test_utils2.py: 2 matches
-    29: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.utils import OrderedDict
-
-./Products.Archetypes/Products/Archetypes/tests/test_validation.py: 1 matches
-    26: from Products.Archetypes.tests.attestcase import ATTestCase
-
-./Products.Archetypes/Products/Archetypes/tests/test_varschema.py: 5 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    29: from Products.Archetypes.atapi import BaseSchema, BaseContent, Schema, \
-    31: from Products.Archetypes.config import PKG_NAME
-    32: from Products.Archetypes.VariableSchemaSupport import VariableSchemaSupport
-    45: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_widgets.py: 4 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    33: from Products.Archetypes.tests.utils import makeContent
-    34: from Products.Archetypes.tests.test_fields import FakeRequest
-
-./Products.Archetypes/Products/Archetypes/tests/utils.py: 7 matches
-    37: from Products.Archetypes.atapi import registerType
-    38: from Products.Archetypes.atapi import process_types
-    39: from Products.Archetypes.atapi import listTypes
-    40: from Products.Archetypes.atapi import BaseContent
-    41: from Products.Archetypes.config import PKG_NAME
-    43: logger = logging.getLogger('Archetypes')
-    53: registerType(klass, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/traverse.py: 2 matches
-    4: from Products.Archetypes.interfaces import IBaseObject
-    5: from Products.Archetypes.atapi import ImageField
-
-./Products.Archetypes/Products/Archetypes/utils.py: 5 matches
-    21: from Products.Archetypes.log import log
-    22: from Products.Archetypes.config import DEBUG_SECURITY
-    32: logger = logging.getLogger('Archetypes')
-    38: from Products.Archetypes.Schema import Schemata
-    865: charset default changed to utf-8 for consistency with the rest of Archetypes.
-
-./Products.Archetypes/Products/Archetypes/uuid.py: 2 matches
-    8: from Products.Archetypes.config import UUID_ATTR
-    9: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.Archetypes/Products/Archetypes/validator.py: 1 matches
-    3: from Products.Archetypes.Storage import AttributeStorage
-
-./Products.Archetypes/Products/Archetypes/www/registry.xml: 43 matches
-    7: <fieldelement id="Products.Archetypes.Fields.IntegerField">
-    10: <defaultwidget>Products.Archetypes.Widgets.IntegerWidget</defaultwidget>
-    12: <widget>Products.Archetypes.Widgets.IntegerWidget</widget>
-    37: <fieldelement id="Products.Archetypes.Fields.LinesField">
-    40: <defaultwidget>Products.Archetypes.Widgets.LinesWidget</defaultwidget>
-    42: <widget>Products.Archetypes.Widgets.LinesWidget</widget>
-    67: <fieldelement id="Products.Archetypes.Fields.StringField">
-    70: <defaultwidget>Products.Archetypes.Widgets.StringWidget</defaultwidget>
-    72: <widget>Products.Archetypes.Widgets.SelectionWidget</widget>
-    73: <widget>Products.Archetypes.Widgets.StringWidget</widget>
-    98: <fieldelement id="Products.Archetypes.Fields.ReferenceField">
-    101: <defaultwidget>Products.Archetypes.Widgets.ReferenceWidget</defaultwidget>
-    103: <widget>Products.Archetypes.Widgets.ReferenceWidget</widget>
-    130: <widgetelement id="Products.Archetypes.Widgets.IntegerWidget">
-    144: <widgetelement id="Products.Archetypes.Widgets.LinesWidget">
-    158: <widgetelement id="Products.Archetypes.Widgets.StringWidget">
-    172: <widgetelement id="Products.Archetypes.Widgets.SelectionWidget">
-    186: <widgetelement id="Products.Archetypes.Widgets.ReferenceWidget">
-    209: <type id="Products.Archetypes.TTWTypes.Customer" selected="1">
-    211: <basetype>Products.Archetypes.BaseContent.BaseContent</basetype>
-    215: <schemata id="Products.Archetypes.TTWTypes.Customer.default">
-    217: <field id="Products.Archetypes.TTWTypes.Customer.default.firstname" selected="1">
-    219: <type>Products.Archetypes.Fields.StringField</type>
-    222: <type>Products.Archetypes.Widgets.StringWidget</type>
-    231: <field id="Products.Archetypes.TTWTypes.Customer.default.lastname">
-    233: <type>Products.Archetypes.Fields.StringField</type>
-    236: <type>Products.Archetypes.Widgets.StringWidget</type>
-    246: <schemata id="Products.Archetypes.TTWTypes.Customer.other">
-    248: <field id="Products.Archetypes.TTWTypes.Customer.other.country">
-    250: <type>Products.Archetypes.Fields.StringField</type>
-    253: <type>Products.Archetypes.Widgets.SelectionWidget</type>
-    260: <field id="Products.Archetypes.TTWTypes.Customer.other.homepage">
-    262: <type>Products.Archetypes.Fields.StringField</type>
-    265: <type>Products.Archetypes.Widgets.StringWidget</type>
-    277: <type id="Products.Archetypes.TTWTypes.Article">
-    283: <schemata id="Products.Archetypes.TTWTypes.Article.default">
-    285: <field id="Products.Archetypes.TTWTypes.Article.default.author">
-    287: <type>Products.Archetypes.Fields.ReferenceField</type>
-    290: <type>Products.Archetypes.Widgets.ReferenceWidget</type>
-    297: <type>Products.Archetypes.TTWTypes.Customer</type>
-    306: <basetype>Products.Archetypes.BaseContent.BaseContent</basetype>
-    315: <type>Products.Archetypes.Fields.StringField</type>
-    318: <type>Products.Archetypes.Widgets.StringWidget</type>
-
-./Products.Archetypes/setup.py: 5 matches
-    5: setup(name='Products.Archetypes',
-    7: description="Archetypes is a developers framework for rapidly "
-    17: keywords='Archetypes Plone CMF Zope',
-    18: author='Archetypes development team',
-    20: url='http://pypi.python.org/pypi/Products.Archetypes',
-
-./Products.CMFDiffTool/Products/CMFDiffTool/tests/at_compound_tests.py: 1 matches
-    7: from Products.Archetypes import atapi
-
-./Products.CMFDynamicViewFTI/Products/CMFDynamicViewFTI/browserdefault.py: 2 matches
-    5: The implementation extends TemplateMixin from Archetypes, and implements
-    33: TemplateMixin in Archetypes does), and/or to set a contained
-
-./Products.CMFEditions/Products/CMFEditions/CopyModifyMergeRepositoryTool.py: 5 matches
-    66: from Products.Archetypes.event import ObjectEditedEvent
-    67: from Products.Archetypes.interfaces import IBaseObject
-    73: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    74: from Products.Archetypes.config import REFERENCE_ANNOTATION as REFERENCES_CONTAINER_NAME
-    75: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.CMFEditions/Products/CMFEditions/StandardModifiers.py: 3 matches
-    59: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    60: from Products.Archetypes.config import UUID_ATTR, REFERENCE_ANNOTATION
-    961: ANNOTATION_PREFIX = 'Archetypes.storage.AnnotationStorage-'
-
-./Products.CMFEditions/Products/CMFEditions/browser/configure.zcml: 2 matches
-    13: <configure zcml:condition="installed Products.Archetypes">
-    16: manager="Products.Archetypes.interfaces.IEditAfterFieldsets"
-
-./Products.CMFEditions/Products/CMFEditions/configure.zcml: 5 matches
-    25: <configure zcml:condition="installed Products.Archetypes">
-    27: Products.Archetypes.interfaces.IWebDAVObjectInitializedEvent"
-    31: Products.Archetypes.interfaces.IWebDAVObjectEditedEvent"
-    35: Products.Archetypes.interfaces.IObjectInitializedEvent"
-    39: Products.Archetypes.interfaces.IObjectEditedEvent"
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/Extensions/Install.py: 2 matches
-    5: from Products.Archetypes.Extensions.utils import installTypes
-    6: from Products.Archetypes import listTypes
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/FAQ.py: 1 matches
-    32: from Products.Archetypes.atapi import *
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/FAQQuestion.py: 1 matches
-    31: from Products.Archetypes.atapi import *
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/__init__.py: 2 matches
-    3: from Products.Archetypes.atapi import *
-    4: from Products.Archetypes import listTypes
-
-./Products.CMFEditions/Products/CMFEditions/tests/test_ATReferences.py: 3 matches
-    37: from Products.Archetypes.config import REFERENCE_ANNOTATION as \
-    86: from Products.Archetypes.config import REFERENCE_ANNOTATION as \
-    215: from Products.Archetypes import atapi
-
-./Products.CMFEditions/Products/CMFEditions/tests/test_IntegrationTests.py: 1 matches
-    1180: from Products.Archetypes import atapi
-
-./Products.CMFEditions/setup.py: 1 matches
-    29: 'Products.Archetypes',
-
-./Products.CMFPlone/Products/CMFPlone/CatalogTool.py: 6 matches
-    79: 'Products.Archetypes.interfaces.athistoryaware.IATHistoryAware',
-    80: 'Products.Archetypes.interfaces.base.IBaseContent',
-    81: 'Products.Archetypes.interfaces.base.IBaseFolder',
-    82: 'Products.Archetypes.interfaces.base.IBaseObject',
-    83: 'Products.Archetypes.interfaces.metadata.IExtensibleMetadata',
-    84: 'Products.Archetypes.interfaces.referenceable.IReferenceable',
-
-./Products.CMFPlone/Products/CMFPlone/PloneTool.py: 1 matches
-    383: Requires mimetype registry from Archetypes >= 1.3.
-
-./Products.CMFPlone/Products/CMFPlone/Portal.py: 1 matches
-    130: This is copied from Archetypes Basefolder and is needed by the
-
-./Products.CMFPlone/Products/CMFPlone/factory.py: 1 matches
-    25: u'Products.Archetypes:Archetypes',
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/skins.xml: 1 matches
-    12: directory="Products.Archetypes:skins/archetypes"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/dependencies/metadata.xml: 1 matches
-    5: <dependency>profile-Products.Archetypes:Archetypes</dependency>
-
-./Products.CMFPlone/Products/CMFPlone/setuphandlers.py: 2 matches
-    36: 'Archetypes', 'Products.Archetypes',
-    393: 'archetype_tool': 'Archetypes specific settings',
-
-./Products.CMFPlone/Products/CMFPlone/tests/dummy.py: 1 matches
-    150: ComputedAttributes (which are used in Archetypes ImageField).
-
-./Products.CMFPlone/Products/CMFPlone/tests/testDateTimeIntegration.py: 1 matches
-    138: See Products.Archetypes.Field.DateTimeField.set
-
-./Products.CMFPlone/Products/CMFPlone/tests/testSiteAdminRole.py: 3 matches
-    46: 'Add Archetypes Tools':                                     0,
-    111: 'Archetypes Tests: Protected Type View':                    0,
-    112: 'Archetypes Tests: Protected Type Write':                   0,
-
-./Products.CMFPlone/setup.py: 1 matches
-    42: 'Products.Archetypes',
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseBTreeFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseBTreeFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseContent.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseContent
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseObject.py: 7 matches
-    12: from Products.Archetypes.atapi import BaseObject
-    13: from Products.Archetypes.config import LANGUAGE_DEFAULT
-    14: from Products.Archetypes.config import REFERENCE_CATALOG
-    15: from Products.Archetypes.config import UID_CATALOG
-    16: from Products.Archetypes.interfaces import IMultiPageSchema
-    17: from Products.Archetypes.utils import mapply
-    18: from Products.Archetypes.utils import shasattr
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NOrderedBaseFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import OrderedBaseFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/config.py: 1 matches
-    3: from Products.Archetypes.Field import ReferenceField
-
-./Products.LinguaPlone/Products/LinguaPlone/configure.zcml: 1 matches
-    20: for="Products.Archetypes.interfaces.IBaseObject"
-
-./Products.LinguaPlone/Products/LinguaPlone/profiles/test_types/types/UntranslatableType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.LinguaPlone/Products/LinguaPlone/public.py: 1 matches
-    1: from Products.Archetypes.atapi import *
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/dummy.py: 1 matches
-    239: from Products.Archetypes.public import registerType
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_api.py: 1 matches
-    312: from Products.Archetypes.config import LANGUAGE_DEFAULT
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_config.py: 1 matches
-    36: from Products.Archetypes.Field import ReferenceField
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_generatedMethod.py: 2 matches
-    26: the one present at Products.Archetypes.ExtensibleMetadata.
-    27: This method in Archetypes has a default value for a parameter and it
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_language_independent.py: 1 matches
-    81: key = 'Archetypes.storage.AnnotationStorage-text'
-
-./Products.LinguaPlone/Products/LinguaPlone/utils.py: 7 matches
-    12: from Products.Archetypes.ClassGen import GeneratorError, _modes
-    13: from Products.Archetypes.ClassGen import Generator as ATGenerator
-    14: from Products.Archetypes.ClassGen import ClassGenerator as ATClassGenerator
-    15: from Products.Archetypes.exceptions import ReferenceException
-    16: from Products.Archetypes.ArchetypeTool import registerType as registerATType
-    343: from Products.Archetypes.ArchetypeTool import base_factory_type_information
-    344: from Products.Archetypes.ArchetypeTool import modify_fti
-
-./Products.LinguaPlone/setup.py: 1 matches
-    36: 'Products.Archetypes',
-
-./Products.Marshall/Products/Marshall/handlers/base.py: 2 matches
-    34: from Products.Archetypes.interfaces.marshall import IMarshall
-    35: from Products.Archetypes.interfaces.layer import ILayer
-
-./Products.Marshall/Products/Marshall/handlers/primaryfield.py: 5 matches
-    36: from Products.Archetypes.Field import TextField, FileField
-    37: from Products.Archetypes.interfaces.base import IBaseUnit
-    38: from Products.Archetypes.debug import log
-    39: from Products.Archetypes.utils import shasattr
-    40: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/handlers/rfc822header.py: 2 matches
-    40: from Products.Archetypes.interfaces.base import IBaseUnit
-    41: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/handlers/simple.py: 3 matches
-    30: from Products.Archetypes.Field import ReferenceField
-    31: from Products.Archetypes.config import REFERENCE_CATALOG, UUID_ATTR
-    32: from Products.Archetypes.debug import log
-
-./Products.Marshall/Products/Marshall/marshaller.py: 2 matches
-    25: from Products.Archetypes.Marshall import Marshaller
-    26: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/namespaces/__init__.py: 2 matches
-    4: from atns import Archetypes
-    10: registerNamespace(Archetypes)
-
-./Products.Marshall/Products/Marshall/namespaces/atns.py: 12 matches
-    35: from Products.Archetypes import config as atcfg
-    36: from Products.Archetypes.debug import log
-    37: from Products.Archetypes.interfaces import IBaseUnit
-    38: from Products.Archetypes.interfaces import IObjectField
-    39: from Products.Archetypes import public as atapi
-    251: node = dom.createElementNS(Archetypes.xmlns, "uid")
-    280: <define name="ArchetypesFields"
-    287: All non-standard Archetypes fields are represented by a 'field'
-    296: References can be made by UID (Archetypes),
-    319: class Archetypes(XmlNamespace):
-    326: super(Archetypes, self).__init__()
-    476: return [("ArchetypesFields", "zeroOrMore", RNGSchemaFragment)]
-
-./Products.Marshall/Products/Marshall/namespaces/uuns.py: 1 matches
-    29: from Products.Archetypes import public as atapi
-
-./Products.Marshall/Products/Marshall/tests/examples/__init__.py: 1 matches
-    2: from Products.Archetypes.public import listTypes, process_types
-
-./Products.Marshall/Products/Marshall/tests/examples/blob.py: 1 matches
-    1: from Products.Archetypes.public import *
-
-./Products.Marshall/Products/Marshall/tests/examples/person.py: 1 matches
-    1: from Products.Archetypes.public import *
-
-./Products.Marshall/Products/Marshall/tests/test_export.py: 1 matches
-    33: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/Products/Marshall/tests/test_marshall.py: 1 matches
-    31: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/Products/Marshall/tests/test_predicate.py: 1 matches
-    30: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/setup.py: 2 matches
-    7: description="Configurable Marshallers for Archetypes",
-    40: 'Products.Archetypes',
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_encoding.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_magic.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_mimetypes.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/setup.py: 1 matches
-    24: 'Products.Archetypes',
-
-./Products.PlonePAS/Products/PlonePAS/storage.py: 1 matches
-    11: from Products.Archetypes.public import IStorage
-
-./Products.PlonePAS/setup.py: 2 matches
-    26: 'Products.Archetypes',
-    29: 'Products.Archetypes',
-
-./Products.PloneTestCase/Products/PloneTestCase/setup.py: 2 matches
-    33: ZopeTestCase.installProduct('Archetypes', quiet=1)
-    68: ZopeTestCase.installProduct('Archetypes', quiet=1)
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_engine.py: 1 matches
-    1: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_graph.py: 1 matches
-    1: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_intelligenttext.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_transforms.py: 1 matches
-    4: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_xss.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/setup.py: 1 matches
-    25: 'Products.Archetypes',
-
-./Products.TinyMCE/Products/TinyMCE/browser/configure.zcml: 1 matches
-    91: for="Products.Archetypes.interfaces.IBaseObject"
-
-./Products.TinyMCE/Products/TinyMCE/tests/base.py: 2 matches
-    17: import Products.Archetypes
-    18: Products.Archetypes    # pyflakes
-
-./Products.TinyMCE/Products/TinyMCE/tests/test_widget_settings.py: 2 matches
-    13: from Products.Archetypes import public as atapi
-    55: 'Archetypes is not installed. Skipping AT schema adapter test.')
-
-./Products.TinyMCE/Products/TinyMCE/utility.py: 4 matches
-    15: from Products.Archetypes.Field import ImageField
-    16: from Products.Archetypes.interfaces import IBaseObject
-    17: from Products.Archetypes.interfaces.field import IImageField
-    724: :param field: Dexterity or Archetypes Field instance
-
-./Products.TinyMCE/setup.py: 1 matches
-    39: 'Products.Archetypes',
-
-./Products.contentmigration/Products/contentmigration/archetypes.py: 3 matches
-    6: from Products.Archetypes.ArchetypeTool import getType
-    7: from Products.Archetypes.config import REFERENCE_ANNOTATION
-    8: from Products.Archetypes.Referenceable import Referenceable
-
-./Products.contentmigration/Products/contentmigration/basemigrator/migrator.py: 1 matches
-    43: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.contentmigration/Products/contentmigration/field.py: 2 matches
-    1: from Products.Archetypes.Storage import AttributeStorage
-    25: Archetypes storage, which defaults to AttributeStorage.
-
-./Products.contentmigration/Products/contentmigration/inplace.py: 1 matches
-    15: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.contentmigration/Products/contentmigration/migrator.py: 1 matches
-    84: on an Archetypes storage level, which means that it's capable of migrating
-
-./Products.contentmigration/Products/contentmigration/tests/extensions.py: 2 matches
-    2: from Products.Archetypes.public import StringField
-    3: from Products.Archetypes.public import StringWidget
-
-./Products.contentmigration/Products/contentmigration/tests/testATFieldMigration.py: 2 matches
-    6: from Products.Archetypes.Storage.annotation import AnnotationStorage
-    7: from Products.Archetypes.Storage import AttributeStorage
-
-./Products.contentmigration/setup.py: 1 matches
-    14: keywords='Plone Archetypes ATContentTypes',
-
-./Products.validation/Products/validation/tests/test_validation.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.validation/setup.py: 2 matches
-    7: description="Data validation package for Archetypes",
-    24: 'Products.Archetypes',
-
-./archetypes.querywidget/archetypes/querywidget/configure.zcml: 1 matches
-    16: description="An Archetypeswidget to create persistent searchqueries. This is used by plone.app.collection."
-
-./archetypes.querywidget/archetypes/querywidget/field.py: 2 matches
-    4: from Products.Archetypes.Field import ObjectField
-    5: from Products.Archetypes.Field import registerField
-
-./archetypes.querywidget/archetypes/querywidget/tests/base.py: 4 matches
-    35: class ArchetypesQueryWidgetLayer(PloneSandboxLayer):
-    80: QUERYWIDGET_FIXTURE = ArchetypesQueryWidgetLayer()
-    84: name="ArchetypesQueryWidget:Integration")
-    87: class ArchetypesQueryWidgetTestCase(unittest.TestCase):
-
-./archetypes.querywidget/archetypes/querywidget/tests/test_integration_doctest.py: 1 matches
-    14: test_class=base.ArchetypesQueryWidgetTestCase,
-
-./archetypes.querywidget/archetypes/querywidget/widget.py: 2 matches
-    3: from Products.Archetypes.Widget import TypesWidget
-    4: from Products.Archetypes.Registry import registerWidget
-
-./archetypes.referencebrowserwidget/setup.py: 1 matches
-    33: description="A referencebrowser implementation for Archetypes",
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/__init__.py: 1 matches
-    2: from Products.Archetypes.atapi import process_types, listTypes
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/configure.zcml: 1 matches
-    11: for="Products.Archetypes.interfaces.IReferenceable"
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/view.py: 2 matches
-    29: from Products.Archetypes.config import REFERENCE_CATALOG
-    53: and can not be a view, since it is macro widget for Archetypes.
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/configure.zcml: 5 matches
-    27: <class class="Products.Archetypes.Field.ReferenceField">
-    42: for="Products.Archetypes.interfaces.IReferenceable
-    49: for="Products.Archetypes.interfaces.IReferenceable
-    56: for="Products.Archetypes.interfaces.IReferenceable
-    63: for="Products.Archetypes.interfaces.IReferenceable
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/demo.py: 5 matches
-    3: from Products.Archetypes.atapi import ReferenceField
-    4: from Products.Archetypes.atapi import BaseSchema
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import BaseContent
-    7: from Products.Archetypes.atapi import registerType
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/interfaces.py: 1 matches
-    3: from Products.Archetypes.interfaces import IObjectField
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.pt: 2 matches
-    43: 'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-    76: 'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/base.py: 1 matches
-    11: from Products.Archetypes.tests.utils import makeContent
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/test_product.py: 2 matches
-    22: from Products.Archetypes.tests.utils import makeContent
-    611: r'<div class="field ArchetypesReferenceBrowserWidget .*?" '
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/test_utils.py: 1 matches
-    5: from Products.Archetypes.tests.utils import makeContent
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/widget.py: 4 matches
-    6: from Products.Archetypes.utils import shasattr
-    7: from Products.Archetypes.Registry import registerWidget,registerPropertyType
-    8: from Products.Archetypes.Widget import ReferenceWidget
-    140: used_for=('Products.Archetypes.Field.ReferenceField',)
-
-./archetypes.schemaextender/archetypes/schemaextender/extender.py: 4 matches
-    4: from Products.Archetypes.interfaces import ISchema
-    5: from Products.Archetypes.utils import OrderedDict
-    76: >>> from Products.Archetypes import atapi
-    157: Archetypes.Schema.factory. It allows you to register named adapter
-
-./archetypes.schemaextender/archetypes/schemaextender/field.py: 1 matches
-    2: from Products.Archetypes import atapi
-
-./archetypes.schemaextender/archetypes/schemaextender/implements.zcml: 3 matches
-    4: <!-- Let any Archetypes content type be extensible -->
-    5: <class class="Products.Archetypes.BaseContent.BaseContent">
-    9: <class class="Products.Archetypes.BaseFolder.BaseFolder">
-
-./archetypes.schemaextender/archetypes/schemaextender/interfaces.py: 1 matches
-    63: Products.Archetypes.utils.OrderedDict) to guarantee proper ordering
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/case.py: 1 matches
-    7: from Products.Archetypes.public import BaseObject
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/mocks.py: 1 matches
-    10: from Products.Archetypes.interfaces.field import IField
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testAccessor.py: 1 matches
-    3: from Products.Archetypes.atapi import StringField, StringWidget
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testOrdering.py: 3 matches
-    2: from Products.Archetypes.public import Schema
-    3: from Products.Archetypes.public import ManagedSchema
-    4: from Products.Archetypes.utils import OrderedDict
-
-./archetypes.schemaextender/setup.py: 2 matches
-    7: description="Dynamically extend Archetypes schemas with named adapters.",
-    15: keywords='Archetypes Schema extend',
-
-./plone.app.blob/src/plone/app/blob/__init__.py: 1 matches
-    16: from Products.Archetypes import atapi
-
-./plone.app.blob/src/plone/app/blob/content.py: 3 matches
-    9: from Products.Archetypes.atapi import AnnotationStorage
-    10: from Products.Archetypes.atapi import ATFieldProperty
-    15: from Products.Archetypes.atapi import registerType
-
-./plone.app.blob/src/plone/app/blob/field.py: 4 matches
-    18: from Products.Archetypes.atapi import ObjectField, FileWidget, ImageWidget
-    19: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    20: from Products.Archetypes.Registry import registerField
-    21: from Products.Archetypes.utils import contentDispositionHeader
-
-./plone.app.blob/src/plone/app/blob/migrations.py: 1 matches
-    15: from Products.Archetypes.interfaces import ISchema
-
-./plone.app.blob/src/plone/app/blob/mixins.py: 2 matches
-    4: from Products.Archetypes.Field import ImageField
-    41: `Archetypes.Field.ImageField` """
-
-./plone.app.blob/src/plone/app/blob/subtypes/blob.py: 2 matches
-    3: from Products.Archetypes.atapi import AnnotationStorage
-    4: from Products.Archetypes.atapi import FileWidget
-
-./plone.app.blob/src/plone/app/blob/subtypes/file.py: 2 matches
-    3: from Products.Archetypes.atapi import AnnotationStorage
-    4: from Products.Archetypes.atapi import FileWidget
-
-./plone.app.blob/src/plone/app/blob/subtypes/image.py: 2 matches
-    4: from Products.Archetypes.atapi import AnnotationStorage
-    5: from Products.Archetypes.atapi import ImageWidget
-
-./plone.app.blob/src/plone/app/blob/tests/lingua.py: 1 matches
-    4: from Products.Archetypes.atapi import StringField
-
-./plone.app.blob/src/plone/app/blob/tests/test_base_fields.py: 3 matches
-    3: from Products.Archetypes.public import BaseSchema, Schema, BaseContent
-    4: from Products.Archetypes.public import FileWidget, ImageWidget
-    5: from Products.Archetypes.public import registerType
-
-./plone.app.blob/src/plone/app/blob/tests/test_replacements.py: 2 matches
-    6: from Products.Archetypes.atapi import ImageField, AnnotationStorage
-    7: from Products.Archetypes.Field import Image
-
-./plone.app.caching/plone/app/caching/caching.zcml: 8 matches
-    119: <configure zcml:condition="installed Products.Archetypes">
-    121: <cache:ruleset ruleset="plone.content.file" for="Products.Archetypes.Field.Image" />
-    125: <!-- Archetypes based folders and non-folderish content items -->
-    126: <configure zcml:condition="installed Products.Archetypes">
-    129: <cache:ruleset ruleset="plone.content.itemView"   for="Products.Archetypes.BaseContent.BaseContent" />
-    130: <cache:ruleset ruleset="plone.content.folderView" for="Products.Archetypes.BaseFolder.BaseFolder" />
-    167: <!-- Archetypes object fields -->
-    168: <configure zcml:condition="installed Products.Archetypes">
-
-./plone.app.caching/plone/app/caching/lastmodified.py: 2 matches
-    22: from Products.Archetypes.Field import Image as ImageScale
-    111: most CMF, Archetypes and Dexterity content
-
-./plone.app.caching/plone/app/caching/purge.py: 2 matches
-    28: from Products.Archetypes.interfaces import IBaseObject
-    29: from Products.Archetypes.interfaces import IFileField, IImageField, ITextField
-
-./plone.app.caching/plone/app/caching/tests/test_purge.py: 2 matches
-    37: from Products.Archetypes import atapi
-    38: from Products.Archetypes.Schema.factory import instanceSchemaFactory
-
-./plone.app.collection/plone/app/collection/__init__.py: 1 matches
-    11: from Products.Archetypes import atapi
-
-./plone.app.collection/plone/app/collection/collection.py: 2 matches
-    7: from Products.Archetypes import atapi
-    8: from Products.Archetypes.atapi import (BooleanField,
-
-./plone.app.collection/setup.py: 1 matches
-    33: 'Products.Archetypes',
-
-./plone.app.contentrules/plone/app/contentrules/configure.zcml: 2 matches
-    82: zcml:condition="installed Products.Archetypes"
-    83: for="Products.Archetypes.interfaces.IObjectInitializedEvent"
-
-./plone.app.contentrules/plone/app/contentrules/handlers.py: 3 matches
-    21: from Products.Archetypes.interfaces import IBaseObject
-    22: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    165: There is special handling for Archetypes objects.
-
-./plone.app.contentrules/plone/app/contentrules/tests/dummy.py: 1 matches
-    33: class DummyNonArchetypesContext(object):
-
-./plone.app.contentrules/plone/app/contentrules/tests/test_handlers.py: 1 matches
-    18: self.uuidaware = dummy.DummyNonArchetypesContext()
-
-./plone.app.dexterity/setup.py: 1 matches
-    10: "alternative to Archetypes that is more light-weight and modular.",
-
-./plone.app.folder/src/plone/app/folder/__init__.py: 1 matches
-    14: from Products.Archetypes import atapi
-
-./plone.app.folder/src/plone/app/folder/base.py: 1 matches
-    13: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.folder/src/plone/app/folder/bbb.py: 1 matches
-    21: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.folder/src/plone/app/folder/tests/content.py: 1 matches
-    6: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.imaging/src/plone/app/imaging/configure.zcml: 5 matches
-    12: <class class="Products.Archetypes.Field.ImageField">
-    13: <implements interface="Products.Archetypes.interfaces.IImageField" />
-    16: <class class="Products.Archetypes.atapi.BaseObject">
-    27: for="Products.Archetypes.interfaces.IImageField"
-    44: for="Products.Archetypes.interfaces.IBaseObject"
-
-./plone.app.imaging/src/plone/app/imaging/interfaces.py: 1 matches
-    4: from Products.Archetypes.interfaces import IBaseObject as IATBaseObject
-
-./plone.app.imaging/src/plone/app/imaging/monkey.py: 4 matches
-    2: from Products.Archetypes.Field import ImageField
-    3: from Products.Archetypes.utils import shasattr
-    13: and other callables;  see Archetypes/Field.py """
-    34: `Archetypes.Field.ImageField` """
-
-./plone.app.imaging/src/plone/app/imaging/scale.py: 1 matches
-    2: from Products.Archetypes.Field import Image
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_setup.py: 1 matches
-    2: from Products.Archetypes.interfaces import IImageField
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_traverse.py: 1 matches
-    9: from Products.Archetypes.atapi import ImageField
-
-./plone.app.imaging/src/plone/app/imaging/traverse.py: 2 matches
-    5: from Products.Archetypes.interfaces import IImageField
-    6: from Products.Archetypes.Field import HAS_PIL
-
-./plone.app.iterate/plone/app/iterate/browser/control.py: 1 matches
-    28: from Products.Archetypes.interfaces import IReferenceable
-
-./plone.app.iterate/plone/app/iterate/configure.zcml: 1 matches
-    43: <class class="Products.Archetypes.BaseObject.BaseObject">
-
-./plone.app.iterate/plone/app/iterate/copier.py: 1 matches
-    35: from Products.Archetypes.Referenceable import Referenceable
-
-./plone.app.iterate/plone/app/iterate/interfaces.py: 4 matches
-    32: from Products.Archetypes.interfaces import IReference
-    82: relation = Attribute("The Working Copy Archetypes Relation Object")
-    97: relation = Attribute("The Working Copy Archetypes Relation Object")
-    112: relation = Attribute("The Working Copy Archetypes Relation Object")
-
-./plone.app.iterate/plone/app/iterate/relation.py: 2 matches
-    30: from Products.Archetypes import config as atconf
-    31: from Products.Archetypes.ReferenceEngine import Reference
-
-./plone.app.iterate/plone/app/iterate/tests/test_iterate.py: 1 matches
-    165: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.iterate/plone/app/iterate/tests/utils.py: 1 matches
-    3: from Products.Archetypes.ReferenceEngine import Reference
-
-./plone.app.iterate/setup.py: 1 matches
-    47: 'Products.Archetypes',
-
-./plone.app.layout/plone/app/layout/viewlets/tests/test_content.py: 1 matches
-    10: from Products.Archetypes.ExtensibleMetadata import _zone
-
-./plone.app.linkintegrity/plone/app/linkintegrity/browser/update.py: 1 matches
-    2: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.linkintegrity/plone/app/linkintegrity/configure.zcml: 6 matches
-    36: <configure zcml:condition="installed Products.Archetypes">
-    48: for="Products.Archetypes.interfaces.IBaseObject
-    53: for="Products.Archetypes.interfaces.IBaseObject
-    58: for="Products.Archetypes.interfaces.IBaseObject
-    63: for="Products.Archetypes.interfaces.IBaseObject
-    68: for="Products.Archetypes.interfaces.IReference
-
-./plone.app.linkintegrity/plone/app/linkintegrity/handlers.py: 3 matches
-    9: from Products.Archetypes.interfaces import IReference
-    10: from Products.Archetypes.Field import TextField
-    21: from Products.Archetypes.interfaces import IReferenceable
-
-./plone.app.linkintegrity/plone/app/linkintegrity/references.py: 4 matches
-    15: from Products.Archetypes.exceptions import ReferenceException
-    17: from Products.Archetypes import config
-    18: from Products.Archetypes.interfaces import IReferenceable
-    19: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.locales/utils/rebuild-pot.py: 2 matches
-    77: 'Products.Archetypes',
-    82: 'Archetypes',
-
-./plone.app.testing/plone/app/testing/layers.py: 1 matches
-    54: ('Products.Archetypes'                  , {'loadZCML': True}, ),
-
-./plone.app.upgrade/plone/app/upgrade/v30/alphas.py: 3 matches
-    21: from Products.Archetypes.interfaces import IArchetypeTool
-    22: from Products.Archetypes.interfaces import IReferenceCatalog
-    23: from Products.Archetypes.interfaces import IUIDCatalog
-
-./plone.app.upgrade/plone/app/upgrade/v30/profiles/beta1_beta2/export_steps.xml: 1 matches
-    4: handler="Products.Archetypes.exportimport.archetypetool.exportArchetypeTool"
-
-./plone.app.upgrade/plone/app/upgrade/v30/profiles/beta1_beta2/import_steps.xml: 4 matches
-    4: handler="Products.Archetypes.setuphandlers.setupArchetypes"
-    5: title="Archetypes setup">
-    9: Archetypes installation step.
-    13: handler="Products.Archetypes.exportimport.archetypetool.importArchetypeTool"
-
-./plone.app.upgrade/plone/app/upgrade/v30/tests.py: 3 matches
-    22: from Products.Archetypes.interfaces import IArchetypeTool
-    23: from Products.Archetypes.interfaces import IReferenceCatalog
-    24: from Products.Archetypes.interfaces import IUIDCatalog
-
-./plone.app.upgrade/setup.py: 1 matches
-    57: 'Products.Archetypes',
-
-./plone.app.uuid/setup.py: 1 matches
-    33: 'test': ['plone.app.testing', 'Products.Archetypes >= 1.7']
-
-./plone.app.z3cform/plone/app/z3cform/queryselect/__init__.py: 3 matches
-    12: class ArchetypesContentSource(object):
-    49: class ArchetypesContentSourceBinder(object):
-    53: return ArchetypesContentSource(context)
-
-./plone.locking/setup.py: 1 matches
-    29: 'Products.Archetypes',
-
-./txtfilter/filter.py: 3 matches
-    4: from Products.Archetypes import public as atapi
-    5: from Products.Archetypes.debug import log as atlog
-    6: from Products.Archetypes.config import REFERENCE_CATALOG
-
-./txtfilter/txtfilter/at/Extensions/Install.py: 4 matches
-    3: from Products.Archetypes import public as atapi
-    4: from Products.Archetypes import listTypes
-    5: from Products.Archetypes.Extensions.utils import installTypes, install_subskin
-    6: from Products.Archetypes.config import REFERENCE_CATALOG
-
-./txtfilter/txtfilter/at/example/_txtfilter.py: 3 matches
-    1: from Products.Archetypes import public as atapi
-    2: from Products.Archetypes.config import REFERENCE_CATALOG
-    3: from Products.Archetypes.debug import log as atlog
-
-./txtfilter/txtfilter/at/example/smartlink.py: 3 matches
-    10: from Products.Archetypes import public as atapi
-    11: from Products.Archetypes.TemplateMixin import TemplateMixin, TemplateMixinSchema
-    17: from Products.Archetypes.references import HoldingReference
-
-./txtfilter/txtfilter/at/field.py: 1 matches
-    10: from Products.Archetypes import public as atapi
-
-./txtfilter/txtfilter/at/zope2.py: 1 matches
-    3: from Products.Archetypes import public as atapi
-
-./txtfilter/txtfilter/interfaces.py: 1 matches
-    2: from Products.Archetypes.interfaces import IFileField
-
-./wicked/wicked/at/backlink.py: 1 matches
-    2: from Products.Archetypes.interfaces import IReferenceable
-
-./wicked/wicked/at/config.py: 4 matches
-    14: from Products.Archetypes.ReferenceEngine import Reference
-    15: from Products.Archetypes.Referenceable import Referenceable
-    16: from Products.Archetypes.config import REFERENCE_CATALOG as REFERENCE_MANAGER
-    17: from Products.Archetypes.config import UID_CATALOG as UID_MANAGER
-
-./wicked/wicked/at/field.py: 3 matches
-    13: from Products.Archetypes import public as atapi
-    14: from Products.Archetypes.Registry import registerField
-    15: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/at/link.py: 1 matches
-    22: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/at/relation.py: 1 matches
-    21: from Products.Archetypes.references import Reference
-
-./wicked/wicked/at/subscriber.py: 1 matches
-    16: from Products.Archetypes.interfaces import ISchema
-
-./wicked/wicked/at/tests/test_cache.py: 1 matches
-    1: from Products.Archetypes.utils import shasattr
-
-./wicked/wicked/at/zope2.py: 1 matches
-    3: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/atcontent/Extensions/Install.py: 2 matches
-    2: from Products.Archetypes.public import listTypes
-    3: from Products.Archetypes.Extensions.utils import installTypes
-
-./wicked/wicked/atcontent/ironicwiki.py: 1 matches
-    22: from Products.Archetypes import public as atapi
-
-./wicked/wicked/atcontent/wickeddoc.py: 1 matches
-    21: from Products.Archetypes import public as atapi
-
-./wicked/wicked/atcontent/zope2.py: 2 matches
-    1: from Products.Archetypes import public as atapi
-    3: import Products.Archetypes.public as atapi
-
-./wicked/wicked/fieldevent/interfaces.py: 1 matches
-    10: from Products.Archetypes.interfaces import IATField
-
-./wicked/wicked/fieldevent/meta.py: 2 matches
-    48: title=u"Archetypes Schema Object",
-    53: title=u"Archetypes Schema Object",
-
-./wicked/wicked/interfaces.py: 1 matches
-    98: A manager for Archetypes reference (aka smart pointer) based backlinka
-
-./wicked/wicked/plone/all-at.zcml: 3 matches
-    8: fieldclass="Products.Archetypes.Field.TextField"
-    11: <class class="Products.Archetypes.Field.TextField">
-    15: <class class="Products.Archetypes.Referenceable.Referenceable">
-
-./wicked/wicked/plone/document-only.zcml: 1 matches
-    8: fieldclass="Products.Archetypes.Field.TextField"
-
-./wicked/wicked/plone/selective-atct.zcml: 1 matches
-    10: fieldclass="Products.Archetypes.Field.TextField"
-
-./wicked/wicked/testing/cache.py: 1 matches
-    40: from Products.Archetypes.ReferenceEngine import ReferenceCatalog, UIDCatalog
diff --git a/atct-mentions.txt b/atct-mentions.txt
deleted file mode 100644
index 2eae9d7..0000000
--- a/atct-mentions.txt
+++ /dev/null
@@ -1,1076 +0,0 @@
-The following list was generated from a Plone 4.3 buildout with every package bin/develop'd
-===========================================================================================
-
-./Products.ATContentTypes/Products/ATContentTypes/__init__.py: 13 matches
-    12: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    13: from Products.ATContentTypes.config import SKINS_DIR
-    14: from Products.ATContentTypes.config import PROJECTNAME
-    15: from Products.ATContentTypes.config import GLOBALS
-    24: ModuleSecurityInfo('Products.ATContentTypes').declarePublic('ATCTMessageFactory')
-    27: import Products.ATContentTypes.configuration
-    28: import Products.ATContentTypes.lib.validators
-    32: import Products.ATContentTypes.content
-    33: import Products.ATContentTypes.criteria
-    36: from Products.ATContentTypes.tool.atct import ATCTTool
-    39: from Products.ATContentTypes.permission import wireAddPermissions
-    55: 'ATContentTypes tool',
-    67: from Products.ATContentTypes.permission import permissions
-
-./Products.ATContentTypes/Products/ATContentTypes/atct.py: 53 matches
-    1: from Products.ATContentTypes.content.base import ATCTContent
-    2: from Products.ATContentTypes.content.base import ATCTFileContent
-    3: from Products.ATContentTypes.content.base import ATCTFolder
-    4: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    5: from Products.ATContentTypes.content.base import ATCTBTreeFolder
-    7: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    9: from Products.ATContentTypes.content.document import ATDocument
-    10: from Products.ATContentTypes.content.event import ATEvent
-    11: from Products.ATContentTypes.content.file import ATFile
-    12: from Products.ATContentTypes.content.folder import ATFolder
-    13: from Products.ATContentTypes.content.folder import ATBTreeFolder
-    14: from Products.ATContentTypes.content.image import ATImage
-    15: from Products.ATContentTypes.content.link import ATLink
-    16: from Products.ATContentTypes.content.newsitem import ATNewsItem
-    17: from Products.ATContentTypes.content.topic import ATTopic
-    19: from Products.ATContentTypes.content.document import ATDocumentSchema
-    20: from Products.ATContentTypes.content.event import ATEventSchema
-    21: from Products.ATContentTypes.content.file import ATFileSchema
-    22: from Products.ATContentTypes.content.folder import ATFolderSchema
-    23: from Products.ATContentTypes.content.folder import ATBTreeFolderSchema
-    24: from Products.ATContentTypes.content.image import ATImageSchema
-    25: from Products.ATContentTypes.content.link import ATLinkSchema
-    26: from Products.ATContentTypes.content.newsitem import ATNewsItemSchema
-    27: from Products.ATContentTypes.content.topic import ATTopicSchema
-    29: from Products.ATContentTypes.criteria import ALL_INDICES
-    30: from Products.ATContentTypes.criteria import DATE_INDICES
-    31: from Products.ATContentTypes.criteria import STRING_INDICES
-    32: from Products.ATContentTypes.criteria import LIST_INDICES
-    33: from Products.ATContentTypes.criteria import SORT_INDICES
-    34: from Products.ATContentTypes.criteria import registerCriterion
-    35: from Products.ATContentTypes.criteria import unregisterCriterion
-    37: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    38: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    40: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    41: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    42: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    43: from Products.ATContentTypes.criteria.list import ATListCriterion
-    44: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    45: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    46: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    47: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    48: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterion
-    49: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    51: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterionSchema
-    52: from Products.ATContentTypes.criteria.date import ATDateCriteriaSchema
-    53: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterionSchema
-    54: from Products.ATContentTypes.criteria.list import ATListCriterionSchema
-    55: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterionSchema
-    56: from Products.ATContentTypes.criteria.reference import ATReferenceCriterionSchema
-    57: from Products.ATContentTypes.criteria.selection import ATSelectionCriterionSchema
-    58: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterionSchema
-    59: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterionSchema
-    60: from Products.ATContentTypes.criteria.sort import ATSortCriterionSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/browser.zcml: 1 matches
-    45: for="Products.ATContentTypes.interfaces.file.IFileContent"
-
-./Products.ATContentTypes/Products/ATContentTypes/browser/calendar.py: 2 matches
-    6: from Products.ATContentTypes.interfaces import ICalendarSupport
-    7: from Products.ATContentTypes.lib import calendarsupport as cs
-
-./Products.ATContentTypes/Products/ATContentTypes/browser/nextprevious.py: 1 matches
-    5: from Products.ATContentTypes.interfaces.folder import IATFolder
-
-./Products.ATContentTypes/Products/ATContentTypes/config.py: 2 matches
-    11: from Products.ATContentTypes.configuration import zconf
-    21: PROJECTNAME = "ATContentTypes"
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/__init__.py: 3 matches
-    1: from Products.ATContentTypes.configuration.config import zconf
-    2: from Products.ATContentTypes.configuration.config import handler
-    3: from Products.ATContentTypes.configuration.config import conf_file
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/component.xml: 1 matches
-    1: <component prefix="Products.ATContentTypes.configuration.datatype">
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/config.py: 1 matches
-    5: from Products.ATContentTypes.configuration.schema import atctSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/schema.py: 1 matches
-    5: from Products.ATContentTypes.configuration import datatype
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/schema.xml: 3 matches
-    1: <schema prefix="Products.ATContentTypes.configuration.datatype">
-    4: ATContentTypes configuration schema
-    7: <import package="Products.ATContentTypes.configuration" />
-
-./Products.ATContentTypes/Products/ATContentTypes/content/__init__.py: 8 matches
-    1: import Products.ATContentTypes.content.link
-    2: import Products.ATContentTypes.content.image
-    3: import Products.ATContentTypes.content.document
-    4: import Products.ATContentTypes.content.file
-    5: import Products.ATContentTypes.content.event
-    6: import Products.ATContentTypes.content.newsitem
-    7: import Products.ATContentTypes.content.folder
-    8: import Products.ATContentTypes.content.topic
-
-./Products.ATContentTypes/Products/ATContentTypes/content/base.py: 6 matches
-    8: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    39: from Products.ATContentTypes.config import MIME_ALIAS
-    40: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixin
-    41: from Products.ATContentTypes.interfaces import IATContentType
-    42: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-    43: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/content/document.py: 10 matches
-    23: from Products.ATContentTypes.configuration import zconf
-    24: from Products.ATContentTypes.config import PROJECTNAME
-    25: from Products.ATContentTypes.content.base import registerATCT
-    26: from Products.ATContentTypes.content.base import ATCTContent
-    27: from Products.ATContentTypes.content.base import translateMimetypeAlias
-    28: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    29: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    30: from Products.ATContentTypes.lib.historyaware import HistoryAwareMixin
-    31: from Products.ATContentTypes.interfaces import IATDocument
-    33: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/event.py: 10 matches
-    20: from Products.ATContentTypes.configuration import zconf
-    21: from Products.ATContentTypes.config import PROJECTNAME
-    22: from Products.ATContentTypes.content.base import registerATCT
-    23: from Products.ATContentTypes.content.base import ATCTContent
-    24: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    25: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    26: from Products.ATContentTypes.interfaces import IATEvent
-    27: from Products.ATContentTypes.lib.calendarsupport import CalendarSupportMixin
-    28: from Products.ATContentTypes.lib.historyaware import HistoryAwareMixin
-    30: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/favorite.py: 2 matches
-    3: from Products.ATContentTypes.content import link
-    5: logger = logging.getLogger('ATContentTypes')
-
-./Products.ATContentTypes/Products/ATContentTypes/content/file.py: 9 matches
-    19: from Products.ATContentTypes.config import PROJECTNAME
-    20: from Products.ATContentTypes.configuration import zconf
-    21: from Products.ATContentTypes.config import ICONMAP
-    22: from Products.ATContentTypes.content.base import registerATCT
-    23: from Products.ATContentTypes.content.base import ATCTFileContent
-    24: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    25: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    26: from Products.ATContentTypes.interfaces import IATFile
-    28: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/folder.py: 10 matches
-    6: from Products.ATContentTypes.config import PROJECTNAME
-    7: from Products.ATContentTypes.content.base import registerATCT
-    8: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    9: from Products.ATContentTypes.content.base import ATCTBTreeFolder
-    10: from Products.ATContentTypes.interfaces import IATFolder
-    11: from Products.ATContentTypes.interfaces import IATBTreeFolder
-    12: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    13: from Products.ATContentTypes.content.schemata import NextPreviousAwareSchema
-    14: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    15: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixinSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/content/image.py: 9 matches
-    15: from Products.ATContentTypes.config import PROJECTNAME
-    16: from Products.ATContentTypes.configuration import zconf
-    17: from Products.ATContentTypes.content.base import registerATCT
-    18: from Products.ATContentTypes.content.base import ATCTFileContent
-    19: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    20: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    21: from Products.ATContentTypes.interfaces import IATImage
-    23: from Products.ATContentTypes.lib.imagetransform import ATCTImageTransform
-    25: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/link.py: 7 matches
-    14: from Products.ATContentTypes.config import PROJECTNAME
-    15: from Products.ATContentTypes.content.base import registerATCT
-    16: from Products.ATContentTypes.content.base import ATCTContent
-    17: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    18: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    19: from Products.ATContentTypes.interfaces import IATLink
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/newsitem.py: 10 matches
-    15: from Products.ATContentTypes.config import PROJECTNAME
-    16: from Products.ATContentTypes.configuration import zconf
-    17: from Products.ATContentTypes.content.base import registerATCT
-    18: from Products.ATContentTypes.content.base import translateMimetypeAlias
-    19: from Products.ATContentTypes.content.document import ATDocumentBase
-    20: from Products.ATContentTypes.content.image import ATCTImageTransform
-    21: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    22: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    23: from Products.ATContentTypes.interfaces import IATNewsItem
-    25: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/schemata.py: 1 matches
-    6: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/topic.py: 14 matches
-    30: from Products.ATContentTypes.configuration import zconf
-    31: from Products.ATContentTypes.config import PROJECTNAME
-    32: from Products.ATContentTypes.content.base import registerATCT
-    33: from Products.ATContentTypes.content.base import ATCTFolder
-    34: from Products.ATContentTypes.criteria import _criterionRegistry
-    35: from Products.ATContentTypes.exportimport.content import IDisabledExport
-    36: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    37: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    38: from Products.ATContentTypes.interfaces import IATTopic
-    39: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    40: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    41: from Products.ATContentTypes.permission import ChangeTopics
-    43: from Products.ATContentTypes.config import TOOLNAME
-    45: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/__init__.py: 17 matches
-    4: from Products.ATContentTypes.config import PROJECTNAME
-    7: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    8: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    9: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    111: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    112: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    113: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    114: from Products.ATContentTypes.criteria.list import ATListCriterion
-    115: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    116: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    117: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    118: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    119: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterion
-    120: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    121: from Products.ATContentTypes.criteria.currentauthor import ATCurrentAuthorCriterion
-    122: from Products.ATContentTypes.criteria.path import ATPathCriterion
-    123: from Products.ATContentTypes.criteria.relativepath import ATRelativePathCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/base.py: 2 matches
-    10: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    11: from Products.ATContentTypes.interfaces import IATTopicCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/boolean.py: 7 matches
-    12: from Products.ATContentTypes.criteria import registerCriterion
-    13: from Products.ATContentTypes.criteria import FIELD_INDICES
-    14: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    15: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    19: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/currentauthor.py: 4 matches
-    7: from Products.ATContentTypes.criteria import registerCriterion, \
-    9: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    10: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    11: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/date.py: 7 matches
-    14: from Products.ATContentTypes.criteria import registerCriterion
-    15: from Products.ATContentTypes.criteria import DATE_INDICES
-    16: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    17: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    18: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    19: from Products.ATContentTypes.permission import ChangeTopics
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/daterange.py: 7 matches
-    10: from Products.ATContentTypes.criteria import registerCriterion
-    11: from Products.ATContentTypes.criteria import DATE_INDICES
-    12: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    13: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    14: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    15: from Products.ATContentTypes.permission import ChangeTopics
-    17: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/list.py: 7 matches
-    13: from Products.ATContentTypes.criteria import registerCriterion
-    14: from Products.ATContentTypes.criteria import LIST_INDICES
-    15: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    16: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    17: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    18: from Products.ATContentTypes.permission import ChangeTopics
-    20: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/path.py: 7 matches
-    12: from Products.ATContentTypes.criteria import registerCriterion
-    13: from Products.ATContentTypes.criteria import PATH_INDICES
-    14: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    15: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/portaltype.py: 5 matches
-    9: from Products.ATContentTypes.criteria import registerCriterion
-    10: from Products.ATContentTypes.criteria import FIELD_INDICES
-    11: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    12: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    14: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/reference.py: 4 matches
-    6: from Products.ATContentTypes.criteria import registerCriterion
-    7: from Products.ATContentTypes.criteria import REFERENCE_INDICES
-    8: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    9: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/relativepath.py: 6 matches
-    11: from Products.ATContentTypes.criteria import registerCriterion
-    12: from Products.ATContentTypes.criteria import PATH_INDICES
-    13: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    14: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    15: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    16: from Products.ATContentTypes.permission import ChangeTopics
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/schemata.py: 2 matches
-    5: from Products.ATContentTypes.permission import ChangeTopics
-    7: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/selection.py: 7 matches
-    14: from Products.ATContentTypes.criteria import registerCriterion
-    15: from Products.ATContentTypes.criteria import LIST_INDICES
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    18: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    19: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simpleint.py: 7 matches
-    13: from Products.ATContentTypes.criteria import registerCriterion
-    14: from Products.ATContentTypes.criteria import LIST_INDICES
-    15: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    16: from Products.ATContentTypes.permission import ChangeTopics
-    17: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    18: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    20: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simplestring.py: 6 matches
-    10: from Products.ATContentTypes.criteria import registerCriterion, \
-    12: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    14: from Products.ATContentTypes.permission import ChangeTopics
-    15: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    16: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    18: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/sort.py: 7 matches
-    9: from Products.ATContentTypes.criteria import registerCriterion
-    10: from Products.ATContentTypes.criteria import SORT_INDICES
-    11: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    12: from Products.ATContentTypes.permission import ChangeTopics
-    13: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    14: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/exportimport/atcttool.py: 1 matches
-    1: from Products.ATContentTypes.interfaces import IATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/exportimport/configure.zcml: 6 matches
-    9: title="ATContentTypes Tool"
-    10: description="Import ATContentTypes specific configuration."
-    18: title="ATContentTypes Tool"
-    19: description="Export ATContentTypes specific configuration."
-    26: for="Products.ATContentTypes.interfaces.IATCTTool
-    39: for="Products.ATContentTypes.interfaces.IATContentType"
-
-./Products.ATContentTypes/Products/ATContentTypes/interface.py: 1 matches
-    7: from Products.ATContentTypes.interfaces import *
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/__init__.py: 22 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-    2: from Products.ATContentTypes.interfaces.interfaces import IHistoryAware
-    3: from Products.ATContentTypes.interfaces.interfaces import ICalendarSupport
-    4: from Products.ATContentTypes.interfaces.interfaces import ITextContent
-    5: from Products.ATContentTypes.interfaces.interfaces import ISelectableConstrainTypes
-    6: from Products.ATContentTypes.interfaces.interfaces import IATCTTool
-    8: from Products.ATContentTypes.interfaces.document import IATDocument
-    10: from Products.ATContentTypes.interfaces.event import IATEvent
-    12: from Products.ATContentTypes.interfaces.file import IFileContent
-    13: from Products.ATContentTypes.interfaces.file import IATFile
-    15: from Products.ATContentTypes.interfaces.folder import IFilterFolder
-    16: from Products.ATContentTypes.interfaces.folder import IATFolder
-    17: from Products.ATContentTypes.interfaces.folder import IATBTreeFolder
-    19: from Products.ATContentTypes.interfaces.image import IImageContent
-    20: from Products.ATContentTypes.interfaces.image import IATImage
-    22: from Products.ATContentTypes.interfaces.link import IATLink
-    24: from Products.ATContentTypes.interfaces.news import IATNewsItem
-    26: from Products.ATContentTypes.interfaces.topic import IATTopic
-    27: from Products.ATContentTypes.interfaces.topic import IATTopicCriterion
-    28: from Products.ATContentTypes.interfaces.topic import IATTopicSearchCriterion
-    29: from Products.ATContentTypes.interfaces.topic import IATTopicSortCriterion
-    30: from Products.ATContentTypes.interfaces.topic import IATCTTopicsTool
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/document.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import ITextContent
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/event.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/folder.py: 1 matches
-    2: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/link.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/news.py: 2 matches
-    1: from Products.ATContentTypes.interfaces.document import IATDocument
-    2: from Products.ATContentTypes.interfaces.image import IImageContent
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/topic.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/calendarsupport.py: 1 matches
-    10: from Products.ATContentTypes.interfaces import ICalendarSupport
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/constraintypes.py: 3 matches
-    22: from Products.ATContentTypes import ATCTMessageFactory as _
-    23: from Products.ATContentTypes import permission as ATCTPermissions
-    25: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/historyaware.py: 2 matches
-    13: from Products.ATContentTypes import permission as ATCTPermissions
-    14: from Products.ATContentTypes.interfaces import IHistoryAware
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/imagetransform.py: 3 matches
-    13: from Products.ATContentTypes.configuration import zconf
-    14: from Products.ATContentTypes.config import HAS_PIL
-    15: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/validators.py: 4 matches
-    4: from Products.ATContentTypes.config import HAS_MX_TIDY
-    5: from Products.ATContentTypes.config import MX_TIDY_ENABLED
-    6: from Products.ATContentTypes.config import MX_TIDY_MIMETYPES
-    7: from Products.ATContentTypes.config import MX_TIDY_OPTIONS
-
-./Products.ATContentTypes/Products/ATContentTypes/migration/v1_2/__init__.py: 4 matches
-    10: from Products.ATContentTypes.config import TOOLNAME
-    11: from Products.ATContentTypes.tool.atct import ATCTTool
-    12: from Products.ATContentTypes.interfaces import IATCTTool
-    60: logger.info('Upgraded the ATContentTypes tool.')
-
-./Products.ATContentTypes/Products/ATContentTypes/permission.py: 5 matches
-    3: from Products.ATContentTypes.config import PROJECTNAME
-    4: from Products.ATContentTypes.interfaces import IATTopic
-    5: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    28: ViewHistory = "ATContentTypes: View history"
-    31: UploadViaURL = "ATContentTypes: Upload via url"
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/atct_saveTopicSetup.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_add.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_remove.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_save.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_set_sort.cpy: 1 matches
-    12: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atctftestcase.py: 2 matches
-    1: from Products.ATContentTypes.tests import atcttestcase
-    8: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py: 6 matches
-    36: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    37: from Products.ATContentTypes.interfaces import IATContentType
-    38: from Products.ATContentTypes.tests.utils import dcEdit
-    39: from Products.ATContentTypes.tests.utils import EmptyValidator
-    40: from Products.ATContentTypes.tests.utils import idValidator
-    61: lpf.product = 'ATContentTypes'
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atdocument.py: 10 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.tests.utils import dcEdit
-    13: from Products.ATContentTypes.content.document import ATDocument
-    14: from Products.ATContentTypes.lib.validators import TidyHtmlWithCleanupValidator
-    15: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    16: from Products.ATContentTypes.tests.utils import input_file_path
-    17: from Products.ATContentTypes.interfaces import IHistoryAware
-    18: from Products.ATContentTypes.interfaces import ITextContent
-    19: from Products.ATContentTypes.interfaces import IATDocument
-    22: from Products.ATContentTypes import config as atct_config
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atevent.py: 9 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    10: from Products.ATContentTypes.tests.utils import dcEdit
-    12: from Products.ATContentTypes.content.event import ATEvent
-    13: from Products.ATContentTypes.tests.utils import EmptyValidator
-    14: from Products.ATContentTypes.tests.utils import EmailValidator
-    15: from Products.ATContentTypes.tests.utils import URLValidator
-    16: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    18: from Products.ATContentTypes.interfaces import ICalendarSupport
-    19: from Products.ATContentTypes.interfaces import IATEvent
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py: 5 matches
-    5: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.tests.utils import dcEdit
-    15: from Products.ATContentTypes.interfaces import IATFile
-    16: from Products.ATContentTypes.interfaces import IFileContent
-    200: from Products.ATContentTypes.content.base import cleanupFilename
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfolder.py: 8 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    6: from Products.ATContentTypes.tests.utils import dcEdit
-    7: from Products.ATContentTypes.content.folder import ATFolder
-    8: from Products.ATContentTypes.content.folder import ATBTreeFolder
-    10: from Products.ATContentTypes.interfaces import IATFolder
-    11: from Products.ATContentTypes.interfaces import IATBTreeFolder
-    14: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-    120: from Products.ATContentTypes.content.document import ATDocument
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py: 4 matches
-    13: from Products.ATContentTypes.interfaces import IImageContent
-    14: from Products.ATContentTypes.interfaces import IATImage
-    15: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    16: from Products.ATContentTypes.tests.utils import dcEdit, PACKAGE_HOME
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atlink.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.content.link import ATLink
-    12: from Products.ATContentTypes.interfaces import IATLink
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atnewsitem.py: 7 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    10: from Products.ATContentTypes.tests.utils import dcEdit
-    12: from Products.ATContentTypes.content.newsitem import ATNewsItem
-    13: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    14: from Products.ATContentTypes.interfaces import ITextContent
-    15: from Products.ATContentTypes.interfaces import IImageContent
-    16: from Products.ATContentTypes.interfaces import IATNewsItem
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_attopic.py: 7 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    5: from Products.ATContentTypes.tests.utils import dcEdit
-    14: from Products.ATContentTypes.permission import ChangeTopics
-    15: from Products.ATContentTypes.content.topic import ATTopic
-    16: from Products.ATContentTypes.content.folder import ATFolder
-    17: from Products.ATContentTypes.tests.utils import EmptyValidator
-    18: from Products.ATContentTypes.interfaces import IATTopic
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_browserdefaultmixin.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    7: from Products.ATContentTypes import permission
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_bugs.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    6: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_calendar.py: 3 matches
-    9: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-    10: from Products.ATContentTypes.interfaces import ICalendarSupport
-    11: from Products.ATContentTypes.browser.calendar import cachekey
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_constraintypes.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    8: from Products.ATContentTypes.lib import constraintypes
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_criteria.py: 17 matches
-    6: from Products.ATContentTypes.tests import atcttestcase
-    14: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    16: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    17: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    18: from Products.ATContentTypes.criteria.list import ATListCriterion
-    19: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    20: from Products.ATContentTypes.criteria.simplestring import \
-    22: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    23: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    24: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    25: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    26: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    27: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    28: from Products.ATContentTypes.criteria.currentauthor import \
-    30: from Products.ATContentTypes.criteria.path import ATPathCriterion
-    31: from Products.ATContentTypes.criteria.relativepath import ATRelativePathCriterion
-    687: from Products.ATContentTypes.criteria import _criterionRegistry
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_default_mimetypes.py: 1 matches
-    3: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_doctests.py: 2 matches
-    5: from Products.ATContentTypes.tests.atcttestcase import ATCTFunctionalSiteTestCase
-    15: suite.addTest(FileSuite(file, package="Products.ATContentTypes.tests",
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_functional.py: 2 matches
-    3: from Products.ATContentTypes.tests.atcttestcase import ATCTFunctionalSiteTestCase
-    26: package="Products.ATContentTypes.tests",
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_installation.py: 7 matches
-    5: from Products.ATContentTypes.tests import atcttestcase
-    6: from Products.ATContentTypes.config import TOOLNAME
-    7: from Products.ATContentTypes.config import SWALLOW_IMAGE_RESIZE_EXCEPTIONS
-    8: from Products.ATContentTypes.tool.atct import ATCTTool
-    30: self.assertTrue('ATContentTypes' in stool)
-    42: self.assertFalse('ATContentTypes' in products)
-    62: import Products.ATContentTypes.atct
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_migrations.py: 3 matches
-    2: from Products.ATContentTypes.tests import atcttestcase
-    4: from Products.ATContentTypes.config import TOOLNAME
-    5: from Products.ATContentTypes.migration.v1_2 import upgradeATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_skinScripts.py: 1 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_tool.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    5: from Products.ATContentTypes.config import TOOLNAME
-    6: from Products.ATContentTypes.interfaces import IATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_topictool.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    7: from Products.ATContentTypes.config import TOOLNAME
-    8: from Products.ATContentTypes.interfaces import IATCTTopicsTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/atct.py: 6 matches
-    18: from Products.ATContentTypes.interfaces import IImageContent
-    19: from Products.ATContentTypes.interfaces import IATCTTool
-    20: from Products.ATContentTypes.config import TOOLNAME
-    21: from Products.ATContentTypes.config import WWW_DIR
-    22: from Products.ATContentTypes.tool.topic import ATTopicsTool
-    68: icons = ({'path': 'misc_/ATContentTypes/tool.gif',
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/topic.py: 3 matches
-    5: from Products.ATContentTypes.criteria import _criterionRegistry
-    11: from Products.ATContentTypes.config import TOOLNAME
-    12: from Products.ATContentTypes.interfaces import IATCTTopicsTool
-
-./Products.ATContentTypes/setup.py: 1 matches
-    5: setup(name='Products.ATContentTypes',
-
-./Products.CMFDiffTool/Products/CMFDiffTool/tests/at_compound_tests.py: 1 matches
-    2: from Products.ATContentTypes.content.document import ATDocument
-
-./Products.CMFDynamicViewFTI/Products/CMFDynamicViewFTI/browserdefault.py: 1 matches
-    36: Note: folderish content types should overwrite HEAD like ATContentTypes
-
-./Products.CMFPlone/Products/CMFPlone/CatalogTool.py: 5 matches
-    85: 'Products.ATContentTypes.exportimport.content.IDisabledExport',
-    86: 'Products.ATContentTypes.interfaces.folder.IATBTreeFolder',
-    87: 'Products.ATContentTypes.interfaces.interfaces.IATContentType',
-    88: 'Products.ATContentTypes.interfaces.interfaces.IHistoryAware',
-    89: 'Products.ATContentTypes.interfaces.interfaces.ITextContent',
-
-./Products.CMFPlone/Products/CMFPlone/browser/syndication/adapters.py: 1 matches
-    16: from Products.ATContentTypes.interfaces.file import IFileContent
-
-./Products.CMFPlone/Products/CMFPlone/browser/syndication/configure.zcml: 2 matches
-    20: for="Products.ATContentTypes.interfaces.topic.IATTopic"
-    21: zcml:condition="installed Products.ATContentTypes" />
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/componentregistry.xml: 1 matches
-    27: interface="Products.ATContentTypes.interface.IATCTTool"
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/controlpanel.xml: 1 matches
-    122: <configlet title="Collections (old style)" action_id="portal_atct" appId="ATContentTypes"
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/portal_atct.xml: 1 matches
-    237: <property name="title">ATContentTypes Tool</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/rolemap.xml: 7 matches
-    43: <permission name="ATContentTypes: Add Document" acquire="True">
-    49: <permission name="ATContentTypes: Add Event" acquire="True">
-    55: <permission name="ATContentTypes: Add File" acquire="True">
-    61: <permission name="ATContentTypes: Add Folder" acquire="True">
-    67: <permission name="ATContentTypes: Add Image" acquire="True">
-    73: <permission name="ATContentTypes: Add Link" acquire="True">
-    79: <permission name="ATContentTypes: Add News Item" acquire="True">
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/skins.xml: 3 matches
-    5: <object name="ATContentTypes" meta_type="Filesystem Directory View"
-    6: directory="Products.ATContentTypes:skins/ATContentTypes"/>
-    48: <layer name="ATContentTypes"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/toolset.xml: 1 matches
-    18: class="Products.ATContentTypes.tool.atct.ATCTTool"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATBooleanCriterion.xml: 1 matches
-    8: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATCurrentAuthorCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATDateCriteria.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATDateRangeCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATListCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATPathCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATPortalTypeCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATReferenceCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATRelativePathCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSelectionCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSimpleIntCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSimpleStringCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSortCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Document.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    36: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Event.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    38: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Folder.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Link.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/News_Item.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    38: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Topic.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/setuphandlers.py: 2 matches
-    18: from Products.ATContentTypes.lib import constraintypes
-    37: 'ATContentTypes', 'Products.ATContentTypes',
-
-./Products.CMFPlone/Products/CMFPlone/tests/testContentTypes.py: 2 matches
-    6: from Products.ATContentTypes.interfaces import IATContentType
-    15: class TestATContentTypes(PloneTestCase.PloneTestCase):
-
-./Products.CMFPlone/Products/CMFPlone/tests/testPortalCreation.py: 5 matches
-    864: 'ATContentTypes: Add Document',
-    865: 'ATContentTypes: Add Event', 'ATContentTypes: Add File',
-    866: 'ATContentTypes: Add Folder',
-    867: 'ATContentTypes: Add Link',
-    868: 'ATContentTypes: Add News Item', ]:
-
-./Products.CMFPlone/Products/CMFPlone/tests/testPortalFactory.py: 1 matches
-    19: ADD_DOC_PERM = 'ATContentTypes: Add Document'
-
-./Products.CMFPlone/Products/CMFPlone/tests/testSiteAdminRole.py: 24 matches
-    17: 'ATContentTypes Topic: Add ATBooleanCriterion':             1,
-    18: 'ATContentTypes Topic: Add ATCurrentAuthorCriterion':       1,
-    19: 'ATContentTypes Topic: Add ATDateCriteria':                 1,
-    20: 'ATContentTypes Topic: Add ATDateRangeCriterion':           1,
-    21: 'ATContentTypes Topic: Add ATListCriterion':                1,
-    22: 'ATContentTypes Topic: Add ATPathCriterion':                1,
-    23: 'ATContentTypes Topic: Add ATPortalTypeCriterion':          1,
-    24: 'ATContentTypes Topic: Add ATReferenceCriterion':           1,
-    25: 'ATContentTypes Topic: Add ATRelativePathCriterion':        1,
-    26: 'ATContentTypes Topic: Add ATSelectionCriterion':           1,
-    27: 'ATContentTypes Topic: Add ATSimpleIntCriterion':           1,
-    28: 'ATContentTypes Topic: Add ATSimpleStringCriterion':        1,
-    29: 'ATContentTypes Topic: Add ATSortCriterion':                1,
-    30: 'ATContentTypes: Add Document':                             1,
-    31: 'ATContentTypes: Add Event':                                1,
-    32: 'ATContentTypes: Add File':                                 1,
-    33: 'ATContentTypes: Add Folder':                               1,
-    34: 'ATContentTypes: Add Image':                                1,
-    35: 'ATContentTypes: Add Large Plone Folder':                   1,
-    36: 'ATContentTypes: Add Link':                                 1,
-    37: 'ATContentTypes: Add News Item':                            1,
-    38: 'ATContentTypes: Upload via url':                           1,
-    39: 'ATContentTypes: View history':                             1,
-    44: 'Add ATContentTypes tools':                                 0,
-
-./Products.CMFPlone/setup.py: 1 matches
-    41: 'Products.ATContentTypes >= 2.1.3',
-
-./Products.LinguaPlone/Products/LinguaPlone/__init__.py: 2 matches
-    36: from Products.ATContentTypes.criteria import _criterionRegistry
-    37: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-
-./Products.LinguaPlone/Products/LinguaPlone/criteria/configure.zcml: 17 matches
-    6: for="Products.ATContentTypes.criteria.ATBooleanCriterion"
-    10: for="Products.ATContentTypes.criteria.ATCurrentAuthorCriterion"
-    14: for="Products.ATContentTypes.criteria.ATDateCriteria"
-    18: for="Products.ATContentTypes.criteria.ATDateRangeCriterion"
-    22: for="Products.ATContentTypes.criteria.ATListCriterion"
-    26: for="Products.ATContentTypes.criteria.ATPathCriterion"
-    30: for="Products.ATContentTypes.criteria.ATPortalTypeCriterion"
-    34: for="Products.ATContentTypes.criteria.ATReferenceCriterion"
-    38: for="Products.ATContentTypes.criteria.ATRelativePathCriterion"
-    42: for="Products.ATContentTypes.criteria.ATSelectionCriterion"
-    46: for="Products.ATContentTypes.criteria.ATSimpleIntCriterion"
-    50: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    54: for="Products.ATContentTypes.criteria.ATSortCriterion"
-    60: for="Products.ATContentTypes.criteria.ATSelectionCriterion"
-    67: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    72: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    77: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-
-./Products.LinguaPlone/Products/LinguaPlone/criteria/syncer.py: 2 matches
-    6: from Products.ATContentTypes.interface import IATTopicCriterion
-    7: from Products.ATContentTypes.interface import IATTopic
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_translation_portaltype.py: 1 matches
-    2: from Products.ATContentTypes.interface import IATDocument
-
-./Products.LinguaPlone/setup.py: 1 matches
-    37: 'Products.ATContentTypes >= 2.0.2',
-
-./Products.Marshall/Products/Marshall/tests/base.py: 2 matches
-    27: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-    33: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/Products/Marshall/tests/test_export.py: 1 matches
-    34: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/Products/Marshall/tests/test_marshall.py: 1 matches
-    32: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/setup.py: 1 matches
-    31: 'Products.ATContentTypes',
-
-./Products.PloneTestCase/Products/PloneTestCase/setup.py: 4 matches
-    36: ZopeTestCase.installProduct('ATContentTypes', quiet=1)
-    69: ZopeTestCase.installProduct('ATContentTypes', quiet=1)
-    152: default_extension_profiles = ('Products.ATContentTypes:default', )
-    516: from Products.ATContentTypes.lib.constraintypes \
-
-./Products.PloneTestCase/setup.py: 1 matches
-    18: 'Products.ATContentTypes',
-
-./Products.TinyMCE/Products/TinyMCE/utility.py: 1 matches
-    170: from Products.ATContentTypes.content.image import ATImage
-
-./Products.contentmigration/Products/contentmigration/tests/extensions.py: 1 matches
-    1: from Products.ATContentTypes.interface import IATDocument
-
-./Products.contentmigration/setup.py: 1 matches
-    14: keywords='Plone Archetypes ATContentTypes',
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/configure.zcml: 1 matches
-    19: for="Products.ATContentTypes.interface.IATTopicCriterion"
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testAccessor.py: 1 matches
-    4: from Products.ATContentTypes.content.document import ATDocument
-
-./borg.localrole/setup.py: 1 matches
-    26: 'Products.ATContentTypes',
-
-./plone.app.blob/src/plone/app/blob/__init__.py: 1 matches
-    17: from Products.ATContentTypes import permission as atct
-
-./plone.app.blob/src/plone/app/blob/adapters/atfile.py: 1 matches
-    4: from Products.ATContentTypes.interface import IATFile
-
-./plone.app.blob/src/plone/app/blob/adapters/atimage.py: 1 matches
-    3: from Products.ATContentTypes.interface import IATImage
-
-./plone.app.blob/src/plone/app/blob/browser/migration.pt: 1 matches
-    33: ATContentTypes'
-
-./plone.app.blob/src/plone/app/blob/content.py: 4 matches
-    18: from Products.ATContentTypes.content.base import ATCTFileContent
-    19: from Products.ATContentTypes.content.file import ATFile
-    20: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    21: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-
-./plone.app.blob/src/plone/app/blob/markings.py: 4 matches
-    5: from Products.ATContentTypes.interface import file as atfile
-    6: from Products.ATContentTypes.interface import image as atimage
-    10: from Products.ATContentTypes.interfaces import IATFile as Z2IATFile
-    11: from Products.ATContentTypes.interfaces import IATImage as Z2IATImage
-
-./plone.app.blob/src/plone/app/blob/mixins.py: 1 matches
-    5: from Products.ATContentTypes.lib.imagetransform import ATCTImageTransform
-
-./plone.app.blob/src/plone/app/blob/profiles/file-replacement/types/ATFile.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./plone.app.blob/src/plone/app/blob/profiles/image-replacement/types/ATImage.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./plone.app.blob/src/plone/app/blob/subtypes/image.py: 1 matches
-    6: from Products.ATContentTypes.configuration import zconf
-
-./plone.app.blob/src/plone/app/blob/tests/test_adapters.py: 2 matches
-    5: from Products.ATContentTypes.content.image import ATImage
-    6: from Products.ATContentTypes.content.file import ATFile
-
-./plone.app.blob/src/plone/app/blob/tests/test_maintenance.py: 2 matches
-    4: from Products.ATContentTypes.interface import file as atfile
-    5: from Products.ATContentTypes.interface import image as atimage
-
-./plone.app.blob/src/plone/app/blob/tests/test_replacements.py: 8 matches
-    8: from Products.ATContentTypes.interface import file as atfile
-    9: from Products.ATContentTypes.interface import image as atimage
-    10: from Products.ATContentTypes.interfaces import IATFile as Z2IATFile
-    11: from Products.ATContentTypes.interfaces import IATImage as Z2IATImage
-    12: from Products.ATContentTypes.content.file import ATFile
-    13: from Products.ATContentTypes.content.image import ATImage
-    33: self.assertEqual(permissions, ['ATContentTypes: Add File'])
-    159: self.assertEqual(permissions, ['ATContentTypes: Add Image'])
-
-./plone.app.caching/plone/app/caching/caching.zcml: 3 matches
-    111: <configure zcml:condition="installed Products.ATContentTypes">
-    113: <cache:ruleset ruleset="plone.content.file" for="Products.ATContentTypes.interfaces.IATFile" />
-    114: <cache:ruleset ruleset="plone.content.file" for="Products.ATContentTypes.interfaces.IATImage" />
-
-./plone.app.collection/plone/app/collection/collection.py: 1 matches
-    6: from Products.ATContentTypes.content import document, schemata
-
-./plone.app.contentrules/plone/app/contentrules/conditions/fileextension.py: 1 matches
-    9: from Products.ATContentTypes.interface import IFileContent
-
-./plone.app.contentrules/plone/app/contentrules/configure.zcml: 3 matches
-    30: <configure zcml:condition="installed Products.ATContentTypes">
-    32: <class class="Products.ATContentTypes.content.folder.ATFolder">
-    36: <class class="Products.ATContentTypes.content.folder.ATBTreeFolder">
-
-./plone.app.folder/src/plone/app/folder/__init__.py: 1 matches
-    6: AddFolder = 'ATContentTypes: Add Folder'
-
-./plone.app.folder/src/plone/app/folder/bbb.py: 5 matches
-    7: from Products.ATContentTypes.interface.archive import IArchivable
-    8: from Products.ATContentTypes.interface.image import IPhotoAlbumAble
-    22: from Products.ATContentTypes.content.base import ATCTFolderMixin
-    23: from Products.ATContentTypes.interfaces import IATFolder
-    24: from Products.ATContentTypes.interfaces import IATBTreeFolder
-
-./plone.app.folder/src/plone/app/folder/configure.zcml: 1 matches
-    12: <configure zcml:condition="installed Products.ATContentTypes">
-
-./plone.app.folder/src/plone/app/folder/folder.py: 8 matches
-    4: from Products.ATContentTypes.interface import IATFolder
-    5: from Products.ATContentTypes.interface import IATBTreeFolder
-    6: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    7: from Products.ATContentTypes.content.schemata import NextPreviousAwareSchema
-    8: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    9: from Products.ATContentTypes.lib.constraintypes import \
-    11: from Products.ATContentTypes.content.base import ATCTFolderMixin
-    12: from Products.ATContentTypes.content.base import registerATCT
-
-./plone.app.folder/src/plone/app/folder/tests/content.py: 9 matches
-    7: from Products.ATContentTypes.config import PROJECTNAME
-    8: from Products.ATContentTypes.content.base import registerATCT
-    9: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    10: from Products.ATContentTypes.interface import IATFolder
-    11: from Products.ATContentTypes.permission import permissions
-    12: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    13: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    14: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixinSchema
-    39: a reduced version of `ATContentTypes.content.folder.ATFolder` """
-
-./plone.app.folder/src/plone/app/folder/tests/test_migration.py: 1 matches
-    8: from Products.ATContentTypes.content.document import ATDocument
-
-./plone.app.folder/src/plone/app/folder/tests/test_partialordering_integration.py: 1 matches
-    3: from Products.ATContentTypes.content.document import ATDocument
-
-./plone.app.imaging/setup.py: 1 matches
-    40: 'Products.ATContentTypes' ]},
-
-./plone.app.imaging/src/plone/app/imaging/__init__.py: 1 matches
-    3: import Products.ATContentTypes
-
-./plone.app.imaging/src/plone/app/imaging/monkey.py: 2 matches
-    4: from Products.ATContentTypes.content.image import ATImageSchema
-    5: from Products.ATContentTypes.content.newsitem import ATNewsItemSchema
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_new_scaling.py: 1 matches
-    200: from Products.ATContentTypes.content.image import ATImage
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_setup.py: 1 matches
-    3: from Products.ATContentTypes.content.image import ATImageSchema, ATImage
-
-./plone.app.layout/plone/app/layout/configure.zcml: 1 matches
-    14: <include zcml:condition="installed Products.ATContentTypes"
-
-./plone.app.layout/plone/app/layout/presentation/configure.zcml: 2 matches
-    7: for="Products.ATContentTypes.interface.IATDocument"
-    15: for="Products.ATContentTypes.interface.IATDocument"
-
-./plone.app.layout/plone/app/layout/viewlets/configure.zcml: 2 matches
-    321: zcml:condition="installed Products.ATContentTypes"
-    323: for="Products.ATContentTypes.interface.IATDocument"
-
-./plone.app.locales/utils/relocate.py: 1 matches
-    31: print 'No po-files were found for ATContentTypes.'
-
-./plone.app.locales/utils/utils.py: 1 matches
-    4: 'atct'  : {'name': 'atcontenttypes', 'path': 'ATContentTypes'},
-
-./plone.app.portlets/plone/app/portlets/configure.zcml: 2 matches
-    36: <class zcml:condition="installed Products.ATContentTypes"
-    37: class="Products.ATContentTypes.content.base.ATCTMixin">
-
-./plone.app.testing/plone/app/testing/layers.py: 1 matches
-    58: ('Products.ATContentTypes'              , {'loadZCML': True}, ),
-
-./plone.app.upgrade/plone/app/upgrade/v30/alphas.py: 2 matches
-    83: from Products.ATContentTypes.interface import IATCTTool
-    84: from Products.ATContentTypes.migration.v1_2 import upgradeATCTTool
-
-./plone.app.upgrade/plone/app/upgrade/v30/betas.py: 5 matches
-    133: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    134: 'ATContentTypes: Add Event',
-    135: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    136: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    137: 'ATContentTypes: Add News Item', ]:
-
-./plone.app.upgrade/plone/app/upgrade/v30/tests.py: 11 matches
-    121: from Products.ATContentTypes.interface import IATCTTool
-    953: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    954: 'ATContentTypes: Add Event',
-    955: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    956: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    957: 'ATContentTypes: Add News Item', ]:
-    964: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    965: 'ATContentTypes: Add Event',
-    966: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    967: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    968: 'ATContentTypes: Add News Item', ]:
-
-./plone.app.upgrade/plone/app/upgrade/v40/alphas.py: 1 matches
-    78: 'mimetypes_icons,plone_kss,ATContentTypes,PasswordReset,'
-
-./plone.app.upgrade/plone/app/upgrade/v40/profiles/to_beta5/controlpanel.xml: 1 matches
-    39: <configlet title="Collections" action_id="portal_atct" appId="ATContentTypes"
-
-./plone.app.upgrade/plone/app/upgrade/v42/profiles/to_rc1/controlpanel.xml: 1 matches
-    5: <configlet title="Collections (old style)" action_id="portal_atct" appId="ATContentTypes"
-
-./wicked/wicked/atcontent/Extensions/migrate_atdoc_wickeddoc.py: 1 matches
-    1: from Products.ATContentTypes.migration.walker import CatalogWalker
-
-./wicked/wicked/atcontent/migration/migrator.py: 3 matches
-    2: from Products.ATContentTypes.migration.migrator import CMFItemMigrator
-    3: from Products.ATContentTypes.migration.common import registerMigrator
-    4: from Products.ATContentTypes.migration.walker import CatalogWalker
-
-./wicked/wicked/atcontent/wickeddoc.py: 4 matches
-    31: from Products.ATContentTypes.atct import ATDocument
-    33: from Products.ATContentTypes.types.ATDocument import ATDocument
-    35: from Products.ATContentTypes.config import zconf
-    38: from Products.ATContentTypes.config import ATDOCUMENT_CONTENT_TYPE
-
-./wicked/wicked/plone/document-only.zcml: 2 matches
-    13: <class class="Products.ATContentTypes.content.document.ATDocument">
-    18: atclass="Products.ATContentTypes.content.document.ATDocument"
-
-./wicked/wicked/plone/registration.py: 1 matches
-    2: from Products.ATContentTypes.interface import IATNewsItem, IATEvent, IATDocument
-
-./wicked/wicked/plone/selective-atct.zcml: 6 matches
-    16: atclass="Products.ATContentTypes.content.document.ATDocument"
-    24: atclass="Products.ATContentTypes.content.event.ATEvent"
-    32: atclass="Products.ATContentTypes.content.newsitem.ATNewsItem"
-    41: for="Products.ATContentTypes.interface.IATContentType"
-    55: for="Products.ATContentTypes.interface.IATContentType"
-    73: for="Products.ATContentTypes.interface.IATContentType"
diff --git a/bootstrap-buildout.py b/bootstrap-buildout.py
new file mode 100644
index 0000000..a459921
--- /dev/null
+++ b/bootstrap-buildout.py
@@ -0,0 +1,210 @@
+##############################################################################
+#
+# Copyright (c) 2006 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+"""Bootstrap a buildout-based project
+
+Simply run this script in a directory containing a buildout.cfg.
+The script accepts buildout command-line options, so you can
+use the -c option to specify an alternate configuration file.
+"""
+
+import os
+import shutil
+import sys
+import tempfile
+
+from optparse import OptionParser
+
+__version__ = '2015-07-01'
+# See zc.buildout's changelog if this version is up to date.
+
+tmpeggs = tempfile.mkdtemp(prefix='bootstrap-')
+
+usage = '''\
+[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
+
+Bootstraps a buildout-based project.
+
+Simply run this script in a directory containing a buildout.cfg, using the
+Python that you want bin/buildout to use.
+
+Note that by using --find-links to point to local resources, you can keep
+this script from going over the network.
+'''
+
+parser = OptionParser(usage=usage)
+parser.add_option("--version",
+                  action="store_true", default=False,
+                  help=("Return bootstrap.py version."))
+parser.add_option("-t", "--accept-buildout-test-releases",
+                  dest='accept_buildout_test_releases',
+                  action="store_true", default=False,
+                  help=("Normally, if you do not specify a --version, the "
+                        "bootstrap script and buildout gets the newest "
+                        "*final* versions of zc.buildout and its recipes and "
+                        "extensions for you.  If you use this flag, "
+                        "bootstrap and buildout will get the newest releases "
+                        "even if they are alphas or betas."))
+parser.add_option("-c", "--config-file",
+                  help=("Specify the path to the buildout configuration "
+                        "file to be used."))
+parser.add_option("-f", "--find-links",
+                  help=("Specify a URL to search for buildout releases"))
+parser.add_option("--allow-site-packages",
+                  action="store_true", default=False,
+                  help=("Let bootstrap.py use existing site packages"))
+parser.add_option("--buildout-version",
+                  help="Use a specific zc.buildout version")
+parser.add_option("--setuptools-version",
+                  help="Use a specific setuptools version")
+parser.add_option("--setuptools-to-dir",
+                  help=("Allow for re-use of existing directory of "
+                        "setuptools versions"))
+
+options, args = parser.parse_args()
+if options.version:
+    print("bootstrap.py version %s" % __version__)
+    sys.exit(0)
+
+
+######################################################################
+# load/install setuptools
+
+try:
+    from urllib.request import urlopen
+except ImportError:
+    from urllib2 import urlopen
+
+ez = {}
+if os.path.exists('ez_setup.py'):
+    exec(open('ez_setup.py').read(), ez)
+else:
+    exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
+
+if not options.allow_site_packages:
+    # ez_setup imports site, which adds site packages
+    # this will remove them from the path to ensure that incompatible versions
+    # of setuptools are not in the path
+    import site
+    # inside a virtualenv, there is no 'getsitepackages'.
+    # We can't remove these reliably
+    if hasattr(site, 'getsitepackages'):
+        for sitepackage_path in site.getsitepackages():
+            # Strip all site-packages directories from sys.path that
+            # are not sys.prefix; this is because on Windows
+            # sys.prefix is a site-package directory.
+            if sitepackage_path != sys.prefix:
+                sys.path[:] = [x for x in sys.path
+                               if sitepackage_path not in x]
+
+setup_args = dict(to_dir=tmpeggs, download_delay=0)
+
+if options.setuptools_version is not None:
+    setup_args['version'] = options.setuptools_version
+if options.setuptools_to_dir is not None:
+    setup_args['to_dir'] = options.setuptools_to_dir
+
+ez['use_setuptools'](**setup_args)
+import setuptools
+import pkg_resources
+
+# This does not (always?) update the default working set.  We will
+# do it.
+for path in sys.path:
+    if path not in pkg_resources.working_set.entries:
+        pkg_resources.working_set.add_entry(path)
+
+######################################################################
+# Install buildout
+
+ws = pkg_resources.working_set
+
+setuptools_path = ws.find(
+    pkg_resources.Requirement.parse('setuptools')).location
+
+# Fix sys.path here as easy_install.pth added before PYTHONPATH
+cmd = [sys.executable, '-c',
+       'import sys; sys.path[0:0] = [%r]; ' % setuptools_path +
+       'from setuptools.command.easy_install import main; main()',
+       '-mZqNxd', tmpeggs]
+
+find_links = os.environ.get(
+    'bootstrap-testing-find-links',
+    options.find_links or
+    ('http://downloads.buildout.org/'
+     if options.accept_buildout_test_releases else None)
+    )
+if find_links:
+    cmd.extend(['-f', find_links])
+
+requirement = 'zc.buildout'
+version = options.buildout_version
+if version is None and not options.accept_buildout_test_releases:
+    # Figure out the most recent final version of zc.buildout.
+    import setuptools.package_index
+    _final_parts = '*final-', '*final'
+
+    def _final_version(parsed_version):
+        try:
+            return not parsed_version.is_prerelease
+        except AttributeError:
+            # Older setuptools
+            for part in parsed_version:
+                if (part[:1] == '*') and (part not in _final_parts):
+                    return False
+            return True
+
+    index = setuptools.package_index.PackageIndex(
+        search_path=[setuptools_path])
+    if find_links:
+        index.add_find_links((find_links,))
+    req = pkg_resources.Requirement.parse(requirement)
+    if index.obtain(req) is not None:
+        best = []
+        bestv = None
+        for dist in index[req.project_name]:
+            distv = dist.parsed_version
+            if _final_version(distv):
+                if bestv is None or distv > bestv:
+                    best = [dist]
+                    bestv = distv
+                elif distv == bestv:
+                    best.append(dist)
+        if best:
+            best.sort()
+            version = best[-1].version
+if version:
+    requirement = '=='.join((requirement, version))
+cmd.append(requirement)
+
+import subprocess
+if subprocess.call(cmd) != 0:
+    raise Exception(
+        "Failed to execute command:\n%s" % repr(cmd)[1:-1])
+
+######################################################################
+# Import and run buildout
+
+ws.add_entry(tmpeggs)
+ws.require(requirement)
+import zc.buildout.buildout
+
+if not [a for a in args if '=' not in a]:
+    args.append('bootstrap')
+
+# if -c was provided, we push it back into args for buildout' main function
+if options.config_file is not None:
+    args[0:0] = ['-c', options.config_file]
+
+zc.buildout.buildout.main(args)
+shutil.rmtree(tmpeggs)
diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index a629566..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,189 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Foundation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-import os
-import shutil
-import sys
-import tempfile
-
-from optparse import OptionParser
-
-tmpeggs = tempfile.mkdtemp()
-
-usage = '''\
-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
-
-Bootstraps a buildout-based project.
-
-Simply run this script in a directory containing a buildout.cfg, using the
-Python that you want bin/buildout to use.
-
-Note that by using --find-links to point to local resources, you can keep
-this script from going over the network.
-'''
-
-parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
-parser.add_option("-t", "--accept-buildout-test-releases",
-                  dest='accept_buildout_test_releases',
-                  action="store_true", default=False,
-                  help=("Normally, if you do not specify a --version, the "
-                        "bootstrap script and buildout gets the newest "
-                        "*final* versions of zc.buildout and its recipes and "
-                        "extensions for you.  If you use this flag, "
-                        "bootstrap and buildout will get the newest releases "
-                        "even if they are alphas or betas."))
-parser.add_option("-c", "--config-file",
-                  help=("Specify the path to the buildout configuration "
-                        "file to be used."))
-parser.add_option("-f", "--find-links",
-                  help=("Specify a URL to search for buildout releases"))
-parser.add_option("--allow-site-packages",
-                  action="store_true", default=False,
-                  help=("Let bootstrap.py use existing site packages"))
-parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
-
-
-options, args = parser.parse_args()
-
-######################################################################
-# load/install setuptools
-
-try:
-    if options.allow_site_packages:
-        import setuptools
-        import pkg_resources
-    from urllib.request import urlopen
-except ImportError:
-    from urllib2 import urlopen
-
-ez = {}
-exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
-
-if not options.allow_site_packages:
-    # ez_setup imports site, which adds site packages
-    # this will remove them from the path to ensure that incompatible versions
-    # of setuptools are not in the path
-    import site
-    # inside a virtualenv, there is no 'getsitepackages'.
-    # We can't remove these reliably
-    if hasattr(site, 'getsitepackages'):
-        for sitepackage_path in site.getsitepackages():
-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
-
-setup_args = dict(to_dir=tmpeggs, download_delay=0)
-
-if options.setuptools_version is not None:
-    setup_args['version'] = options.setuptools_version
-
-ez['use_setuptools'](**setup_args)
-import setuptools
-import pkg_resources
-
-# This does not (always?) update the default working set.  We will
-# do it.
-for path in sys.path:
-    if path not in pkg_resources.working_set.entries:
-        pkg_resources.working_set.add_entry(path)
-
-######################################################################
-# Install buildout
-
-ws = pkg_resources.working_set
-
-cmd = [sys.executable, '-c',
-       'from setuptools.command.easy_install import main; main()',
-       '-mZqNxd', tmpeggs]
-
-find_links = os.environ.get(
-    'bootstrap-testing-find-links',
-    options.find_links or
-    ('http://downloads.buildout.org/'
-     if options.accept_buildout_test_releases else None)
-    )
-if find_links:
-    cmd.extend(['-f', find_links])
-
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
-requirement = 'zc.buildout'
-version = options.version
-if version is None and not options.accept_buildout_test_releases:
-    # Figure out the most recent final version of zc.buildout.
-    import setuptools.package_index
-    _final_parts = '*final-', '*final'
-
-    def _final_version(parsed_version):
-        try:
-            return not parsed_version.is_prerelease
-        except AttributeError:
-            # Older setuptools
-            for part in parsed_version:
-                if (part[:1] == '*') and (part not in _final_parts):
-                    return False
-            return True
-
-    index = setuptools.package_index.PackageIndex(
-        search_path=[setuptools_path])
-    if find_links:
-        index.add_find_links((find_links,))
-    req = pkg_resources.Requirement.parse(requirement)
-    if index.obtain(req) is not None:
-        best = []
-        bestv = None
-        for dist in index[req.project_name]:
-            distv = dist.parsed_version
-            if _final_version(distv):
-                if bestv is None or distv > bestv:
-                    best = [dist]
-                    bestv = distv
-                elif distv == bestv:
-                    best.append(dist)
-        if best:
-            best.sort()
-            version = best[-1].version
-if version:
-    requirement = '=='.join((requirement, version))
-cmd.append(requirement)
-
-import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
-    raise Exception(
-        "Failed to execute command:\n%s" % repr(cmd)[1:-1])
-
-######################################################################
-# Import and run buildout
-
-ws.add_entry(tmpeggs)
-ws.require(requirement)
-import zc.buildout.buildout
-
-if not [a for a in args if '=' not in a]:
-    args.append('bootstrap')
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args[0:0] = ['-c', options.config_file]
-
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/buildout.cfg b/buildout.cfg
index 3def417..1fcde43 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,2 +1,83 @@
 [buildout]
-extends = buildout.d/development.cfg
+extends = http://dist.plone.org/release/5.0-latest/versions.cfg
+extensions = mr.developer
+parts =
+    instance
+    test
+    code-analysis
+    releaser
+    i18ndude
+    omelette
+    createcoverage
+
+develop = .
+
+
+[instance]
+recipe = plone.recipe.zope2instance
+user = admin:admin
+http-address = 8080
+eggs =
+    Plone
+    Pillow
+    plone.app.contenttypes [test]
+
+
+[code-analysis]
+recipe = plone.recipe.codeanalysis
+directory = ${buildout:directory}/src/plone
+flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
+flake8-max-complexity = 15
+flake8-extensions =
+    flake8-blind-except
+    flake8-debugger
+    flake8-coding
+
+
+[omelette]
+recipe = collective.recipe.omelette
+eggs = ${instance:eggs}
+
+
+[test]
+recipe = zc.recipe.testrunner
+eggs = ${instance:eggs}
+defaults = ['-s', 'plone.app.contenttypes', '--auto-color', '--auto-progress']
+
+
+[robot]
+recipe = zc.recipe.egg
+eggs =
+    ${test:eggs}
+    plone.app.robotframework[debug,ride,reload]
+
+
+[releaser]
+recipe = zc.recipe.egg
+eggs = zest.releaser
+
+
+[i18ndude]
+recipe = zc.recipe.egg
+eggs = i18ndude
+
+
+[createcoverage]
+recipe = zc.recipe.egg
+eggs = createcoverage
+
+
+[versions]
+# this tells buildout to _not_ use a relased version of this package
+plone.app.contenttypes =
+
+setuptools = 18.1
+zc.buildout = 2.4.1
+zc.recipe.egg = 2.0.2
+flake8 = 2.3.0
+i18ndude = 3.4.0
+robotframework = 2.8.4
+robotframework-ride = 1.3
+robotframework-selenium2library = 1.6.0
+robotsuite = 1.6.1
+selenium = 2.46.0
diff --git a/buildout.d/base.cfg b/buildout.d/base.cfg
deleted file mode 100644
index 2c60554..0000000
--- a/buildout.d/base.cfg
+++ /dev/null
@@ -1,22 +0,0 @@
-[buildout]
-package-name = plone.app.contenttypes
-package-extras = [test]
-
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/plone-5.0.x.cfg
-    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
-    checkouts.cfg
-    sources.cfg
-    versions.cfg
-
-parts += createcoverage
-
-develop = .
-
-eggs +=
-    Pillow
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-directory = ${buildout:directory}/plone
-flake8-ignore = E123,E124,E501,E126,E127,E128
diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
deleted file mode 100644
index 5b289e6..0000000
--- a/buildout.d/checkouts.cfg
+++ /dev/null
@@ -1,5 +0,0 @@
-[buildout]
-always-checkout = force
-auto-checkout +=
-    plone.app.dexterity
-    plone.app.robotframework
diff --git a/buildout.d/development.cfg b/buildout.d/development.cfg
deleted file mode 100644
index 6ff9460..0000000
--- a/buildout.d/development.cfg
+++ /dev/null
@@ -1,38 +0,0 @@
-[buildout]
-extends =
-    base.cfg
-
-eggs +=
-    plone.reload
-#    Products.PDBDebugMode
-#    Products.DocFinderTab
-#    aws.zope2zcmldoc
-#    collective.profiler
-
-extensions +=
-    mr.developer
-
-parts +=
-    omelette
-    test
-    robot
-
-show-picked-versions = true
-
-[omelette]
-recipe = collective.recipe.omelette
-eggs = ${test:eggs}
-
-[test]
-recipe = zc.recipe.testrunner
-eggs =
-    ${buildout:eggs}
-    ${buildout:package-name} ${buildout:package-extras}
-defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']
-
-[robot]
-recipe = zc.recipe.egg
-eggs =
-    Pillow
-    ${test:eggs}
-    plone.app.robotframework[ride,reload]
diff --git a/buildout.d/jenkins.cfg b/buildout.d/jenkins.cfg
deleted file mode 100644
index 34fa93f..0000000
--- a/buildout.d/jenkins.cfg
+++ /dev/null
@@ -1,24 +0,0 @@
-[buildout]
-extends =
-    base.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-
-jenkins-test-eggs = ${buildout:package-name} ${buildout:package-extras}
-jenkins-test-directories = src/plone/app/contenttypes
-
-parts += pylint
-
-[pylint]
-recipe = zc.recipe.egg
-eggs = pylint
-       ${buildout:eggs}
-scripts = pylint
-entry-points = pylint=pylint.lint:Run
-arguments = [
-    '--output-format=parseable',
-    '--zope=y',
-    '--reports=y',
-    '--disable=E0611,F0401,W0232,E1101,C0103,C0111,R0201,W0201,R0911,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622,C0301,W0212,R0903',
-    '--generated-members=objects',
-    ] + (sys.argv[1:] or ["${buildout:jenkins-test-directories}"])
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
deleted file mode 100644
index 585af8e..0000000
--- a/buildout.d/sources.cfg
+++ /dev/null
@@ -1,9 +0,0 @@
-[remotes]
-collective = git://github.com/collective
-collective_push = git@github.com:collective
-plone = git://github.com/plone
-plone_push = git@github.com:plone
-
-[sources]
-plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
-plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/buildout.d/versions.cfg b/buildout.d/versions.cfg
deleted file mode 100644
index 88aafe4..0000000
--- a/buildout.d/versions.cfg
+++ /dev/null
@@ -1,10 +0,0 @@
-[versions]
-setuptools = 6.1
-zc.buildout = 2.2.5
-zc.recipe.egg = 2.0.1
-
-robotframework = 2.8.4
-robotframework-ride = 1.3
-robotframework-selenium2library = 1.6.0
-robotsuite = 1.6.1
-selenium = 2.44.0
diff --git a/headers.sh b/headers.sh
deleted file mode 100644
index b7b2c05..0000000
--- a/headers.sh
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/bash
-
-for f in `find $1 -not -name __init__.py -name "*.py" -exec grep -H -E -o -c "coding: utf-8" {} \; | grep 0 | cut -d":" -f1`;
-do
-    echo '# -*- coding: utf-8 -*-' > ${f}.tmp.bla
-    cat ${f} >> ${f}.tmp.bla
-    mv ${f}.tmp.bla ${f}
-done
-
diff --git a/jenkins.cfg b/jenkins.cfg
deleted file mode 100644
index 870651f..0000000
--- a/jenkins.cfg
+++ /dev/null
@@ -1,18 +0,0 @@
-[buildout]
-extends =
-    buildout.d/base.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-parts += code-analysis
-
-jenkins-test-eggs =
-    plone.app.contenttypes [test]
-jenkins-test-directories =
-    plone/app/contenttypes
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-directory = ${buildout:directory}/plone/app/contenttypes
-flake8 = True
-jshint = True
-csslint = True
diff --git a/travis.cfg b/travis.cfg
index 1c8726a..b50e9e4 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,11 +1,12 @@
 [buildout]
 extends =
-    https://raw.github.com/collective/buildout.plonetest/master/travis-5.x.cfg
-    buildout.d/base.cfg
+    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.0.x.cfg
+    buildout.cfg
+parts = test createcoverage code-analysis
 
-parts =
-    download
-    install
-    test
-    createcoverage
-    code-analysis
+[code-analysis]
+return-status-codes = True
+
+[createcoverage]
+recipe = zc.recipe.egg
+eggs = createcoverage


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-17T11:32:25+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6c8c6e39441087b7be7f71ed9608341268423ac0

Merge pull request #256 from plone/cleanup-buildout

fix buildout for master

Files changed:
A .editorconfig
A .gitattributes
A bootstrap-buildout.py
M .coveragerc
M .travis.yml
M buildout.cfg
M travis.cfg
D archetypes-mentions.txt
D atct-mentions.txt
D bootstrap.py
D buildout.d/base.cfg
D buildout.d/checkouts.cfg
D buildout.d/development.cfg
D buildout.d/jenkins.cfg
D buildout.d/sources.cfg
D buildout.d/versions.cfg
D headers.sh
D jenkins.cfg

diff --git a/.coveragerc b/.coveragerc
index 208e655..50bf7c2 100644
--- a/.coveragerc
+++ b/.coveragerc
@@ -1,9 +1,6 @@
 [report]
 omit =
-    /home/*/.buildout/eggs/*
-    /usr/*
-    bin/test
-    buildout-cache/eggs/*
-    eggs/*
-    parts/*
+    */test*
 
+include =
+    plone/*
diff --git a/.editorconfig b/.editorconfig
new file mode 100644
index 0000000..a83363b
--- /dev/null
+++ b/.editorconfig
@@ -0,0 +1,15 @@
+[*]
+indent_style = space
+end_of_line = lf
+insert_final_newline = true
+trim_trailing_whitespace = true
+charset = utf-8
+
+[{*.py,*.cfg}]
+indent_size = 4
+
+[{*.html,*.dtml,*.pt,*.zpt,*.xml,*.zcml,*.js}]
+indent_size = 2
+
+[Makefile]
+indent_style = tab
diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..af46901
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1 @@
+CHANGES.rst merge=union
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
index 37f7d4a..4220a5a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,22 +1,27 @@
 language: python
-python: "2.7"
-branches:
-  only:
-    - 1.1.x
+sudo: false
+cache:
+  pip: true
+  directories:
+    - $HOME/buildout-cache
+python:
+  - 2.7
 before_install:
-  - pip install http://effbot.org/downloads/Imaging-1.1.7.tar.gz
+  - mkdir -p $HOME/buildout-cache/{eggs,downloads}
+  - mkdir $HOME/.buildout
+  - echo "[buildout]" > $HOME/.buildout/default.cfg
+  - echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
+  - echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
 install:
-  - mkdir -p buildout-cache/eggs
-  - mkdir -p buildout-cache/downloads
-  - python bootstrap.py -c travis.cfg
-  - bin/buildout -N -t 3 -c travis.cfg
+  - python bootstrap-buildout.py -c travis.cfg
+  - bin/buildout -Nc travis.cfg
 before_script:
   - "export DISPLAY=:99.0"
   - "sh -e /etc/init.d/xvfb start"
 script:
-  - bin/test -s plone.app.contenttypes
   - bin/code-analysis
-after_failure:
-  - bin/csslint --version
-  - bin/jshint --version
-
+  - bin/test
+  - bin/createcoverage
+after_success:
+  - pip install coveralls
+  - coveralls
diff --git a/archetypes-mentions.txt b/archetypes-mentions.txt
deleted file mode 100644
index ebbd545..0000000
--- a/archetypes-mentions.txt
+++ /dev/null
@@ -1,2131 +0,0 @@
-The following list was generated from a Plone 4.3 buildout with every package bin/develop'd
-===========================================================================================
-
-./Products.ATContentTypes/Products/ATContentTypes/__init__.py: 2 matches
-    51: from Products.Archetypes.atapi import process_types
-    52: from Products.Archetypes.atapi import listTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/configure.zcml: 1 matches
-    38: factory="Products.Archetypes.uuid.referenceableUUID"
-
-./Products.ATContentTypes/Products/ATContentTypes/content/base.py: 5 matches
-    16: from Products.Archetypes.atapi import BaseContent
-    17: from Products.Archetypes.atapi import BaseFolder
-    18: from Products.Archetypes.atapi import OrderedBaseFolder
-    19: from Products.Archetypes.atapi import BaseBTreeFolder
-    20: from Products.Archetypes.atapi import registerType
-
-./Products.ATContentTypes/Products/ATContentTypes/content/document.py: 7 matches
-    15: from Products.Archetypes.atapi import Schema
-    16: from Products.Archetypes.atapi import TextField
-    17: from Products.Archetypes.atapi import BooleanField
-    18: from Products.Archetypes.atapi import RichWidget
-    19: from Products.Archetypes.atapi import BooleanWidget
-    20: from Products.Archetypes.atapi import RFC822Marshaller
-    21: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/event.py: 11 matches
-    8: from Products.Archetypes.atapi import Schema
-    9: from Products.Archetypes.atapi import DateTimeField
-    10: from Products.Archetypes.atapi import LinesField
-    11: from Products.Archetypes.atapi import StringField
-    12: from Products.Archetypes.atapi import TextField
-    13: from Products.Archetypes.atapi import CalendarWidget
-    14: from Products.Archetypes.atapi import LinesWidget
-    15: from Products.Archetypes.atapi import RichWidget
-    16: from Products.Archetypes.atapi import StringWidget
-    17: from Products.Archetypes.atapi import RFC822Marshaller
-    18: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/file.py: 6 matches
-    11: from Products.Archetypes.atapi import Schema
-    12: from Products.Archetypes.atapi import FileField
-    13: from Products.Archetypes.atapi import FileWidget
-    14: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    15: from Products.Archetypes.atapi import AnnotationStorage
-    16: from Products.Archetypes.BaseContent import BaseContent
-
-./Products.ATContentTypes/Products/ATContentTypes/content/image.py: 5 matches
-    9: from Products.Archetypes.atapi import Schema
-    10: from Products.Archetypes.atapi import ImageField
-    11: from Products.Archetypes.atapi import ImageWidget
-    12: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    13: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/link.py: 3 matches
-    10: from Products.Archetypes.atapi import Schema
-    11: from Products.Archetypes.atapi import StringField
-    12: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/content/newsitem.py: 9 matches
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import ImageField
-    7: from Products.Archetypes.atapi import StringField
-    8: from Products.Archetypes.atapi import TextField
-    9: from Products.Archetypes.atapi import ImageWidget
-    10: from Products.Archetypes.atapi import RichWidget
-    11: from Products.Archetypes.atapi import StringWidget
-    12: from Products.Archetypes.atapi import RFC822Marshaller
-    13: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/content/schemata.py: 5 matches
-    1: from Products.Archetypes.atapi import BaseSchema
-    2: from Products.Archetypes.atapi import MetadataSchema
-    3: from Products.Archetypes.atapi import ReferenceField
-    4: from Products.Archetypes.atapi import BooleanField
-    5: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/content/topic.py: 11 matches
-    18: from Products.Archetypes.atapi import Schema
-    19: from Products.Archetypes.atapi import TextField
-    20: from Products.Archetypes.atapi import BooleanField
-    21: from Products.Archetypes.atapi import IntegerField
-    22: from Products.Archetypes.atapi import LinesField
-    23: from Products.Archetypes.atapi import BooleanWidget
-    24: from Products.Archetypes.atapi import IntegerWidget
-    25: from Products.Archetypes.atapi import InAndOutWidget
-    26: from Products.Archetypes.atapi import RichWidget
-    27: from Products.Archetypes.atapi import DisplayList
-    28: from Products.Archetypes.atapi import AnnotationStorage
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/__init__.py: 2 matches
-    2: from Products.Archetypes.atapi import registerType
-    3: from Products.Archetypes.ClassGen import generateClass
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/base.py: 3 matches
-    3: from Products.Archetypes.atapi import BaseContentMixin
-    9: from Products.Archetypes.ClassGen import generateClass
-    13: from Products.Archetypes.interfaces.referenceable import IReferenceable
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/boolean.py: 3 matches
-    8: from Products.Archetypes.atapi import Schema
-    9: from Products.Archetypes.atapi import BooleanField
-    10: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/date.py: 6 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import IntegerField
-    9: from Products.Archetypes.atapi import StringField
-    10: from Products.Archetypes.atapi import SelectionWidget
-    11: from Products.Archetypes.atapi import DisplayList
-    12: from Products.Archetypes.atapi import IntDisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/daterange.py: 3 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import DateTimeField
-    8: from Products.Archetypes.atapi import CalendarWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/list.py: 6 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import LinesField
-    8: from Products.Archetypes.atapi import StringField
-    9: from Products.Archetypes.atapi import SelectionWidget
-    10: from Products.Archetypes.atapi import LinesWidget
-    11: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/path.py: 5 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import BooleanField
-    8: from Products.Archetypes.atapi import BooleanWidget
-    9: from Products.Archetypes.atapi import ReferenceField
-    10: from Products.Archetypes.Referenceable import Referenceable
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/portaltype.py: 1 matches
-    6: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/reference.py: 1 matches
-    10: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/relativepath.py: 3 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import BooleanField, StringField
-    9: from Products.Archetypes.atapi import BooleanWidget, StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/schemata.py: 4 matches
-    1: from Products.Archetypes.atapi import Schema
-    2: from Products.Archetypes.atapi import StringField
-    3: from Products.Archetypes.atapi import IdWidget
-    4: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/selection.py: 6 matches
-    7: from Products.Archetypes.atapi import Schema
-    8: from Products.Archetypes.atapi import LinesField
-    9: from Products.Archetypes.atapi import MultiSelectionWidget
-    10: from Products.Archetypes.atapi import StringField
-    11: from Products.Archetypes.atapi import SelectionWidget
-    12: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simpleint.py: 6 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import IntegerField
-    8: from Products.Archetypes.atapi import IntegerWidget
-    9: from Products.Archetypes.atapi import StringField
-    10: from Products.Archetypes.atapi import SelectionWidget
-    11: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simplestring.py: 3 matches
-    6: from Products.Archetypes.atapi import Schema
-    7: from Products.Archetypes.atapi import StringField
-    8: from Products.Archetypes.atapi import StringWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/sort.py: 3 matches
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import BooleanField
-    7: from Products.Archetypes.atapi import BooleanWidget
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/interfaces.py: 3 matches
-    4: from Products.Archetypes.interfaces import IBaseContent
-    5: from Products.Archetypes.interfaces import IBaseFolder
-    7: from Products.Archetypes.interfaces import IATHistoryAware
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/constraintypes.py: 7 matches
-    14: from Products.Archetypes.atapi import Schema
-    15: from Products.Archetypes.atapi import LinesField
-    16: from Products.Archetypes.atapi import IntegerField
-    17: from Products.Archetypes.atapi import MultiSelectionWidget
-    18: from Products.Archetypes.atapi import SelectionWidget
-    19: from Products.Archetypes.atapi import IntDisplayList
-    20: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/historyaware.py: 1 matches
-    12: from Products.Archetypes.atapi import ATHistoryAwareMixin
-
-./Products.ATContentTypes/Products/ATContentTypes/permission.py: 1 matches
-    2: from Products.Archetypes.atapi import listTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_add.cpy: 1 matches
-    12: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_remove.cpy: 1 matches
-    12: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_set_sort.cpy: 1 matches
-    13: from Products.Archetypes.utils import transaction_note
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py: 11 matches
-    21: from Products.Archetypes.atapi import AttributeStorage
-    22: from Products.Archetypes.atapi import DisplayList
-    23: from Products.Archetypes.atapi import IdWidget
-    24: from Products.Archetypes.atapi import RFC822Marshaller
-    25: from Products.Archetypes.atapi import MetadataStorage
-    26: from Products.Archetypes.atapi import TextAreaWidget
-    27: from Products.Archetypes.interfaces.base import IBaseContent
-    28: from Products.Archetypes.interfaces.layer import ILayerContainer
-    29: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    30: from Products.Archetypes.interfaces.templatemixin import ITemplateMixin
-    31: from Products.Archetypes.tests.test_baseschema import BaseSchemaTest
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atdocument.py: 2 matches
-    9: from Products.Archetypes.interfaces.layer import ILayerContainer
-    10: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atevent.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py: 2 matches
-    9: from Products.Archetypes.interfaces.layer import ILayerContainer
-    10: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py: 2 matches
-    10: from Products.Archetypes.interfaces.layer import ILayerContainer
-    11: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atlink.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atnewsitem.py: 2 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_attopic.py: 3 matches
-    8: from Products.Archetypes.interfaces.layer import ILayerContainer
-    9: from Products.Archetypes import atapi
-    11: from Products.Archetypes.Field import BooleanField
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_criteria.py: 3 matches
-    10: from Products.Archetypes.interfaces.base import IBaseContent
-    11: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    12: from Products.Archetypes.interfaces import IExtensibleMetadata
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_default_mimetypes.py: 1 matches
-    22: from Products.Archetypes.mimetype_utils import setDefaultContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/topic.py: 1 matches
-    13: from Products.Archetypes.atapi import DisplayList
-
-./Products.ATContentTypes/setup.py: 1 matches
-    44: 'Products.Archetypes',
-
-./Products.ATReferenceBrowserWidget/setup.py: 2 matches
-    8: description="ATReferenceBrowserWidget is reference widget for Archetypes.",
-    16: keywords='CMF Plone Archetypes reference widget',
-
-./Products.Archetypes/Products/Archetypes/AllowedTypesByIface.py: 3 matches
-    27: from Products.Archetypes.atapi import BaseFolder
-    28: from Products.Archetypes.ArchetypeTool import listTypes
-    62: >>> from Products.Archetypes.interfaces.base import *
-
-./Products.Archetypes/Products/Archetypes/ApeSupport.py: 4 matches
-    2: Bring generic Ape Support to Archetypes.
-    4: The goal of this module is to implement generic mapping of Archetypes Schema
-    34: from Products.Archetypes.BaseUnit import BaseUnit
-    35: from Products.Archetypes.atapi import Master, __builtin__
-
-./Products.Archetypes/Products/Archetypes/ArchTTWTool.py: 2 matches
-    16: meta_type = 'Archetypes TTW Tool'
-    112: from Products.Archetypes.Registry import typeDescriptionRegistry
-
-./Products.Archetypes/Products/Archetypes/ArchetypeTool.py: 21 matches
-    9: from Products.Archetypes import PloneMessageFactory as _
-    10: from Products.Archetypes.interfaces import IArchetypeTool
-    11: from Products.Archetypes.interfaces import IExtensibleMetadata
-    12: from Products.Archetypes.interfaces.base import IBaseObject
-    13: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    14: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    15: from Products.Archetypes.ClassGen import generateClass
-    16: from Products.Archetypes.ClassGen import generateCtor
-    17: from Products.Archetypes.ClassGen import generateZMICtor
-    18: from Products.Archetypes.SQLStorageConfig import SQLStorageConfig
-    19: from Products.Archetypes.config import TOOL_NAME
-    20: from Products.Archetypes.config import UID_CATALOG
-    21: from Products.Archetypes.config import HAS_GRAPHVIZ
-    22: from Products.Archetypes.log import log
-    23: from Products.Archetypes.utils import findDict
-    24: from Products.Archetypes.utils import DisplayList
-    25: from Products.Archetypes.utils import mapply
-    26: from Products.Archetypes.Renderer import renderer
-    319: log('ArchetypesTool: Trying to register "%s" which ' \
-    519: from Products.Archetypes.Schema import getSchemata
-    1040: from Products.Archetypes.Extensions.migrations import migrate
-
-./Products.Archetypes/Products/Archetypes/BaseBTreeFolder.py: 3 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.atapi import BaseFolder
-    3: from Products.Archetypes.interfaces import IBaseFolder
-
-./Products.Archetypes/Products/Archetypes/BaseContent.py: 7 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.BaseObject import BaseObject
-    3: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    4: from Products.Archetypes.interfaces import IBaseContent
-    5: from Products.Archetypes.interfaces import IReferenceable
-    6: from Products.Archetypes.interfaces import IExtensibleMetadata
-    7: from Products.Archetypes.CatalogMultiplex import CatalogMultiplex
-
-./Products.Archetypes/Products/Archetypes/BaseFolder.py: 9 matches
-    1: from Products.Archetypes import WebDAVSupport
-    2: from Products.Archetypes.CatalogMultiplex import CatalogMultiplex
-    3: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    4: from Products.Archetypes.BaseObject import BaseObject
-    5: from Products.Archetypes.event import WebDAVObjectInitializedEvent
-    6: from Products.Archetypes.interfaces import IBaseFolder
-    7: from Products.Archetypes.interfaces import IBaseObject
-    8: from Products.Archetypes.interfaces import IReferenceable
-    9: from Products.Archetypes.interfaces import IExtensibleMetadata
-
-./Products.Archetypes/Products/Archetypes/BaseObject.py: 26 matches
-    4: from Products.Archetypes import PloneMessageFactory as _
-    5: from Products.Archetypes.debug import log_exc
-    6: from Products.Archetypes.utils import DisplayList
-    7: from Products.Archetypes.utils import mapply
-    8: from Products.Archetypes.utils import fixSchema
-    9: from Products.Archetypes.utils import shasattr
-    10: from Products.Archetypes.Field import StringField
-    11: from Products.Archetypes.Field import TextField
-    12: from Products.Archetypes.Renderer import renderer
-    13: from Products.Archetypes.Schema import Schema
-    14: from Products.Archetypes.Schema import getSchemata
-    15: from Products.Archetypes.Widget import IdWidget
-    16: from Products.Archetypes.Widget import StringWidget
-    17: from Products.Archetypes.Marshall import RFC822Marshaller
-    18: from Products.Archetypes.interfaces import IBaseObject
-    19: from Products.Archetypes.interfaces import IReferenceable
-    20: from Products.Archetypes.interfaces import ISchema
-    21: from Products.Archetypes.interfaces.field import IFileField
-    22: from Products.Archetypes.validator import AttributeValidator
-    23: from Products.Archetypes.config import ATTRIBUTE_SECURITY
-    24: from Products.Archetypes.config import RENAME_AFTER_CREATION_ATTEMPTS
-    26: from Products.Archetypes.event import ObjectInitializedEvent
-    27: from Products.Archetypes.event import ObjectEditedEvent
-    29: from Products.Archetypes.interfaces import IMultiPageSchema
-    30: from Products.Archetypes.interfaces import IObjectPreValidation
-    31: from Products.Archetypes.interfaces import IObjectPostValidation
-
-./Products.Archetypes/Products/Archetypes/BaseUnit.py: 3 matches
-    4: from Products.Archetypes.interfaces import IBaseUnit
-    5: from Products.Archetypes.log import log
-    6: from Products.Archetypes.utils import shasattr
-
-./Products.Archetypes/Products/Archetypes/CatalogMultiplex.py: 4 matches
-    10: from Products.Archetypes.config import CATALOGMAP_USES_PORTALTYPE, TOOL_NAME
-    11: from Products.Archetypes.log import log
-    12: from Products.Archetypes.Referenceable import Referenceable
-    13: from Products.Archetypes.utils import shasattr, isFactoryContained
-
-./Products.Archetypes/Products/Archetypes/ClassGen.py: 3 matches
-    6: from Products.Archetypes.log import log
-    7: from Products.Archetypes.utils import capitalize
-    8: from Products.Archetypes.utils import _getSecurity
-
-./Products.Archetypes/Products/Archetypes/ExtensibleMetadata.py: 9 matches
-    6: from Products.Archetypes import PloneMessageFactory as _
-    7: from Products.Archetypes.Field import BooleanField, LinesField, TextField, \
-    9: from Products.Archetypes.Widget import BooleanWidget, KeywordWidget, \
-    11: from Products.Archetypes.Schema import Schema
-    12: from Products.Archetypes.Schema import MetadataSchema
-    13: from Products.Archetypes.interfaces import IExtensibleMetadata
-    14: from Products.Archetypes.log import log
-    15: from Products.Archetypes.utils import DisplayList, shasattr
-    16: from Products.Archetypes import config
-
-./Products.Archetypes/Products/Archetypes/Extensions/migrations.py: 12 matches
-    8: from Products.Archetypes.Extensions.utils import install_uidcatalog
-    9: from Products.Archetypes.config import TOOL_NAME, REFERENCE_CATALOG, \
-    11: from Products.Archetypes.interfaces.base import IBaseObject
-    31: def reinstallArchetypes(portal, out):
-    35: products = ('MimetypesRegistry', 'PortalTransforms', 'Archetypes', )
-    36: print >>out, 'Reinstalling Archetypes and it\'s dependencies'
-    47: def fixArchetypesTool(portal, out):
-    75: print >>out, 'migrating reference from Archetypes 1.2'
-    119: print >>out, 'migrating reference from Archetypes 1.3. beta2\n'
-    287: fixArchetypesTool(portal, out)
-    288: reinstallArchetypes(portal, out)
-    295: print >>out, "Archetypes Migration Successful"
-
-./Products.Archetypes/Products/Archetypes/Extensions/utils.py: 11 matches
-    10: from Products.Archetypes.config import REFERENCE_CATALOG
-    11: from Products.Archetypes.ArchetypeTool import fixActionsForType
-    12: from Products.Archetypes.ArchetypeTool import listTypes
-    13: from Products.Archetypes.ArchetypeTool import process_types
-    14: from Products.Archetypes.ArchetypeTool import base_factory_type_information
-    15: from Products.Archetypes import types_globals
-    16: from Products.Archetypes.interfaces.base import IBaseObject
-    17: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    345: if not qi.isProductInstalled('Archetypes'):
-    346: qi.installProduct('Archetypes')
-    347: print >>out, 'Installing Archetypes'
-
-./Products.Archetypes/Products/Archetypes/Field.py: 55 matches
-    35: from Products.Archetypes import PloneMessageFactory as _
-    36: from Products.Archetypes.config import REFERENCE_CATALOG
-    37: from Products.Archetypes.Layer import DefaultLayerContainer
-    38: from Products.Archetypes.interfaces.storage import IStorage
-    39: from Products.Archetypes.interfaces.base import IBaseUnit
-    40: from Products.Archetypes.interfaces.field import IField
-    41: from Products.Archetypes.interfaces.field import IObjectField
-    42: from Products.Archetypes.interfaces.field import IStringField
-    43: from Products.Archetypes.interfaces.field import ITextField
-    44: from Products.Archetypes.interfaces.field import IDateTimeField
-    45: from Products.Archetypes.interfaces.field import ILinesField
-    46: from Products.Archetypes.interfaces.field import IIntegerField
-    47: from Products.Archetypes.interfaces.field import IFloatField
-    48: from Products.Archetypes.interfaces.field import IFileField
-    49: from Products.Archetypes.interfaces.field import IImageField
-    50: from Products.Archetypes.interfaces.field import IFixedPointField
-    51: from Products.Archetypes.interfaces.field import IReferenceField
-    52: from Products.Archetypes.interfaces.field import IComputedField
-    53: from Products.Archetypes.interfaces.field import IBooleanField
-    54: from Products.Archetypes.interfaces.layer import ILayerContainer
-    55: from Products.Archetypes.interfaces import IVocabulary
-    56: from Products.Archetypes.exceptions import ObjectFieldException
-    57: from Products.Archetypes.exceptions import TextFieldException
-    58: from Products.Archetypes.exceptions import FileFieldException
-    59: from Products.Archetypes.exceptions import ReferenceException
-    60: from Products.Archetypes.Widget import BooleanWidget
-    61: from Products.Archetypes.Widget import CalendarWidget
-    62: from Products.Archetypes.Widget import ComputedWidget
-    63: from Products.Archetypes.Widget import DecimalWidget
-    64: from Products.Archetypes.Widget import FileWidget
-    65: from Products.Archetypes.Widget import ImageWidget
-    66: from Products.Archetypes.Widget import IntegerWidget
-    67: from Products.Archetypes.Widget import LinesWidget
-    68: from Products.Archetypes.Widget import StringWidget
-    69: from Products.Archetypes.Widget import ReferenceWidget
-    70: from Products.Archetypes.BaseUnit import BaseUnit
-    71: from Products.Archetypes.ReferenceEngine import Reference
-    72: from Products.Archetypes.log import log
-    73: from Products.Archetypes.utils import DisplayList
-    74: from Products.Archetypes.utils import Vocabulary
-    75: from Products.Archetypes.utils import className
-    76: from Products.Archetypes.utils import mapply
-    77: from Products.Archetypes.utils import shasattr
-    78: from Products.Archetypes.utils import contentDispositionHeader
-    79: from Products.Archetypes.mimetype_utils import getAllowedContentTypes as getAllowedContentTypesProperty
-    80: from Products.Archetypes import config
-    81: from Products.Archetypes.Storage import AttributeStorage
-    82: from Products.Archetypes.Storage import ObjectManagedStorage
-    83: from Products.Archetypes.Storage import ReadOnlyStorage
-    84: from Products.Archetypes.Registry import setSecurity
-    85: from Products.Archetypes.Registry import registerField
-    86: from Products.Archetypes.Registry import registerPropertyType
-    93: from Products.Archetypes.interfaces import IFieldDefaultProvider
-    109: "Archetypes based ImageField's don't scale if neccessary.")
-    2696: 'other Archetypes Objects'))
-
-./Products.Archetypes/Products/Archetypes/Layer.py: 1 matches
-    1: from Products.Archetypes.interfaces.layer import ILayerContainer
-
-./Products.Archetypes/Products/Archetypes/Marshall.py: 7 matches
-    13: from Products.Archetypes.Field import TextField, FileField
-    14: from Products.Archetypes.interfaces.marshall import IMarshall
-    15: from Products.Archetypes.interfaces.layer import ILayer
-    16: from Products.Archetypes.interfaces.base import IBaseUnit
-    17: from Products.Archetypes.log import log
-    18: from Products.Archetypes.utils import shasattr
-    19: from Products.Archetypes.utils import mapply
-
-./Products.Archetypes/Products/Archetypes/OrderedBaseFolder.py: 2 matches
-    16: from Products.Archetypes.BaseFolder import BaseFolder
-    17: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-
-./Products.Archetypes/Products/Archetypes/ReferenceEngine.py: 7 matches
-    8: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    9: from Products.Archetypes.interfaces import IContentReference
-    10: from Products.Archetypes.interfaces import IReference
-    11: from Products.Archetypes.interfaces import IReferenceCatalog
-    13: from Products.Archetypes.utils import make_uuid, getRelURL, shasattr
-    14: from Products.Archetypes.config import (
-    16: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.Archetypes/Products/Archetypes/Referenceable.py: 4 matches
-    5: from Products.Archetypes import config
-    6: from Products.Archetypes.exceptions import ReferenceException
-    7: from Products.Archetypes.interfaces import IReferenceable
-    8: from Products.Archetypes.utils import shasattr, isFactoryContained
-
-./Products.Archetypes/Products/Archetypes/Registry.py: 8 matches
-    3: from Products.Archetypes.utils import className
-    4: from Products.Archetypes.utils import setSecurity
-    5: from Products.Archetypes.ArchetypeTool import listTypes
-    6: from Products.Archetypes.interfaces.base import IBaseObject
-    64: from Products.Archetypes.Registry import availableWidgets
-    73: from Products.Archetypes.Registry import getPropertyType
-    97: from Products.Archetypes.Registry import getPropertyType
-    154: from Products.Archetypes.Schema import getSchemata
-
-./Products.Archetypes/Products/Archetypes/Renderer.py: 3 matches
-    10: class ArchetypesRenderer:
-    65: InitializeClass(ArchetypesRenderer)
-    67: renderer = ArchetypesRenderer()
-
-./Products.Archetypes/Products/Archetypes/SQLMethod.py: 1 matches
-    1: from Products.Archetypes.debug import log_exc
-
-./Products.Archetypes/Products/Archetypes/SQLStorage.py: 7 matches
-    7: from Products.Archetypes.config import TOOL_NAME, MYSQL_SQLSTORAGE_TABLE_TYPE
-    8: from Products.Archetypes.interfaces.field import IObjectField
-    9: from Products.Archetypes.interfaces.layer import ILayer
-    10: from Products.Archetypes.interfaces.storage import ISQLStorage
-    11: from Products.Archetypes.log import log
-    12: from Products.Archetypes.SQLMethod import SQLMethod
-    13: from Products.Archetypes.Storage import StorageLayer, type_map
-
-./Products.Archetypes/Products/Archetypes/SQLStorageConfig.py: 3 matches
-    3: from Products.Archetypes.config import TOOL_NAME
-    4: from Products.Archetypes.interfaces.storage import ISQLStorage
-    5: from Products.Archetypes.interfaces.field import IObjectField
-
-./Products.Archetypes/Products/Archetypes/Schema/Composite.py: 3 matches
-    3: from Products.Archetypes.Schema import Schema
-    4: from Products.Archetypes.interfaces.layer import ILayerContainer, \
-    6: from Products.Archetypes.interfaces.schema import ICompositeSchema, \
-
-./Products.Archetypes/Products/Archetypes/Schema/Facade.py: 6 matches
-    3: from Products.Archetypes.Schema import BasicSchema
-    4: from Products.Archetypes.Field import *
-    5: from Products.Archetypes.interfaces.schema import IBindableSchema
-    6: from Products.Archetypes.Storage.Facade import FacadeMetadataStorage
-    7: from Products.Archetypes.ClassGen import generateMethods
-    99: to groups of Archetypes fields
-
-./Products.Archetypes/Products/Archetypes/Schema/__init__.py: 11 matches
-    4: from Products.Archetypes.Storage import MetadataStorage
-    5: from Products.Archetypes.Layer import DefaultLayerContainer
-    6: from Products.Archetypes.interfaces.field import IField
-    7: from Products.Archetypes.interfaces.layer import ILayerContainer, \
-    9: from Products.Archetypes.interfaces.schema import ISchema, ISchemata, \
-    11: from Products.Archetypes.utils import OrderedDict, mapply, shasattr
-    12: from Products.Archetypes.mimetype_utils import getDefaultContentType
-    13: from Products.Archetypes.exceptions import SchemaException
-    14: from Products.Archetypes.exceptions import ReferenceException
-    734: >>> from Products.Archetypes.atapi import StringField as SF
-    926: from Products.Archetypes.Field import StringField
-
-./Products.Archetypes/Products/Archetypes/Schema/factory.py: 2 matches
-    1: from Products.Archetypes.interfaces import ISchema, IBaseObject
-    34: 2. Run Products.Archetypes.VariableSchemaSupport.VarClassGen on the class.
-
-./Products.Archetypes/Products/Archetypes/Storage/Facade.py: 5 matches
-    2: from Products.Archetypes.Storage import StorageLayer
-    3: from Products.Archetypes.interfaces.storage import IStorage
-    4: from Products.Archetypes.interfaces.layer import ILayer
-    5: from Products.Archetypes.Field import encode
-    8: from Products.Archetypes.Registry import registerStorage
-
-./Products.Archetypes/Products/Archetypes/Storage/__init__.py: 5 matches
-    1: from Products.Archetypes.interfaces.storage import IStorage
-    2: from Products.Archetypes.interfaces.layer import ILayer
-    3: from Products.Archetypes.log import log
-    4: from Products.Archetypes.utils import shasattr
-    10: from Products.Archetypes.Registry import setSecurity, registerStorage
-
-./Products.Archetypes/Products/Archetypes/Storage/annotation.py: 9 matches
-    29: from Products.Archetypes.Storage import Storage
-    30: from Products.Archetypes.Storage import StorageLayer
-    31: from Products.Archetypes.Storage import _marker
-    32: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    33: from Products.Archetypes.annotations import AT_MD_STORAGE
-    34: from Products.Archetypes.annotations import getAnnotation
-    35: from Products.Archetypes.Registry import setSecurity
-    36: from Products.Archetypes.Registry import registerStorage
-    37: from Products.Archetypes.utils import shasattr
-
-./Products.Archetypes/Products/Archetypes/TemplateMixin.py: 7 matches
-    1: from Products.Archetypes import PloneMessageFactory as _
-    2: from Products.Archetypes.Schema import Schema
-    3: from Products.Archetypes.Field import StringField
-    4: from Products.Archetypes.Widget import SelectionWidget
-    5: from Products.Archetypes.config import TOOL_NAME
-    6: from Products.Archetypes.interfaces.ITemplateMixin import ITemplateMixin
-    99: autogenerated form from Archetypes.
-
-./Products.Archetypes/Products/Archetypes/UIDCatalog.py: 5 matches
-    23: from Products.Archetypes.config import UID_CATALOG
-    24: from Products.Archetypes.config import TOOL_NAME
-    25: from Products.Archetypes.interfaces import IUIDCatalog
-    26: from Products.Archetypes.utils import getRelURL
-    32: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/VariableSchemaSupport.py: 1 matches
-    6: from Products.Archetypes.ClassGen import ClassGenerator
-
-./Products.Archetypes/Products/Archetypes/WebDAVSupport.py: 3 matches
-    9: from Products.Archetypes.event import WebDAVObjectInitializedEvent
-    10: from Products.Archetypes.event import WebDAVObjectEditedEvent
-    11: from Products.Archetypes.utils import shasattr, mapply
-
-./Products.Archetypes/Products/Archetypes/Widget.py: 34 matches
-    11: from Products.Archetypes.utils import className
-    12: from Products.Archetypes.utils import unique
-    13: from Products.Archetypes.utils import capitalize
-    14: from Products.Archetypes.generator import macrowidget
-    15: from Products.Archetypes.log import log
-    16: from Products.Archetypes.Registry import registerPropertyType
-    17: from Products.Archetypes.Registry import registerWidget
-    276: log("Warning: in Archetypes.Widget.lookupDestinationsFor: " \
-    865: used_for=('Products.Archetypes.Field.StringField',)
-    872: used_for=('Products.Archetypes.Field.FixedPointField',)
-    879: used_for=('Products.Archetypes.Field.IntegerField',)
-    886: used_for=('Products.Archetypes.Field.ReferenceField',)
-    892: used_for=('Products.Archetypes.Field.ComputedField',)
-    899: used_for=('Products.Archetypes.Field.StringField',
-    900: 'Products.Archetypes.Field.TextField')
-    907: used_for=('Products.Archetypes.Field.LinesField',)
-    913: used_for=('Products.Archetypes.Field.BooleanField',)
-    920: used_for=('Products.Archetypes.Field.DateTimeField',)
-    928: used_for=('Products.Archetypes.Field.StringField',
-    929: 'Products.Archetypes.Field.LinesField',)
-    938: used_for=('Products.Archetypes.Field.StringField')
-    945: used_for=('Products.Archetypes.Field.LinesField',)
-    951: used_for=('Products.Archetypes.Field.LinesField',)
-    959: used_for=('Products.Archetypes.Field.TextField',)
-    965: used_for=('Products.Archetypes.Field.FileField',)
-    971: used_for=('Products.Archetypes.Field.StringField',)
-    977: used_for=('Products.Archetypes.Field.StringField',)
-    984: used_for=('Products.Archetypes.Field.ImageField',)
-    997: used_for=('Products.Archetypes.Field.StringField',)
-    1003: used_for=('Products.Archetypes.Field.StringField',)
-    1009: used_for=('Products.Archetypes.Field.StringField',)
-    1017: used_for=('Products.Archetypes.Field.LinesField',
-    1018: 'Products.Archetypes.Field.ReferenceField',)
-    1026: used_for=('Products.Archetypes.Field.LinesField',)
-
-./Products.Archetypes/Products/Archetypes/__init__.py: 18 matches
-    4: from Products.Archetypes.config import PKG_NAME, REGISTER_DEMO_TYPES
-    5: from Products.Archetypes.utils import DisplayList
-    15: allow_module('Products.Archetypes.utils')
-    17: ModuleSecurityInfo('Products.Archetypes.debug').declarePublic('log')
-    18: ModuleSecurityInfo('Products.Archetypes.debug').declarePublic('log_exc')
-    19: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getAllowableContentTypes')
-    20: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getAllowedContentTypes')
-    21: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getForbiddenContentTypes')
-    22: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declarePublic('getDefaultContentType')
-    23: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declareProtected(permissions.ManagePortal, 'setForbiddenContentTypes')
-    24: ModuleSecurityInfo('Products.Archetypes.mimetype_utils').declareProtected(permissions.ManagePortal, 'setDefaultContentType')
-    30: ModuleSecurityInfo('Products.Archetypes').declarePublic('PloneMessageFactory')
-    42: from Products.Archetypes.ArchetypeTool import process_types, listTypes
-    43: from Products.Archetypes.ArchetypeTool import ArchetypeTool
-    45: from Products.Archetypes.ArchTTWTool import ArchTTWTool
-    46: from Products.Archetypes.ReferenceEngine import ReferenceCatalog as RefTool
-    47: from Products.Archetypes.UIDCatalog import UIDCatalog as UIDTool
-    68: import Products.Archetypes.examples
-
-./Products.Archetypes/Products/Archetypes/annotations.py: 6 matches
-    34: from Products.Archetypes.interfaces.annotations import IATAnnotations
-    35: from Products.Archetypes.interfaces.annotations import IATAnnotatable
-    41: AT_ANN_STORAGE = 'Archetypes.storage.AnnotationStorage'
-    42: AT_MD_STORAGE = 'Archetypes.storage.MetadataAnnotationStorage'
-    43: AT_FIELD_MD = 'Archetypes.field.Metadata'
-    44: AT_REF = 'Archetypes.referenceEngine.Reference'
-
-./Products.Archetypes/Products/Archetypes/atapi.py: 56 matches
-    27: from Products.Archetypes.ArchetypeTool import registerType
-    28: from Products.Archetypes.ArchetypeTool import process_types
-    29: from Products.Archetypes.ArchetypeTool import listTypes
-    30: from Products.Archetypes.ArchetypeTool import registerClasses
-    32: from Products.Archetypes.BaseObject import BaseObject
-    33: from Products.Archetypes.BaseContent import BaseContent
-    34: from Products.Archetypes.BaseContent import BaseContentMixin
-    35: from Products.Archetypes.BaseFolder import BaseFolder
-    36: from Products.Archetypes.BaseFolder import BaseFolderMixin
-    37: from Products.Archetypes.BaseBTreeFolder import BaseBTreeFolder
-    38: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolder
-    39: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadata
-    41: from Products.Archetypes.BaseObject import MinimalSchema
-    42: from Products.Archetypes.BaseContent import BaseSchema
-    43: from Products.Archetypes.BaseFolder import BaseFolderSchema
-    44: from Products.Archetypes.BaseBTreeFolder import BaseBTreeFolderSchema
-    45: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolderSchema
-    46: from Products.Archetypes.ExtensibleMetadata import ExtensibleMetadataSchema
-    48: from Products.Archetypes.Schema import BasicSchema
-    49: from Products.Archetypes.Schema import Schema
-    50: from Products.Archetypes.Schema import MetadataSchema
-    51: from Products.Archetypes.Schema import ManagedSchema
-    52: from Products.Archetypes.TemplateMixin import TemplateMixinSchema
-    53: from Products.Archetypes.Schema.Composite import CompositeSchema
-    54: from Products.Archetypes.Schema.Facade import FacadeMetadataSchema
-    55: from Products.Archetypes.VariableSchemaSupport import VariableSchemaSupport
-    57: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    58: from Products.Archetypes.Marshall import RFC822Marshaller
-    60: from Products.Archetypes.Field import *
-    62: from Products.Archetypes.Widget import *
-    64: from Products.Archetypes.Storage import *
-    65: from Products.Archetypes.Storage.annotation import AnnotationStorage
-    66: from Products.Archetypes.Storage.annotation import MetadataAnnotationStorage
-    67: from Products.Archetypes.SQLStorage import BaseSQLStorage
-    68: from Products.Archetypes.SQLStorage import GadflySQLStorage
-    69: from Products.Archetypes.SQLStorage import MySQLSQLStorage
-    70: from Products.Archetypes.SQLStorage import PostgreSQLStorage
-    71: from Products.Archetypes.SQLStorage import SQLServerStorage
-    73: from Products.Archetypes.annotations import getAnnotation
-    74: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    75: from Products.Archetypes.annotations import AT_MD_STORAGE
-    76: from Products.Archetypes.annotations import AT_FIELD_MD
-    77: from Products.Archetypes.annotations import AT_REF
-    79: from Products.Archetypes.utils import DisplayList
-    80: from Products.Archetypes.utils import IntDisplayList
-    81: from Products.Archetypes.utils import Vocabulary
-    82: from Products.Archetypes.ClassGen import AT_GENERATE_METHOD
-    83: from Products.Archetypes.BaseUnit import BaseUnit
-    84: from Products.Archetypes.TemplateMixin import TemplateMixin
-    85: from Products.Archetypes.debug import log
-    86: from Products.Archetypes.debug import log_exc
-    87: from Products.Archetypes.BaseObject import AttributeValidator
-    88: from Products.Archetypes.athistoryaware import ATHistoryAwareMixin
-    89: from Products.Archetypes.fieldproperty import ATFieldProperty
-    90: from Products.Archetypes.fieldproperty import ATReferenceFieldProperty
-    91: from Products.Archetypes.fieldproperty import ATDateTimeFieldProperty
-
-./Products.Archetypes/Products/Archetypes/bridge.zcml: 3 matches
-    6: zope2="Products.Archetypes.interfaces.orderedfolder.IOrderedFolder"
-    12: zope2="Products.Archetypes.interfaces.templatemixin.ITemplateMixin"
-    18: zope2="Products.Archetypes.interfaces.vocabulary.IVocabulary"
-
-./Products.Archetypes/Products/Archetypes/browser/edit.py: 3 matches
-    9: from Products.Archetypes.interfaces import IEditForm
-    10: from Products.Archetypes.interfaces import IMultiPageSchema
-    12: from Products.Archetypes import PloneMessageFactory as _
-
-./Products.Archetypes/Products/Archetypes/browser/lifecycle.py: 2 matches
-    7: from Products.Archetypes.event import EditBegunEvent
-    8: from Products.Archetypes.event import EditCancelledEvent
-
-./Products.Archetypes/Products/Archetypes/browser/widgets.py: 2 matches
-    41: >>> from Products.Archetypes.utils import DisplayList
-    67: >>> from Products.Archetypes.utils import IntDisplayList
-
-./Products.Archetypes/Products/Archetypes/config.py: 1 matches
-    1: PKG_NAME = "Archetypes"
-
-./Products.Archetypes/Products/Archetypes/debug.py: 2 matches
-    10: from Products.Archetypes.config import DEBUG
-    12: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/event.py: 6 matches
-    9: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    10: from Products.Archetypes.interfaces import IWebDAVObjectInitializedEvent
-    11: from Products.Archetypes.interfaces import IObjectEditedEvent
-    12: from Products.Archetypes.interfaces import IWebDAVObjectEditedEvent
-    13: from Products.Archetypes.interfaces import IEditBegunEvent
-    14: from Products.Archetypes.interfaces import IEditCancelledEvent
-
-./Products.Archetypes/Products/Archetypes/examples/ATBIFolder.py: 3 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-    3: from Products.Archetypes.AllowedTypesByIface import AllowedTypesByIfaceMixin
-
-./Products.Archetypes/Products/Archetypes/examples/ComplexType.py: 3 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes import Field
-    4: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/DDocument.py: 4 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes.TemplateMixin import TemplateMixin
-    3: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    4: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/Fact.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    3: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/RefNode.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleBTreeFolder.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleFile.py: 3 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.Marshall import PrimaryFieldMarshaller
-    3: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleFolder.py: 2 matches
-    1: from Products.Archetypes.atapi import *
-    2: from Products.Archetypes.config import PKG_NAME
-
-./Products.Archetypes/Products/Archetypes/examples/SimpleType.py: 4 matches
-    1: from Products.Archetypes import atapi
-    2: from Products.Archetypes.config import PKG_NAME
-    29: TestView = 'Archetypes Tests: Protected Type View'
-    32: TestWrite = 'Archetypes Tests: Protected Type Write'
-
-./Products.Archetypes/Products/Archetypes/exportimport/archetypetool.py: 2 matches
-    10: from Products.Archetypes.config import TOOL_NAME
-    11: from Products.Archetypes.interfaces import IArchetypeTool
-
-./Products.Archetypes/Products/Archetypes/exportimport/configure.zcml: 5 matches
-    13: title="Archetypes setup"
-    14: description="Import various settings for Archetypes."
-    15: handler="Products.Archetypes.setuphandlers.setupArchetypes">
-    23: handler="Products.Archetypes.exportimport.archetypetool.importArchetypeTool">
-    31: handler="Products.Archetypes.exportimport.archetypetool.exportArchetypeTool">
-
-./Products.Archetypes/Products/Archetypes/exportimport/reference.py: 2 matches
-    5: from Products.Archetypes.exportimport import catalog
-    6: from Products.Archetypes.interfaces import IReferenceCatalog
-
-./Products.Archetypes/Products/Archetypes/exportimport/uid.py: 2 matches
-    5: from Products.Archetypes.exportimport import catalog
-    6: from Products.Archetypes.interfaces import IUIDCatalog
-
-./Products.Archetypes/Products/Archetypes/fieldproperty.py: 7 matches
-    13: These properties can only be used on Archetypes objects. They delegate
-    22: >>> from Products.Archetypes.atapi import *
-    35: >>> registerType(MyContent, 'Archetypes')
-    120: >>> from Products.Archetypes.atapi import *
-    130: >>> registerType(MyContent, 'Archetypes')
-    184: >>> from Products.Archetypes.atapi import *
-    193: >>> registerType(MyContent, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/interfaces/ITemplateMixin.py: 1 matches
-    1: from Products.Archetypes.interfaces.templatemixin import ITemplateMixin
-
-./Products.Archetypes/Products/Archetypes/interfaces/__init__.py: 14 matches
-    9: from Products.Archetypes.interfaces.field import IField
-    10: from Products.Archetypes.interfaces.field import IObjectField
-    11: from Products.Archetypes.interfaces.field import IStringField
-    12: from Products.Archetypes.interfaces.field import ITextField
-    13: from Products.Archetypes.interfaces.field import IDateTimeField
-    14: from Products.Archetypes.interfaces.field import ILinesField
-    15: from Products.Archetypes.interfaces.field import IIntegerField
-    16: from Products.Archetypes.interfaces.field import IFloatField
-    17: from Products.Archetypes.interfaces.field import IFileField
-    18: from Products.Archetypes.interfaces.field import IImageField
-    19: from Products.Archetypes.interfaces.field import IFixedPointField
-    20: from Products.Archetypes.interfaces.field import IReferenceField
-    21: from Products.Archetypes.interfaces.field import IComputedField
-    22: from Products.Archetypes.interfaces.field import IBooleanField
-
-./Products.Archetypes/Products/Archetypes/interfaces/athistoryaware.py: 1 matches
-    6: Provide access to older revisions of persistent Archetypes
-
-./Products.Archetypes/Products/Archetypes/interfaces/base.py: 2 matches
-    141: Products.Archetypes.Referenceable.Referenceable
-    142: Products.Archetypes.CatalogMultiplex.CatalogMultiplex
-
-./Products.Archetypes/Products/Archetypes/interfaces/field.py: 1 matches
-    298: explicitly, Archetypes will find and call this adapter.
-
-./Products.Archetypes/Products/Archetypes/interfaces/marshall.py: 1 matches
-    1: from Products.Archetypes.interfaces.layer import ILayer
-
-./Products.Archetypes/Products/Archetypes/interfaces/vocabulary.py: 1 matches
-    8: Products.Archetypes.utils.
-
-./Products.Archetypes/Products/Archetypes/log.py: 1 matches
-    3: logger = logging.getLogger('Archetypes')
-
-./Products.Archetypes/Products/Archetypes/profiles.zcml: 3 matches
-    7: name="Archetypes"
-    8: title="Archetypes"
-    10: description="Extension profile for default Archetypes setup."
-
-./Products.Archetypes/Products/Archetypes/profiles/default/skins.xml: 1 matches
-    4: directory="Products.Archetypes:skins/archetypes"/>
-
-./Products.Archetypes/Products/Archetypes/profiles/default/toolset.xml: 3 matches
-    6: class="Products.Archetypes.ArchetypeTool"/>
-    8: class="Products.Archetypes.ReferenceEngine.ReferenceCatalog"/>
-    10: class="Products.Archetypes.UIDCatalog.UIDCatalog"/>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/ATBIFolder.xml: 1 matches
-    9: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/ComplexType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/DDocument.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/Fact.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/MySimpleType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/Refnode.xml: 1 matches
-    9: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleBTreeFolder.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleFile.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleFolder.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleProtectedType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/profiles/sample_types/types/SimpleType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.Archetypes/Products/Archetypes/public.py: 1 matches
-    5: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/references.py: 2 matches
-    1: from Products.Archetypes.ReferenceEngine import Reference
-    2: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.Archetypes/Products/Archetypes/setuphandlers.py: 4 matches
-    2: Archetypes setup handlers.
-    6: from Products.Archetypes.config import TOOL_NAME, REFERENCE_CATALOG, UID_CATALOG
-    57: def setupArchetypes(context):
-    59: Setup Archetypes step.
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/add_reference.cpy: 2 matches
-    12: from Products.Archetypes import PloneMessageFactory as _
-    13: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/content_edit_impl.py: 3 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-    105: from Products.Archetypes.utils import transaction_note
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/go_back.cpy: 2 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/rejectAnonymous.py: 2 matches
-    11: from Products.Archetypes import PloneMessageFactory as _
-    12: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/validate_integrity.cpy: 2 matches
-    12: from Products.Archetypes import PloneMessageFactory as _
-    13: from Products.Archetypes.utils import addStatusMessage
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/field.pt: 2 matches
-    59: tal:attributes="class string:field ArchetypesField-${fieldtypename};
-    82: tal:attributes="class python: test(error_id, 'field error ' + 'Archetypes' + widget.getName(), 'field ' + 'Archetypes' + widget.getName()) + ' ' + kss_class;
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/keyword.pt: 1 matches
-    100: <div class="ArchetypesKeywordValue" id=""
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/multiselection.pt: 1 matches
-    51: <div class="ArchetypesMultiSelectionValue" id=""
-
-./Products.Archetypes/Products/Archetypes/skins/archetypes/widgets/reference.pt: 2 matches
-    28: tal:condition="python:portal.portal_interface.objectImplements(ref,'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-    47: tal:condition="python:portal.portal_interface.objectImplements(ref,'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-
-./Products.Archetypes/Products/Archetypes/tests/atsitetestcase.py: 4 matches
-    8: from Products.Archetypes.tests import attestcase
-    9: from Products.Archetypes.tests.layer import ArchetypesSite
-    15: layer = ArchetypesSite
-    21: layer = ArchetypesSite
-
-./Products.Archetypes/Products/Archetypes/tests/attestcase.py: 8 matches
-    11: from Products.Archetypes.tests.layer import ZCML
-    18: profile_registry.registerProfile('Archetypes_sampletypes',
-    19: 'Archetypes Sample Content Types',
-    20: 'Extension profile including Archetypes sample content types',
-    22: 'Products.Archetypes',
-    32: ZopeTestCase.installProduct('Archetypes')
-    40: 'Products.Archetypes:Archetypes',
-    41: 'Products.Archetypes:Archetypes_sampletypes'])
-
-./Products.Archetypes/Products/Archetypes/tests/layer.py: 3 matches
-    28: import Products.Archetypes
-    29: zcml.load_config('configure.zcml', Products.Archetypes)
-    45: class ArchetypesSite(ZCML):
-
-./Products.Archetypes/Products/Archetypes/tests/test_annotation.py: 5 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.atapi import BaseSchema, Schema, StringField, \
-    32: from Products.Archetypes.tests.test_classgen import Dummy
-    33: from Products.Archetypes.tests.test_classgen import gen_class
-    34: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_athistoryaware.py: 2 matches
-    14: from Products.Archetypes.annotations import AT_ANN_STORAGE
-    15: from Products.Archetypes.athistoryaware import ATHistoryAwareMixin
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseobject.py: 4 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.tests.utils import mkDummyInContext
-    31: from Products.Archetypes import PloneMessageFactory as _
-    32: from Products.Archetypes import atapi
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseschema.py: 9 matches
-    26: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    29: from Products.Archetypes.tests.test_classgen import Dummy
-    31: from Products.Archetypes import atapi
-    32: from Products.Archetypes.config import PKG_NAME, LANGUAGE_DEFAULT
-    33: from Products.Archetypes.interfaces.layer import ILayerContainer
-    35: from Products.Archetypes.ExtensibleMetadata import FLOOR_DATE
-    36: from Products.Archetypes.ExtensibleMetadata import CEILING_DATE
-    51: atapi.registerType(Dummy, 'Archetypes')
-    395: See Products.Archetypes.Field.DateTimeField.set
-
-./Products.Archetypes/Products/Archetypes/tests/test_baseunit.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    33: from Products.Archetypes.tests.utils import normalize_html
-    34: from Products.Archetypes.atapi import BaseUnit
-    35: from Products.Archetypes.tests.test_classgen import Dummy
-    36: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_classgen.py: 6 matches
-    34: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    35: from Products.Archetypes.tests.utils import mkDummyInContext
-    36: from Products.Archetypes.tests.utils import gen_class
-    37: from Products.Archetypes import atapi
-    38: from Products.Archetypes.interfaces.base import IBaseUnit
-    39: from Products.Archetypes.ClassGen import generateMethods
-
-./Products.Archetypes/Products/Archetypes/tests/test_cmfessentials.py: 3 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_construction.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.Archetypes/Products/Archetypes/tests/test_contenttype.py: 6 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import gen_dummy
-    36: from Products.Archetypes.tests.test_classgen import default_text
-    38: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_copying.py: 6 matches
-    39: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    40: from Products.Archetypes.tests.utils import makeContent
-    41: from Products.Archetypes.tests.atsitetestcase import portal_owner
-    42: from Products.Archetypes.tests.atsitetestcase import portal_name
-    43: from Products.Archetypes.tests.atsitetestcase import default_user
-    45: from Products.Archetypes.tests.utils import PACKAGE_HOME
-
-./Products.Archetypes/Products/Archetypes/tests/test_default_mimetypes.py: 3 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    6: from Products.Archetypes.mimetype_utils import getDefaultContentType
-    7: from Products.Archetypes.mimetype_utils import setDefaultContentType
-
-./Products.Archetypes/Products/Archetypes/tests/test_doctests.py: 12 matches
-    5: 'Products.Archetypes.utils',
-    6: 'Products.Archetypes.Schema',
-    7: 'Products.Archetypes.ArchetypeTool',
-    8: 'Products.Archetypes.AllowedTypesByIface',
-    9: 'Products.Archetypes.Field',
-    10: 'Products.Archetypes.Marshall',
-    11: 'Products.Archetypes.fieldproperty',
-    12: 'Products.Archetypes.browser.widgets',
-    17: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    18: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    19: from Products.Archetypes.tests.doctestcase import ZopeDocTestSuite
-    29: package="Products.Archetypes.tests",
-
-./Products.Archetypes/Products/Archetypes/tests/test_event.py: 8 matches
-    2: Unittests for the events fired by Archetypes.
-    10: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    11: from Products.Archetypes.tests import utils
-    15: from Products.Archetypes.atapi import BaseContent
-    17: from Products.Archetypes.interfaces import IObjectPreValidation
-    18: from Products.Archetypes.interfaces import IObjectPostValidation
-    20: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    21: from Products.Archetypes.interfaces import IObjectEditedEvent
-
-./Products.Archetypes/Products/Archetypes/tests/test_extensions_utils.py: 3 matches
-    5: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    6: from Products.Archetypes.examples.ComplexType import ComplexType
-    7: from Products.Archetypes.Extensions import utils
-
-./Products.Archetypes/Products/Archetypes/tests/test_externaleditor.py: 4 matches
-    26: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    27: from Products.Archetypes.tests.utils import makeContent
-    29: from Products.Archetypes.atapi import *
-    30: from Products.Archetypes.interfaces.base import IBaseUnit
-
-./Products.Archetypes/Products/Archetypes/tests/test_fields.py: 8 matches
-    38: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    39: from Products.Archetypes.tests.atsitetestcase import portal_name
-    40: from Products.Archetypes.tests.utils import mkDummyInContext
-    41: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    43: from Products.Archetypes.atapi import Schema, DisplayList, BaseContentMixin, TextField
-    44: from Products.Archetypes.interfaces import IFieldDefaultProvider
-    45: from Products.Archetypes.interfaces.vocabulary import IVocabulary
-    46: from Products.Archetypes import Field as at_field
-
-./Products.Archetypes/Products/Archetypes/tests/test_fieldvalidation.py: 3 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    32: from Products.Archetypes.atapi import Field, IntegerField
-    33: from Products.Archetypes.BaseObject import BaseObject
-
-./Products.Archetypes/Products/Archetypes/tests/test_file_upload.py: 9 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    33: from Products.Archetypes.atapi import MetadataStorage, BaseContent
-    34: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    66: from Products.Archetypes import Field
-    288: from Products.Archetypes.BaseUnit import BaseUnit
-    296: from Products.Archetypes.BaseUnit import BaseUnit
-    336: from Products.Archetypes import Field
-    347: from Products.Archetypes.BaseUnit import BaseUnit
-    351: from Products.Archetypes import Field
-
-./Products.Archetypes/Products/Archetypes/tests/test_filename.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import gen_dummy
-    36: from Products.Archetypes.tests.test_classgen import default_text
-    38: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_functional.py: 8 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATFunctionalSiteTestCase
-    32: from Products.Archetypes.tests.attestcase import default_user
-    33: from Products.Archetypes.tests.atsitetestcase import portal_owner
-    100: from Products.Archetypes.examples.DDocument import DDocument
-    136: from Products.Archetypes.examples.DDocument import DDocument
-    196: req.form['Archetypes.DDocument'] = True
-    235: from Products.Archetypes.Field import FileField
-    258: suite.addTest(FileSuite(testfile, package="Products.Archetypes.tests",
-
-./Products.Archetypes/Products/Archetypes/tests/test_index.py: 2 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_interfaces.py: 13 matches
-    38: from Products.Archetypes.BaseObject import BaseObject
-    39: from Products.Archetypes.BaseContent import BaseContent
-    40: from Products.Archetypes.BaseFolder import BaseFolder
-    41: from Products.Archetypes.BaseUnit import BaseUnit
-    42: from Products.Archetypes import Field as at_field  # use __all__ field
-    43: from Products.Archetypes.Marshall import Marshaller, PrimaryFieldMarshaller, \
-    45: from Products.Archetypes.OrderedBaseFolder import OrderedBaseFolder
-    46: from Products.Archetypes.Schema import Schema
-    47: from Products.Archetypes.SQLStorage import BaseSQLStorage, GadflySQLStorage, \
-    49: from Products.Archetypes.Storage import Storage, ReadOnlyStorage, \
-    51: from Products.Archetypes.atapi import registerType
-    52: from Products.Archetypes.tests.layer import ZCML
-    182: PROJECTNAME = 'Archetypes.tests'
-
-./Products.Archetypes/Products/Archetypes/tests/test_languagevocabulary.py: 8 matches
-    5: from Products.Archetypes.atapi import BaseSchema
-    6: from Products.Archetypes.atapi import listTypes
-    7: from Products.Archetypes.atapi import registerType
-    8: from Products.Archetypes.atapi import process_types
-    9: from Products.Archetypes.config import PKG_NAME
-    10: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    11: from Products.Archetypes.tests.test_classgen import Dummy
-    20: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_marshaller.py: 6 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-    33: from Products.Archetypes.tests.utils import aputrequest
-    34: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    36: from Products.Archetypes.WebDAVSupport import PdataStreamIterator
-    37: from Products.Archetypes.examples.DDocument import DDocument
-
-./Products.Archetypes/Products/Archetypes/tests/test_metadata.py: 8 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import mkDummyInContext
-    33: from Products.Archetypes.tests.utils import gen_class
-    34: from Products.Archetypes.tests.test_classgen import Dummy
-    35: from Products.Archetypes.tests.test_classgen import schema
-    39: from Products.Archetypes.atapi import BaseFolder
-    40: from Products.Archetypes import config
-    349: from Products.Archetypes.examples.DDocument import DDocument
-
-./Products.Archetypes/Products/Archetypes/tests/test_referenceCatalog.py: 5 matches
-    35: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    36: from Products.Archetypes.tests.utils import makeContent
-    38: from Products.Archetypes import config
-    39: from Products.Archetypes.references import HoldingReference, CascadeReference
-    276: self.app.REQUEST.form['Archetypes.Refnode'] = 1
-
-./Products.Archetypes/Products/Archetypes/tests/test_reference_optimizations.py: 2 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    4: from Products.Archetypes.tests.utils import makeContent
-
-./Products.Archetypes/Products/Archetypes/tests/test_referenceable.py: 4 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import makeContent
-    34: from Products.Archetypes.config import REFERENCE_CATALOG, UID_CATALOG, UUID_ATTR
-    36: from Products.Archetypes.atapi import DisplayList
-
-./Products.Archetypes/Products/Archetypes/tests/test_rename.py: 8 matches
-    28: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    30: from Products.Archetypes.tests.utils import makeContent
-    31: from Products.Archetypes.tests.utils import populateFolder
-    33: from Products.Archetypes.tests.utils import wrap_method
-    34: from Products.Archetypes.tests.utils import unwrap_method
-    35: from Products.Archetypes.utils import shasattr
-    36: from Products.Archetypes.atapi import BaseContent
-    37: from Products.Archetypes.config import UUID_ATTR
-
-./Products.Archetypes/Products/Archetypes/tests/test_schemata.py: 8 matches
-    30: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    31: from Products.Archetypes.atapi import BaseSchema, BaseContent, registerType, \
-    33: from Products.Archetypes.config import PKG_NAME
-    34: from Products.Archetypes.Schema import Schemata
-    35: from Products.Archetypes.Schema import getNames
-    36: from Products.Archetypes.Field import StringField
-    37: from Products.Archetypes.exceptions import SchemaException
-    50: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_schemata_manipulation.py: 3 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.atapi import StringField
-    31: from Products.Archetypes.Schema import ManagedSchema
-
-./Products.Archetypes/Products/Archetypes/tests/test_security.py: 8 matches
-    6: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    7: from Products.Archetypes.tests.utils import makeContent
-    9: from Products.Archetypes.Storage import AttributeStorage
-    10: from Products.Archetypes.examples.SimpleType import TestView, TestWrite
-    126: self.check('from Products.Archetypes.utils import transaction_note')
-    129: self.check('from Products.Archetypes.utils import transaction_note;'
-    133: self.check('from Products.Archetypes import DisplayList')
-    136: self.check('from Products.Archetypes import DisplayList;'
-
-./Products.Archetypes/Products/Archetypes/tests/test_storage.py: 5 matches
-    28: from Products.Archetypes.atapi import AttributeStorage, MetadataStorage
-    30: from Products.Archetypes.tests.attestcase import ATTestCase
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.test_classgen import Dummy
-    33: from Products.Archetypes.tests.test_classgen import gen_dummy
-
-./Products.Archetypes/Products/Archetypes/tests/test_templatemixin.py: 3 matches
-    26: from Products.Archetypes.config import TOOL_NAME
-    27: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    28: from Products.Archetypes.TemplateMixin import TemplateMixin
-
-./Products.Archetypes/Products/Archetypes/tests/test_traverse.py: 5 matches
-    6: from Products.Archetypes.traverse import ImageTraverser
-    7: from Products.Archetypes.atapi import ImageField
-    71: context.field = MockField("Products.Archetypes.Field.ImageField")
-    77: context.field = MockField("Products.Archetypes.Field.ImageField")
-    83: context.field = MockField("Products.Archetypes.Field.ImageField")
-
-./Products.Archetypes/Products/Archetypes/tests/test_unicode.py: 2 matches
-    32: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    35: from Products.Archetypes.atapi import *
-
-./Products.Archetypes/Products/Archetypes/tests/test_update_schema.py: 12 matches
-    32: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    33: from Products.Archetypes.tests.utils import mkDummyInContext
-    34: from Products.Archetypes.atapi import TextField, BaseSchema, Schema, BaseContent
-    36: from Products.Archetypes.ArchetypeTool import registerType
-    85: So: if you copy this test to an earlier Archetypes and it
-    105: registerType(Dummy1, 'Archetypes')
-    164: registerType(Dummy1, 'Archetypes')
-    188: self.attool._types['Archetypes.Dummy1'] = 'cheat'
-    189: self.assertEqual(self.types_to_update(), ['Archetypes.Dummy1'])
-    203: self.attool._types['Archetypes.Dummy1'] = 'cheat'
-    204: self.assertEqual(self.types_to_update(), ['Archetypes.Dummy1'])
-    247: request.form['Archetypes.DDocument'] = True
-
-./Products.Archetypes/Products/Archetypes/tests/test_utils.py: 4 matches
-    29: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.utils import DisplayList
-    31: from Products.Archetypes.utils import IntDisplayList
-    32: from Products.Archetypes.utils import make_uuid
-
-./Products.Archetypes/Products/Archetypes/tests/test_utils2.py: 2 matches
-    29: from Products.Archetypes.tests.attestcase import ATTestCase
-    30: from Products.Archetypes.utils import OrderedDict
-
-./Products.Archetypes/Products/Archetypes/tests/test_validation.py: 1 matches
-    26: from Products.Archetypes.tests.attestcase import ATTestCase
-
-./Products.Archetypes/Products/Archetypes/tests/test_varschema.py: 5 matches
-    28: from Products.Archetypes.tests.attestcase import ATTestCase
-    29: from Products.Archetypes.atapi import BaseSchema, BaseContent, Schema, \
-    31: from Products.Archetypes.config import PKG_NAME
-    32: from Products.Archetypes.VariableSchemaSupport import VariableSchemaSupport
-    45: registerType(Dummy, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/tests/test_widgets.py: 4 matches
-    31: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-    32: from Products.Archetypes.tests.utils import PACKAGE_HOME
-    33: from Products.Archetypes.tests.utils import makeContent
-    34: from Products.Archetypes.tests.test_fields import FakeRequest
-
-./Products.Archetypes/Products/Archetypes/tests/utils.py: 7 matches
-    37: from Products.Archetypes.atapi import registerType
-    38: from Products.Archetypes.atapi import process_types
-    39: from Products.Archetypes.atapi import listTypes
-    40: from Products.Archetypes.atapi import BaseContent
-    41: from Products.Archetypes.config import PKG_NAME
-    43: logger = logging.getLogger('Archetypes')
-    53: registerType(klass, 'Archetypes')
-
-./Products.Archetypes/Products/Archetypes/traverse.py: 2 matches
-    4: from Products.Archetypes.interfaces import IBaseObject
-    5: from Products.Archetypes.atapi import ImageField
-
-./Products.Archetypes/Products/Archetypes/utils.py: 5 matches
-    21: from Products.Archetypes.log import log
-    22: from Products.Archetypes.config import DEBUG_SECURITY
-    32: logger = logging.getLogger('Archetypes')
-    38: from Products.Archetypes.Schema import Schemata
-    865: charset default changed to utf-8 for consistency with the rest of Archetypes.
-
-./Products.Archetypes/Products/Archetypes/uuid.py: 2 matches
-    8: from Products.Archetypes.config import UUID_ATTR
-    9: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.Archetypes/Products/Archetypes/validator.py: 1 matches
-    3: from Products.Archetypes.Storage import AttributeStorage
-
-./Products.Archetypes/Products/Archetypes/www/registry.xml: 43 matches
-    7: <fieldelement id="Products.Archetypes.Fields.IntegerField">
-    10: <defaultwidget>Products.Archetypes.Widgets.IntegerWidget</defaultwidget>
-    12: <widget>Products.Archetypes.Widgets.IntegerWidget</widget>
-    37: <fieldelement id="Products.Archetypes.Fields.LinesField">
-    40: <defaultwidget>Products.Archetypes.Widgets.LinesWidget</defaultwidget>
-    42: <widget>Products.Archetypes.Widgets.LinesWidget</widget>
-    67: <fieldelement id="Products.Archetypes.Fields.StringField">
-    70: <defaultwidget>Products.Archetypes.Widgets.StringWidget</defaultwidget>
-    72: <widget>Products.Archetypes.Widgets.SelectionWidget</widget>
-    73: <widget>Products.Archetypes.Widgets.StringWidget</widget>
-    98: <fieldelement id="Products.Archetypes.Fields.ReferenceField">
-    101: <defaultwidget>Products.Archetypes.Widgets.ReferenceWidget</defaultwidget>
-    103: <widget>Products.Archetypes.Widgets.ReferenceWidget</widget>
-    130: <widgetelement id="Products.Archetypes.Widgets.IntegerWidget">
-    144: <widgetelement id="Products.Archetypes.Widgets.LinesWidget">
-    158: <widgetelement id="Products.Archetypes.Widgets.StringWidget">
-    172: <widgetelement id="Products.Archetypes.Widgets.SelectionWidget">
-    186: <widgetelement id="Products.Archetypes.Widgets.ReferenceWidget">
-    209: <type id="Products.Archetypes.TTWTypes.Customer" selected="1">
-    211: <basetype>Products.Archetypes.BaseContent.BaseContent</basetype>
-    215: <schemata id="Products.Archetypes.TTWTypes.Customer.default">
-    217: <field id="Products.Archetypes.TTWTypes.Customer.default.firstname" selected="1">
-    219: <type>Products.Archetypes.Fields.StringField</type>
-    222: <type>Products.Archetypes.Widgets.StringWidget</type>
-    231: <field id="Products.Archetypes.TTWTypes.Customer.default.lastname">
-    233: <type>Products.Archetypes.Fields.StringField</type>
-    236: <type>Products.Archetypes.Widgets.StringWidget</type>
-    246: <schemata id="Products.Archetypes.TTWTypes.Customer.other">
-    248: <field id="Products.Archetypes.TTWTypes.Customer.other.country">
-    250: <type>Products.Archetypes.Fields.StringField</type>
-    253: <type>Products.Archetypes.Widgets.SelectionWidget</type>
-    260: <field id="Products.Archetypes.TTWTypes.Customer.other.homepage">
-    262: <type>Products.Archetypes.Fields.StringField</type>
-    265: <type>Products.Archetypes.Widgets.StringWidget</type>
-    277: <type id="Products.Archetypes.TTWTypes.Article">
-    283: <schemata id="Products.Archetypes.TTWTypes.Article.default">
-    285: <field id="Products.Archetypes.TTWTypes.Article.default.author">
-    287: <type>Products.Archetypes.Fields.ReferenceField</type>
-    290: <type>Products.Archetypes.Widgets.ReferenceWidget</type>
-    297: <type>Products.Archetypes.TTWTypes.Customer</type>
-    306: <basetype>Products.Archetypes.BaseContent.BaseContent</basetype>
-    315: <type>Products.Archetypes.Fields.StringField</type>
-    318: <type>Products.Archetypes.Widgets.StringWidget</type>
-
-./Products.Archetypes/setup.py: 5 matches
-    5: setup(name='Products.Archetypes',
-    7: description="Archetypes is a developers framework for rapidly "
-    17: keywords='Archetypes Plone CMF Zope',
-    18: author='Archetypes development team',
-    20: url='http://pypi.python.org/pypi/Products.Archetypes',
-
-./Products.CMFDiffTool/Products/CMFDiffTool/tests/at_compound_tests.py: 1 matches
-    7: from Products.Archetypes import atapi
-
-./Products.CMFDynamicViewFTI/Products/CMFDynamicViewFTI/browserdefault.py: 2 matches
-    5: The implementation extends TemplateMixin from Archetypes, and implements
-    33: TemplateMixin in Archetypes does), and/or to set a contained
-
-./Products.CMFEditions/Products/CMFEditions/CopyModifyMergeRepositoryTool.py: 5 matches
-    66: from Products.Archetypes.event import ObjectEditedEvent
-    67: from Products.Archetypes.interfaces import IBaseObject
-    73: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    74: from Products.Archetypes.config import REFERENCE_ANNOTATION as REFERENCES_CONTAINER_NAME
-    75: from Products.Archetypes.exceptions import ReferenceException
-
-./Products.CMFEditions/Products/CMFEditions/StandardModifiers.py: 3 matches
-    59: from Products.Archetypes.interfaces.referenceable import IReferenceable
-    60: from Products.Archetypes.config import UUID_ATTR, REFERENCE_ANNOTATION
-    961: ANNOTATION_PREFIX = 'Archetypes.storage.AnnotationStorage-'
-
-./Products.CMFEditions/Products/CMFEditions/browser/configure.zcml: 2 matches
-    13: <configure zcml:condition="installed Products.Archetypes">
-    16: manager="Products.Archetypes.interfaces.IEditAfterFieldsets"
-
-./Products.CMFEditions/Products/CMFEditions/configure.zcml: 5 matches
-    25: <configure zcml:condition="installed Products.Archetypes">
-    27: Products.Archetypes.interfaces.IWebDAVObjectInitializedEvent"
-    31: Products.Archetypes.interfaces.IWebDAVObjectEditedEvent"
-    35: Products.Archetypes.interfaces.IObjectInitializedEvent"
-    39: Products.Archetypes.interfaces.IObjectEditedEvent"
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/Extensions/Install.py: 2 matches
-    5: from Products.Archetypes.Extensions.utils import installTypes
-    6: from Products.Archetypes import listTypes
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/FAQ.py: 1 matches
-    32: from Products.Archetypes.atapi import *
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/FAQQuestion.py: 1 matches
-    31: from Products.Archetypes.atapi import *
-
-./Products.CMFEditions/Products/CMFEditions/tests/FAQ/__init__.py: 2 matches
-    3: from Products.Archetypes.atapi import *
-    4: from Products.Archetypes import listTypes
-
-./Products.CMFEditions/Products/CMFEditions/tests/test_ATReferences.py: 3 matches
-    37: from Products.Archetypes.config import REFERENCE_ANNOTATION as \
-    86: from Products.Archetypes.config import REFERENCE_ANNOTATION as \
-    215: from Products.Archetypes import atapi
-
-./Products.CMFEditions/Products/CMFEditions/tests/test_IntegrationTests.py: 1 matches
-    1180: from Products.Archetypes import atapi
-
-./Products.CMFEditions/setup.py: 1 matches
-    29: 'Products.Archetypes',
-
-./Products.CMFPlone/Products/CMFPlone/CatalogTool.py: 6 matches
-    79: 'Products.Archetypes.interfaces.athistoryaware.IATHistoryAware',
-    80: 'Products.Archetypes.interfaces.base.IBaseContent',
-    81: 'Products.Archetypes.interfaces.base.IBaseFolder',
-    82: 'Products.Archetypes.interfaces.base.IBaseObject',
-    83: 'Products.Archetypes.interfaces.metadata.IExtensibleMetadata',
-    84: 'Products.Archetypes.interfaces.referenceable.IReferenceable',
-
-./Products.CMFPlone/Products/CMFPlone/PloneTool.py: 1 matches
-    383: Requires mimetype registry from Archetypes >= 1.3.
-
-./Products.CMFPlone/Products/CMFPlone/Portal.py: 1 matches
-    130: This is copied from Archetypes Basefolder and is needed by the
-
-./Products.CMFPlone/Products/CMFPlone/factory.py: 1 matches
-    25: u'Products.Archetypes:Archetypes',
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/skins.xml: 1 matches
-    12: directory="Products.Archetypes:skins/archetypes"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/dependencies/metadata.xml: 1 matches
-    5: <dependency>profile-Products.Archetypes:Archetypes</dependency>
-
-./Products.CMFPlone/Products/CMFPlone/setuphandlers.py: 2 matches
-    36: 'Archetypes', 'Products.Archetypes',
-    393: 'archetype_tool': 'Archetypes specific settings',
-
-./Products.CMFPlone/Products/CMFPlone/tests/dummy.py: 1 matches
-    150: ComputedAttributes (which are used in Archetypes ImageField).
-
-./Products.CMFPlone/Products/CMFPlone/tests/testDateTimeIntegration.py: 1 matches
-    138: See Products.Archetypes.Field.DateTimeField.set
-
-./Products.CMFPlone/Products/CMFPlone/tests/testSiteAdminRole.py: 3 matches
-    46: 'Add Archetypes Tools':                                     0,
-    111: 'Archetypes Tests: Protected Type View':                    0,
-    112: 'Archetypes Tests: Protected Type Write':                   0,
-
-./Products.CMFPlone/setup.py: 1 matches
-    42: 'Products.Archetypes',
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseBTreeFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseBTreeFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseContent.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseContent
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import BaseFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NBaseObject.py: 7 matches
-    12: from Products.Archetypes.atapi import BaseObject
-    13: from Products.Archetypes.config import LANGUAGE_DEFAULT
-    14: from Products.Archetypes.config import REFERENCE_CATALOG
-    15: from Products.Archetypes.config import UID_CATALOG
-    16: from Products.Archetypes.interfaces import IMultiPageSchema
-    17: from Products.Archetypes.utils import mapply
-    18: from Products.Archetypes.utils import shasattr
-
-./Products.LinguaPlone/Products/LinguaPlone/I18NOrderedBaseFolder.py: 1 matches
-    3: from Products.Archetypes.atapi import OrderedBaseFolder
-
-./Products.LinguaPlone/Products/LinguaPlone/config.py: 1 matches
-    3: from Products.Archetypes.Field import ReferenceField
-
-./Products.LinguaPlone/Products/LinguaPlone/configure.zcml: 1 matches
-    20: for="Products.Archetypes.interfaces.IBaseObject"
-
-./Products.LinguaPlone/Products/LinguaPlone/profiles/test_types/types/UntranslatableType.xml: 1 matches
-    8: <property name="product">Archetypes</property>
-
-./Products.LinguaPlone/Products/LinguaPlone/public.py: 1 matches
-    1: from Products.Archetypes.atapi import *
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/dummy.py: 1 matches
-    239: from Products.Archetypes.public import registerType
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_api.py: 1 matches
-    312: from Products.Archetypes.config import LANGUAGE_DEFAULT
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_config.py: 1 matches
-    36: from Products.Archetypes.Field import ReferenceField
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_generatedMethod.py: 2 matches
-    26: the one present at Products.Archetypes.ExtensibleMetadata.
-    27: This method in Archetypes has a default value for a parameter and it
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_language_independent.py: 1 matches
-    81: key = 'Archetypes.storage.AnnotationStorage-text'
-
-./Products.LinguaPlone/Products/LinguaPlone/utils.py: 7 matches
-    12: from Products.Archetypes.ClassGen import GeneratorError, _modes
-    13: from Products.Archetypes.ClassGen import Generator as ATGenerator
-    14: from Products.Archetypes.ClassGen import ClassGenerator as ATClassGenerator
-    15: from Products.Archetypes.exceptions import ReferenceException
-    16: from Products.Archetypes.ArchetypeTool import registerType as registerATType
-    343: from Products.Archetypes.ArchetypeTool import base_factory_type_information
-    344: from Products.Archetypes.ArchetypeTool import modify_fti
-
-./Products.LinguaPlone/setup.py: 1 matches
-    36: 'Products.Archetypes',
-
-./Products.Marshall/Products/Marshall/handlers/base.py: 2 matches
-    34: from Products.Archetypes.interfaces.marshall import IMarshall
-    35: from Products.Archetypes.interfaces.layer import ILayer
-
-./Products.Marshall/Products/Marshall/handlers/primaryfield.py: 5 matches
-    36: from Products.Archetypes.Field import TextField, FileField
-    37: from Products.Archetypes.interfaces.base import IBaseUnit
-    38: from Products.Archetypes.debug import log
-    39: from Products.Archetypes.utils import shasattr
-    40: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/handlers/rfc822header.py: 2 matches
-    40: from Products.Archetypes.interfaces.base import IBaseUnit
-    41: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/handlers/simple.py: 3 matches
-    30: from Products.Archetypes.Field import ReferenceField
-    31: from Products.Archetypes.config import REFERENCE_CATALOG, UUID_ATTR
-    32: from Products.Archetypes.debug import log
-
-./Products.Marshall/Products/Marshall/marshaller.py: 2 matches
-    25: from Products.Archetypes.Marshall import Marshaller
-    26: from Products.Archetypes.utils import mapply
-
-./Products.Marshall/Products/Marshall/namespaces/__init__.py: 2 matches
-    4: from atns import Archetypes
-    10: registerNamespace(Archetypes)
-
-./Products.Marshall/Products/Marshall/namespaces/atns.py: 12 matches
-    35: from Products.Archetypes import config as atcfg
-    36: from Products.Archetypes.debug import log
-    37: from Products.Archetypes.interfaces import IBaseUnit
-    38: from Products.Archetypes.interfaces import IObjectField
-    39: from Products.Archetypes import public as atapi
-    251: node = dom.createElementNS(Archetypes.xmlns, "uid")
-    280: <define name="ArchetypesFields"
-    287: All non-standard Archetypes fields are represented by a 'field'
-    296: References can be made by UID (Archetypes),
-    319: class Archetypes(XmlNamespace):
-    326: super(Archetypes, self).__init__()
-    476: return [("ArchetypesFields", "zeroOrMore", RNGSchemaFragment)]
-
-./Products.Marshall/Products/Marshall/namespaces/uuns.py: 1 matches
-    29: from Products.Archetypes import public as atapi
-
-./Products.Marshall/Products/Marshall/tests/examples/__init__.py: 1 matches
-    2: from Products.Archetypes.public import listTypes, process_types
-
-./Products.Marshall/Products/Marshall/tests/examples/blob.py: 1 matches
-    1: from Products.Archetypes.public import *
-
-./Products.Marshall/Products/Marshall/tests/examples/person.py: 1 matches
-    1: from Products.Archetypes.public import *
-
-./Products.Marshall/Products/Marshall/tests/test_export.py: 1 matches
-    33: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/Products/Marshall/tests/test_marshall.py: 1 matches
-    31: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/Products/Marshall/tests/test_predicate.py: 1 matches
-    30: ZopeTestCase.installProduct('Archetypes')
-
-./Products.Marshall/setup.py: 2 matches
-    7: description="Configurable Marshallers for Archetypes",
-    40: 'Products.Archetypes',
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_encoding.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_magic.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/Products/MimetypesRegistry/tests/test_mimetypes.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.MimetypesRegistry/setup.py: 1 matches
-    24: 'Products.Archetypes',
-
-./Products.PlonePAS/Products/PlonePAS/storage.py: 1 matches
-    11: from Products.Archetypes.public import IStorage
-
-./Products.PlonePAS/setup.py: 2 matches
-    26: 'Products.Archetypes',
-    29: 'Products.Archetypes',
-
-./Products.PloneTestCase/Products/PloneTestCase/setup.py: 2 matches
-    33: ZopeTestCase.installProduct('Archetypes', quiet=1)
-    68: ZopeTestCase.installProduct('Archetypes', quiet=1)
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_engine.py: 1 matches
-    1: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_graph.py: 1 matches
-    1: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_intelligenttext.py: 1 matches
-    2: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_transforms.py: 1 matches
-    4: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/Products/PortalTransforms/tests/test_xss.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.PortalTransforms/setup.py: 1 matches
-    25: 'Products.Archetypes',
-
-./Products.TinyMCE/Products/TinyMCE/browser/configure.zcml: 1 matches
-    91: for="Products.Archetypes.interfaces.IBaseObject"
-
-./Products.TinyMCE/Products/TinyMCE/tests/base.py: 2 matches
-    17: import Products.Archetypes
-    18: Products.Archetypes    # pyflakes
-
-./Products.TinyMCE/Products/TinyMCE/tests/test_widget_settings.py: 2 matches
-    13: from Products.Archetypes import public as atapi
-    55: 'Archetypes is not installed. Skipping AT schema adapter test.')
-
-./Products.TinyMCE/Products/TinyMCE/utility.py: 4 matches
-    15: from Products.Archetypes.Field import ImageField
-    16: from Products.Archetypes.interfaces import IBaseObject
-    17: from Products.Archetypes.interfaces.field import IImageField
-    724: :param field: Dexterity or Archetypes Field instance
-
-./Products.TinyMCE/setup.py: 1 matches
-    39: 'Products.Archetypes',
-
-./Products.contentmigration/Products/contentmigration/archetypes.py: 3 matches
-    6: from Products.Archetypes.ArchetypeTool import getType
-    7: from Products.Archetypes.config import REFERENCE_ANNOTATION
-    8: from Products.Archetypes.Referenceable import Referenceable
-
-./Products.contentmigration/Products/contentmigration/basemigrator/migrator.py: 1 matches
-    43: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.contentmigration/Products/contentmigration/field.py: 2 matches
-    1: from Products.Archetypes.Storage import AttributeStorage
-    25: Archetypes storage, which defaults to AttributeStorage.
-
-./Products.contentmigration/Products/contentmigration/inplace.py: 1 matches
-    15: from Products.Archetypes.interfaces import IReferenceable
-
-./Products.contentmigration/Products/contentmigration/migrator.py: 1 matches
-    84: on an Archetypes storage level, which means that it's capable of migrating
-
-./Products.contentmigration/Products/contentmigration/tests/extensions.py: 2 matches
-    2: from Products.Archetypes.public import StringField
-    3: from Products.Archetypes.public import StringWidget
-
-./Products.contentmigration/Products/contentmigration/tests/testATFieldMigration.py: 2 matches
-    6: from Products.Archetypes.Storage.annotation import AnnotationStorage
-    7: from Products.Archetypes.Storage import AttributeStorage
-
-./Products.contentmigration/setup.py: 1 matches
-    14: keywords='Plone Archetypes ATContentTypes',
-
-./Products.validation/Products/validation/tests/test_validation.py: 1 matches
-    3: from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
-
-./Products.validation/setup.py: 2 matches
-    7: description="Data validation package for Archetypes",
-    24: 'Products.Archetypes',
-
-./archetypes.querywidget/archetypes/querywidget/configure.zcml: 1 matches
-    16: description="An Archetypeswidget to create persistent searchqueries. This is used by plone.app.collection."
-
-./archetypes.querywidget/archetypes/querywidget/field.py: 2 matches
-    4: from Products.Archetypes.Field import ObjectField
-    5: from Products.Archetypes.Field import registerField
-
-./archetypes.querywidget/archetypes/querywidget/tests/base.py: 4 matches
-    35: class ArchetypesQueryWidgetLayer(PloneSandboxLayer):
-    80: QUERYWIDGET_FIXTURE = ArchetypesQueryWidgetLayer()
-    84: name="ArchetypesQueryWidget:Integration")
-    87: class ArchetypesQueryWidgetTestCase(unittest.TestCase):
-
-./archetypes.querywidget/archetypes/querywidget/tests/test_integration_doctest.py: 1 matches
-    14: test_class=base.ArchetypesQueryWidgetTestCase,
-
-./archetypes.querywidget/archetypes/querywidget/widget.py: 2 matches
-    3: from Products.Archetypes.Widget import TypesWidget
-    4: from Products.Archetypes.Registry import registerWidget
-
-./archetypes.referencebrowserwidget/setup.py: 1 matches
-    33: description="A referencebrowser implementation for Archetypes",
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/__init__.py: 1 matches
-    2: from Products.Archetypes.atapi import process_types, listTypes
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/configure.zcml: 1 matches
-    11: for="Products.Archetypes.interfaces.IReferenceable"
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/view.py: 2 matches
-    29: from Products.Archetypes.config import REFERENCE_CATALOG
-    53: and can not be a view, since it is macro widget for Archetypes.
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/configure.zcml: 5 matches
-    27: <class class="Products.Archetypes.Field.ReferenceField">
-    42: for="Products.Archetypes.interfaces.IReferenceable
-    49: for="Products.Archetypes.interfaces.IReferenceable
-    56: for="Products.Archetypes.interfaces.IReferenceable
-    63: for="Products.Archetypes.interfaces.IReferenceable
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/demo.py: 5 matches
-    3: from Products.Archetypes.atapi import ReferenceField
-    4: from Products.Archetypes.atapi import BaseSchema
-    5: from Products.Archetypes.atapi import Schema
-    6: from Products.Archetypes.atapi import BaseContent
-    7: from Products.Archetypes.atapi import registerType
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/interfaces.py: 1 matches
-    3: from Products.Archetypes.interfaces import IObjectField
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.pt: 2 matches
-    43: 'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-    76: 'Products.Archetypes.interfaces.referenceengine.IContentReference')"
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/base.py: 1 matches
-    11: from Products.Archetypes.tests.utils import makeContent
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/test_product.py: 2 matches
-    22: from Products.Archetypes.tests.utils import makeContent
-    611: r'<div class="field ArchetypesReferenceBrowserWidget .*?" '
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/tests/test_utils.py: 1 matches
-    5: from Products.Archetypes.tests.utils import makeContent
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/widget.py: 4 matches
-    6: from Products.Archetypes.utils import shasattr
-    7: from Products.Archetypes.Registry import registerWidget,registerPropertyType
-    8: from Products.Archetypes.Widget import ReferenceWidget
-    140: used_for=('Products.Archetypes.Field.ReferenceField',)
-
-./archetypes.schemaextender/archetypes/schemaextender/extender.py: 4 matches
-    4: from Products.Archetypes.interfaces import ISchema
-    5: from Products.Archetypes.utils import OrderedDict
-    76: >>> from Products.Archetypes import atapi
-    157: Archetypes.Schema.factory. It allows you to register named adapter
-
-./archetypes.schemaextender/archetypes/schemaextender/field.py: 1 matches
-    2: from Products.Archetypes import atapi
-
-./archetypes.schemaextender/archetypes/schemaextender/implements.zcml: 3 matches
-    4: <!-- Let any Archetypes content type be extensible -->
-    5: <class class="Products.Archetypes.BaseContent.BaseContent">
-    9: <class class="Products.Archetypes.BaseFolder.BaseFolder">
-
-./archetypes.schemaextender/archetypes/schemaextender/interfaces.py: 1 matches
-    63: Products.Archetypes.utils.OrderedDict) to guarantee proper ordering
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/case.py: 1 matches
-    7: from Products.Archetypes.public import BaseObject
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/mocks.py: 1 matches
-    10: from Products.Archetypes.interfaces.field import IField
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testAccessor.py: 1 matches
-    3: from Products.Archetypes.atapi import StringField, StringWidget
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testOrdering.py: 3 matches
-    2: from Products.Archetypes.public import Schema
-    3: from Products.Archetypes.public import ManagedSchema
-    4: from Products.Archetypes.utils import OrderedDict
-
-./archetypes.schemaextender/setup.py: 2 matches
-    7: description="Dynamically extend Archetypes schemas with named adapters.",
-    15: keywords='Archetypes Schema extend',
-
-./plone.app.blob/src/plone/app/blob/__init__.py: 1 matches
-    16: from Products.Archetypes import atapi
-
-./plone.app.blob/src/plone/app/blob/content.py: 3 matches
-    9: from Products.Archetypes.atapi import AnnotationStorage
-    10: from Products.Archetypes.atapi import ATFieldProperty
-    15: from Products.Archetypes.atapi import registerType
-
-./plone.app.blob/src/plone/app/blob/field.py: 4 matches
-    18: from Products.Archetypes.atapi import ObjectField, FileWidget, ImageWidget
-    19: from Products.Archetypes.atapi import PrimaryFieldMarshaller
-    20: from Products.Archetypes.Registry import registerField
-    21: from Products.Archetypes.utils import contentDispositionHeader
-
-./plone.app.blob/src/plone/app/blob/migrations.py: 1 matches
-    15: from Products.Archetypes.interfaces import ISchema
-
-./plone.app.blob/src/plone/app/blob/mixins.py: 2 matches
-    4: from Products.Archetypes.Field import ImageField
-    41: `Archetypes.Field.ImageField` """
-
-./plone.app.blob/src/plone/app/blob/subtypes/blob.py: 2 matches
-    3: from Products.Archetypes.atapi import AnnotationStorage
-    4: from Products.Archetypes.atapi import FileWidget
-
-./plone.app.blob/src/plone/app/blob/subtypes/file.py: 2 matches
-    3: from Products.Archetypes.atapi import AnnotationStorage
-    4: from Products.Archetypes.atapi import FileWidget
-
-./plone.app.blob/src/plone/app/blob/subtypes/image.py: 2 matches
-    4: from Products.Archetypes.atapi import AnnotationStorage
-    5: from Products.Archetypes.atapi import ImageWidget
-
-./plone.app.blob/src/plone/app/blob/tests/lingua.py: 1 matches
-    4: from Products.Archetypes.atapi import StringField
-
-./plone.app.blob/src/plone/app/blob/tests/test_base_fields.py: 3 matches
-    3: from Products.Archetypes.public import BaseSchema, Schema, BaseContent
-    4: from Products.Archetypes.public import FileWidget, ImageWidget
-    5: from Products.Archetypes.public import registerType
-
-./plone.app.blob/src/plone/app/blob/tests/test_replacements.py: 2 matches
-    6: from Products.Archetypes.atapi import ImageField, AnnotationStorage
-    7: from Products.Archetypes.Field import Image
-
-./plone.app.caching/plone/app/caching/caching.zcml: 8 matches
-    119: <configure zcml:condition="installed Products.Archetypes">
-    121: <cache:ruleset ruleset="plone.content.file" for="Products.Archetypes.Field.Image" />
-    125: <!-- Archetypes based folders and non-folderish content items -->
-    126: <configure zcml:condition="installed Products.Archetypes">
-    129: <cache:ruleset ruleset="plone.content.itemView"   for="Products.Archetypes.BaseContent.BaseContent" />
-    130: <cache:ruleset ruleset="plone.content.folderView" for="Products.Archetypes.BaseFolder.BaseFolder" />
-    167: <!-- Archetypes object fields -->
-    168: <configure zcml:condition="installed Products.Archetypes">
-
-./plone.app.caching/plone/app/caching/lastmodified.py: 2 matches
-    22: from Products.Archetypes.Field import Image as ImageScale
-    111: most CMF, Archetypes and Dexterity content
-
-./plone.app.caching/plone/app/caching/purge.py: 2 matches
-    28: from Products.Archetypes.interfaces import IBaseObject
-    29: from Products.Archetypes.interfaces import IFileField, IImageField, ITextField
-
-./plone.app.caching/plone/app/caching/tests/test_purge.py: 2 matches
-    37: from Products.Archetypes import atapi
-    38: from Products.Archetypes.Schema.factory import instanceSchemaFactory
-
-./plone.app.collection/plone/app/collection/__init__.py: 1 matches
-    11: from Products.Archetypes import atapi
-
-./plone.app.collection/plone/app/collection/collection.py: 2 matches
-    7: from Products.Archetypes import atapi
-    8: from Products.Archetypes.atapi import (BooleanField,
-
-./plone.app.collection/setup.py: 1 matches
-    33: 'Products.Archetypes',
-
-./plone.app.contentrules/plone/app/contentrules/configure.zcml: 2 matches
-    82: zcml:condition="installed Products.Archetypes"
-    83: for="Products.Archetypes.interfaces.IObjectInitializedEvent"
-
-./plone.app.contentrules/plone/app/contentrules/handlers.py: 3 matches
-    21: from Products.Archetypes.interfaces import IBaseObject
-    22: from Products.Archetypes.interfaces import IObjectInitializedEvent
-    165: There is special handling for Archetypes objects.
-
-./plone.app.contentrules/plone/app/contentrules/tests/dummy.py: 1 matches
-    33: class DummyNonArchetypesContext(object):
-
-./plone.app.contentrules/plone/app/contentrules/tests/test_handlers.py: 1 matches
-    18: self.uuidaware = dummy.DummyNonArchetypesContext()
-
-./plone.app.dexterity/setup.py: 1 matches
-    10: "alternative to Archetypes that is more light-weight and modular.",
-
-./plone.app.folder/src/plone/app/folder/__init__.py: 1 matches
-    14: from Products.Archetypes import atapi
-
-./plone.app.folder/src/plone/app/folder/base.py: 1 matches
-    13: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.folder/src/plone/app/folder/bbb.py: 1 matches
-    21: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.folder/src/plone/app/folder/tests/content.py: 1 matches
-    6: from Products.Archetypes.atapi import BaseFolder
-
-./plone.app.imaging/src/plone/app/imaging/configure.zcml: 5 matches
-    12: <class class="Products.Archetypes.Field.ImageField">
-    13: <implements interface="Products.Archetypes.interfaces.IImageField" />
-    16: <class class="Products.Archetypes.atapi.BaseObject">
-    27: for="Products.Archetypes.interfaces.IImageField"
-    44: for="Products.Archetypes.interfaces.IBaseObject"
-
-./plone.app.imaging/src/plone/app/imaging/interfaces.py: 1 matches
-    4: from Products.Archetypes.interfaces import IBaseObject as IATBaseObject
-
-./plone.app.imaging/src/plone/app/imaging/monkey.py: 4 matches
-    2: from Products.Archetypes.Field import ImageField
-    3: from Products.Archetypes.utils import shasattr
-    13: and other callables;  see Archetypes/Field.py """
-    34: `Archetypes.Field.ImageField` """
-
-./plone.app.imaging/src/plone/app/imaging/scale.py: 1 matches
-    2: from Products.Archetypes.Field import Image
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_setup.py: 1 matches
-    2: from Products.Archetypes.interfaces import IImageField
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_traverse.py: 1 matches
-    9: from Products.Archetypes.atapi import ImageField
-
-./plone.app.imaging/src/plone/app/imaging/traverse.py: 2 matches
-    5: from Products.Archetypes.interfaces import IImageField
-    6: from Products.Archetypes.Field import HAS_PIL
-
-./plone.app.iterate/plone/app/iterate/browser/control.py: 1 matches
-    28: from Products.Archetypes.interfaces import IReferenceable
-
-./plone.app.iterate/plone/app/iterate/configure.zcml: 1 matches
-    43: <class class="Products.Archetypes.BaseObject.BaseObject">
-
-./plone.app.iterate/plone/app/iterate/copier.py: 1 matches
-    35: from Products.Archetypes.Referenceable import Referenceable
-
-./plone.app.iterate/plone/app/iterate/interfaces.py: 4 matches
-    32: from Products.Archetypes.interfaces import IReference
-    82: relation = Attribute("The Working Copy Archetypes Relation Object")
-    97: relation = Attribute("The Working Copy Archetypes Relation Object")
-    112: relation = Attribute("The Working Copy Archetypes Relation Object")
-
-./plone.app.iterate/plone/app/iterate/relation.py: 2 matches
-    30: from Products.Archetypes import config as atconf
-    31: from Products.Archetypes.ReferenceEngine import Reference
-
-./plone.app.iterate/plone/app/iterate/tests/test_iterate.py: 1 matches
-    165: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.iterate/plone/app/iterate/tests/utils.py: 1 matches
-    3: from Products.Archetypes.ReferenceEngine import Reference
-
-./plone.app.iterate/setup.py: 1 matches
-    47: 'Products.Archetypes',
-
-./plone.app.layout/plone/app/layout/viewlets/tests/test_content.py: 1 matches
-    10: from Products.Archetypes.ExtensibleMetadata import _zone
-
-./plone.app.linkintegrity/plone/app/linkintegrity/browser/update.py: 1 matches
-    2: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.linkintegrity/plone/app/linkintegrity/configure.zcml: 6 matches
-    36: <configure zcml:condition="installed Products.Archetypes">
-    48: for="Products.Archetypes.interfaces.IBaseObject
-    53: for="Products.Archetypes.interfaces.IBaseObject
-    58: for="Products.Archetypes.interfaces.IBaseObject
-    63: for="Products.Archetypes.interfaces.IBaseObject
-    68: for="Products.Archetypes.interfaces.IReference
-
-./plone.app.linkintegrity/plone/app/linkintegrity/handlers.py: 3 matches
-    9: from Products.Archetypes.interfaces import IReference
-    10: from Products.Archetypes.Field import TextField
-    21: from Products.Archetypes.interfaces import IReferenceable
-
-./plone.app.linkintegrity/plone/app/linkintegrity/references.py: 4 matches
-    15: from Products.Archetypes.exceptions import ReferenceException
-    17: from Products.Archetypes import config
-    18: from Products.Archetypes.interfaces import IReferenceable
-    19: from Products.Archetypes.interfaces import IBaseObject
-
-./plone.app.locales/utils/rebuild-pot.py: 2 matches
-    77: 'Products.Archetypes',
-    82: 'Archetypes',
-
-./plone.app.testing/plone/app/testing/layers.py: 1 matches
-    54: ('Products.Archetypes'                  , {'loadZCML': True}, ),
-
-./plone.app.upgrade/plone/app/upgrade/v30/alphas.py: 3 matches
-    21: from Products.Archetypes.interfaces import IArchetypeTool
-    22: from Products.Archetypes.interfaces import IReferenceCatalog
-    23: from Products.Archetypes.interfaces import IUIDCatalog
-
-./plone.app.upgrade/plone/app/upgrade/v30/profiles/beta1_beta2/export_steps.xml: 1 matches
-    4: handler="Products.Archetypes.exportimport.archetypetool.exportArchetypeTool"
-
-./plone.app.upgrade/plone/app/upgrade/v30/profiles/beta1_beta2/import_steps.xml: 4 matches
-    4: handler="Products.Archetypes.setuphandlers.setupArchetypes"
-    5: title="Archetypes setup">
-    9: Archetypes installation step.
-    13: handler="Products.Archetypes.exportimport.archetypetool.importArchetypeTool"
-
-./plone.app.upgrade/plone/app/upgrade/v30/tests.py: 3 matches
-    22: from Products.Archetypes.interfaces import IArchetypeTool
-    23: from Products.Archetypes.interfaces import IReferenceCatalog
-    24: from Products.Archetypes.interfaces import IUIDCatalog
-
-./plone.app.upgrade/setup.py: 1 matches
-    57: 'Products.Archetypes',
-
-./plone.app.uuid/setup.py: 1 matches
-    33: 'test': ['plone.app.testing', 'Products.Archetypes >= 1.7']
-
-./plone.app.z3cform/plone/app/z3cform/queryselect/__init__.py: 3 matches
-    12: class ArchetypesContentSource(object):
-    49: class ArchetypesContentSourceBinder(object):
-    53: return ArchetypesContentSource(context)
-
-./plone.locking/setup.py: 1 matches
-    29: 'Products.Archetypes',
-
-./txtfilter/filter.py: 3 matches
-    4: from Products.Archetypes import public as atapi
-    5: from Products.Archetypes.debug import log as atlog
-    6: from Products.Archetypes.config import REFERENCE_CATALOG
-
-./txtfilter/txtfilter/at/Extensions/Install.py: 4 matches
-    3: from Products.Archetypes import public as atapi
-    4: from Products.Archetypes import listTypes
-    5: from Products.Archetypes.Extensions.utils import installTypes, install_subskin
-    6: from Products.Archetypes.config import REFERENCE_CATALOG
-
-./txtfilter/txtfilter/at/example/_txtfilter.py: 3 matches
-    1: from Products.Archetypes import public as atapi
-    2: from Products.Archetypes.config import REFERENCE_CATALOG
-    3: from Products.Archetypes.debug import log as atlog
-
-./txtfilter/txtfilter/at/example/smartlink.py: 3 matches
-    10: from Products.Archetypes import public as atapi
-    11: from Products.Archetypes.TemplateMixin import TemplateMixin, TemplateMixinSchema
-    17: from Products.Archetypes.references import HoldingReference
-
-./txtfilter/txtfilter/at/field.py: 1 matches
-    10: from Products.Archetypes import public as atapi
-
-./txtfilter/txtfilter/at/zope2.py: 1 matches
-    3: from Products.Archetypes import public as atapi
-
-./txtfilter/txtfilter/interfaces.py: 1 matches
-    2: from Products.Archetypes.interfaces import IFileField
-
-./wicked/wicked/at/backlink.py: 1 matches
-    2: from Products.Archetypes.interfaces import IReferenceable
-
-./wicked/wicked/at/config.py: 4 matches
-    14: from Products.Archetypes.ReferenceEngine import Reference
-    15: from Products.Archetypes.Referenceable import Referenceable
-    16: from Products.Archetypes.config import REFERENCE_CATALOG as REFERENCE_MANAGER
-    17: from Products.Archetypes.config import UID_CATALOG as UID_MANAGER
-
-./wicked/wicked/at/field.py: 3 matches
-    13: from Products.Archetypes import public as atapi
-    14: from Products.Archetypes.Registry import registerField
-    15: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/at/link.py: 1 matches
-    22: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/at/relation.py: 1 matches
-    21: from Products.Archetypes.references import Reference
-
-./wicked/wicked/at/subscriber.py: 1 matches
-    16: from Products.Archetypes.interfaces import ISchema
-
-./wicked/wicked/at/tests/test_cache.py: 1 matches
-    1: from Products.Archetypes.utils import shasattr
-
-./wicked/wicked/at/zope2.py: 1 matches
-    3: from Products.Archetypes.interfaces import IBaseObject
-
-./wicked/wicked/atcontent/Extensions/Install.py: 2 matches
-    2: from Products.Archetypes.public import listTypes
-    3: from Products.Archetypes.Extensions.utils import installTypes
-
-./wicked/wicked/atcontent/ironicwiki.py: 1 matches
-    22: from Products.Archetypes import public as atapi
-
-./wicked/wicked/atcontent/wickeddoc.py: 1 matches
-    21: from Products.Archetypes import public as atapi
-
-./wicked/wicked/atcontent/zope2.py: 2 matches
-    1: from Products.Archetypes import public as atapi
-    3: import Products.Archetypes.public as atapi
-
-./wicked/wicked/fieldevent/interfaces.py: 1 matches
-    10: from Products.Archetypes.interfaces import IATField
-
-./wicked/wicked/fieldevent/meta.py: 2 matches
-    48: title=u"Archetypes Schema Object",
-    53: title=u"Archetypes Schema Object",
-
-./wicked/wicked/interfaces.py: 1 matches
-    98: A manager for Archetypes reference (aka smart pointer) based backlinka
-
-./wicked/wicked/plone/all-at.zcml: 3 matches
-    8: fieldclass="Products.Archetypes.Field.TextField"
-    11: <class class="Products.Archetypes.Field.TextField">
-    15: <class class="Products.Archetypes.Referenceable.Referenceable">
-
-./wicked/wicked/plone/document-only.zcml: 1 matches
-    8: fieldclass="Products.Archetypes.Field.TextField"
-
-./wicked/wicked/plone/selective-atct.zcml: 1 matches
-    10: fieldclass="Products.Archetypes.Field.TextField"
-
-./wicked/wicked/testing/cache.py: 1 matches
-    40: from Products.Archetypes.ReferenceEngine import ReferenceCatalog, UIDCatalog
diff --git a/atct-mentions.txt b/atct-mentions.txt
deleted file mode 100644
index 2eae9d7..0000000
--- a/atct-mentions.txt
+++ /dev/null
@@ -1,1076 +0,0 @@
-The following list was generated from a Plone 4.3 buildout with every package bin/develop'd
-===========================================================================================
-
-./Products.ATContentTypes/Products/ATContentTypes/__init__.py: 13 matches
-    12: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    13: from Products.ATContentTypes.config import SKINS_DIR
-    14: from Products.ATContentTypes.config import PROJECTNAME
-    15: from Products.ATContentTypes.config import GLOBALS
-    24: ModuleSecurityInfo('Products.ATContentTypes').declarePublic('ATCTMessageFactory')
-    27: import Products.ATContentTypes.configuration
-    28: import Products.ATContentTypes.lib.validators
-    32: import Products.ATContentTypes.content
-    33: import Products.ATContentTypes.criteria
-    36: from Products.ATContentTypes.tool.atct import ATCTTool
-    39: from Products.ATContentTypes.permission import wireAddPermissions
-    55: 'ATContentTypes tool',
-    67: from Products.ATContentTypes.permission import permissions
-
-./Products.ATContentTypes/Products/ATContentTypes/atct.py: 53 matches
-    1: from Products.ATContentTypes.content.base import ATCTContent
-    2: from Products.ATContentTypes.content.base import ATCTFileContent
-    3: from Products.ATContentTypes.content.base import ATCTFolder
-    4: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    5: from Products.ATContentTypes.content.base import ATCTBTreeFolder
-    7: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    9: from Products.ATContentTypes.content.document import ATDocument
-    10: from Products.ATContentTypes.content.event import ATEvent
-    11: from Products.ATContentTypes.content.file import ATFile
-    12: from Products.ATContentTypes.content.folder import ATFolder
-    13: from Products.ATContentTypes.content.folder import ATBTreeFolder
-    14: from Products.ATContentTypes.content.image import ATImage
-    15: from Products.ATContentTypes.content.link import ATLink
-    16: from Products.ATContentTypes.content.newsitem import ATNewsItem
-    17: from Products.ATContentTypes.content.topic import ATTopic
-    19: from Products.ATContentTypes.content.document import ATDocumentSchema
-    20: from Products.ATContentTypes.content.event import ATEventSchema
-    21: from Products.ATContentTypes.content.file import ATFileSchema
-    22: from Products.ATContentTypes.content.folder import ATFolderSchema
-    23: from Products.ATContentTypes.content.folder import ATBTreeFolderSchema
-    24: from Products.ATContentTypes.content.image import ATImageSchema
-    25: from Products.ATContentTypes.content.link import ATLinkSchema
-    26: from Products.ATContentTypes.content.newsitem import ATNewsItemSchema
-    27: from Products.ATContentTypes.content.topic import ATTopicSchema
-    29: from Products.ATContentTypes.criteria import ALL_INDICES
-    30: from Products.ATContentTypes.criteria import DATE_INDICES
-    31: from Products.ATContentTypes.criteria import STRING_INDICES
-    32: from Products.ATContentTypes.criteria import LIST_INDICES
-    33: from Products.ATContentTypes.criteria import SORT_INDICES
-    34: from Products.ATContentTypes.criteria import registerCriterion
-    35: from Products.ATContentTypes.criteria import unregisterCriterion
-    37: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    38: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    40: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    41: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    42: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    43: from Products.ATContentTypes.criteria.list import ATListCriterion
-    44: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    45: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    46: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    47: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    48: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterion
-    49: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    51: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterionSchema
-    52: from Products.ATContentTypes.criteria.date import ATDateCriteriaSchema
-    53: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterionSchema
-    54: from Products.ATContentTypes.criteria.list import ATListCriterionSchema
-    55: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterionSchema
-    56: from Products.ATContentTypes.criteria.reference import ATReferenceCriterionSchema
-    57: from Products.ATContentTypes.criteria.selection import ATSelectionCriterionSchema
-    58: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterionSchema
-    59: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterionSchema
-    60: from Products.ATContentTypes.criteria.sort import ATSortCriterionSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/browser.zcml: 1 matches
-    45: for="Products.ATContentTypes.interfaces.file.IFileContent"
-
-./Products.ATContentTypes/Products/ATContentTypes/browser/calendar.py: 2 matches
-    6: from Products.ATContentTypes.interfaces import ICalendarSupport
-    7: from Products.ATContentTypes.lib import calendarsupport as cs
-
-./Products.ATContentTypes/Products/ATContentTypes/browser/nextprevious.py: 1 matches
-    5: from Products.ATContentTypes.interfaces.folder import IATFolder
-
-./Products.ATContentTypes/Products/ATContentTypes/config.py: 2 matches
-    11: from Products.ATContentTypes.configuration import zconf
-    21: PROJECTNAME = "ATContentTypes"
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/__init__.py: 3 matches
-    1: from Products.ATContentTypes.configuration.config import zconf
-    2: from Products.ATContentTypes.configuration.config import handler
-    3: from Products.ATContentTypes.configuration.config import conf_file
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/component.xml: 1 matches
-    1: <component prefix="Products.ATContentTypes.configuration.datatype">
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/config.py: 1 matches
-    5: from Products.ATContentTypes.configuration.schema import atctSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/schema.py: 1 matches
-    5: from Products.ATContentTypes.configuration import datatype
-
-./Products.ATContentTypes/Products/ATContentTypes/configuration/schema.xml: 3 matches
-    1: <schema prefix="Products.ATContentTypes.configuration.datatype">
-    4: ATContentTypes configuration schema
-    7: <import package="Products.ATContentTypes.configuration" />
-
-./Products.ATContentTypes/Products/ATContentTypes/content/__init__.py: 8 matches
-    1: import Products.ATContentTypes.content.link
-    2: import Products.ATContentTypes.content.image
-    3: import Products.ATContentTypes.content.document
-    4: import Products.ATContentTypes.content.file
-    5: import Products.ATContentTypes.content.event
-    6: import Products.ATContentTypes.content.newsitem
-    7: import Products.ATContentTypes.content.folder
-    8: import Products.ATContentTypes.content.topic
-
-./Products.ATContentTypes/Products/ATContentTypes/content/base.py: 6 matches
-    8: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    39: from Products.ATContentTypes.config import MIME_ALIAS
-    40: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixin
-    41: from Products.ATContentTypes.interfaces import IATContentType
-    42: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-    43: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/content/document.py: 10 matches
-    23: from Products.ATContentTypes.configuration import zconf
-    24: from Products.ATContentTypes.config import PROJECTNAME
-    25: from Products.ATContentTypes.content.base import registerATCT
-    26: from Products.ATContentTypes.content.base import ATCTContent
-    27: from Products.ATContentTypes.content.base import translateMimetypeAlias
-    28: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    29: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    30: from Products.ATContentTypes.lib.historyaware import HistoryAwareMixin
-    31: from Products.ATContentTypes.interfaces import IATDocument
-    33: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/event.py: 10 matches
-    20: from Products.ATContentTypes.configuration import zconf
-    21: from Products.ATContentTypes.config import PROJECTNAME
-    22: from Products.ATContentTypes.content.base import registerATCT
-    23: from Products.ATContentTypes.content.base import ATCTContent
-    24: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    25: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    26: from Products.ATContentTypes.interfaces import IATEvent
-    27: from Products.ATContentTypes.lib.calendarsupport import CalendarSupportMixin
-    28: from Products.ATContentTypes.lib.historyaware import HistoryAwareMixin
-    30: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/favorite.py: 2 matches
-    3: from Products.ATContentTypes.content import link
-    5: logger = logging.getLogger('ATContentTypes')
-
-./Products.ATContentTypes/Products/ATContentTypes/content/file.py: 9 matches
-    19: from Products.ATContentTypes.config import PROJECTNAME
-    20: from Products.ATContentTypes.configuration import zconf
-    21: from Products.ATContentTypes.config import ICONMAP
-    22: from Products.ATContentTypes.content.base import registerATCT
-    23: from Products.ATContentTypes.content.base import ATCTFileContent
-    24: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    25: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    26: from Products.ATContentTypes.interfaces import IATFile
-    28: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/folder.py: 10 matches
-    6: from Products.ATContentTypes.config import PROJECTNAME
-    7: from Products.ATContentTypes.content.base import registerATCT
-    8: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    9: from Products.ATContentTypes.content.base import ATCTBTreeFolder
-    10: from Products.ATContentTypes.interfaces import IATFolder
-    11: from Products.ATContentTypes.interfaces import IATBTreeFolder
-    12: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    13: from Products.ATContentTypes.content.schemata import NextPreviousAwareSchema
-    14: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    15: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixinSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/content/image.py: 9 matches
-    15: from Products.ATContentTypes.config import PROJECTNAME
-    16: from Products.ATContentTypes.configuration import zconf
-    17: from Products.ATContentTypes.content.base import registerATCT
-    18: from Products.ATContentTypes.content.base import ATCTFileContent
-    19: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    20: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    21: from Products.ATContentTypes.interfaces import IATImage
-    23: from Products.ATContentTypes.lib.imagetransform import ATCTImageTransform
-    25: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/link.py: 7 matches
-    14: from Products.ATContentTypes.config import PROJECTNAME
-    15: from Products.ATContentTypes.content.base import registerATCT
-    16: from Products.ATContentTypes.content.base import ATCTContent
-    17: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    18: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    19: from Products.ATContentTypes.interfaces import IATLink
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/newsitem.py: 10 matches
-    15: from Products.ATContentTypes.config import PROJECTNAME
-    16: from Products.ATContentTypes.configuration import zconf
-    17: from Products.ATContentTypes.content.base import registerATCT
-    18: from Products.ATContentTypes.content.base import translateMimetypeAlias
-    19: from Products.ATContentTypes.content.document import ATDocumentBase
-    20: from Products.ATContentTypes.content.image import ATCTImageTransform
-    21: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    22: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    23: from Products.ATContentTypes.interfaces import IATNewsItem
-    25: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/schemata.py: 1 matches
-    6: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/content/topic.py: 14 matches
-    30: from Products.ATContentTypes.configuration import zconf
-    31: from Products.ATContentTypes.config import PROJECTNAME
-    32: from Products.ATContentTypes.content.base import registerATCT
-    33: from Products.ATContentTypes.content.base import ATCTFolder
-    34: from Products.ATContentTypes.criteria import _criterionRegistry
-    35: from Products.ATContentTypes.exportimport.content import IDisabledExport
-    36: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    37: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    38: from Products.ATContentTypes.interfaces import IATTopic
-    39: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    40: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    41: from Products.ATContentTypes.permission import ChangeTopics
-    43: from Products.ATContentTypes.config import TOOLNAME
-    45: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/__init__.py: 17 matches
-    4: from Products.ATContentTypes.config import PROJECTNAME
-    7: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    8: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    9: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    111: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    112: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    113: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    114: from Products.ATContentTypes.criteria.list import ATListCriterion
-    115: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    116: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    117: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    118: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    119: from Products.ATContentTypes.criteria.simplestring import ATSimpleStringCriterion
-    120: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    121: from Products.ATContentTypes.criteria.currentauthor import ATCurrentAuthorCriterion
-    122: from Products.ATContentTypes.criteria.path import ATPathCriterion
-    123: from Products.ATContentTypes.criteria.relativepath import ATRelativePathCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/base.py: 2 matches
-    10: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    11: from Products.ATContentTypes.interfaces import IATTopicCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/boolean.py: 7 matches
-    12: from Products.ATContentTypes.criteria import registerCriterion
-    13: from Products.ATContentTypes.criteria import FIELD_INDICES
-    14: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    15: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    19: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/currentauthor.py: 4 matches
-    7: from Products.ATContentTypes.criteria import registerCriterion, \
-    9: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    10: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    11: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/date.py: 7 matches
-    14: from Products.ATContentTypes.criteria import registerCriterion
-    15: from Products.ATContentTypes.criteria import DATE_INDICES
-    16: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    17: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    18: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    19: from Products.ATContentTypes.permission import ChangeTopics
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/daterange.py: 7 matches
-    10: from Products.ATContentTypes.criteria import registerCriterion
-    11: from Products.ATContentTypes.criteria import DATE_INDICES
-    12: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    13: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    14: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    15: from Products.ATContentTypes.permission import ChangeTopics
-    17: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/list.py: 7 matches
-    13: from Products.ATContentTypes.criteria import registerCriterion
-    14: from Products.ATContentTypes.criteria import LIST_INDICES
-    15: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    16: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    17: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    18: from Products.ATContentTypes.permission import ChangeTopics
-    20: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/path.py: 7 matches
-    12: from Products.ATContentTypes.criteria import registerCriterion
-    13: from Products.ATContentTypes.criteria import PATH_INDICES
-    14: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    15: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/portaltype.py: 5 matches
-    9: from Products.ATContentTypes.criteria import registerCriterion
-    10: from Products.ATContentTypes.criteria import FIELD_INDICES
-    11: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    12: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    14: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/reference.py: 4 matches
-    6: from Products.ATContentTypes.criteria import registerCriterion
-    7: from Products.ATContentTypes.criteria import REFERENCE_INDICES
-    8: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    9: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/relativepath.py: 6 matches
-    11: from Products.ATContentTypes.criteria import registerCriterion
-    12: from Products.ATContentTypes.criteria import PATH_INDICES
-    13: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    14: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    15: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    16: from Products.ATContentTypes.permission import ChangeTopics
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/schemata.py: 2 matches
-    5: from Products.ATContentTypes.permission import ChangeTopics
-    7: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/selection.py: 7 matches
-    14: from Products.ATContentTypes.criteria import registerCriterion
-    15: from Products.ATContentTypes.criteria import LIST_INDICES
-    16: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    17: from Products.ATContentTypes.permission import ChangeTopics
-    18: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    19: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    21: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simpleint.py: 7 matches
-    13: from Products.ATContentTypes.criteria import registerCriterion
-    14: from Products.ATContentTypes.criteria import LIST_INDICES
-    15: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    16: from Products.ATContentTypes.permission import ChangeTopics
-    17: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    18: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    20: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/simplestring.py: 6 matches
-    10: from Products.ATContentTypes.criteria import registerCriterion, \
-    12: from Products.ATContentTypes.interfaces import IATTopicSearchCriterion
-    14: from Products.ATContentTypes.permission import ChangeTopics
-    15: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    16: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    18: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/criteria/sort.py: 7 matches
-    9: from Products.ATContentTypes.criteria import registerCriterion
-    10: from Products.ATContentTypes.criteria import SORT_INDICES
-    11: from Products.ATContentTypes.interfaces import IATTopicSortCriterion
-    12: from Products.ATContentTypes.permission import ChangeTopics
-    13: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    14: from Products.ATContentTypes.criteria.schemata import ATBaseCriterionSchema
-    16: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/exportimport/atcttool.py: 1 matches
-    1: from Products.ATContentTypes.interfaces import IATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/exportimport/configure.zcml: 6 matches
-    9: title="ATContentTypes Tool"
-    10: description="Import ATContentTypes specific configuration."
-    18: title="ATContentTypes Tool"
-    19: description="Export ATContentTypes specific configuration."
-    26: for="Products.ATContentTypes.interfaces.IATCTTool
-    39: for="Products.ATContentTypes.interfaces.IATContentType"
-
-./Products.ATContentTypes/Products/ATContentTypes/interface.py: 1 matches
-    7: from Products.ATContentTypes.interfaces import *
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/__init__.py: 22 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-    2: from Products.ATContentTypes.interfaces.interfaces import IHistoryAware
-    3: from Products.ATContentTypes.interfaces.interfaces import ICalendarSupport
-    4: from Products.ATContentTypes.interfaces.interfaces import ITextContent
-    5: from Products.ATContentTypes.interfaces.interfaces import ISelectableConstrainTypes
-    6: from Products.ATContentTypes.interfaces.interfaces import IATCTTool
-    8: from Products.ATContentTypes.interfaces.document import IATDocument
-    10: from Products.ATContentTypes.interfaces.event import IATEvent
-    12: from Products.ATContentTypes.interfaces.file import IFileContent
-    13: from Products.ATContentTypes.interfaces.file import IATFile
-    15: from Products.ATContentTypes.interfaces.folder import IFilterFolder
-    16: from Products.ATContentTypes.interfaces.folder import IATFolder
-    17: from Products.ATContentTypes.interfaces.folder import IATBTreeFolder
-    19: from Products.ATContentTypes.interfaces.image import IImageContent
-    20: from Products.ATContentTypes.interfaces.image import IATImage
-    22: from Products.ATContentTypes.interfaces.link import IATLink
-    24: from Products.ATContentTypes.interfaces.news import IATNewsItem
-    26: from Products.ATContentTypes.interfaces.topic import IATTopic
-    27: from Products.ATContentTypes.interfaces.topic import IATTopicCriterion
-    28: from Products.ATContentTypes.interfaces.topic import IATTopicSearchCriterion
-    29: from Products.ATContentTypes.interfaces.topic import IATTopicSortCriterion
-    30: from Products.ATContentTypes.interfaces.topic import IATCTTopicsTool
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/document.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import ITextContent
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/event.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/folder.py: 1 matches
-    2: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/link.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/news.py: 2 matches
-    1: from Products.ATContentTypes.interfaces.document import IATDocument
-    2: from Products.ATContentTypes.interfaces.image import IImageContent
-
-./Products.ATContentTypes/Products/ATContentTypes/interfaces/topic.py: 1 matches
-    1: from Products.ATContentTypes.interfaces.interfaces import IATContentType
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/calendarsupport.py: 1 matches
-    10: from Products.ATContentTypes.interfaces import ICalendarSupport
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/constraintypes.py: 3 matches
-    22: from Products.ATContentTypes import ATCTMessageFactory as _
-    23: from Products.ATContentTypes import permission as ATCTPermissions
-    25: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/historyaware.py: 2 matches
-    13: from Products.ATContentTypes import permission as ATCTPermissions
-    14: from Products.ATContentTypes.interfaces import IHistoryAware
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/imagetransform.py: 3 matches
-    13: from Products.ATContentTypes.configuration import zconf
-    14: from Products.ATContentTypes.config import HAS_PIL
-    15: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/lib/validators.py: 4 matches
-    4: from Products.ATContentTypes.config import HAS_MX_TIDY
-    5: from Products.ATContentTypes.config import MX_TIDY_ENABLED
-    6: from Products.ATContentTypes.config import MX_TIDY_MIMETYPES
-    7: from Products.ATContentTypes.config import MX_TIDY_OPTIONS
-
-./Products.ATContentTypes/Products/ATContentTypes/migration/v1_2/__init__.py: 4 matches
-    10: from Products.ATContentTypes.config import TOOLNAME
-    11: from Products.ATContentTypes.tool.atct import ATCTTool
-    12: from Products.ATContentTypes.interfaces import IATCTTool
-    60: logger.info('Upgraded the ATContentTypes tool.')
-
-./Products.ATContentTypes/Products/ATContentTypes/permission.py: 5 matches
-    3: from Products.ATContentTypes.config import PROJECTNAME
-    4: from Products.ATContentTypes.interfaces import IATTopic
-    5: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    28: ViewHistory = "ATContentTypes: View history"
-    31: UploadViaURL = "ATContentTypes: Upload via url"
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/atct_saveTopicSetup.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_add.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_remove.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_save.cpy: 1 matches
-    11: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/skins/ATContentTypes/criterion_set_sort.cpy: 1 matches
-    12: from Products.ATContentTypes import ATCTMessageFactory as _
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atctftestcase.py: 2 matches
-    1: from Products.ATContentTypes.tests import atcttestcase
-    8: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py: 6 matches
-    36: from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-    37: from Products.ATContentTypes.interfaces import IATContentType
-    38: from Products.ATContentTypes.tests.utils import dcEdit
-    39: from Products.ATContentTypes.tests.utils import EmptyValidator
-    40: from Products.ATContentTypes.tests.utils import idValidator
-    61: lpf.product = 'ATContentTypes'
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atdocument.py: 10 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.tests.utils import dcEdit
-    13: from Products.ATContentTypes.content.document import ATDocument
-    14: from Products.ATContentTypes.lib.validators import TidyHtmlWithCleanupValidator
-    15: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    16: from Products.ATContentTypes.tests.utils import input_file_path
-    17: from Products.ATContentTypes.interfaces import IHistoryAware
-    18: from Products.ATContentTypes.interfaces import ITextContent
-    19: from Products.ATContentTypes.interfaces import IATDocument
-    22: from Products.ATContentTypes import config as atct_config
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atevent.py: 9 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    10: from Products.ATContentTypes.tests.utils import dcEdit
-    12: from Products.ATContentTypes.content.event import ATEvent
-    13: from Products.ATContentTypes.tests.utils import EmptyValidator
-    14: from Products.ATContentTypes.tests.utils import EmailValidator
-    15: from Products.ATContentTypes.tests.utils import URLValidator
-    16: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    18: from Products.ATContentTypes.interfaces import ICalendarSupport
-    19: from Products.ATContentTypes.interfaces import IATEvent
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py: 5 matches
-    5: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.tests.utils import dcEdit
-    15: from Products.ATContentTypes.interfaces import IATFile
-    16: from Products.ATContentTypes.interfaces import IFileContent
-    200: from Products.ATContentTypes.content.base import cleanupFilename
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atfolder.py: 8 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    6: from Products.ATContentTypes.tests.utils import dcEdit
-    7: from Products.ATContentTypes.content.folder import ATFolder
-    8: from Products.ATContentTypes.content.folder import ATBTreeFolder
-    10: from Products.ATContentTypes.interfaces import IATFolder
-    11: from Products.ATContentTypes.interfaces import IATBTreeFolder
-    14: from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
-    120: from Products.ATContentTypes.content.document import ATDocument
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py: 4 matches
-    13: from Products.ATContentTypes.interfaces import IImageContent
-    14: from Products.ATContentTypes.interfaces import IATImage
-    15: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    16: from Products.ATContentTypes.tests.utils import dcEdit, PACKAGE_HOME
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atlink.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    11: from Products.ATContentTypes.content.link import ATLink
-    12: from Products.ATContentTypes.interfaces import IATLink
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_atnewsitem.py: 7 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    10: from Products.ATContentTypes.tests.utils import dcEdit
-    12: from Products.ATContentTypes.content.newsitem import ATNewsItem
-    13: from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-    14: from Products.ATContentTypes.interfaces import ITextContent
-    15: from Products.ATContentTypes.interfaces import IImageContent
-    16: from Products.ATContentTypes.interfaces import IATNewsItem
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_attopic.py: 7 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    5: from Products.ATContentTypes.tests.utils import dcEdit
-    14: from Products.ATContentTypes.permission import ChangeTopics
-    15: from Products.ATContentTypes.content.topic import ATTopic
-    16: from Products.ATContentTypes.content.folder import ATFolder
-    17: from Products.ATContentTypes.tests.utils import EmptyValidator
-    18: from Products.ATContentTypes.interfaces import IATTopic
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_browserdefaultmixin.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    7: from Products.ATContentTypes import permission
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_bugs.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    6: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_calendar.py: 3 matches
-    9: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-    10: from Products.ATContentTypes.interfaces import ICalendarSupport
-    11: from Products.ATContentTypes.browser.calendar import cachekey
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_constraintypes.py: 2 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    8: from Products.ATContentTypes.lib import constraintypes
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_criteria.py: 17 matches
-    6: from Products.ATContentTypes.tests import atcttestcase
-    14: from Products.ATContentTypes.interfaces import IATTopicCriterion
-    16: from Products.ATContentTypes.criteria.base import ATBaseCriterion
-    17: from Products.ATContentTypes.criteria.date import ATDateCriteria
-    18: from Products.ATContentTypes.criteria.list import ATListCriterion
-    19: from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
-    20: from Products.ATContentTypes.criteria.simplestring import \
-    22: from Products.ATContentTypes.criteria.sort import ATSortCriterion
-    23: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-    24: from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-    25: from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-    26: from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-    27: from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-    28: from Products.ATContentTypes.criteria.currentauthor import \
-    30: from Products.ATContentTypes.criteria.path import ATPathCriterion
-    31: from Products.ATContentTypes.criteria.relativepath import ATRelativePathCriterion
-    687: from Products.ATContentTypes.criteria import _criterionRegistry
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_default_mimetypes.py: 1 matches
-    3: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_doctests.py: 2 matches
-    5: from Products.ATContentTypes.tests.atcttestcase import ATCTFunctionalSiteTestCase
-    15: suite.addTest(FileSuite(file, package="Products.ATContentTypes.tests",
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_functional.py: 2 matches
-    3: from Products.ATContentTypes.tests.atcttestcase import ATCTFunctionalSiteTestCase
-    26: package="Products.ATContentTypes.tests",
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_installation.py: 7 matches
-    5: from Products.ATContentTypes.tests import atcttestcase
-    6: from Products.ATContentTypes.config import TOOLNAME
-    7: from Products.ATContentTypes.config import SWALLOW_IMAGE_RESIZE_EXCEPTIONS
-    8: from Products.ATContentTypes.tool.atct import ATCTTool
-    30: self.assertTrue('ATContentTypes' in stool)
-    42: self.assertFalse('ATContentTypes' in products)
-    62: import Products.ATContentTypes.atct
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_migrations.py: 3 matches
-    2: from Products.ATContentTypes.tests import atcttestcase
-    4: from Products.ATContentTypes.config import TOOLNAME
-    5: from Products.ATContentTypes.migration.v1_2 import upgradeATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_skinScripts.py: 1 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_tool.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-    5: from Products.ATContentTypes.config import TOOLNAME
-    6: from Products.ATContentTypes.interfaces import IATCTTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tests/test_topictool.py: 3 matches
-    4: from Products.ATContentTypes.tests import atcttestcase
-    7: from Products.ATContentTypes.config import TOOLNAME
-    8: from Products.ATContentTypes.interfaces import IATCTTopicsTool
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/atct.py: 6 matches
-    18: from Products.ATContentTypes.interfaces import IImageContent
-    19: from Products.ATContentTypes.interfaces import IATCTTool
-    20: from Products.ATContentTypes.config import TOOLNAME
-    21: from Products.ATContentTypes.config import WWW_DIR
-    22: from Products.ATContentTypes.tool.topic import ATTopicsTool
-    68: icons = ({'path': 'misc_/ATContentTypes/tool.gif',
-
-./Products.ATContentTypes/Products/ATContentTypes/tool/topic.py: 3 matches
-    5: from Products.ATContentTypes.criteria import _criterionRegistry
-    11: from Products.ATContentTypes.config import TOOLNAME
-    12: from Products.ATContentTypes.interfaces import IATCTTopicsTool
-
-./Products.ATContentTypes/setup.py: 1 matches
-    5: setup(name='Products.ATContentTypes',
-
-./Products.CMFDiffTool/Products/CMFDiffTool/tests/at_compound_tests.py: 1 matches
-    2: from Products.ATContentTypes.content.document import ATDocument
-
-./Products.CMFDynamicViewFTI/Products/CMFDynamicViewFTI/browserdefault.py: 1 matches
-    36: Note: folderish content types should overwrite HEAD like ATContentTypes
-
-./Products.CMFPlone/Products/CMFPlone/CatalogTool.py: 5 matches
-    85: 'Products.ATContentTypes.exportimport.content.IDisabledExport',
-    86: 'Products.ATContentTypes.interfaces.folder.IATBTreeFolder',
-    87: 'Products.ATContentTypes.interfaces.interfaces.IATContentType',
-    88: 'Products.ATContentTypes.interfaces.interfaces.IHistoryAware',
-    89: 'Products.ATContentTypes.interfaces.interfaces.ITextContent',
-
-./Products.CMFPlone/Products/CMFPlone/browser/syndication/adapters.py: 1 matches
-    16: from Products.ATContentTypes.interfaces.file import IFileContent
-
-./Products.CMFPlone/Products/CMFPlone/browser/syndication/configure.zcml: 2 matches
-    20: for="Products.ATContentTypes.interfaces.topic.IATTopic"
-    21: zcml:condition="installed Products.ATContentTypes" />
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/componentregistry.xml: 1 matches
-    27: interface="Products.ATContentTypes.interface.IATCTTool"
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/controlpanel.xml: 1 matches
-    122: <configlet title="Collections (old style)" action_id="portal_atct" appId="ATContentTypes"
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/portal_atct.xml: 1 matches
-    237: <property name="title">ATContentTypes Tool</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/rolemap.xml: 7 matches
-    43: <permission name="ATContentTypes: Add Document" acquire="True">
-    49: <permission name="ATContentTypes: Add Event" acquire="True">
-    55: <permission name="ATContentTypes: Add File" acquire="True">
-    61: <permission name="ATContentTypes: Add Folder" acquire="True">
-    67: <permission name="ATContentTypes: Add Image" acquire="True">
-    73: <permission name="ATContentTypes: Add Link" acquire="True">
-    79: <permission name="ATContentTypes: Add News Item" acquire="True">
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/skins.xml: 3 matches
-    5: <object name="ATContentTypes" meta_type="Filesystem Directory View"
-    6: directory="Products.ATContentTypes:skins/ATContentTypes"/>
-    48: <layer name="ATContentTypes"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/toolset.xml: 1 matches
-    18: class="Products.ATContentTypes.tool.atct.ATCTTool"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATBooleanCriterion.xml: 1 matches
-    8: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATCurrentAuthorCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATDateCriteria.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATDateRangeCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATListCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATPathCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATPortalTypeCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATReferenceCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATRelativePathCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSelectionCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSimpleIntCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSimpleStringCriterion.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/ATSortCriterion.xml: 1 matches
-    9: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Document.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    36: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Event.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    38: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Folder.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Link.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/News_Item.xml: 2 matches
-    10: <property name="product">ATContentTypes</property>
-    38: <permission value="ATContentTypes: View history"/>
-
-./Products.CMFPlone/Products/CMFPlone/profiles/default/types/Topic.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./Products.CMFPlone/Products/CMFPlone/setuphandlers.py: 2 matches
-    18: from Products.ATContentTypes.lib import constraintypes
-    37: 'ATContentTypes', 'Products.ATContentTypes',
-
-./Products.CMFPlone/Products/CMFPlone/tests/testContentTypes.py: 2 matches
-    6: from Products.ATContentTypes.interfaces import IATContentType
-    15: class TestATContentTypes(PloneTestCase.PloneTestCase):
-
-./Products.CMFPlone/Products/CMFPlone/tests/testPortalCreation.py: 5 matches
-    864: 'ATContentTypes: Add Document',
-    865: 'ATContentTypes: Add Event', 'ATContentTypes: Add File',
-    866: 'ATContentTypes: Add Folder',
-    867: 'ATContentTypes: Add Link',
-    868: 'ATContentTypes: Add News Item', ]:
-
-./Products.CMFPlone/Products/CMFPlone/tests/testPortalFactory.py: 1 matches
-    19: ADD_DOC_PERM = 'ATContentTypes: Add Document'
-
-./Products.CMFPlone/Products/CMFPlone/tests/testSiteAdminRole.py: 24 matches
-    17: 'ATContentTypes Topic: Add ATBooleanCriterion':             1,
-    18: 'ATContentTypes Topic: Add ATCurrentAuthorCriterion':       1,
-    19: 'ATContentTypes Topic: Add ATDateCriteria':                 1,
-    20: 'ATContentTypes Topic: Add ATDateRangeCriterion':           1,
-    21: 'ATContentTypes Topic: Add ATListCriterion':                1,
-    22: 'ATContentTypes Topic: Add ATPathCriterion':                1,
-    23: 'ATContentTypes Topic: Add ATPortalTypeCriterion':          1,
-    24: 'ATContentTypes Topic: Add ATReferenceCriterion':           1,
-    25: 'ATContentTypes Topic: Add ATRelativePathCriterion':        1,
-    26: 'ATContentTypes Topic: Add ATSelectionCriterion':           1,
-    27: 'ATContentTypes Topic: Add ATSimpleIntCriterion':           1,
-    28: 'ATContentTypes Topic: Add ATSimpleStringCriterion':        1,
-    29: 'ATContentTypes Topic: Add ATSortCriterion':                1,
-    30: 'ATContentTypes: Add Document':                             1,
-    31: 'ATContentTypes: Add Event':                                1,
-    32: 'ATContentTypes: Add File':                                 1,
-    33: 'ATContentTypes: Add Folder':                               1,
-    34: 'ATContentTypes: Add Image':                                1,
-    35: 'ATContentTypes: Add Large Plone Folder':                   1,
-    36: 'ATContentTypes: Add Link':                                 1,
-    37: 'ATContentTypes: Add News Item':                            1,
-    38: 'ATContentTypes: Upload via url':                           1,
-    39: 'ATContentTypes: View history':                             1,
-    44: 'Add ATContentTypes tools':                                 0,
-
-./Products.CMFPlone/setup.py: 1 matches
-    41: 'Products.ATContentTypes >= 2.1.3',
-
-./Products.LinguaPlone/Products/LinguaPlone/__init__.py: 2 matches
-    36: from Products.ATContentTypes.criteria import _criterionRegistry
-    37: from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-
-./Products.LinguaPlone/Products/LinguaPlone/criteria/configure.zcml: 17 matches
-    6: for="Products.ATContentTypes.criteria.ATBooleanCriterion"
-    10: for="Products.ATContentTypes.criteria.ATCurrentAuthorCriterion"
-    14: for="Products.ATContentTypes.criteria.ATDateCriteria"
-    18: for="Products.ATContentTypes.criteria.ATDateRangeCriterion"
-    22: for="Products.ATContentTypes.criteria.ATListCriterion"
-    26: for="Products.ATContentTypes.criteria.ATPathCriterion"
-    30: for="Products.ATContentTypes.criteria.ATPortalTypeCriterion"
-    34: for="Products.ATContentTypes.criteria.ATReferenceCriterion"
-    38: for="Products.ATContentTypes.criteria.ATRelativePathCriterion"
-    42: for="Products.ATContentTypes.criteria.ATSelectionCriterion"
-    46: for="Products.ATContentTypes.criteria.ATSimpleIntCriterion"
-    50: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    54: for="Products.ATContentTypes.criteria.ATSortCriterion"
-    60: for="Products.ATContentTypes.criteria.ATSelectionCriterion"
-    67: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    72: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-    77: for="Products.ATContentTypes.criteria.ATSimpleStringCriterion"
-
-./Products.LinguaPlone/Products/LinguaPlone/criteria/syncer.py: 2 matches
-    6: from Products.ATContentTypes.interface import IATTopicCriterion
-    7: from Products.ATContentTypes.interface import IATTopic
-
-./Products.LinguaPlone/Products/LinguaPlone/tests/test_translation_portaltype.py: 1 matches
-    2: from Products.ATContentTypes.interface import IATDocument
-
-./Products.LinguaPlone/setup.py: 1 matches
-    37: 'Products.ATContentTypes >= 2.0.2',
-
-./Products.Marshall/Products/Marshall/tests/base.py: 2 matches
-    27: from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-    33: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/Products/Marshall/tests/test_export.py: 1 matches
-    34: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/Products/Marshall/tests/test_marshall.py: 1 matches
-    32: ZopeTestCase.installProduct('ATContentTypes')
-
-./Products.Marshall/setup.py: 1 matches
-    31: 'Products.ATContentTypes',
-
-./Products.PloneTestCase/Products/PloneTestCase/setup.py: 4 matches
-    36: ZopeTestCase.installProduct('ATContentTypes', quiet=1)
-    69: ZopeTestCase.installProduct('ATContentTypes', quiet=1)
-    152: default_extension_profiles = ('Products.ATContentTypes:default', )
-    516: from Products.ATContentTypes.lib.constraintypes \
-
-./Products.PloneTestCase/setup.py: 1 matches
-    18: 'Products.ATContentTypes',
-
-./Products.TinyMCE/Products/TinyMCE/utility.py: 1 matches
-    170: from Products.ATContentTypes.content.image import ATImage
-
-./Products.contentmigration/Products/contentmigration/tests/extensions.py: 1 matches
-    1: from Products.ATContentTypes.interface import IATDocument
-
-./Products.contentmigration/setup.py: 1 matches
-    14: keywords='Plone Archetypes ATContentTypes',
-
-./archetypes.referencebrowserwidget/src/archetypes/referencebrowserwidget/browser/configure.zcml: 1 matches
-    19: for="Products.ATContentTypes.interface.IATTopicCriterion"
-
-./archetypes.schemaextender/archetypes/schemaextender/tests/testAccessor.py: 1 matches
-    4: from Products.ATContentTypes.content.document import ATDocument
-
-./borg.localrole/setup.py: 1 matches
-    26: 'Products.ATContentTypes',
-
-./plone.app.blob/src/plone/app/blob/__init__.py: 1 matches
-    17: from Products.ATContentTypes import permission as atct
-
-./plone.app.blob/src/plone/app/blob/adapters/atfile.py: 1 matches
-    4: from Products.ATContentTypes.interface import IATFile
-
-./plone.app.blob/src/plone/app/blob/adapters/atimage.py: 1 matches
-    3: from Products.ATContentTypes.interface import IATImage
-
-./plone.app.blob/src/plone/app/blob/browser/migration.pt: 1 matches
-    33: ATContentTypes'
-
-./plone.app.blob/src/plone/app/blob/content.py: 4 matches
-    18: from Products.ATContentTypes.content.base import ATCTFileContent
-    19: from Products.ATContentTypes.content.file import ATFile
-    20: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    21: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-
-./plone.app.blob/src/plone/app/blob/markings.py: 4 matches
-    5: from Products.ATContentTypes.interface import file as atfile
-    6: from Products.ATContentTypes.interface import image as atimage
-    10: from Products.ATContentTypes.interfaces import IATFile as Z2IATFile
-    11: from Products.ATContentTypes.interfaces import IATImage as Z2IATImage
-
-./plone.app.blob/src/plone/app/blob/mixins.py: 1 matches
-    5: from Products.ATContentTypes.lib.imagetransform import ATCTImageTransform
-
-./plone.app.blob/src/plone/app/blob/profiles/file-replacement/types/ATFile.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./plone.app.blob/src/plone/app/blob/profiles/image-replacement/types/ATImage.xml: 1 matches
-    10: <property name="product">ATContentTypes</property>
-
-./plone.app.blob/src/plone/app/blob/subtypes/image.py: 1 matches
-    6: from Products.ATContentTypes.configuration import zconf
-
-./plone.app.blob/src/plone/app/blob/tests/test_adapters.py: 2 matches
-    5: from Products.ATContentTypes.content.image import ATImage
-    6: from Products.ATContentTypes.content.file import ATFile
-
-./plone.app.blob/src/plone/app/blob/tests/test_maintenance.py: 2 matches
-    4: from Products.ATContentTypes.interface import file as atfile
-    5: from Products.ATContentTypes.interface import image as atimage
-
-./plone.app.blob/src/plone/app/blob/tests/test_replacements.py: 8 matches
-    8: from Products.ATContentTypes.interface import file as atfile
-    9: from Products.ATContentTypes.interface import image as atimage
-    10: from Products.ATContentTypes.interfaces import IATFile as Z2IATFile
-    11: from Products.ATContentTypes.interfaces import IATImage as Z2IATImage
-    12: from Products.ATContentTypes.content.file import ATFile
-    13: from Products.ATContentTypes.content.image import ATImage
-    33: self.assertEqual(permissions, ['ATContentTypes: Add File'])
-    159: self.assertEqual(permissions, ['ATContentTypes: Add Image'])
-
-./plone.app.caching/plone/app/caching/caching.zcml: 3 matches
-    111: <configure zcml:condition="installed Products.ATContentTypes">
-    113: <cache:ruleset ruleset="plone.content.file" for="Products.ATContentTypes.interfaces.IATFile" />
-    114: <cache:ruleset ruleset="plone.content.file" for="Products.ATContentTypes.interfaces.IATImage" />
-
-./plone.app.collection/plone/app/collection/collection.py: 1 matches
-    6: from Products.ATContentTypes.content import document, schemata
-
-./plone.app.contentrules/plone/app/contentrules/conditions/fileextension.py: 1 matches
-    9: from Products.ATContentTypes.interface import IFileContent
-
-./plone.app.contentrules/plone/app/contentrules/configure.zcml: 3 matches
-    30: <configure zcml:condition="installed Products.ATContentTypes">
-    32: <class class="Products.ATContentTypes.content.folder.ATFolder">
-    36: <class class="Products.ATContentTypes.content.folder.ATBTreeFolder">
-
-./plone.app.folder/src/plone/app/folder/__init__.py: 1 matches
-    6: AddFolder = 'ATContentTypes: Add Folder'
-
-./plone.app.folder/src/plone/app/folder/bbb.py: 5 matches
-    7: from Products.ATContentTypes.interface.archive import IArchivable
-    8: from Products.ATContentTypes.interface.image import IPhotoAlbumAble
-    22: from Products.ATContentTypes.content.base import ATCTFolderMixin
-    23: from Products.ATContentTypes.interfaces import IATFolder
-    24: from Products.ATContentTypes.interfaces import IATBTreeFolder
-
-./plone.app.folder/src/plone/app/folder/configure.zcml: 1 matches
-    12: <configure zcml:condition="installed Products.ATContentTypes">
-
-./plone.app.folder/src/plone/app/folder/folder.py: 8 matches
-    4: from Products.ATContentTypes.interface import IATFolder
-    5: from Products.ATContentTypes.interface import IATBTreeFolder
-    6: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    7: from Products.ATContentTypes.content.schemata import NextPreviousAwareSchema
-    8: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    9: from Products.ATContentTypes.lib.constraintypes import \
-    11: from Products.ATContentTypes.content.base import ATCTFolderMixin
-    12: from Products.ATContentTypes.content.base import registerATCT
-
-./plone.app.folder/src/plone/app/folder/tests/content.py: 9 matches
-    7: from Products.ATContentTypes.config import PROJECTNAME
-    8: from Products.ATContentTypes.content.base import registerATCT
-    9: from Products.ATContentTypes.content.base import ATCTOrderedFolder
-    10: from Products.ATContentTypes.interface import IATFolder
-    11: from Products.ATContentTypes.permission import permissions
-    12: from Products.ATContentTypes.content.schemata import ATContentTypeSchema
-    13: from Products.ATContentTypes.content.schemata import finalizeATCTSchema
-    14: from Products.ATContentTypes.lib.constraintypes import ConstrainTypesMixinSchema
-    39: a reduced version of `ATContentTypes.content.folder.ATFolder` """
-
-./plone.app.folder/src/plone/app/folder/tests/test_migration.py: 1 matches
-    8: from Products.ATContentTypes.content.document import ATDocument
-
-./plone.app.folder/src/plone/app/folder/tests/test_partialordering_integration.py: 1 matches
-    3: from Products.ATContentTypes.content.document import ATDocument
-
-./plone.app.imaging/setup.py: 1 matches
-    40: 'Products.ATContentTypes' ]},
-
-./plone.app.imaging/src/plone/app/imaging/__init__.py: 1 matches
-    3: import Products.ATContentTypes
-
-./plone.app.imaging/src/plone/app/imaging/monkey.py: 2 matches
-    4: from Products.ATContentTypes.content.image import ATImageSchema
-    5: from Products.ATContentTypes.content.newsitem import ATNewsItemSchema
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_new_scaling.py: 1 matches
-    200: from Products.ATContentTypes.content.image import ATImage
-
-./plone.app.imaging/src/plone/app/imaging/tests/test_setup.py: 1 matches
-    3: from Products.ATContentTypes.content.image import ATImageSchema, ATImage
-
-./plone.app.layout/plone/app/layout/configure.zcml: 1 matches
-    14: <include zcml:condition="installed Products.ATContentTypes"
-
-./plone.app.layout/plone/app/layout/presentation/configure.zcml: 2 matches
-    7: for="Products.ATContentTypes.interface.IATDocument"
-    15: for="Products.ATContentTypes.interface.IATDocument"
-
-./plone.app.layout/plone/app/layout/viewlets/configure.zcml: 2 matches
-    321: zcml:condition="installed Products.ATContentTypes"
-    323: for="Products.ATContentTypes.interface.IATDocument"
-
-./plone.app.locales/utils/relocate.py: 1 matches
-    31: print 'No po-files were found for ATContentTypes.'
-
-./plone.app.locales/utils/utils.py: 1 matches
-    4: 'atct'  : {'name': 'atcontenttypes', 'path': 'ATContentTypes'},
-
-./plone.app.portlets/plone/app/portlets/configure.zcml: 2 matches
-    36: <class zcml:condition="installed Products.ATContentTypes"
-    37: class="Products.ATContentTypes.content.base.ATCTMixin">
-
-./plone.app.testing/plone/app/testing/layers.py: 1 matches
-    58: ('Products.ATContentTypes'              , {'loadZCML': True}, ),
-
-./plone.app.upgrade/plone/app/upgrade/v30/alphas.py: 2 matches
-    83: from Products.ATContentTypes.interface import IATCTTool
-    84: from Products.ATContentTypes.migration.v1_2 import upgradeATCTTool
-
-./plone.app.upgrade/plone/app/upgrade/v30/betas.py: 5 matches
-    133: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    134: 'ATContentTypes: Add Event',
-    135: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    136: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    137: 'ATContentTypes: Add News Item', ]:
-
-./plone.app.upgrade/plone/app/upgrade/v30/tests.py: 11 matches
-    121: from Products.ATContentTypes.interface import IATCTTool
-    953: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    954: 'ATContentTypes: Add Event',
-    955: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    956: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    957: 'ATContentTypes: Add News Item', ]:
-    964: for p in ['Add portal content', 'Add portal folders', 'ATContentTypes: Add Document',
-    965: 'ATContentTypes: Add Event',
-    966: 'ATContentTypes: Add File', 'ATContentTypes: Add Folder',
-    967: 'ATContentTypes: Add Image', 'ATContentTypes: Add Link',
-    968: 'ATContentTypes: Add News Item', ]:
-
-./plone.app.upgrade/plone/app/upgrade/v40/alphas.py: 1 matches
-    78: 'mimetypes_icons,plone_kss,ATContentTypes,PasswordReset,'
-
-./plone.app.upgrade/plone/app/upgrade/v40/profiles/to_beta5/controlpanel.xml: 1 matches
-    39: <configlet title="Collections" action_id="portal_atct" appId="ATContentTypes"
-
-./plone.app.upgrade/plone/app/upgrade/v42/profiles/to_rc1/controlpanel.xml: 1 matches
-    5: <configlet title="Collections (old style)" action_id="portal_atct" appId="ATContentTypes"
-
-./wicked/wicked/atcontent/Extensions/migrate_atdoc_wickeddoc.py: 1 matches
-    1: from Products.ATContentTypes.migration.walker import CatalogWalker
-
-./wicked/wicked/atcontent/migration/migrator.py: 3 matches
-    2: from Products.ATContentTypes.migration.migrator import CMFItemMigrator
-    3: from Products.ATContentTypes.migration.common import registerMigrator
-    4: from Products.ATContentTypes.migration.walker import CatalogWalker
-
-./wicked/wicked/atcontent/wickeddoc.py: 4 matches
-    31: from Products.ATContentTypes.atct import ATDocument
-    33: from Products.ATContentTypes.types.ATDocument import ATDocument
-    35: from Products.ATContentTypes.config import zconf
-    38: from Products.ATContentTypes.config import ATDOCUMENT_CONTENT_TYPE
-
-./wicked/wicked/plone/document-only.zcml: 2 matches
-    13: <class class="Products.ATContentTypes.content.document.ATDocument">
-    18: atclass="Products.ATContentTypes.content.document.ATDocument"
-
-./wicked/wicked/plone/registration.py: 1 matches
-    2: from Products.ATContentTypes.interface import IATNewsItem, IATEvent, IATDocument
-
-./wicked/wicked/plone/selective-atct.zcml: 6 matches
-    16: atclass="Products.ATContentTypes.content.document.ATDocument"
-    24: atclass="Products.ATContentTypes.content.event.ATEvent"
-    32: atclass="Products.ATContentTypes.content.newsitem.ATNewsItem"
-    41: for="Products.ATContentTypes.interface.IATContentType"
-    55: for="Products.ATContentTypes.interface.IATContentType"
-    73: for="Products.ATContentTypes.interface.IATContentType"
diff --git a/bootstrap-buildout.py b/bootstrap-buildout.py
new file mode 100644
index 0000000..a459921
--- /dev/null
+++ b/bootstrap-buildout.py
@@ -0,0 +1,210 @@
+##############################################################################
+#
+# Copyright (c) 2006 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+"""Bootstrap a buildout-based project
+
+Simply run this script in a directory containing a buildout.cfg.
+The script accepts buildout command-line options, so you can
+use the -c option to specify an alternate configuration file.
+"""
+
+import os
+import shutil
+import sys
+import tempfile
+
+from optparse import OptionParser
+
+__version__ = '2015-07-01'
+# See zc.buildout's changelog if this version is up to date.
+
+tmpeggs = tempfile.mkdtemp(prefix='bootstrap-')
+
+usage = '''\
+[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
+
+Bootstraps a buildout-based project.
+
+Simply run this script in a directory containing a buildout.cfg, using the
+Python that you want bin/buildout to use.
+
+Note that by using --find-links to point to local resources, you can keep
+this script from going over the network.
+'''
+
+parser = OptionParser(usage=usage)
+parser.add_option("--version",
+                  action="store_true", default=False,
+                  help=("Return bootstrap.py version."))
+parser.add_option("-t", "--accept-buildout-test-releases",
+                  dest='accept_buildout_test_releases',
+                  action="store_true", default=False,
+                  help=("Normally, if you do not specify a --version, the "
+                        "bootstrap script and buildout gets the newest "
+                        "*final* versions of zc.buildout and its recipes and "
+                        "extensions for you.  If you use this flag, "
+                        "bootstrap and buildout will get the newest releases "
+                        "even if they are alphas or betas."))
+parser.add_option("-c", "--config-file",
+                  help=("Specify the path to the buildout configuration "
+                        "file to be used."))
+parser.add_option("-f", "--find-links",
+                  help=("Specify a URL to search for buildout releases"))
+parser.add_option("--allow-site-packages",
+                  action="store_true", default=False,
+                  help=("Let bootstrap.py use existing site packages"))
+parser.add_option("--buildout-version",
+                  help="Use a specific zc.buildout version")
+parser.add_option("--setuptools-version",
+                  help="Use a specific setuptools version")
+parser.add_option("--setuptools-to-dir",
+                  help=("Allow for re-use of existing directory of "
+                        "setuptools versions"))
+
+options, args = parser.parse_args()
+if options.version:
+    print("bootstrap.py version %s" % __version__)
+    sys.exit(0)
+
+
+######################################################################
+# load/install setuptools
+
+try:
+    from urllib.request import urlopen
+except ImportError:
+    from urllib2 import urlopen
+
+ez = {}
+if os.path.exists('ez_setup.py'):
+    exec(open('ez_setup.py').read(), ez)
+else:
+    exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
+
+if not options.allow_site_packages:
+    # ez_setup imports site, which adds site packages
+    # this will remove them from the path to ensure that incompatible versions
+    # of setuptools are not in the path
+    import site
+    # inside a virtualenv, there is no 'getsitepackages'.
+    # We can't remove these reliably
+    if hasattr(site, 'getsitepackages'):
+        for sitepackage_path in site.getsitepackages():
+            # Strip all site-packages directories from sys.path that
+            # are not sys.prefix; this is because on Windows
+            # sys.prefix is a site-package directory.
+            if sitepackage_path != sys.prefix:
+                sys.path[:] = [x for x in sys.path
+                               if sitepackage_path not in x]
+
+setup_args = dict(to_dir=tmpeggs, download_delay=0)
+
+if options.setuptools_version is not None:
+    setup_args['version'] = options.setuptools_version
+if options.setuptools_to_dir is not None:
+    setup_args['to_dir'] = options.setuptools_to_dir
+
+ez['use_setuptools'](**setup_args)
+import setuptools
+import pkg_resources
+
+# This does not (always?) update the default working set.  We will
+# do it.
+for path in sys.path:
+    if path not in pkg_resources.working_set.entries:
+        pkg_resources.working_set.add_entry(path)
+
+######################################################################
+# Install buildout
+
+ws = pkg_resources.working_set
+
+setuptools_path = ws.find(
+    pkg_resources.Requirement.parse('setuptools')).location
+
+# Fix sys.path here as easy_install.pth added before PYTHONPATH
+cmd = [sys.executable, '-c',
+       'import sys; sys.path[0:0] = [%r]; ' % setuptools_path +
+       'from setuptools.command.easy_install import main; main()',
+       '-mZqNxd', tmpeggs]
+
+find_links = os.environ.get(
+    'bootstrap-testing-find-links',
+    options.find_links or
+    ('http://downloads.buildout.org/'
+     if options.accept_buildout_test_releases else None)
+    )
+if find_links:
+    cmd.extend(['-f', find_links])
+
+requirement = 'zc.buildout'
+version = options.buildout_version
+if version is None and not options.accept_buildout_test_releases:
+    # Figure out the most recent final version of zc.buildout.
+    import setuptools.package_index
+    _final_parts = '*final-', '*final'
+
+    def _final_version(parsed_version):
+        try:
+            return not parsed_version.is_prerelease
+        except AttributeError:
+            # Older setuptools
+            for part in parsed_version:
+                if (part[:1] == '*') and (part not in _final_parts):
+                    return False
+            return True
+
+    index = setuptools.package_index.PackageIndex(
+        search_path=[setuptools_path])
+    if find_links:
+        index.add_find_links((find_links,))
+    req = pkg_resources.Requirement.parse(requirement)
+    if index.obtain(req) is not None:
+        best = []
+        bestv = None
+        for dist in index[req.project_name]:
+            distv = dist.parsed_version
+            if _final_version(distv):
+                if bestv is None or distv > bestv:
+                    best = [dist]
+                    bestv = distv
+                elif distv == bestv:
+                    best.append(dist)
+        if best:
+            best.sort()
+            version = best[-1].version
+if version:
+    requirement = '=='.join((requirement, version))
+cmd.append(requirement)
+
+import subprocess
+if subprocess.call(cmd) != 0:
+    raise Exception(
+        "Failed to execute command:\n%s" % repr(cmd)[1:-1])
+
+######################################################################
+# Import and run buildout
+
+ws.add_entry(tmpeggs)
+ws.require(requirement)
+import zc.buildout.buildout
+
+if not [a for a in args if '=' not in a]:
+    args.append('bootstrap')
+
+# if -c was provided, we push it back into args for buildout' main function
+if options.config_file is not None:
+    args[0:0] = ['-c', options.config_file]
+
+zc.buildout.buildout.main(args)
+shutil.rmtree(tmpeggs)
diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index a629566..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,189 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Foundation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-import os
-import shutil
-import sys
-import tempfile
-
-from optparse import OptionParser
-
-tmpeggs = tempfile.mkdtemp()
-
-usage = '''\
-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
-
-Bootstraps a buildout-based project.
-
-Simply run this script in a directory containing a buildout.cfg, using the
-Python that you want bin/buildout to use.
-
-Note that by using --find-links to point to local resources, you can keep
-this script from going over the network.
-'''
-
-parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
-parser.add_option("-t", "--accept-buildout-test-releases",
-                  dest='accept_buildout_test_releases',
-                  action="store_true", default=False,
-                  help=("Normally, if you do not specify a --version, the "
-                        "bootstrap script and buildout gets the newest "
-                        "*final* versions of zc.buildout and its recipes and "
-                        "extensions for you.  If you use this flag, "
-                        "bootstrap and buildout will get the newest releases "
-                        "even if they are alphas or betas."))
-parser.add_option("-c", "--config-file",
-                  help=("Specify the path to the buildout configuration "
-                        "file to be used."))
-parser.add_option("-f", "--find-links",
-                  help=("Specify a URL to search for buildout releases"))
-parser.add_option("--allow-site-packages",
-                  action="store_true", default=False,
-                  help=("Let bootstrap.py use existing site packages"))
-parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
-
-
-options, args = parser.parse_args()
-
-######################################################################
-# load/install setuptools
-
-try:
-    if options.allow_site_packages:
-        import setuptools
-        import pkg_resources
-    from urllib.request import urlopen
-except ImportError:
-    from urllib2 import urlopen
-
-ez = {}
-exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
-
-if not options.allow_site_packages:
-    # ez_setup imports site, which adds site packages
-    # this will remove them from the path to ensure that incompatible versions
-    # of setuptools are not in the path
-    import site
-    # inside a virtualenv, there is no 'getsitepackages'.
-    # We can't remove these reliably
-    if hasattr(site, 'getsitepackages'):
-        for sitepackage_path in site.getsitepackages():
-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
-
-setup_args = dict(to_dir=tmpeggs, download_delay=0)
-
-if options.setuptools_version is not None:
-    setup_args['version'] = options.setuptools_version
-
-ez['use_setuptools'](**setup_args)
-import setuptools
-import pkg_resources
-
-# This does not (always?) update the default working set.  We will
-# do it.
-for path in sys.path:
-    if path not in pkg_resources.working_set.entries:
-        pkg_resources.working_set.add_entry(path)
-
-######################################################################
-# Install buildout
-
-ws = pkg_resources.working_set
-
-cmd = [sys.executable, '-c',
-       'from setuptools.command.easy_install import main; main()',
-       '-mZqNxd', tmpeggs]
-
-find_links = os.environ.get(
-    'bootstrap-testing-find-links',
-    options.find_links or
-    ('http://downloads.buildout.org/'
-     if options.accept_buildout_test_releases else None)
-    )
-if find_links:
-    cmd.extend(['-f', find_links])
-
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
-requirement = 'zc.buildout'
-version = options.version
-if version is None and not options.accept_buildout_test_releases:
-    # Figure out the most recent final version of zc.buildout.
-    import setuptools.package_index
-    _final_parts = '*final-', '*final'
-
-    def _final_version(parsed_version):
-        try:
-            return not parsed_version.is_prerelease
-        except AttributeError:
-            # Older setuptools
-            for part in parsed_version:
-                if (part[:1] == '*') and (part not in _final_parts):
-                    return False
-            return True
-
-    index = setuptools.package_index.PackageIndex(
-        search_path=[setuptools_path])
-    if find_links:
-        index.add_find_links((find_links,))
-    req = pkg_resources.Requirement.parse(requirement)
-    if index.obtain(req) is not None:
-        best = []
-        bestv = None
-        for dist in index[req.project_name]:
-            distv = dist.parsed_version
-            if _final_version(distv):
-                if bestv is None or distv > bestv:
-                    best = [dist]
-                    bestv = distv
-                elif distv == bestv:
-                    best.append(dist)
-        if best:
-            best.sort()
-            version = best[-1].version
-if version:
-    requirement = '=='.join((requirement, version))
-cmd.append(requirement)
-
-import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
-    raise Exception(
-        "Failed to execute command:\n%s" % repr(cmd)[1:-1])
-
-######################################################################
-# Import and run buildout
-
-ws.add_entry(tmpeggs)
-ws.require(requirement)
-import zc.buildout.buildout
-
-if not [a for a in args if '=' not in a]:
-    args.append('bootstrap')
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args[0:0] = ['-c', options.config_file]
-
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/buildout.cfg b/buildout.cfg
index 3def417..1fcde43 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,2 +1,83 @@
 [buildout]
-extends = buildout.d/development.cfg
+extends = http://dist.plone.org/release/5.0-latest/versions.cfg
+extensions = mr.developer
+parts =
+    instance
+    test
+    code-analysis
+    releaser
+    i18ndude
+    omelette
+    createcoverage
+
+develop = .
+
+
+[instance]
+recipe = plone.recipe.zope2instance
+user = admin:admin
+http-address = 8080
+eggs =
+    Plone
+    Pillow
+    plone.app.contenttypes [test]
+
+
+[code-analysis]
+recipe = plone.recipe.codeanalysis
+directory = ${buildout:directory}/src/plone
+flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
+flake8-max-complexity = 15
+flake8-extensions =
+    flake8-blind-except
+    flake8-debugger
+    flake8-coding
+
+
+[omelette]
+recipe = collective.recipe.omelette
+eggs = ${instance:eggs}
+
+
+[test]
+recipe = zc.recipe.testrunner
+eggs = ${instance:eggs}
+defaults = ['-s', 'plone.app.contenttypes', '--auto-color', '--auto-progress']
+
+
+[robot]
+recipe = zc.recipe.egg
+eggs =
+    ${test:eggs}
+    plone.app.robotframework[debug,ride,reload]
+
+
+[releaser]
+recipe = zc.recipe.egg
+eggs = zest.releaser
+
+
+[i18ndude]
+recipe = zc.recipe.egg
+eggs = i18ndude
+
+
+[createcoverage]
+recipe = zc.recipe.egg
+eggs = createcoverage
+
+
+[versions]
+# this tells buildout to _not_ use a relased version of this package
+plone.app.contenttypes =
+
+setuptools = 18.1
+zc.buildout = 2.4.1
+zc.recipe.egg = 2.0.2
+flake8 = 2.3.0
+i18ndude = 3.4.0
+robotframework = 2.8.4
+robotframework-ride = 1.3
+robotframework-selenium2library = 1.6.0
+robotsuite = 1.6.1
+selenium = 2.46.0
diff --git a/buildout.d/base.cfg b/buildout.d/base.cfg
deleted file mode 100644
index 2c60554..0000000
--- a/buildout.d/base.cfg
+++ /dev/null
@@ -1,22 +0,0 @@
-[buildout]
-package-name = plone.app.contenttypes
-package-extras = [test]
-
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/plone-5.0.x.cfg
-    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
-    checkouts.cfg
-    sources.cfg
-    versions.cfg
-
-parts += createcoverage
-
-develop = .
-
-eggs +=
-    Pillow
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-directory = ${buildout:directory}/plone
-flake8-ignore = E123,E124,E501,E126,E127,E128
diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
deleted file mode 100644
index 5b289e6..0000000
--- a/buildout.d/checkouts.cfg
+++ /dev/null
@@ -1,5 +0,0 @@
-[buildout]
-always-checkout = force
-auto-checkout +=
-    plone.app.dexterity
-    plone.app.robotframework
diff --git a/buildout.d/development.cfg b/buildout.d/development.cfg
deleted file mode 100644
index 6ff9460..0000000
--- a/buildout.d/development.cfg
+++ /dev/null
@@ -1,38 +0,0 @@
-[buildout]
-extends =
-    base.cfg
-
-eggs +=
-    plone.reload
-#    Products.PDBDebugMode
-#    Products.DocFinderTab
-#    aws.zope2zcmldoc
-#    collective.profiler
-
-extensions +=
-    mr.developer
-
-parts +=
-    omelette
-    test
-    robot
-
-show-picked-versions = true
-
-[omelette]
-recipe = collective.recipe.omelette
-eggs = ${test:eggs}
-
-[test]
-recipe = zc.recipe.testrunner
-eggs =
-    ${buildout:eggs}
-    ${buildout:package-name} ${buildout:package-extras}
-defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']
-
-[robot]
-recipe = zc.recipe.egg
-eggs =
-    Pillow
-    ${test:eggs}
-    plone.app.robotframework[ride,reload]
diff --git a/buildout.d/jenkins.cfg b/buildout.d/jenkins.cfg
deleted file mode 100644
index 34fa93f..0000000
--- a/buildout.d/jenkins.cfg
+++ /dev/null
@@ -1,24 +0,0 @@
-[buildout]
-extends =
-    base.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-
-jenkins-test-eggs = ${buildout:package-name} ${buildout:package-extras}
-jenkins-test-directories = src/plone/app/contenttypes
-
-parts += pylint
-
-[pylint]
-recipe = zc.recipe.egg
-eggs = pylint
-       ${buildout:eggs}
-scripts = pylint
-entry-points = pylint=pylint.lint:Run
-arguments = [
-    '--output-format=parseable',
-    '--zope=y',
-    '--reports=y',
-    '--disable=E0611,F0401,W0232,E1101,C0103,C0111,R0201,W0201,R0911,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622,C0301,W0212,R0903',
-    '--generated-members=objects',
-    ] + (sys.argv[1:] or ["${buildout:jenkins-test-directories}"])
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
deleted file mode 100644
index 585af8e..0000000
--- a/buildout.d/sources.cfg
+++ /dev/null
@@ -1,9 +0,0 @@
-[remotes]
-collective = git://github.com/collective
-collective_push = git@github.com:collective
-plone = git://github.com/plone
-plone_push = git@github.com:plone
-
-[sources]
-plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
-plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/buildout.d/versions.cfg b/buildout.d/versions.cfg
deleted file mode 100644
index 88aafe4..0000000
--- a/buildout.d/versions.cfg
+++ /dev/null
@@ -1,10 +0,0 @@
-[versions]
-setuptools = 6.1
-zc.buildout = 2.2.5
-zc.recipe.egg = 2.0.1
-
-robotframework = 2.8.4
-robotframework-ride = 1.3
-robotframework-selenium2library = 1.6.0
-robotsuite = 1.6.1
-selenium = 2.44.0
diff --git a/headers.sh b/headers.sh
deleted file mode 100644
index b7b2c05..0000000
--- a/headers.sh
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/bash
-
-for f in `find $1 -not -name __init__.py -name "*.py" -exec grep -H -E -o -c "coding: utf-8" {} \; | grep 0 | cut -d":" -f1`;
-do
-    echo '# -*- coding: utf-8 -*-' > ${f}.tmp.bla
-    cat ${f} >> ${f}.tmp.bla
-    mv ${f}.tmp.bla ${f}
-done
-
diff --git a/jenkins.cfg b/jenkins.cfg
deleted file mode 100644
index 870651f..0000000
--- a/jenkins.cfg
+++ /dev/null
@@ -1,18 +0,0 @@
-[buildout]
-extends =
-    buildout.d/base.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-parts += code-analysis
-
-jenkins-test-eggs =
-    plone.app.contenttypes [test]
-jenkins-test-directories =
-    plone/app/contenttypes
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-directory = ${buildout:directory}/plone/app/contenttypes
-flake8 = True
-jshint = True
-csslint = True
diff --git a/travis.cfg b/travis.cfg
index 1c8726a..b50e9e4 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,11 +1,12 @@
 [buildout]
 extends =
-    https://raw.github.com/collective/buildout.plonetest/master/travis-5.x.cfg
-    buildout.d/base.cfg
+    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.0.x.cfg
+    buildout.cfg
+parts = test createcoverage code-analysis
 
-parts =
-    download
-    install
-    test
-    createcoverage
-    code-analysis
+[code-analysis]
+return-status-codes = True
+
+[createcoverage]
+recipe = zc.recipe.egg
+eggs = createcoverage


