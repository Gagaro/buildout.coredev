Repository: plone.app.theming


Branch: refs/heads/master
Date: 2015-07-02T11:08:38+03:00
Author: Volodymyr Maksymiv (vmaksymiv) <vmaksymiv@quintagroup.com>
Commit: https://github.com/plone/plone.app.theming/commit/81ed8eb061d31d45e2a97204e13c394ac722c414

added secondary theme for test reasons

Files changed:
A src/plone/app/theming/tests/secondary-theme/manifest.cfg
A src/plone/app/theming/tests/secondary-theme/rules.xml
M src/plone/app/theming/tests/configure.zcml

diff --git a/src/plone/app/theming/tests/configure.zcml b/src/plone/app/theming/tests/configure.zcml
index 31ec029..43f4743 100644
--- a/src/plone/app/theming/tests/configure.zcml
+++ b/src/plone/app/theming/tests/configure.zcml
@@ -6,6 +6,7 @@
     <include package="plone.app.theming"/>
 
     <plone:static directory="resources" type="theme" />
+    <plone:static directory="secondary-theme" name="secondary-theme" type="theme" />
 
     <browser:page
         for="*"
diff --git a/src/plone/app/theming/tests/secondary-theme/manifest.cfg b/src/plone/app/theming/tests/secondary-theme/manifest.cfg
new file mode 100644
index 0000000..67fcec3
--- /dev/null
+++ b/src/plone/app/theming/tests/secondary-theme/manifest.cfg
@@ -0,0 +1,6 @@
+[theme]
+title = Secondary test theme
+description = Secondary theme for testing
+doctype = <!DOCTYPE html>
+prefix = /++theme++secondary-test-theme
+rules = /++theme++secondary-test-theme/rules.xml
diff --git a/src/plone/app/theming/tests/secondary-theme/rules.xml b/src/plone/app/theming/tests/secondary-theme/rules.xml
new file mode 100644
index 0000000..78ae654
--- /dev/null
+++ b/src/plone/app/theming/tests/secondary-theme/rules.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<rules
+    xmlns="http://namespaces.plone.org/diazo"
+    xmlns:css="http://namespaces.plone.org/diazo/css"
+    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+
+</rules>


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2015-07-02T11:08:46+03:00
Author: Volodymyr Maksymiv (vmaksymiv) <vmaksymiv@quintagroup.com>
Commit: https://github.com/plone/plone.app.theming/commit/e8a868a21e892b261462379e645ad13bdfbd77fb

added createThemeFromTemplate test

Files changed:
M src/plone/app/theming/tests/test_utils.py

diff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py
index a75beab..1f846ec 100644
--- a/src/plone/app/theming/tests/test_utils.py
+++ b/src/plone/app/theming/tests/test_utils.py
@@ -167,6 +167,52 @@ def test_isThemeEnabled_blacklist(self):
         settings.hostnameBlacklist.append('nohost')
         self.assertFalse(isThemeEnabled(request, settings))
 
+    def test_createThemeFromTemplate(self):
+        from plone.app.theming.utils import createThemeFromTemplate
+        from plone.app.theming.utils import getAvailableThemes
+        from plone.app.theming.utils import getTheme
+        from plone.app.theming.interfaces import THEME_RESOURCE_NAME
+        from plone.app.theming.interfaces import RULE_FILENAME
+        title = "copy of test theme"
+        description = "test theme creation"
+        themeName = createThemeFromTemplate(title, description,
+                                            baseOn="plone.app.theming.tests")
+        titles = [theme.title for theme in getAvailableThemes()]
+        self.assertTrue(title in titles)
+
+        theme = getTheme(themeName)
+        expected_prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME,
+                                          title.replace(" ", "-"))
+        self.assertEqual(theme.absolutePrefix, expected_prefix)
+
+        expected_rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME,
+                                            title.replace(" ", "-"),
+                                            RULE_FILENAME)
+        self.assertEqual(theme.rules, expected_rules)
+
+    def test_createThemeFromTemplate_custom_prefix(self):
+        from plone.app.theming.utils import createThemeFromTemplate
+        from plone.app.theming.utils import getAvailableThemes
+        from plone.app.theming.utils import getTheme
+        from plone.app.theming.interfaces import THEME_RESOURCE_NAME
+        from plone.app.theming.interfaces import RULE_FILENAME
+        title = "copy of test theme with custom prefix"
+        description = "test theme creation"
+        themeName = createThemeFromTemplate(title, description,
+                                            baseOn="secondary-theme")
+        titles = [theme.title for theme in getAvailableThemes()]
+        self.assertTrue(title in titles)
+
+        theme = getTheme(themeName)
+        expected_prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME,
+                                          title.replace(" ", "-"))
+        self.assertEqual(theme.absolutePrefix, expected_prefix)
+
+        expected_rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME,
+                                            title.replace(" ", "-"),
+                                            RULE_FILENAME)
+        self.assertEqual(theme.rules, expected_rules)
+
 
 class TestUnit(unittest.TestCase):
 


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2015-07-02T12:09:26+03:00
Author: Volodymyr Maksymiv (vmaksymiv) <vmaksymiv@quintagroup.com>
Commit: https://github.com/plone/plone.app.theming/commit/e986f22698e4da57060b3e1c9553900e66a728cb

fixed configuration of copied themes

Files changed:
M src/plone/app/theming/utils.py

diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index afd35b8..9fe505d 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -548,6 +548,17 @@ def createThemeFromTemplate(title, description, baseOn='template'):
     manifest.set('theme', 'title', title)
     manifest.set('theme', 'description', description)
 
+    if manifest.has_option('theme', 'prefix'):
+        prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME, themeName)
+        manifest.set('theme', 'prefix', prefix)
+
+    if manifest.has_option('theme', 'rules'):
+        rule = manifest.get('theme', 'rules')
+        rule_file_name = rule.split('/')[-1]  # extract real rules file name
+        rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME, themeName,
+                                   rule_file_name)
+        manifest.set('theme', 'rules', rules)
+
     manifestContents = StringIO()
     manifest.write(manifestContents)
     target.writeFile(MANIFEST_FILENAME, manifestContents)


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2015-07-02T15:21:04+03:00
Author: Volodymyr Maksymiv (vmaksymiv) <vmaksymiv@quintagroup.com>
Commit: https://github.com/plone/plone.app.theming/commit/69f434439986b49a8dc15b75de606ec9688adc43

updated changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index c9f1385..7ae350b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.2.7 (unreleased)
 ------------------
 
+- fixed configuration of copied theme
+  [vmaksymiv]
+
 - implemented upload for theme manager
   [schwartz]
 


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2015-07-03T10:41:40-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/037420e5a1a9d02a3ee698720d997da74999f87c

Merge pull request #62 from vmaksymiv/master

Fix for copied theme configuration

Files changed:
A src/plone/app/theming/tests/secondary-theme/manifest.cfg
A src/plone/app/theming/tests/secondary-theme/rules.xml
M CHANGES.rst
M src/plone/app/theming/tests/configure.zcml
M src/plone/app/theming/tests/test_utils.py
M src/plone/app/theming/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c9f1385..7ae350b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.2.7 (unreleased)
 ------------------
 
+- fixed configuration of copied theme
+  [vmaksymiv]
+
 - implemented upload for theme manager
   [schwartz]
 
diff --git a/src/plone/app/theming/tests/configure.zcml b/src/plone/app/theming/tests/configure.zcml
index 31ec029..43f4743 100644
--- a/src/plone/app/theming/tests/configure.zcml
+++ b/src/plone/app/theming/tests/configure.zcml
@@ -6,6 +6,7 @@
     <include package="plone.app.theming"/>
 
     <plone:static directory="resources" type="theme" />
+    <plone:static directory="secondary-theme" name="secondary-theme" type="theme" />
 
     <browser:page
         for="*"
diff --git a/src/plone/app/theming/tests/secondary-theme/manifest.cfg b/src/plone/app/theming/tests/secondary-theme/manifest.cfg
new file mode 100644
index 0000000..67fcec3
--- /dev/null
+++ b/src/plone/app/theming/tests/secondary-theme/manifest.cfg
@@ -0,0 +1,6 @@
+[theme]
+title = Secondary test theme
+description = Secondary theme for testing
+doctype = <!DOCTYPE html>
+prefix = /++theme++secondary-test-theme
+rules = /++theme++secondary-test-theme/rules.xml
diff --git a/src/plone/app/theming/tests/secondary-theme/rules.xml b/src/plone/app/theming/tests/secondary-theme/rules.xml
new file mode 100644
index 0000000..78ae654
--- /dev/null
+++ b/src/plone/app/theming/tests/secondary-theme/rules.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<rules
+    xmlns="http://namespaces.plone.org/diazo"
+    xmlns:css="http://namespaces.plone.org/diazo/css"
+    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+
+</rules>
diff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py
index a75beab..1f846ec 100644
--- a/src/plone/app/theming/tests/test_utils.py
+++ b/src/plone/app/theming/tests/test_utils.py
@@ -167,6 +167,52 @@ def test_isThemeEnabled_blacklist(self):
         settings.hostnameBlacklist.append('nohost')
         self.assertFalse(isThemeEnabled(request, settings))
 
+    def test_createThemeFromTemplate(self):
+        from plone.app.theming.utils import createThemeFromTemplate
+        from plone.app.theming.utils import getAvailableThemes
+        from plone.app.theming.utils import getTheme
+        from plone.app.theming.interfaces import THEME_RESOURCE_NAME
+        from plone.app.theming.interfaces import RULE_FILENAME
+        title = "copy of test theme"
+        description = "test theme creation"
+        themeName = createThemeFromTemplate(title, description,
+                                            baseOn="plone.app.theming.tests")
+        titles = [theme.title for theme in getAvailableThemes()]
+        self.assertTrue(title in titles)
+
+        theme = getTheme(themeName)
+        expected_prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME,
+                                          title.replace(" ", "-"))
+        self.assertEqual(theme.absolutePrefix, expected_prefix)
+
+        expected_rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME,
+                                            title.replace(" ", "-"),
+                                            RULE_FILENAME)
+        self.assertEqual(theme.rules, expected_rules)
+
+    def test_createThemeFromTemplate_custom_prefix(self):
+        from plone.app.theming.utils import createThemeFromTemplate
+        from plone.app.theming.utils import getAvailableThemes
+        from plone.app.theming.utils import getTheme
+        from plone.app.theming.interfaces import THEME_RESOURCE_NAME
+        from plone.app.theming.interfaces import RULE_FILENAME
+        title = "copy of test theme with custom prefix"
+        description = "test theme creation"
+        themeName = createThemeFromTemplate(title, description,
+                                            baseOn="secondary-theme")
+        titles = [theme.title for theme in getAvailableThemes()]
+        self.assertTrue(title in titles)
+
+        theme = getTheme(themeName)
+        expected_prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME,
+                                          title.replace(" ", "-"))
+        self.assertEqual(theme.absolutePrefix, expected_prefix)
+
+        expected_rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME,
+                                            title.replace(" ", "-"),
+                                            RULE_FILENAME)
+        self.assertEqual(theme.rules, expected_rules)
+
 
 class TestUnit(unittest.TestCase):
 
diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index afd35b8..9fe505d 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -548,6 +548,17 @@ def createThemeFromTemplate(title, description, baseOn='template'):
     manifest.set('theme', 'title', title)
     manifest.set('theme', 'description', description)
 
+    if manifest.has_option('theme', 'prefix'):
+        prefix = u"/++%s++%s" % (THEME_RESOURCE_NAME, themeName)
+        manifest.set('theme', 'prefix', prefix)
+
+    if manifest.has_option('theme', 'rules'):
+        rule = manifest.get('theme', 'rules')
+        rule_file_name = rule.split('/')[-1]  # extract real rules file name
+        rules = u"/++%s++%s/%s" % (THEME_RESOURCE_NAME, themeName,
+                                   rule_file_name)
+        manifest.set('theme', 'rules', rules)
+
     manifestContents = StringIO()
     manifest.write(manifestContents)
     target.writeFile(MANIFEST_FILENAME, manifestContents)


