Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2015-09-20T17:23:41+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.contentlisting/commit/efedeb0c951f0ff6c303e408c94388de6a4c7ee1

Move portal_properties settings to configuration registry

commit e7e7b63f7e946af515ea6103e19e0d5fd90cbc8a
Author: esteele &lt;eric@esteele.net&gt;
Date:   Fri Sep 18 10:29:06 2015 +0200

    Remove references to ids_not_to_list

commit e33b0220ba705ce12d6c4e1bb30fa7734e7eb8d9
Author: esteele &lt;eric@esteele.net&gt;
Date:   Fri Sep 18 09:49:31 2015 +0200

    Fix registry id

commit df2e460786a01368baa636f0422a6ec9928a6cb5
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 23:14:59 2015 +0200

    Fix registry id

commit 1aada91fb904dbd2d693c0471260283fe5e8c015
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 18:23:31 2015 +0200

    Update tests to use registry lookup for types_use_view_action_in_listings

Files changed:
M CHANGES.rst
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/tests/integration.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 8111123..1031bcb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 1.2.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- ids_not_to_list has been removed. Use the exclude from navigation 
+  setting instead.
+  [jensens]
 
 
 1.2.1 (2015-09-11)
diff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py
index fbcf410..83849a5 100644
--- a/plone/app/contentlisting/contentlisting.py
+++ b/plone/app/contentlisting/contentlisting.py
@@ -118,11 +118,8 @@ def appendViewAction(self):
         """Decide whether to produce a string /view to append to links in
         results listings.
         """
-        try:
-            ttool = getToolByName(self.getDataOrigin(), 'portal_properties')
-            types = ttool.site_properties.typesUseViewActionInListings
-        except AttributeError:
-            return ''
+        registry = getUtility(IRegistry)
+        types = registry.get('plone.types_use_view_action_in_listings', [])
         if self.portal_type in types:
             return "/view"
         return ''
@@ -145,12 +142,4 @@ def isVisibleInNav(self):
         if self.portal_type not in navigation_settings.displayed_types:
             return False
 
-        portal_properties = getToolByName(
-            self.getDataOrigin(),
-            'portal_properties'
-        )
-        navtree_properties = getattr(portal_properties, 'navtree_properties')
-
-        if self.id in list(navtree_properties.idsNotToList):
-            return False
         return True
diff --git a/plone/app/contentlisting/tests/integration.rst b/plone/app/contentlisting/tests/integration.rst
index d52e2bd..678b12a 100644
--- a/plone/app/contentlisting/tests/integration.rst
+++ b/plone/app/contentlisting/tests/integration.rst
@@ -114,8 +114,9 @@ Some types may require '/view' appended to their URLs. Currently these don't
 
 By altering portal_properties, we can make this true for Documents
 
-    >>> ttool = getToolByName(self.portal, 'portal_properties')
-    >>> ttool.site_properties.typesUseViewActionInListings = [frontpage.portal_type]
+    >>> registry = self.portal.portal_registry
+    >>> registry['plone.types_use_view_action_in_listings'] = [unicode(frontpage.portal_type)]
+
     >>> frontpage.appendViewAction()
     '/view'
     >>> news.appendViewAction()
@@ -125,7 +126,7 @@ By altering portal_properties, we can make this true for Documents
 
 And turn it off again
 
-    >>> ttool.site_properties.typesUseViewActionInListings = []
+    >>> registry['plone.types_use_view_action_in_listings'] = []
     >>> frontpage.appendViewAction()
     ''
     >>> news.appendViewAction()
@@ -232,22 +233,3 @@ We can also exclude anything of a particular type using the displayed type setti
     False
     >>> news.isVisibleInNav()
     False
-
-Finally, particular ids can be excluded from listings
-
-    >>> navigation_settings.displayed_types = (frontpage.portal_type, news.portal_type)
-    >>> navtree_properties = getattr(getToolByName(self.portal, 'portal_properties'), 'navtree_properties')
-    >>> navtree_properties.idsNotToList = [news.id]
-    >>> frontpage.isVisibleInNav()
-    True
-    >>> realfrontpage.isVisibleInNav()
-    True
-    >>> news.isVisibleInNav()
-    False
-    >>> navtree_properties.idsNotToList = []
-    >>> frontpage.isVisibleInNav()
-    True
-    >>> realfrontpage.isVisibleInNav()
-    True
-    >>> news.isVisibleInNav()
-    True


