Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-07-22T21:30:14+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/838b9d8fc58fecae9db29a99f3dc4ff59eeab111

Show all country specific locales grouped by language

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-addsite.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 2e269c8..b18d861 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,8 @@ Changelog
 
 5.0b3 (2015-07-20)
 ------------------
+- Rework language selection in @@plone-addsite.
+  [jaroel]
 
 - show toolbar buttons on sitemap, accessibility and search pages
   [vangheem]
diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py
index c107393..97ab459 100644
--- a/Products/CMFPlone/browser/admin.py
+++ b/Products/CMFPlone/browser/admin.py
@@ -11,6 +11,7 @@
 from Products.GenericSetup import profile_registry
 from Products.GenericSetup.upgrade import normalize_version
 from ZPublisher.BaseRequest import DefaultPublishTraverse
+from collections import OrderedDict
 from operator import itemgetter
 from plone.i18n.locales.interfaces import IContentLanguageAvailability
 from plone.keyring.interfaces import IKeyManager
@@ -172,9 +173,6 @@ def browser_language(self):
                 if parts[0] == parts[1]:
                     # Avoid creating a country code for simple languages codes
                     parts = [parts[0], None, None]
-                elif parts[0] == 'en':
-                    # Avoid en-us as a language
-                    parts = ['en', None, None]
                 try:
                     locale = locales.getLocale(*parts)
                     language = locale.getLocaleID().replace('_', '-').lower()
@@ -184,16 +182,37 @@ def browser_language(self):
                     pass
         return language
 
-    def languages(self, default='en'):
+    def grouped_languages(self, default='en'):
         util = queryUtility(IContentLanguageAvailability)
-        if '-' in default:
-            available = util.getLanguages(combined=True)
-        else:
-            available = util.getLanguages()
-        languages = [(code, v.get(u'native', v.get(u'name'))) for
-                     code, v in available.items()]
-        languages.sort(key=itemgetter(1))
-        return languages
+        available = util.getLanguages(combined=True)
+        languages = dict(util.getLanguageListing())
+
+        # Group country specific versions by language
+        grouped = OrderedDict()
+        for langcode, data in available.items():
+            splitted = langcode.split('-')
+            lang = splitted.pop(0)
+            try:
+                locale = splitted.pop(0)
+            except IndexError:
+                locale = None
+            language = languages.get(lang, lang)  # Label
+
+            struct = grouped.get(lang, {'label': language, 'languages': []})
+
+            langs = struct['languages']
+            langs.append({
+                'langcode': langcode,
+                'label': data.get(u'native', data.get(u'name')),
+            })
+
+            grouped[lang] = struct
+
+        # Sort list by language, next by country
+        data = sorted(grouped.values(), key=lambda k: k['label'])
+        for item in data:
+            item['languages'] = sorted(item['languages'], key=lambda k: k['langcode'])
+        return data
 
     def timezones(self):
         tz_vocab = getUtility(
diff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt
index a56cf81..543d20e 100644
--- a/Products/CMFPlone/browser/templates/plone-addsite.pt
+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt
@@ -102,14 +102,18 @@
 
         <select name="default_language"
                 tal:define="browser_language view/browser_language;
-                            languages python:view.languages(browser_language)">
-            <option value="en"
-                    tal:repeat="lang languages"
-                    tal:attributes="value python:lang[0];
-                                    selected python:lang[0]==browser_language"
-                    tal:content="python: lang[1]">
-                English
-            </option>
+                            grouped_languages python:view.grouped_languages(browser_language)">
+            <optgroup tal:repeat="group grouped_languages" tal:attributes="label group/label">
+
+              <option value="en"
+                      tal:repeat="lang group/languages"
+                      tal:attributes="value python:lang['langcode'];
+                                      selected python:lang['langcode'] == browser_language"
+                      tal:content="python: lang['label']">
+                  English
+              </option>
+
+            </optgroup>
         </select>
       </div>
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-07-23T10:28:28+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/65adce91a4faba92b0a6f972f27cae235a743448

Merge pull request #693 from plone/rework-addsite-language-selection

Rework addsite language selection

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-addsite.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 2e269c8..b18d861 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,8 @@ Changelog
 
 5.0b3 (2015-07-20)
 ------------------
+- Rework language selection in @@plone-addsite.
+  [jaroel]
 
 - show toolbar buttons on sitemap, accessibility and search pages
   [vangheem]
diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py
index c107393..97ab459 100644
--- a/Products/CMFPlone/browser/admin.py
+++ b/Products/CMFPlone/browser/admin.py
@@ -11,6 +11,7 @@
 from Products.GenericSetup import profile_registry
 from Products.GenericSetup.upgrade import normalize_version
 from ZPublisher.BaseRequest import DefaultPublishTraverse
+from collections import OrderedDict
 from operator import itemgetter
 from plone.i18n.locales.interfaces import IContentLanguageAvailability
 from plone.keyring.interfaces import IKeyManager
@@ -172,9 +173,6 @@ def browser_language(self):
                 if parts[0] == parts[1]:
                     # Avoid creating a country code for simple languages codes
                     parts = [parts[0], None, None]
-                elif parts[0] == 'en':
-                    # Avoid en-us as a language
-                    parts = ['en', None, None]
                 try:
                     locale = locales.getLocale(*parts)
                     language = locale.getLocaleID().replace('_', '-').lower()
@@ -184,16 +182,37 @@ def browser_language(self):
                     pass
         return language
 
-    def languages(self, default='en'):
+    def grouped_languages(self, default='en'):
         util = queryUtility(IContentLanguageAvailability)
-        if '-' in default:
-            available = util.getLanguages(combined=True)
-        else:
-            available = util.getLanguages()
-        languages = [(code, v.get(u'native', v.get(u'name'))) for
-                     code, v in available.items()]
-        languages.sort(key=itemgetter(1))
-        return languages
+        available = util.getLanguages(combined=True)
+        languages = dict(util.getLanguageListing())
+
+        # Group country specific versions by language
+        grouped = OrderedDict()
+        for langcode, data in available.items():
+            splitted = langcode.split('-')
+            lang = splitted.pop(0)
+            try:
+                locale = splitted.pop(0)
+            except IndexError:
+                locale = None
+            language = languages.get(lang, lang)  # Label
+
+            struct = grouped.get(lang, {'label': language, 'languages': []})
+
+            langs = struct['languages']
+            langs.append({
+                'langcode': langcode,
+                'label': data.get(u'native', data.get(u'name')),
+            })
+
+            grouped[lang] = struct
+
+        # Sort list by language, next by country
+        data = sorted(grouped.values(), key=lambda k: k['label'])
+        for item in data:
+            item['languages'] = sorted(item['languages'], key=lambda k: k['langcode'])
+        return data
 
     def timezones(self):
         tz_vocab = getUtility(
diff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt
index a56cf81..543d20e 100644
--- a/Products/CMFPlone/browser/templates/plone-addsite.pt
+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt
@@ -102,14 +102,18 @@
 
         <select name="default_language"
                 tal:define="browser_language view/browser_language;
-                            languages python:view.languages(browser_language)">
-            <option value="en"
-                    tal:repeat="lang languages"
-                    tal:attributes="value python:lang[0];
-                                    selected python:lang[0]==browser_language"
-                    tal:content="python: lang[1]">
-                English
-            </option>
+                            grouped_languages python:view.grouped_languages(browser_language)">
+            <optgroup tal:repeat="group grouped_languages" tal:attributes="label group/label">
+
+              <option value="en"
+                      tal:repeat="lang group/languages"
+                      tal:attributes="value python:lang['langcode'];
+                                      selected python:lang['langcode'] == browser_language"
+                      tal:content="python: lang['label']">
+                  English
+              </option>
+
+            </optgroup>
         </select>
       </div>
 


