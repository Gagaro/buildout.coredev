Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-11T11:57:35+02:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/06e8af7bab746bbb748a78116264a4e1d6765844

first translate, then sort

Files changed:
M CHANGES.rst
M plone/app/querystring/registryreader.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8029e85..29e62ac 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.7 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix vocabularies sorting
+  [ebrehault]
 
 
 1.3.6 (2015-08-24)
diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 8060a2f..2eb0def 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -1,5 +1,6 @@
 from .interfaces import IQuerystringRegistryReader
-from operator import attrgetter
+from collections import OrderedDict
+from Products.CMFPlone.utils import normalizeString, safe_unicode
 from zope.component import queryUtility
 from zope.globalrequest import getRequest
 from zope.i18n import translate
@@ -67,19 +68,24 @@ def getVocabularyValues(self, values):
         """Get all vocabulary values if a vocabulary is defined"""
 
         for field in values.get(self.prefix + '.field').values():
-            field['values'] = {}
+            field['values'] = OrderedDict()
             vocabulary = field.get('vocabulary', [])
             if vocabulary:
                 utility = queryUtility(IVocabularyFactory, vocabulary)
                 if utility is not None:
-                    for item in sorted(utility(self.context),
-                                       key=attrgetter('title')):
+                    translated = []
+                    for item in utility(self.context):
                         if isinstance(item.title, Message):
                             title = translate(item.title, context=self.request)
                         else:
                             title = item.title
-
-                        field['values'][item.value] = {'title': title}
+                        translated.append((title, item.value))
+                    translated = sorted(
+                        translated,
+                        key=lambda x: normalizeString(safe_unicode(x[0]))
+                    )
+                    for (title, value) in translated:
+                        field['values'][value] = {'title': title}
                 else:
                     logger.info("%s is missing, ignored." % vocabulary)
         return values


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-11T13:42:58+02:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/1efa6cbd1559a61bda82cf595a4ca6360aec9951

Merge pull request #51 from plone/ebr-fix-vocabularies-ordering

Fix vocabularies sorting

Files changed:
M CHANGES.rst
M plone/app/querystring/registryreader.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8029e85..29e62ac 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.7 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix vocabularies sorting
+  [ebrehault]
 
 
 1.3.6 (2015-08-24)
diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 8060a2f..2eb0def 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -1,5 +1,6 @@
 from .interfaces import IQuerystringRegistryReader
-from operator import attrgetter
+from collections import OrderedDict
+from Products.CMFPlone.utils import normalizeString, safe_unicode
 from zope.component import queryUtility
 from zope.globalrequest import getRequest
 from zope.i18n import translate
@@ -67,19 +68,24 @@ def getVocabularyValues(self, values):
         """Get all vocabulary values if a vocabulary is defined"""
 
         for field in values.get(self.prefix + '.field').values():
-            field['values'] = {}
+            field['values'] = OrderedDict()
             vocabulary = field.get('vocabulary', [])
             if vocabulary:
                 utility = queryUtility(IVocabularyFactory, vocabulary)
                 if utility is not None:
-                    for item in sorted(utility(self.context),
-                                       key=attrgetter('title')):
+                    translated = []
+                    for item in utility(self.context):
                         if isinstance(item.title, Message):
                             title = translate(item.title, context=self.request)
                         else:
                             title = item.title
-
-                        field['values'][item.value] = {'title': title}
+                        translated.append((title, item.value))
+                    translated = sorted(
+                        translated,
+                        key=lambda x: normalizeString(safe_unicode(x[0]))
+                    )
+                    for (title, value) in translated:
+                        field['values'][value] = {'title': title}
                 else:
                     logger.info("%s is missing, ignored." % vocabulary)
         return values


