Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:41:18+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e564b696a653b647ebbe1522a2a9d562dacaf19d

refactor and simplify folder_listing and dependend views to use @@folderListing and a browser view

Files changed:
A plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/templates/folder_listing.pt
M plone/app/contenttypes/browser/templates/folder_summary_view.pt
M plone/app/contenttypes/browser/templates/folder_tabular_view.pt

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index a3fc913..0384cec 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -128,6 +128,7 @@
     name="folder_listing"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
     template="templates/folder_listing.pt"
     permission="zope2.View"
     menu="plone_displayviews"
@@ -138,6 +139,7 @@
     name="folder_listing"
     for="Products.CMFPlone.interfaces.IPloneSiteRoot"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
     template="templates/folder_listing.pt"
     permission="zope2.View"
     menu="plone_displayviews"
@@ -166,6 +168,7 @@
     name="folder_summary_view"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
     template="templates/folder_summary_view.pt"
     permission="zope2.View"
     menu="plone_displayviews"
@@ -176,6 +179,7 @@
     name="folder_summary_view"
     for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
     template="templates/folder_summary_view.pt"
     permission="zope2.View"
     menu="plone_displayviews"
@@ -186,6 +190,18 @@
     name="folder_tabular_view"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
+    template="templates/folder_tabular_view.pt"
+    permission="zope2.View"
+    menu="plone_displayviews"
+    title="Tabular view"
+    />
+
+  <browser:page
+    name="folder_tabular_view"
+    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
+    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
     template="templates/folder_tabular_view.pt"
     permission="zope2.View"
     menu="plone_displayviews"
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
new file mode 100644
index 0000000..52a2c59
--- /dev/null
+++ b/plone/app/contenttypes/browser/folder.py
@@ -0,0 +1,71 @@
+# -*- coding: utf-8 -*-
+from Acquisition import aq_base
+from Products.Five import BrowserView
+from zope.component import getMultiAdapter
+from Products.CMFPlone.PloneBatch import Batch
+
+
+class FolderView(BrowserView):
+
+    def __init__(self, context, request):
+        super(FolderView, self).__init__(context, request)
+
+        self.plone_view = getMultiAdapter(
+            (context, request), name=u"plone")
+
+        self.portal_state = getMultiAdapter(
+            (context, request), name=u"plone_portal_state")
+        self.friendly_types = self.portal_state.friendly_types()
+        self.isAnon = self.portal_state.anonymous()
+        self.navigation_root_url = self.portal_state.navigation_root_url()
+
+        self.site_properties = context.restrictedTraverse(
+            'portal_properties').site_properties
+        self.use_view_action = getattr(
+            self.site_properties, 'typesUseViewActionInListings', ())
+        self.show_about = getattr(
+            self.site_properties, 'allowAnonymousViewAbout', not self.isAnon)
+
+        # TODO: REMOVE
+        self.more_url = getattr(request, 'more_url', 'folder_contents')
+
+        # TODO: eventually REMOVE
+        self.plone_layout = context.restrictedTraverse('@@plone_layout')
+
+        self.pas_member = context.restrictedTraverse('@@pas_member')
+
+        limit_display = getattr(request, 'limit_display', None)
+        limit_display = int(limit_display) if limit_display is not None else 20
+        b_size = getattr(request, 'b_size', None)
+        b_size = int(b_size) if b_size is not None else limit_display
+        b_start = getattr(request, 'b_start', None)
+        b_start = int(b_start) if b_start is not None else 0
+
+        contentFilter = getattr(request, 'contentFilter', None)
+        contentFilter = dict(contentFilter) if contentFilter else {}
+        contentFilter.setdefault('portal_type', self.friendly_types)
+        contentFilter.setdefault('batch', True)
+        contentFilter.setdefault('b_size', b_size)
+        contentFilter.setdefault('b_start', b_start)
+
+        self.folderContents = context.restrictedTraverse(
+            '@@folderListing')(**contentFilter)
+
+        self.batch = Batch(self.folderContents, b_size, b_start, orphan=1)
+
+        self.text_class = None
+
+    def normalizeString(self, text):
+        return self.plone_view.normalizeString(text)
+
+    def toLocalizedTime(self, time, long_format=None, time_only=None):
+        return self.plone_view.toLocalizedTime(time, long_format, time_only)
+
+    def text(self):
+        textfield = getattr(aq_base(self.context), 'text', None)
+        text = getattr(textfield, 'output', None)
+        if text:
+            self.text_class = 'stx' if textfield.contentType() in (
+                'text/structured', 'text/x-rst', 'text/restructured'
+            ) else 'plain'
+        return text
diff --git a/plone/app/contenttypes/browser/templates/folder_listing.pt b/plone/app/contenttypes/browser/templates/folder_listing.pt
index d63282c..7788b6b 100644
--- a/plone/app/contenttypes/browser/templates/folder_listing.pt
+++ b/plone/app/contenttypes/browser/templates/folder_listing.pt
@@ -9,60 +9,36 @@
 <body>
 
 <metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core"
-                    tal:define="templateId template/getId">
+<metal:block define-macro="content-core">
 
     <div metal:define-macro="text-field-view"
          id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
+         tal:define="text view/text"
          tal:condition="text"
-         tal:attributes="class python: context.Format() in ('text/structured',
-                                               'text/x-rst', ) and  'stx' or 'plain'">
+         tal:attributes="class view/text_class">
         <div metal:define-slot="inside" tal:replace="structure text">The body</div>
     </div>
 
     <metal:listingmacro define-macro="listing">
-    <tal:foldercontents define="contentFilter contentFilter|request/contentFilter|nothing;
-                        contentFilter python:contentFilter and dict(contentFilter) or {};
-                        limit_display limit_display|request/limit_display|nothing;
-                        limit_display python:limit_display and int(limit_display) or None;
-                        more_url more_url|request/more_url|string:folder_contents;
-                        is_a_topic python:context.portal_type=='Topic';
-                        friendly_types portal_state/friendly_types;
-                        dummy python:not is_a_topic and contentFilter.setdefault('portal_type', friendly_types);
-                        folderContents folderContents|nothing; folderContents python:folderContents or is_a_topic and context.queryCatalog(batch=True, **contentFilter) or context.getFolderContents(contentFilter, batch=True, b_size=limit_display or 100);
-                        site_properties context/portal_properties/site_properties;
-                        use_view_action site_properties/typesUseViewActionInListings|python:();
-                        Batch python:modules['Products.CMFPlone'].Batch;
-                        plone_layout context/@@plone_layout;
-                        b_start python:request.get('b_start', 0);
-                        batch python:isinstance(folderContents, Batch) and folderContents or Batch(folderContents, limit_display or 100, int(b_start), orphan=1);
-                        isAnon portal_state/anonymous;
-                        normalizeString nocall: context/plone_utils/normalizeString;
-                        toLocalizedTime nocall: plone_view/toLocalizedTime;
-                        show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
-                        navigation_root_url portal_state/navigation_root_url;
-                        pas_member context/@@pas_member;">
+    <tal:foldercontents define="batch view/batch">
     <tal:listing condition="batch">
 
         <ul metal:define-slot="entries">
             <li tal:repeat="item batch" metal:define-macro="entries">
-            <tal:block tal:define="item_url item/getURL|item/absolute_url;
-                                   item_id item/getId|item/id;
-                                   item_title_or_id item/pretty_title_or_id;
+            <tal:block tal:define="item_url item/getURL;
+                                   item_id item/getId;
+                                   item_title item/Title;
                                    item_description item/Description;
-                                   item_type item/portal_type;
-                                   item_type_title item/Type;
+                                   item_type item/PortalType;
                                    item_modified item/ModificationDate;
                                    item_created item/CreationDate;
-                                   item_icon python:plone_layout.getIcon(item);
-                                   item_type_class python:'contenttype-' + normalizeString(item_type);
-                                   item_wf_state item/review_state|python: context.portal_workflow.getInfoFor(item, 'review_state', '');
-                                   item_wf_state_class python:'state-' + normalizeString(item_wf_state);
+                                   item_icon item/getIcon;
+                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                   item_wf_state item/review_state;
+                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                                    item_creator item/Creator;
-                                   item_start item/start|item/StartDate|nothing;
-                                   item_end item/end|item/EndDate|nothing;
+                                   item_start item/start|nothing;
+                                   item_end item/end|nothing;
                                    item_sametime python: item_start == item_end;
                                    item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
                 <metal:block define-slot="entry">
@@ -71,11 +47,11 @@
                     tal:attributes="class item_type_event_class|nothing">
 
                     <span class="summary">
-                        <img tal:replace="structure item_icon/html_tag" />
+                        <img tal:replace="structure item_icon" />
                         <a href="#"
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;
+                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;
                                            class string:$item_type_class $item_wf_state_class url"
-                           tal:content="item_title_or_id">
+                           tal:content="item_title">
                             Item Title
                         </a>
                     </span>
@@ -121,11 +97,11 @@
                                    class="location"
                                    i18n:name="location">Oslo</span>,
                         </span>
-                        <tal:byline condition="show_about">
+                        <tal:byline condition="view/show_about">
                             &mdash;
 
                             <tal:name tal:condition="item_creator"
-                                tal:define="author python:pas_member.info(item_creator);
+                                tal:define="author python:view.pas_member.info(item_creator);
                                             creator_short_form author/username;
                                             creator_long_form string:?author=${author/username};
                                             creator_is_openid python:'/' in creator_short_form;
@@ -133,7 +109,7 @@
                               <span i18n:translate="label_by_author">
                                 by
                               <a href="#"
-                                 tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
+                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
                                  tal:content="author/name_or_id"
                                  tal:omit-tag="not:author"
                                  i18n:name="author">
@@ -178,7 +154,7 @@
     </tal:listing>
     <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: folderContents"
+           tal:condition="not: view/folderContents"
            i18n:translate="description_no_items_in_folder">
             There are currently no items in this folder.
         </p>
diff --git a/plone/app/contenttypes/browser/templates/folder_summary_view.pt b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
index c2d78c5..a0b4450 100644
--- a/plone/app/contenttypes/browser/templates/folder_summary_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
@@ -8,19 +8,47 @@
 
 <body>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="listing" extend-macro="context/folder_listing/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/folder_listing/macros/entries">
-                    <metal:entry fill-slot="entry">
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+    <div metal:define-macro="text-field-view"
+         id="parent-fieldname-text" class="stx"
+         tal:define="text view/text"
+         tal:condition="text"
+         tal:attributes="class view/text_class">
+        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+    </div>
+
+    <tal:foldercontents define="batch view/batch">
+    <tal:listing condition="batch">
+
+
+        <ul>
+            <li tal:repeat="item batch">
+            <tal:block tal:define="item_url item/getURL;
+                                   item_id item/getId;
+                                   item_title item/Title;
+                                   item_description item/Description;
+                                   item_type item/PortalType;
+                                   item_modified item/ModificationDate;
+                                   item_created item/CreationDate;
+                                   item_icon item/getIcon;
+                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                   item_wf_state item/review_state;
+                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                   item_creator item/Creator;
+                                   item_start item/start|nothing;
+                                   item_end item/end|nothing;
+                                   item_sametime python: item_start == item_end;
+                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
+
                 <div class="tileItem visualIEFloatFix"
                      tal:define="item_object item/getObject;">
 
                     <a href="#"
                        tal:define="real_object python:item_object.aq_explicit"
                        tal:condition="python:getattr(real_object, 'image', None)"
-                       tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url">
+                       tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url">
                         <img tal:define="images item_object/@@images;
                                          scale python: images.scale('image', scale='thumb')"
                              tal:condition="scale"
@@ -33,14 +61,14 @@
 
                         <a href="#"
                            class="summary url"
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;"
-                           tal:content="item_title_or_id">
+                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;"
+                           tal:content="item_title">
                             Item Title
                         </a>
 
                     </h2>
 
-                    <div class="documentByLine" tal:condition="python: site_properties.allowAnonymousViewAbout or not isAnon">
+                    <div class="documentByLine" tal:condition="python: view.site_properties.allowAnonymousViewAbout or not view.isAnon">
                     <tal:event condition="python: item_type == 'Event'">
                         <span tal:condition="python: item_type == 'Event' and item.location"
                               i18n:translate="label_event_byline_with_location">
@@ -49,11 +77,11 @@
                                    i18n:name="location">Oslo</span>, from
                              <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
                                    i18n:name="start">from date</abbr> to
                              <abbr class="dtend"
                                    tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
                                    i18n:name="end">to date</abbr>)
                         </span>
                         <span tal:condition="python: item_type == 'Event' and not item.location"
@@ -61,11 +89,11 @@
                             (from
                              <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
                                    i18n:name="start">from date</abbr> to
                              <abbr class="dtend"
                                    tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
                                    i18n:name="end">to date</abbr>)
                         </span>
                     </tal:event>
@@ -75,7 +103,7 @@
                           <span class="documentAuthor" i18n:translate="label_by_author">
                             by
                           <a href="#"
-                             tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
+                             tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
                              tal:content="author/name_or_id"
                              tal:omit-tag="not:author"
                              i18n:name="author">
@@ -103,7 +131,7 @@
 
                     <p class="tileFooter">
                         <a href=""
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;"
+                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;"
                            i18n:translate="read_more">
                         Read More&hellip;
                         </a>
@@ -112,11 +140,26 @@
                     <div class="visualClear"><!-- --></div>
 
                 </div>
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:block>
-    </metal:content-core>
+
+            </tal:block>
+            </li>
+        </ul>
+
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+    <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+           tal:condition="not: view/folderContents"
+           i18n:translate="description_no_items_in_folder">
+            There are currently no items in this folder.
+        </p>
+    </metal:empty>
+
+    </tal:foldercontents>
+
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
index c5e87a8..b0c69db 100644
--- a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
@@ -8,9 +8,20 @@
 
 <body>
 
-  <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="listing" extend-macro="context/folder_listing/macros/content-core">
-      <metal:entries fill-slot="entries">
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+    <div metal:define-macro="text-field-view"
+         id="parent-fieldname-text" class="stx"
+         tal:define="text view/text"
+         tal:condition="text"
+         tal:attributes="class view/text_class">
+        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+    </div>
+
+    <tal:foldercontents define="batch view/batch">
+    <tal:listing condition="batch">
+
 
           <div metal:use-macro="context/batch_macros/macros/navigation" />
           <div class="has-table">
@@ -22,47 +33,56 @@
                         <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_title"
                           >Title</tal:title>&nbsp;</th>
                         <th class="nosort"
-                            tal:condition="show_about">&nbsp;<tal:title i18n:translate="listingheader_author"
+                            tal:condition="view/show_about">&nbsp;<tal:title i18n:translate="listingheader_author"
                           >Author</tal:title>&nbsp;</th>
                         <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_type"
                           >Type</tal:title>&nbsp;</th>
                         <th class="nosort"
-                            tal:condition="show_about">&nbsp;<tal:modified i18n:translate="listingheader_modified"
+                            tal:condition="view/show_about">&nbsp;<tal:modified i18n:translate="listingheader_modified"
                           >Modified</tal:modified>&nbsp;</th>
                     </tr>
                 </thead>
 
                 <tbody>
-                    <metal:block use-macro="context/folder_listing/macros/entries">
-                        <metal:entry fill-slot="entry">
+
+            <tal:entries tal:repeat="item batch">
+            <tal:block tal:define="item_url item/getURL;
+                                   item_id item/getId;
+                                   item_title item/Title;
+                                   item_description item/Description;
+                                   item_type item/PortalType;
+                                   item_modified item/ModificationDate;
+                                   item_created item/CreationDate;
+                                   item_icon item/getIcon;
+                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                   item_wf_state item/review_state;
+                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                   item_creator item/Creator;
+                                   item_start item/start|nothing;
+                                   item_end item/end|nothing;
+                                   item_sametime python: item_start == item_end;
+                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
 
                     <tr metal:define-macro="listitem"
                         tal:define="oddrow repeat/item/odd;"
                         tal:attributes="class python: oddrow and 'even' or 'odd'">
 
                             <td>
-                                <img width="16" height="16"
-                                     src="" alt=""
-                                     tal:condition="item_icon/url"
-                                     tal:attributes="src item_icon/url;
-                                                     alt item_icon/description;
-                                                     title item_icon/title;
-                                                     width item_icon/width;
-                                                     height item_icon/height;" />
+                                <img tal:replace="structure item_icon" />
                                 <a href="#"
-                                   tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;
+                                   tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;
                                                    class string:$item_wf_state_class $item_type_class;
                                                    title item_description;"
-                                   tal:content="item_title_or_id">
+                                   tal:content="item_title">
                                     Item Title
                                 </a>
                             </td>
 
-                            <td tal:condition="show_about">
+                            <td tal:condition="view/show_about">
                                 <tal:name tal:condition="item_creator"
-                                  tal:define="author python:pas_member.info(item_creator)">
+                                  tal:define="author python:view.pas_member.info(item_creator)">
                                 <a href="#"
-                                   tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
+                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
                                    tal:content="author/name_or_id"
                                    tal:omit-tag="not:author">
                                   Bob Dobalina
@@ -70,27 +90,40 @@
                                 </tal:name>
                             </td>
 
-                            <td tal:content="item_type_title"
+                            <td tal:content="item_type"
                                 i18n:translate="">
                                 Page
                             </td>
 
-                        <td tal:condition="show_about"
-                            tal:content="python:toLocalizedTime(item_modified,long_format=1)">
+                        <td tal:condition="view/show_about"
+                            tal:content="python:view.toLocalizedTime(item_modified,long_format=1)">
                           August 16, 2001 at 23:35:59
                         </td>
 
                     </tr>
 
-                        </metal:entry>
-                    </metal:block>
+            </tal:block>
+            </tal:entries>
+
                 </tbody>
             </table>
           </div>
-      </metal:entries>
-    </metal:block>
 
-  </metal:content-core>
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+    <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+           tal:condition="not: view/folderContents"
+           i18n:translate="description_no_items_in_folder">
+            There are currently no items in this folder.
+        </p>
+    </metal:empty>
+
+    </tal:foldercontents>
+
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:41:18+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4925ced3d733b356d1b3c288a955844587e6e6a2

refactor to unify folder and collection listings

Files changed:
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/folder_listing.pt
M plone/app/contenttypes/browser/templates/folder_summary_view.pt
M plone/app/contenttypes/browser/templates/folder_tabular_view.pt

diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 871e570..58c0773 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -187,7 +187,8 @@ def selectedViewFields(self):
                            name='plone.app.contenttypes.metadatafields')
         for field in vocab(self.context):
             _mapping[field.value] = (field.value, field.title)
-        return [_mapping[field] for field in self.customViewFields]
+        ret = [_mapping[field] for field in self.customViewFields]
+        return ret
 
     # Getters and setters for our fields.
 
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index ddb2f6f..b8293b7 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,25 +1,39 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from Products.Five import BrowserView
 from plone.app.contenttypes.behaviors.collection import ICollection
+from plone.app.contenttypes.browser.folder import FolderView
+from plone.app.contenttypes import _
+from Products.CMFPlone.PloneBatch import Batch
 
 
-class CollectionView(BrowserView):
+class CollectionView(FolderView):
 
     def results(self, **kwargs):
         context = aq_inner(self.context)
         wrapped = ICollection(context)
-        return wrapped.results(**kwargs)
+        return wrapped.results(self.b_start, **kwargs)
+
+    def batch(self):
+        batch = Batch(self.results(), self.b_start)
+        return batch
 
     def getFoldersAndImages(self, **kwargs):
         context = aq_inner(self.context)
         wrapped = ICollection(context)
         return wrapped.getFoldersAndImages(**kwargs)
 
-    def selectedViewFields(self):
+    def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
         """
         context = aq_inner(self.context)
         wrapped = ICollection(context)
-        return wrapped.selectedViewFields()
+        fields = wrapped.selectedViewFields()
+        fields = [field[0] for field in fields]
+        return fields
+
+    def no_items_message(self):
+        return _(
+            'description_no_results_found',
+            default=u"No results were found."
+        )
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 0384cec..2f4bad0 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -19,7 +19,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.interfaces.ICollection"
     class=".collection.CollectionView"
-    template="templates/standard_view.pt"
+    template="templates/folder_listing.pt"
     />
 
   <browser:page
@@ -27,7 +27,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.interfaces.ICollection"
     class=".collection.CollectionView"
-    template="templates/standard_view.pt"
+    template="templates/folder_listing.pt"
     />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
@@ -41,7 +41,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/standard_view.pt"
+    template="templates/folder_listing.pt"
     />
 
   <browser:page
@@ -49,7 +49,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/summary_view.pt"
+    template="templates/folder_summary_view.pt"
     />
 
   <browser:page
@@ -65,7 +65,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/tabular_view.pt"
+    template="templates/folder_tabular_view.pt"
     />
 
   <browser:page
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 52a2c59..3d6a390 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
+from Products.CMFPlone.PloneBatch import Batch
+from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
+from plone.app.contenttypes import _
 from zope.component import getMultiAdapter
-from Products.CMFPlone.PloneBatch import Batch
 
 
 class FolderView(BrowserView):
@@ -30,31 +32,39 @@ def __init__(self, context, request):
         self.more_url = getattr(request, 'more_url', 'folder_contents')
 
         # TODO: eventually REMOVE
-        self.plone_layout = context.restrictedTraverse('@@plone_layout')
-
-        self.pas_member = context.restrictedTraverse('@@pas_member')
-
-        limit_display = getattr(request, 'limit_display', None)
-        limit_display = int(limit_display) if limit_display is not None else 20
-        b_size = getattr(request, 'b_size', None)
-        b_size = int(b_size) if b_size is not None else limit_display
-        b_start = getattr(request, 'b_start', None)
-        b_start = int(b_start) if b_start is not None else 0
+        self.plone_layout = getMultiAdapter(
+            (context, request), name=u"plone_layout")
 
-        contentFilter = getattr(request, 'contentFilter', None)
-        contentFilter = dict(contentFilter) if contentFilter else {}
-        contentFilter.setdefault('portal_type', self.friendly_types)
-        contentFilter.setdefault('batch', True)
-        contentFilter.setdefault('b_size', b_size)
-        contentFilter.setdefault('b_start', b_start)
-
-        self.folderContents = context.restrictedTraverse(
-            '@@folderListing')(**contentFilter)
-
-        self.batch = Batch(self.folderContents, b_size, b_start, orphan=1)
+        self.pas_member = getMultiAdapter(
+            (context, request), name=u"pas_member")
 
         self.text_class = None
 
+        limit_display = getattr(self.request, 'limit_display', None)
+        limit_display = int(limit_display) if limit_display is not None else 20
+        b_size = getattr(self.request, 'b_size', None)
+        self.b_size = int(b_size) if b_size is not None else limit_display
+        b_start = getattr(self.request, 'b_start', None)
+        self.b_start = int(b_start) if b_start is not None else 0
+
+    def _content_filter(self):
+        content_filter = getattr(self.request, 'contentFilter', None)
+        content_filter = dict(content_filter) if content_filter else {}
+        content_filter.setdefault('portal_type', self.friendly_types)
+        content_filter.setdefault('batch', True)
+        content_filter.setdefault('b_size', self.b_size)
+        content_filter.setdefault('b_start', self.b_start)
+        return content_filter
+
+    def results(self):
+        results = self.context.restrictedTraverse(
+            '@@folderListing')(**self._content_filter())
+        return results
+
+    def batch(self):
+        batch = Batch(self.results(), self.b_size, self.b_start, orphan=1)
+        return batch
+
     def normalizeString(self, text):
         return self.plone_view.normalizeString(text)
 
@@ -69,3 +79,43 @@ def text(self):
                 'text/structured', 'text/x-rst', 'text/restructured'
             ) else 'plain'
         return text
+
+    def tabular_fields(self):
+        ret = []
+        ret.append('Title')
+        if self.show_about:
+            ret.append('Creator')
+        ret.append('Type')
+        if self.show_about:
+            ret.append('ModificationDate')
+        return ret
+
+    def tabular_fielddata(self, item, fieldname):
+        value = getattr(item, fieldname, '')
+        if safe_callable(value):
+            value = value()
+        if fieldname in [
+                'CreationDate',
+                'ModificationDate',
+                'Date',
+                'EffectiveDate',
+                'ExpirationDate',
+                'effective',
+                'expires',
+                'start',
+                'end',
+                'created',
+                'modified',
+                'last_comment_date']:
+            value = self.toLocalizedTime(value, long_format=1)
+
+        return {
+            # 'title': _(fieldname, default=fieldname),
+            'value': value
+        }
+
+    def no_items_message(self):
+        return _(
+            'description_no_items_in_folder',
+            default=u"There are currently no items in this folder."
+        )
diff --git a/plone/app/contenttypes/browser/templates/folder_listing.pt b/plone/app/contenttypes/browser/templates/folder_listing.pt
index 7788b6b..6f3004b 100644
--- a/plone/app/contenttypes/browser/templates/folder_listing.pt
+++ b/plone/app/contenttypes/browser/templates/folder_listing.pt
@@ -20,11 +20,11 @@
     </div>
 
     <metal:listingmacro define-macro="listing">
-    <tal:foldercontents define="batch view/batch">
+    <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
-        <ul metal:define-slot="entries">
-            <li tal:repeat="item batch" metal:define-macro="entries">
+        <div metal:define-slot="entries">
+            <article tal:repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="item_url item/getURL;
                                    item_id item/getId;
                                    item_title item/Title;
@@ -42,9 +42,8 @@
                                    item_sametime python: item_start == item_end;
                                    item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
                 <metal:block define-slot="entry">
-                <span metal:define-macro="listitem"
-                    tal:define="item_type_event_class python: item_type == 'Event' and 'vevent' or None"
-                    tal:attributes="class item_type_event_class|nothing">
+                <header metal:define-macro="listitem"
+                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
 
                     <span class="summary">
                         <img tal:replace="structure item_icon" />
@@ -56,27 +55,28 @@
                         </a>
                     </span>
 
+                    <metal:block metal:define-macro="document_byline">
                     <span class="documentByLine">
                         <span tal:condition="python: item_type == 'Event' and item_sametime"
                               i18n:translate="label_event_byline_onlyfrom">
                              <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
                                    i18n:name="start">from date</abbr>
                         </span>
                         <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
                               i18n:translate="label_event_byline_samedate">
                              <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start)"
+                                   tal:content="python:view.toLocalizedTime(item_start)"
                                    i18n:name="start">from date</abbr> from
                              <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,time_only=1)"
+                                   tal:content="python:view.toLocalizedTime(item_start,time_only=1)"
                                    i18n:name="starttime">from time</abbr> to
                              <abbr class="dtend"
                                    tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,time_only=1)"
+                                   tal:content="python:view.toLocalizedTime(item_end,time_only=1)"
                                    i18n:name="end">to time</abbr>
                         </span>
                         <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
@@ -84,11 +84,11 @@
                               from
                                    <abbr class="dtstart"
                                    tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
                                    i18n:name="start">from date</abbr> to
                              <abbr class="dtend"
                                    tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
+                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
                                    i18n:name="end">to date</abbr>
                         </span>
                          <span tal:condition="python: item_type == 'Event' and item.location"
@@ -124,7 +124,7 @@
                                 <tal:mod i18n:translate="box_last_modified">
                                   last modified
                                 </tal:mod>
-                                <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
+                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
                                   August 16, 2001 at 23:35:59
                                 </span>
                             </tal:modified>
@@ -136,8 +136,9 @@
                             </metal:description>
                         </tal:byline>
                     </span>
+                    </metal:block>
 
-                </span>
+                </header>
 
                 <p class="description discreet"
                     tal:condition="item_description"
@@ -146,21 +147,22 @@
                 </p>
             </metal:block>
             </tal:block>
-            </li>
-        </ul>
+            </article>
+        </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
+
     <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/folderContents"
-           i18n:translate="description_no_items_in_folder">
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
             There are currently no items in this folder.
         </p>
     </metal:empty>
 
-    </tal:foldercontents>
+    </tal:results>
     </metal:listingmacro>
 
 </metal:block>
diff --git a/plone/app/contenttypes/browser/templates/folder_summary_view.pt b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
index a0b4450..e67294a 100644
--- a/plone/app/contenttypes/browser/templates/folder_summary_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
@@ -19,12 +19,11 @@
         <div metal:define-slot="inside" tal:replace="structure text">The body</div>
     </div>
 
-    <tal:foldercontents define="batch view/batch">
+    <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
-
-        <ul>
-            <li tal:repeat="item batch">
+        <div>
+            <article tal:repeat="item batch">
             <tal:block tal:define="item_url item/getURL;
                                    item_id item/getId;
                                    item_title item/Title;
@@ -42,22 +41,20 @@
                                    item_sametime python: item_start == item_end;
                                    item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
 
-                <div class="tileItem visualIEFloatFix"
-                     tal:define="item_object item/getObject;">
+                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
 
                     <a href="#"
-                       tal:define="real_object python:item_object.aq_explicit"
-                       tal:condition="python:getattr(real_object, 'image', None)"
-                       tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url">
-                        <img tal:define="images item_object/@@images;
-                                         scale python: images.scale('image', scale='thumb')"
-                             tal:condition="scale"
-                             src="" alt=""
-                             tal:replace="structure python: scale.tag(css_class='tileImage')" />
+                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
+                        tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url">
+                        <div class="tileImage">
+                            <img src="" alt=""
+                                 tal:define="scales obj/@@images;
+                                             scale python:scales.scale('image', 'thumb')"
+                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+                        </div>
                     </a>
 
-                    <h2 class="tileHeadline"
-                        metal:define-macro="listitem">
+                    <h2 class="tileHeadline" metal:define-macro="listitem">
 
                         <a href="#"
                            class="summary url"
@@ -68,60 +65,7 @@
 
                     </h2>
 
-                    <div class="documentByLine" tal:condition="python: view.site_properties.allowAnonymousViewAbout or not view.isAnon">
-                    <tal:event condition="python: item_type == 'Event'">
-                        <span tal:condition="python: item_type == 'Event' and item.location"
-                              i18n:translate="label_event_byline_with_location">
-                            (<span tal:content="string:${item/location}"
-                                   class="location"
-                                   i18n:name="location">Oslo</span>, from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>)
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and not item.location"
-                              i18n:translate="label_event_byline_without_location">
-                            (from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>)
-                        </span>
-                    </tal:event>
-                    <tal:newsitem condition="python: item_type == 'News Item'">
-                        <tal:name tal:condition="item_creator"
-                            tal:define="author python:pas_member.info(item_creator)">
-                          <span class="documentAuthor" i18n:translate="label_by_author">
-                            by
-                          <a href="#"
-                             tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                             tal:content="author/name_or_id"
-                             tal:omit-tag="not:author"
-                             i18n:name="author">
-                            Bob Dobalina
-                          </a>
-                          </span>
-                        </tal:name>
-                        &mdash;
-                        <span class="documentModified">
-                              <tal:mod i18n:translate="box_last_modified">
-                              last modified
-                              </tal:mod>
-                              <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
-                                      August 16, 2001 at 23:35:59
-                              </span>
-                        </span>
-                    </tal:newsitem>
-                    </div>
+                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
 
                     <p class="tileBody" tal:condition="item_description">
                         <span class="description" tal:content="item_description">
@@ -142,21 +86,22 @@
                 </div>
 
             </tal:block>
-            </li>
-        </ul>
+            </article>
+        </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
+
     <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/folderContents"
-           i18n:translate="description_no_items_in_folder">
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
             There are currently no items in this folder.
         </p>
     </metal:empty>
 
-    </tal:foldercontents>
+    </tal:results>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
index b0c69db..cf721bd 100644
--- a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
@@ -19,7 +19,7 @@
         <div metal:define-slot="inside" tal:replace="structure text">The body</div>
     </div>
 
-    <tal:foldercontents define="batch view/batch">
+    <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
 
@@ -30,16 +30,10 @@
                    i18n:attributes="summary summary_content_listing;">
                 <thead>
                     <tr>
-                        <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_title"
-                          >Title</tal:title>&nbsp;</th>
                         <th class="nosort"
-                            tal:condition="view/show_about">&nbsp;<tal:title i18n:translate="listingheader_author"
-                          >Author</tal:title>&nbsp;</th>
-                        <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_type"
-                          >Type</tal:title>&nbsp;</th>
-                        <th class="nosort"
-                            tal:condition="view/show_about">&nbsp;<tal:modified i18n:translate="listingheader_modified"
-                          >Modified</tal:modified>&nbsp;</th>
+                            i18n:translate=""
+                            tal:repeat="field view/tabular_fields"
+                            tal:content="field">Field name</th>
                     </tr>
                 </thead>
 
@@ -67,8 +61,12 @@
                         tal:define="oddrow repeat/item/odd;"
                         tal:attributes="class python: oddrow and 'even' or 'odd'">
 
-                            <td>
-                                <img tal:replace="structure item_icon" />
+                        <tal:block tal:repeat="field view/tabular_fields">
+                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                                tal:define="field_data python:view.tabular_fielddata(item, field)">
+                                <tal:block tal:replace="field_data/value" />
+                            </td>
+                            <td tal:condition="python:field == 'Title'">
                                 <a href="#"
                                    tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;
                                                    class string:$item_wf_state_class $item_type_class;
@@ -77,28 +75,15 @@
                                     Item Title
                                 </a>
                             </td>
-
-                            <td tal:condition="view/show_about">
-                                <tal:name tal:condition="item_creator"
-                                  tal:define="author python:view.pas_member.info(item_creator)">
+                            <td tal:condition="python:field == 'Creator'"
+                                tal:define="author python:view.pas_member.info(item_creator);
+                                            name python:author['fullname'] or author['username']">
                                 <a href="#"
+                                   tal:condition="author"
                                    tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                   tal:content="author/name_or_id"
-                                   tal:omit-tag="not:author">
-                                  Bob Dobalina
-                                </a>
-                                </tal:name>
+                                   tal:content="name">Jos Henken</a>
                             </td>
-
-                            <td tal:content="item_type"
-                                i18n:translate="">
-                                Page
-                            </td>
-
-                        <td tal:condition="view/show_about"
-                            tal:content="python:view.toLocalizedTime(item_modified,long_format=1)">
-                          August 16, 2001 at 23:35:59
-                        </td>
+                        </tal:block>
 
                     </tr>
 
@@ -112,15 +97,16 @@
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
+
     <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/folderContents"
-           i18n:translate="description_no_items_in_folder">
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
             There are currently no items in this folder.
         </p>
     </metal:empty>
 
-    </tal:foldercontents>
+    </tal:results>
 
 </metal:block>
 </metal:content-core>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:41:18+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3d62960d51e755cc4ff47fa076757c17e046ebcb

little simplifications

Files changed:
M plone/app/contenttypes/browser/templates/folder_listing.pt
M plone/app/contenttypes/browser/templates/folder_summary_view.pt
M plone/app/contenttypes/browser/templates/folder_tabular_view.pt

diff --git a/plone/app/contenttypes/browser/templates/folder_listing.pt b/plone/app/contenttypes/browser/templates/folder_listing.pt
index 6f3004b..ae87cb5 100644
--- a/plone/app/contenttypes/browser/templates/folder_listing.pt
+++ b/plone/app/contenttypes/browser/templates/folder_listing.pt
@@ -40,7 +40,8 @@
                                    item_start item/start|nothing;
                                    item_end item/end|nothing;
                                    item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
+                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False;
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
                 <metal:block define-slot="entry">
                 <header metal:define-macro="listitem"
                     tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
@@ -48,7 +49,7 @@
                     <span class="summary">
                         <img tal:replace="structure item_icon" />
                         <a href="#"
-                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;
+                           tal:attributes="href item_link;
                                            class string:$item_type_class $item_wf_state_class url"
                            tal:content="item_title">
                             Item Title
diff --git a/plone/app/contenttypes/browser/templates/folder_summary_view.pt b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
index e67294a..681238a 100644
--- a/plone/app/contenttypes/browser/templates/folder_summary_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
@@ -25,27 +25,18 @@
         <div>
             <article tal:repeat="item batch">
             <tal:block tal:define="item_url item/getURL;
-                                   item_id item/getId;
                                    item_title item/Title;
                                    item_description item/Description;
                                    item_type item/PortalType;
                                    item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                                    item_creator item/Creator;
-                                   item_start item/start|nothing;
-                                   item_end item/end|nothing;
-                                   item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
 
                 <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
 
                     <a href="#"
                         tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                        tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url">
+                        tal:attributes="href item_link">
                         <div class="tileImage">
                             <img src="" alt=""
                                  tal:define="scales obj/@@images;
@@ -58,7 +49,7 @@
 
                         <a href="#"
                            class="summary url"
-                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;"
+                           tal:attributes="href item_link"
                            tal:content="item_title">
                             Item Title
                         </a>
@@ -75,7 +66,7 @@
 
                     <p class="tileFooter">
                         <a href=""
-                           tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;"
+                           tal:attributes="href item_link"
                            i18n:translate="read_more">
                         Read More&hellip;
                         </a>
diff --git a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
index cf721bd..3bd8c4f 100644
--- a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
@@ -41,21 +41,14 @@
 
             <tal:entries tal:repeat="item batch">
             <tal:block tal:define="item_url item/getURL;
-                                   item_id item/getId;
                                    item_title item/Title;
                                    item_description item/Description;
                                    item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
                                    item_type_class python:'contenttype-' + view.normalizeString(item_type);
                                    item_wf_state item/review_state;
                                    item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                                    item_creator item/Creator;
-                                   item_start item/start|nothing;
-                                   item_end item/end|nothing;
-                                   item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
 
                     <tr metal:define-macro="listitem"
                         tal:define="oddrow repeat/item/odd;"
@@ -68,7 +61,7 @@
                             </td>
                             <td tal:condition="python:field == 'Title'">
                                 <a href="#"
-                                   tal:attributes="href python: item_type in view.use_view_action and item_url+'/view' or item_url;
+                                   tal:attributes="href item_link;
                                                    class string:$item_wf_state_class $item_type_class;
                                                    title item_description;"
                                    tal:content="item_title">


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:41:18+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/98201d51fddab84db6f067c2d26802c7753704b0

rename templates

Files changed:
A plone/app/contenttypes/browser/templates/listing.pt
A plone/app/contenttypes/browser/templates/listing_summary.pt
A plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/configure.zcml
D plone/app/contenttypes/browser/templates/folder_listing.pt
D plone/app/contenttypes/browser/templates/folder_summary_view.pt
D plone/app/contenttypes/browser/templates/folder_tabular_view.pt
D plone/app/contenttypes/browser/templates/standard_view.pt
D plone/app/contenttypes/browser/templates/summary_view.pt
D plone/app/contenttypes/browser/templates/tabular_view.pt

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 2f4bad0..6e1d53c 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -19,7 +19,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.interfaces.ICollection"
     class=".collection.CollectionView"
-    template="templates/folder_listing.pt"
+    template="templates/listing.pt"
     />
 
   <browser:page
@@ -27,7 +27,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.interfaces.ICollection"
     class=".collection.CollectionView"
-    template="templates/folder_listing.pt"
+    template="templates/listing.pt"
     />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
@@ -41,7 +41,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/folder_listing.pt"
+    template="templates/listing.pt"
     />
 
   <browser:page
@@ -49,7 +49,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/folder_summary_view.pt"
+    template="templates/listing_summary.pt"
     />
 
   <browser:page
@@ -65,7 +65,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/folder_tabular_view.pt"
+    template="templates/listing_tabular.pt"
     />
 
   <browser:page
@@ -129,7 +129,7 @@
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_listing.pt"
+    template="templates/listing.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Standard view"
@@ -140,7 +140,7 @@
     for="Products.CMFPlone.interfaces.IPloneSiteRoot"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_listing.pt"
+    template="templates/listing.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Standard view"
@@ -169,7 +169,7 @@
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_summary_view.pt"
+    template="templates/listing_summary.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Summary view"
@@ -180,7 +180,7 @@
     for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_summary_view.pt"
+    template="templates/listing_summary.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Summary view"
@@ -191,7 +191,7 @@
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_tabular_view.pt"
+    template="templates/listing_tabular.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Tabular view"
@@ -202,7 +202,7 @@
     for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
     class=".folder.FolderView"
-    template="templates/folder_tabular_view.pt"
+    template="templates/listing_tabular.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="Tabular view"
diff --git a/plone/app/contenttypes/browser/templates/folder_listing.pt b/plone/app/contenttypes/browser/templates/folder_listing.pt
deleted file mode 100644
index ae87cb5..0000000
--- a/plone/app/contenttypes/browser/templates/folder_listing.pt
+++ /dev/null
@@ -1,173 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <metal:listingmacro define-macro="listing">
-    <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
-        <div metal:define-slot="entries">
-            <article tal:repeat="item batch" metal:define-macro="entries">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_id item/getId;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_start item/start|nothing;
-                                   item_end item/end|nothing;
-                                   item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-                <metal:block define-slot="entry">
-                <header metal:define-macro="listitem"
-                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
-                    <span class="summary">
-                        <img tal:replace="structure item_icon" />
-                        <a href="#"
-                           tal:attributes="href item_link;
-                                           class string:$item_type_class $item_wf_state_class url"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-                    </span>
-
-                    <metal:block metal:define-macro="document_byline">
-                    <span class="documentByLine">
-                        <span tal:condition="python: item_type == 'Event' and item_sametime"
-                              i18n:translate="label_event_byline_onlyfrom">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline_samedate">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start)"
-                                   i18n:name="start">from date</abbr> from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,time_only=1)"
-                                   i18n:name="starttime">from time</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,time_only=1)"
-                                   i18n:name="end">to time</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline">
-                              from
-                                   <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>
-                        </span>
-                         <span tal:condition="python: item_type == 'Event' and item.location"
-                              i18n:translate="label_event_byline_location">&mdash;
-                             <span tal:content="string:${item/location}"
-                                   class="location"
-                                   i18n:name="location">Oslo</span>,
-                        </span>
-                        <tal:byline condition="view/show_about">
-                            &mdash;
-
-                            <tal:name tal:condition="item_creator"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            creator_short_form author/username;
-                                            creator_long_form string:?author=${author/username};
-                                            creator_is_openid python:'/' in creator_short_form;
-                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                              <span i18n:translate="label_by_author">
-                                by
-                              <a href="#"
-                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                 tal:content="author/name_or_id"
-                                 tal:omit-tag="not:author"
-                                 i18n:name="author">
-                                Bob Dobalina
-                              </a>
-                              </span>
-
-                            </tal:name>
-
-                            <tal:modified condition="python: item_type != 'Event'">
-                                &mdash;
-                                <tal:mod i18n:translate="box_last_modified">
-                                  last modified
-                                </tal:mod>
-                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                                  August 16, 2001 at 23:35:59
-                                </span>
-                            </tal:modified>
-
-                            <metal:description define-slot="description_slot">
-                                <tal:comment replace="nothing">
-                                    Place custom listing info for custom types here
-                                </tal:comment>
-                            </metal:description>
-                        </tal:byline>
-                    </span>
-                    </metal:block>
-
-                </header>
-
-                <p class="description discreet"
-                    tal:condition="item_description"
-                    tal:content="item_description">
-                    description
-                </p>
-            </metal:block>
-            </tal:block>
-            </article>
-        </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-    </tal:listing>
-
-    <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
-    </metal:empty>
-
-    </tal:results>
-    </metal:listingmacro>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_summary_view.pt b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
deleted file mode 100644
index 681238a..0000000
--- a/plone/app/contenttypes/browser/templates/folder_summary_view.pt
+++ /dev/null
@@ -1,101 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
-        <div>
-            <article tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-
-                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
-
-                    <a href="#"
-                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                        tal:attributes="href item_link">
-                        <div class="tileImage">
-                            <img src="" alt=""
-                                 tal:define="scales obj/@@images;
-                                             scale python:scales.scale('image', 'thumb')"
-                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                        </div>
-                    </a>
-
-                    <h2 class="tileHeadline" metal:define-macro="listitem">
-
-                        <a href="#"
-                           class="summary url"
-                           tal:attributes="href item_link"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-
-                    </h2>
-
-                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
-
-                    <p class="tileBody" tal:condition="item_description">
-                        <span class="description" tal:content="item_description">
-                            description
-                        </span>
-                    </p>
-
-                    <p class="tileFooter">
-                        <a href=""
-                           tal:attributes="href item_link"
-                           i18n:translate="read_more">
-                        Read More&hellip;
-                        </a>
-                    </p>
-
-                    <div class="visualClear"><!-- --></div>
-
-                </div>
-
-            </tal:block>
-            </article>
-        </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-    </tal:listing>
-
-    <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
-    </metal:empty>
-
-    </tal:results>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
deleted file mode 100644
index 3bd8c4f..0000000
--- a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
+++ /dev/null
@@ -1,108 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
-
-          <div metal:use-macro="context/batch_macros/macros/navigation" />
-          <div class="has-table">
-            <table class="listing"
-                   summary="Content listing"
-                   i18n:attributes="summary summary_content_listing;">
-                <thead>
-                    <tr>
-                        <th class="nosort"
-                            i18n:translate=""
-                            tal:repeat="field view/tabular_fields"
-                            tal:content="field">Field name</th>
-                    </tr>
-                </thead>
-
-                <tbody>
-
-            <tal:entries tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-
-                    <tr metal:define-macro="listitem"
-                        tal:define="oddrow repeat/item/odd;"
-                        tal:attributes="class python: oddrow and 'even' or 'odd'">
-
-                        <tal:block tal:repeat="field view/tabular_fields">
-                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
-                                tal:define="field_data python:view.tabular_fielddata(item, field)">
-                                <tal:block tal:replace="field_data/value" />
-                            </td>
-                            <td tal:condition="python:field == 'Title'">
-                                <a href="#"
-                                   tal:attributes="href item_link;
-                                                   class string:$item_wf_state_class $item_type_class;
-                                                   title item_description;"
-                                   tal:content="item_title">
-                                    Item Title
-                                </a>
-                            </td>
-                            <td tal:condition="python:field == 'Creator'"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            name python:author['fullname'] or author['username']">
-                                <a href="#"
-                                   tal:condition="author"
-                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                   tal:content="name">Jos Henken</a>
-                            </td>
-                        </tal:block>
-
-                    </tr>
-
-            </tal:block>
-            </tal:entries>
-
-                </tbody>
-            </table>
-          </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-    </tal:listing>
-
-    <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
-    </metal:empty>
-
-    </tal:results>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
new file mode 100644
index 0000000..ae87cb5
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -0,0 +1,173 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+    <div metal:define-macro="text-field-view"
+         id="parent-fieldname-text" class="stx"
+         tal:define="text view/text"
+         tal:condition="text"
+         tal:attributes="class view/text_class">
+        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+    </div>
+
+    <metal:listingmacro define-macro="listing">
+    <tal:results define="batch view/batch">
+    <tal:listing condition="batch">
+
+        <div metal:define-slot="entries">
+            <article tal:repeat="item batch" metal:define-macro="entries">
+            <tal:block tal:define="item_url item/getURL;
+                                   item_id item/getId;
+                                   item_title item/Title;
+                                   item_description item/Description;
+                                   item_type item/PortalType;
+                                   item_modified item/ModificationDate;
+                                   item_created item/CreationDate;
+                                   item_icon item/getIcon;
+                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                   item_wf_state item/review_state;
+                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                   item_creator item/Creator;
+                                   item_start item/start|nothing;
+                                   item_end item/end|nothing;
+                                   item_sametime python: item_start == item_end;
+                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False;
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                <metal:block define-slot="entry">
+                <header metal:define-macro="listitem"
+                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
+
+                    <span class="summary">
+                        <img tal:replace="structure item_icon" />
+                        <a href="#"
+                           tal:attributes="href item_link;
+                                           class string:$item_type_class $item_wf_state_class url"
+                           tal:content="item_title">
+                            Item Title
+                        </a>
+                    </span>
+
+                    <metal:block metal:define-macro="document_byline">
+                    <span class="documentByLine">
+                        <span tal:condition="python: item_type == 'Event' and item_sametime"
+                              i18n:translate="label_event_byline_onlyfrom">
+                             <abbr class="dtstart"
+                                   tal:attributes="title python:item_start"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
+                                   i18n:name="start">from date</abbr>
+                        </span>
+                        <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
+                              i18n:translate="label_event_byline_samedate">
+                             <abbr class="dtstart"
+                                   tal:attributes="title python:item_start"
+                                   tal:content="python:view.toLocalizedTime(item_start)"
+                                   i18n:name="start">from date</abbr> from
+                             <abbr class="dtstart"
+                                   tal:attributes="title python:item_start"
+                                   tal:content="python:view.toLocalizedTime(item_start,time_only=1)"
+                                   i18n:name="starttime">from time</abbr> to
+                             <abbr class="dtend"
+                                   tal:attributes="title python:item_end"
+                                   tal:content="python:view.toLocalizedTime(item_end,time_only=1)"
+                                   i18n:name="end">to time</abbr>
+                        </span>
+                        <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
+                              i18n:translate="label_event_byline">
+                              from
+                                   <abbr class="dtstart"
+                                   tal:attributes="title python:item_start"
+                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
+                                   i18n:name="start">from date</abbr> to
+                             <abbr class="dtend"
+                                   tal:attributes="title python:item_end"
+                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
+                                   i18n:name="end">to date</abbr>
+                        </span>
+                         <span tal:condition="python: item_type == 'Event' and item.location"
+                              i18n:translate="label_event_byline_location">&mdash;
+                             <span tal:content="string:${item/location}"
+                                   class="location"
+                                   i18n:name="location">Oslo</span>,
+                        </span>
+                        <tal:byline condition="view/show_about">
+                            &mdash;
+
+                            <tal:name tal:condition="item_creator"
+                                tal:define="author python:view.pas_member.info(item_creator);
+                                            creator_short_form author/username;
+                                            creator_long_form string:?author=${author/username};
+                                            creator_is_openid python:'/' in creator_short_form;
+                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                              <span i18n:translate="label_by_author">
+                                by
+                              <a href="#"
+                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                                 tal:content="author/name_or_id"
+                                 tal:omit-tag="not:author"
+                                 i18n:name="author">
+                                Bob Dobalina
+                              </a>
+                              </span>
+
+                            </tal:name>
+
+                            <tal:modified condition="python: item_type != 'Event'">
+                                &mdash;
+                                <tal:mod i18n:translate="box_last_modified">
+                                  last modified
+                                </tal:mod>
+                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                                  August 16, 2001 at 23:35:59
+                                </span>
+                            </tal:modified>
+
+                            <metal:description define-slot="description_slot">
+                                <tal:comment replace="nothing">
+                                    Place custom listing info for custom types here
+                                </tal:comment>
+                            </metal:description>
+                        </tal:byline>
+                    </span>
+                    </metal:block>
+
+                </header>
+
+                <p class="description discreet"
+                    tal:condition="item_description"
+                    tal:content="item_description">
+                    description
+                </p>
+            </metal:block>
+            </tal:block>
+            </article>
+        </div>
+
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+
+    <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
+            There are currently no items in this folder.
+        </p>
+    </metal:empty>
+
+    </tal:results>
+    </metal:listingmacro>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
new file mode 100644
index 0000000..681238a
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -0,0 +1,101 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+    <div metal:define-macro="text-field-view"
+         id="parent-fieldname-text" class="stx"
+         tal:define="text view/text"
+         tal:condition="text"
+         tal:attributes="class view/text_class">
+        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+    </div>
+
+    <tal:results define="batch view/batch">
+    <tal:listing condition="batch">
+
+        <div>
+            <article tal:repeat="item batch">
+            <tal:block tal:define="item_url item/getURL;
+                                   item_title item/Title;
+                                   item_description item/Description;
+                                   item_type item/PortalType;
+                                   item_modified item/ModificationDate;
+                                   item_creator item/Creator;
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+
+                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+
+                    <a href="#"
+                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
+                        tal:attributes="href item_link">
+                        <div class="tileImage">
+                            <img src="" alt=""
+                                 tal:define="scales obj/@@images;
+                                             scale python:scales.scale('image', 'thumb')"
+                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+                        </div>
+                    </a>
+
+                    <h2 class="tileHeadline" metal:define-macro="listitem">
+
+                        <a href="#"
+                           class="summary url"
+                           tal:attributes="href item_link"
+                           tal:content="item_title">
+                            Item Title
+                        </a>
+
+                    </h2>
+
+                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
+
+                    <p class="tileBody" tal:condition="item_description">
+                        <span class="description" tal:content="item_description">
+                            description
+                        </span>
+                    </p>
+
+                    <p class="tileFooter">
+                        <a href=""
+                           tal:attributes="href item_link"
+                           i18n:translate="read_more">
+                        Read More&hellip;
+                        </a>
+                    </p>
+
+                    <div class="visualClear"><!-- --></div>
+
+                </div>
+
+            </tal:block>
+            </article>
+        </div>
+
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+
+    <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
+            There are currently no items in this folder.
+        </p>
+    </metal:empty>
+
+    </tal:results>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt
new file mode 100644
index 0000000..3bd8c4f
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt
@@ -0,0 +1,108 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+    <div metal:define-macro="text-field-view"
+         id="parent-fieldname-text" class="stx"
+         tal:define="text view/text"
+         tal:condition="text"
+         tal:attributes="class view/text_class">
+        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+    </div>
+
+    <tal:results define="batch view/batch">
+    <tal:listing condition="batch">
+
+
+          <div metal:use-macro="context/batch_macros/macros/navigation" />
+          <div class="has-table">
+            <table class="listing"
+                   summary="Content listing"
+                   i18n:attributes="summary summary_content_listing;">
+                <thead>
+                    <tr>
+                        <th class="nosort"
+                            i18n:translate=""
+                            tal:repeat="field view/tabular_fields"
+                            tal:content="field">Field name</th>
+                    </tr>
+                </thead>
+
+                <tbody>
+
+            <tal:entries tal:repeat="item batch">
+            <tal:block tal:define="item_url item/getURL;
+                                   item_title item/Title;
+                                   item_description item/Description;
+                                   item_type item/PortalType;
+                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                   item_wf_state item/review_state;
+                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                   item_creator item/Creator;
+                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+
+                    <tr metal:define-macro="listitem"
+                        tal:define="oddrow repeat/item/odd;"
+                        tal:attributes="class python: oddrow and 'even' or 'odd'">
+
+                        <tal:block tal:repeat="field view/tabular_fields">
+                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                                tal:define="field_data python:view.tabular_fielddata(item, field)">
+                                <tal:block tal:replace="field_data/value" />
+                            </td>
+                            <td tal:condition="python:field == 'Title'">
+                                <a href="#"
+                                   tal:attributes="href item_link;
+                                                   class string:$item_wf_state_class $item_type_class;
+                                                   title item_description;"
+                                   tal:content="item_title">
+                                    Item Title
+                                </a>
+                            </td>
+                            <td tal:condition="python:field == 'Creator'"
+                                tal:define="author python:view.pas_member.info(item_creator);
+                                            name python:author['fullname'] or author['username']">
+                                <a href="#"
+                                   tal:condition="author"
+                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                                   tal:content="name">Jos Henken</a>
+                            </td>
+                        </tal:block>
+
+                    </tr>
+
+            </tal:block>
+            </tal:entries>
+
+                </tbody>
+            </table>
+          </div>
+
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+
+    <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+           tal:condition="not: view/batch"
+           tal:content="view/no_items_message">
+            There are currently no items in this folder.
+        </p>
+    </metal:empty>
+
+    </tal:results>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/standard_view.pt b/plone/app/contenttypes/browser/templates/standard_view.pt
deleted file mode 100644
index 0664273..0000000
--- a/plone/app/contenttypes/browser/templates/standard_view.pt
+++ /dev/null
@@ -1,181 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-  <div metal:fill-slot="content-core">
-    <metal:block define-macro="content-core"
-                 tal:define="templateId template/getId">
-
-        <div metal:define-macro="text-field-view"
-             id="parent-fieldname-text" class="stx"
-             tal:define="has_text exists:context/aq_explicit/text/output;
-                         text python:has_text and here.text.output or ''"
-             tal:condition="text"
-             tal:attributes="class python:context.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-            <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-        </div>
-
-        <metal:listingmacro define-macro="listing">
-        <tal:results define="b_start python:request.get('b_start', 0);
-                             batch python:view.results(b_start=b_start);
-                             site_properties context/portal_properties/site_properties;
-                             use_view_action site_properties/typesUseViewActionInListings|python:();
-                             isAnon portal_state/anonymous;
-                             normalizeString nocall: context/plone_utils/normalizeString;
-                             toLocalizedTime nocall: plone_view/toLocalizedTime;
-                             show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
-                             navigation_root_url portal_state/navigation_root_url;
-                             pas_member context/@@pas_member;">
-        <tal:listing condition="batch">
-
-            <div metal:define-slot="entries">
-                <article tal:repeat="item batch" metal:define-macro="entries">
-                <tal:block tal:define="item_url item/getURL;
-                                       item_id item/getId;
-                                       item_description item/Description;
-                                       item_type item/Type;
-                                       item_modified item/ModificationDate;
-                                       item_created item/CreationDate;
-                                       item_icon item/getIcon;
-                                       item_type_class item/ContentTypeClass;
-                                       item_wf_state_class python:'state-' + normalizeString(item.review_state());
-                                       item_creator item/Creator;
-                                       item_start python:(item.start or item.StartDate) if item_type == 'Event' else None;
-                                       item_end python:(item.end or item.EndDate) if item_type == 'Event' else None;
-                                       item_modified item/ModificationDate;
-                                       item_sametime python: item_start == item_end;
-                                       item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
-                    <metal:block define-slot="entry">
-                    <header metal:define-macro="listitem"
-                        tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
-                        <span class="summary">
-                            <img tal:replace="structure item_icon" />
-                            <a href="#"
-                               tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;
-                                               class string:$item_type_class $item_wf_state_class url"
-                               tal:content="item/Title">
-                                Item Title
-                            </a>
-                        </span>
-
-                        <metal:block metal:define-macro="document_byline">
-                        <span class="documentByLine">
-                            <span tal:condition="python: item_type == 'Event' and item_sametime"
-                                  i18n:translate="label_event_byline_onlyfrom">
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                       i18n:name="start">from date</abbr>
-                            </span>
-                            <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
-                                  i18n:translate="label_event_byline_samedate">
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start)"
-                                       i18n:name="start">from date</abbr> from
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,time_only=1)"
-                                       i18n:name="starttime">from time</abbr> to
-                                 <abbr class="dtend"
-                                       tal:attributes="title python:item_end"
-                                       tal:content="python:toLocalizedTime(item_end,time_only=1)"
-                                       i18n:name="end">to time</abbr>
-                            </span>
-                            <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
-                                  i18n:translate="label_event_byline">
-                                  from
-                                       <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                       i18n:name="start">from date</abbr> to
-                                 <abbr class="dtend"
-                                       tal:attributes="title python:item_end"
-                                       tal:content="python:toLocalizedTime(item_end,long_format=1)"
-                                       i18n:name="end">to date</abbr>
-                            </span>
-                             <span tal:condition="python: item_type == 'Event' and item.location"
-                                  i18n:translate="label_event_byline_location">&mdash;
-                                 <span tal:content="string:${item/location}"
-                                       class="location"
-                                       i18n:name="location">Oslo</span>,
-                            </span>
-                            <tal:byline condition="show_about">
-                                &mdash;
-
-                                <tal:name tal:condition="item_creator"
-                                    tal:define="author python:pas_member.info(item_creator);
-                                                creator_short_form author/username;
-                                                creator_long_form string:?author=${author/username};
-                                                creator_is_openid python:'/' in creator_short_form;
-                                                creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                                  <span i18n:translate="label_by_author">
-                                    by
-                                  <a href="#"
-                                     tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
-                                     tal:content="author/name_or_id"
-                                     tal:omit-tag="not:author"
-                                     i18n:name="author">
-                                    Bob Dobalina
-                                  </a>
-                                  </span>
-
-                                </tal:name>
-
-                                <tal:modified condition="python: item_type != 'Event'">
-                                    &mdash;
-                                    <tal:mod i18n:translate="box_last_modified">
-                                      last modified
-                                    </tal:mod>
-                                    <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
-                                      August 16, 2001 at 23:35:59
-                                    </span>
-                                </tal:modified>
-
-                                <metal:description define-slot="description_slot">
-                                    <tal:comment replace="nothing">
-                                        Place custom listing info for custom types here
-                                    </tal:comment>
-                                </metal:description>
-                            </tal:byline>
-                        </span>
-                        </metal:block>
-
-                    </header>
-
-                    <span class="description"
-                        tal:condition="item_description"
-                        tal:content="item_description">
-                      description
-                    </span>
-                </metal:block>
-                </tal:block>
-                </article>
-            </div>
-
-            <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-        </tal:listing>
-        <metal:empty metal:define-slot="no_items_in_listing">
-            <p class="discreet"
-               tal:condition="not: batch"
-               i18n:translate="description_no_items_in_folder">
-                There are currently no items in this folder.
-            </p>
-        </metal:empty>
-
-        </tal:results>
-        </metal:listingmacro>
-
-    </metal:block>
-  </div>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/summary_view.pt b/plone/app/contenttypes/browser/templates/summary_view.pt
deleted file mode 100644
index 880f1e0..0000000
--- a/plone/app/contenttypes/browser/templates/summary_view.pt
+++ /dev/null
@@ -1,67 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/standard_view/macros/content-core">
-
-    <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-        <div class="tileItem visualIEFloatFix"
-             tal:define="obj item/getObject">
-            <a href="#"
-                  tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                  tal:attributes="href item/getURL">
-                  <div class="tileImage">
-                      <img src="" alt=""
-                           tal:define="scales obj/@@images;
-                                       scale python:scales.scale('image', 'thumb')"
-                           tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                  </div>
-            </a>
-
-            <h2 class="tileHeadline" metal:define-macro="listitem">
-                <a href="#"
-                   class="summary url"
-                   tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;"
-                   tal:content="item/Title">
-                    Item Title
-                </a>
-            </h2>
-
-            <div metal:use-macro="context/standard_view/macros/document_byline"></div>
-
-            <p class="tileBody" tal:condition="item_description">
-                <span class="description" tal:content="item_description">
-                    description
-                </span>
-            </p>
-
-            <p class="tileFooter">
-                <a href=""
-                   tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;"
-                   i18n:translate="read_more">
-                Read More&hellip;
-                </a>
-            </p>
-
-            <div class="visualClear"><!-- --></div>
-        </div>
-
-    </metal:entry>
-    </metal:block>
-    </metal:entries>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/tabular_view.pt b/plone/app/contenttypes/browser/templates/tabular_view.pt
deleted file mode 100644
index 4f2ea22..0000000
--- a/plone/app/contenttypes/browser/templates/tabular_view.pt
+++ /dev/null
@@ -1,77 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-    <div metal:fill-slot="content-core"
-         tal:define="b_start python:request.get('b_start', 0);
-                     batch python:view.results(b_start=b_start);">
-
-         <div metal:define-macro="text-field-view"
-              id="parent-fieldname-text" class="stx"
-              tal:define="has_text exists:context/aq_explicit/text/output;
-                          text python:has_text and here.text.output or ''"
-              tal:condition="text"
-              tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-             <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-         </div>
-
-        <p class="discreet"
-           tal:condition="not: batch"
-           i18n:translate="description_no_items_in_folder">
-            There are currently no items in this folder.
-        </p>
-
-        <table class="listing" summary="Content listing"
-            i18n:attributes="summary"
-            tal:condition="batch"
-            tal:define="fields view/selectedViewFields;
-                        pas_member context/@@pas_member">
-            <thead>
-                <tr>
-                    <th class="nosort"
-                        i18n:translate=""
-                        tal:repeat="field fields"
-                        tal:content="python: field[1]">Field name</th>
-                </tr>
-            </thead>
-            <tbody>
-            <tal:block tal:repeat="item batch">
-                <tr tal:define="oddrow repeat/item/odd;"
-                    tal:attributes="class python:oddrow and 'even' or 'odd'" >
-                <tal:block tal:repeat="field fields">
-                    <td tal:condition="python:field[0] not in ['Title', 'Creator', ]"
-                        tal:define="field_data python:getattr(item, field[0])">
-                        <tal:block tal:replace="field_data" />
-                    </td>
-                    <td tal:condition="python:field[0] == 'Title'">
-                        <a href="#"
-                           tal:attributes="href item/getURL;
-                                           title item/Title"
-                           tal:content="item/Title">Item Title</a>
-                    </td>
-                    <td tal:condition="python:field[0] == 'Creator'"
-                        tal:define="author python:pas_member.info(item.Creator());
-                                    name python:author['fullname'] or author['username']">
-                        <a href="#"
-                           tal:condition="author"
-                           tal:attributes="href string:author/${author/username};
-                                           title name"
-                           tal:content="name">Jos Henken</a>
-                    </td>
-                </tal:block>
-                </tr>
-            </tal:block>
-            </tbody>
-        </table>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-  </div>
-
-</body>
-</html>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:41:18+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8d625682dc4e0d5cbe3ad616c90a165b2a1a02c7

add title attribute to item links, indicating the portal type of the item

Files changed:
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt

diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index ae87cb5..1af4f25 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -47,10 +47,10 @@
                     tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
 
                     <span class="summary">
-                        <img tal:replace="structure item_icon" />
                         <a href="#"
                            tal:attributes="href item_link;
-                                           class string:$item_type_class $item_wf_state_class url"
+                                           class string:$item_type_class $item_wf_state_class url;
+                                           title item_type"
                            tal:content="item_title">
                             Item Title
                         </a>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index 681238a..eb4b257 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -49,7 +49,8 @@
 
                         <a href="#"
                            class="summary url"
-                           tal:attributes="href item_link"
+                           tal:attributes="href item_link;
+                                           title item_type"
                            tal:content="item_title">
                             Item Title
                         </a>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/051f31ea84908f5ffa50b277dbe05229faf8fc5e

changelog entry

Files changed:
M docs/CHANGES.rst

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 8c70585..a496672 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 1.2 (unreleased)
 ----------------
 
-- Define ``default_page_types`` in the ``propertiestool.xml`` profile.
+- Refactor folder_listing, folder_summary_view, folder_tabular_view for folders
+  and standard_view (collection_view), summary_view and tabular_view for
+  collections to use the same templates and base view class.
   [thet]
 
 - In the file view, render HTML5 ``<audio>`` or ``<video>`` tags for audio
@@ -12,6 +14,9 @@ Changelog
   just don't render these tags.
   [thet]
 
+- Define ``default_page_types`` in the ``propertiestool.xml`` profile.
+  [thet]
+
 - Add ``event_listing`` to available view methods for the Folder and Collection
   types.
   [thet]


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2e0617fd09165fbed1c63005a8e0d1873d917597

reuse content-core macro from listing.pt

Files changed:
M plone/app/contenttypes/browser/templates/listing_summary.pt

diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index eb4b257..af12928 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -9,28 +9,11 @@
 <body>
 
 <metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
-        <div>
-            <article tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+<metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
+
+    <metal:entries fill-slot="entries">
+    <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
+    <metal:entry fill-slot="entry">
 
                 <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
 
@@ -77,23 +60,9 @@
 
                 </div>
 
-            </tal:block>
-            </article>
-        </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-    </tal:listing>
-
-    <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
-    </metal:empty>
-
-    </tal:results>
+    </metal:entry>
+    </metal:block>
+    </metal:entries>
 
 </metal:block>
 </metal:content-core>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f2145bcc0886c302c2fda299a08a052aa4cc1b96

fix fullview

Refactor full_view and incorporate fixes from collective.fullview to
1) display the default views of it's items, 2) be recursively callable
and 3) have the same templates for folder and collections.

Files changed:
A plone/app/contenttypes/browser/full_view.py
A plone/app/contenttypes/browser/templates/full_view.pt
A plone/app/contenttypes/browser/templates/full_view_item.pt
M docs/CHANGES.rst
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/folder.py
D plone/app/contenttypes/browser/templates/all_content.pt
D plone/app/contenttypes/browser/templates/folder_full_view.pt
D plone/app/contenttypes/browser/templates/folder_full_view_item.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index a496672..2ecd4d9 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,11 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Refactor full_view and incorporate fixes from collective.fullview to
+  1) display the default views of it's items, 2) be recursively callable
+  and 3) have the same templates for folder and collections.
+  [thet] 
+
 - Refactor folder_listing, folder_summary_view, folder_tabular_view for folders
   and standard_view (collection_view), summary_view and tabular_view for
   collections to use the same templates and base view class.
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 6e1d53c..e0fa89f 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -57,7 +57,7 @@
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/all_content.pt"
+    template="templates/full_view.pt"
     />
 
   <browser:page
@@ -150,17 +150,19 @@
     name="folder_full_view"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_full_view.pt"
+    class=".folder.FolderView"
+    template="templates/full_view.pt"
     permission="zope2.View"
     menu="plone_displayviews"
     title="All content"
     />
 
   <browser:page
-    name="folder_full_view_item"
+    name="full_view_item"
     for="Products.CMFCore.interfaces._content.IContentish"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_full_view_item.pt"
+    class=".full_view.FullViewItem"
+    template="templates/full_view_item.pt"
     permission="zope2.View"
     />
 
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 3d6a390..06414f2 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -28,13 +28,6 @@ def __init__(self, context, request):
         self.show_about = getattr(
             self.site_properties, 'allowAnonymousViewAbout', not self.isAnon)
 
-        # TODO: REMOVE
-        self.more_url = getattr(request, 'more_url', 'folder_contents')
-
-        # TODO: eventually REMOVE
-        self.plone_layout = getMultiAdapter(
-            (context, request), name=u"plone_layout")
-
         self.pas_member = getMultiAdapter(
             (context, request), name=u"pas_member")
 
diff --git a/plone/app/contenttypes/browser/full_view.py b/plone/app/contenttypes/browser/full_view.py
new file mode 100644
index 0000000..58201f7
--- /dev/null
+++ b/plone/app/contenttypes/browser/full_view.py
@@ -0,0 +1,35 @@
+from Products.Five.browser import BrowserView
+from Products.CMFCore.utils import getToolByName
+from zope.publisher.interfaces.browser import IBrowserView
+
+
+class FullViewItem(BrowserView):
+
+    def __init__(self, context, request):
+        super(FullViewItem, self).__init__(context, request)
+        self.item_type = self.context.portal_type
+
+    @property
+    def default_view(self):
+        context = self.context
+        item_layout = context.getLayout()
+        default_view = context.restrictedTraverse(item_layout)
+        return default_view
+
+    @property
+    def item_macros(self):
+        default_view = self.default_view
+        if IBrowserView.providedBy(default_view):
+            # IBrowserView
+            return default_view.index.macros
+        else:
+            # FSPageTemplate
+            return default_view.macros
+
+    @property
+    def item_url(self):
+        context = self.context
+        url = context.absolute_url()
+        props = getToolByName(context, 'portal_properties')
+        use_view_action = props.site_properties.typesUseViewActionInListings
+        return self.item_type in use_view_action and '%s/view' % url or url
diff --git a/plone/app/contenttypes/browser/templates/all_content.pt b/plone/app/contenttypes/browser/templates/all_content.pt
deleted file mode 100644
index 7c78024..0000000
--- a/plone/app/contenttypes/browser/templates/all_content.pt
+++ /dev/null
@@ -1,29 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/standard_view/macros/content-core">
-
-    <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-        <div tal:define="realobject python:item.getObject()"
-             tal:replace="structure realobject/folder_full_view_item" />
-
-    </metal:entry>
-    </metal:block>
-    </metal:entries>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_full_view.pt b/plone/app/contenttypes/browser/templates/folder_full_view.pt
deleted file mode 100644
index cb2671b..0000000
--- a/plone/app/contenttypes/browser/templates/folder_full_view.pt
+++ /dev/null
@@ -1,26 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-    <metal:content-core fill-slot="content-core">
-        <metal:block use-macro="context/folder_listing/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/folder_listing/macros/entries">
-                    <metal:entry fill-slot="entry">
-                        <div tal:define="obj_view python:item.getObject().restrictedTraverse('folder_full_view_item')"
-                             tal:replace="structure python:obj_view()" />
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:block>
-    </metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_full_view_item.pt b/plone/app/contenttypes/browser/templates/folder_full_view_item.pt
deleted file mode 100644
index 55e3477..0000000
--- a/plone/app/contenttypes/browser/templates/folder_full_view_item.pt
+++ /dev/null
@@ -1,80 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone"
-      tal:omit-tag="">
-
-<body tal:omit-tag="">
-
-    <div class="item visualIEFloatFix"
-         tal:define="portal_state context/@@plone_portal_state;
-                     context_state context/@@plone_context_state;
-                     plone_view context/@@plone;
-                     plone_layout context/@@plone_layout;
-                     lang portal_state/language;
-                     view nocall:view | nocall: plone_view;
-                     dummy python: plone_layout.mark_view(view);
-                     portal_url portal_state/portal_url;
-                     checkPermission nocall: context/portal_membership/checkPermission;
-                     site_properties context/portal_properties/site_properties;
-                     item_type context/portal_type;
-                     item_layout here/getLayout;
-                     override python: {'Link': 'link_view'};
-                     item_macro python:path('here/%s/macros/content-core | nothing' % override.get(item_type, item_layout));
-                     use_view_action site_properties/typesUseViewActionInListings|python:();
-                     item_url context/absolute_url;
-                     normalizeString nocall: context/plone_utils/normalizeString;
-                     item_type_class python: 'contenttype-' + normalizeString(item_type);
-                     kss_inline_editable python:False;
-                     rendering_error python:[];
-                     ">
-
-        <div tal:replace="structure provider:plone.abovecontenttitle" />
-
-        <h2 class="headline">
-            <a href="#" class="summary url" tal:content="context/Title"
-               tal:attributes="href python:item_url+'/view' if item_type in use_view_action else item_url;">
-               Title or id
-             </a>
-        </h2>
-
-        <div tal:replace="structure provider:plone.belowcontenttitle" />
-
-        <div class="description"
-             tal:content="context/Description"
-             tal:condition="context/Description">
-            Description
-        </div>
-
-        <tal:block tal:condition="item_macro" tal:on-error="python:rendering_error.append(True)">
-
-            <div tal:replace="structure provider:plone.abovecontentbody" />
-
-            <div metal:use-macro="item_macro">
-                content
-            </div>
-
-            <div tal:replace="structure provider:plone.belowcontentbody" />
-
-        </tal:block>
-
-        <tal:block tal:condition="rendering_error">
-            <!-- Error rendering item macro -->
-        </tal:block>
-
-        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
-            <a href=""
-               tal:attributes="href python: item_url+'/view' if item_type in use_view_action else item_url;"
-               i18n:translate="read_more">
-                Read More&hellip;
-            </a>
-        </p>
-
-        <div class="visualClear"><!-- --></div>
-
-    </div>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
new file mode 100644
index 0000000..37974ec
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -0,0 +1,29 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+    <metal:content-core fill-slot="content-core">
+    <metal:block define-macro="content-core">
+        <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
+            <!-- we don't want the dl -->
+            <metal:entries fill-slot="entries">
+                <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
+                    <metal:entry fill-slot="entry">
+                        <div
+                            tal:define="obj item/getObject;"
+                            tal:replace="structure obj/@@full_view_item" />
+                    </metal:entry>
+                </metal:block>
+            </metal:entries>
+        </metal:listing>
+    </metal:block>
+    </metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
new file mode 100644
index 0000000..16eac28
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -0,0 +1,73 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      i18n:domain="plone"
+      tal:omit-tag="">
+
+<body tal:omit-tag="">
+
+    <div class="item visualIEFloatFix"
+         tal:define="item_macro nocall:view/item_macros/content-core|nothing;
+                     item_url view/item_url;
+                     rendering_error python:[];">
+
+        <div tal:replace="structure provider:plone.abovecontenttitle" />
+
+        <h2 class="headline">
+            <a href="#" class="summary url" tal:content="context/Title"
+               tal:attributes="href item_url;">
+               Title
+             </a>
+        </h2>
+
+        <div tal:replace="structure provider:plone.belowcontenttitle" />
+
+        <div class="description"
+             tal:content="context/Description"
+             tal:condition="context/Description">
+            Description
+        </div>
+
+        <tal:block tal:condition="item_macro">
+        <!-- tal:on-error="python:rendering_error.append(True)"-->
+
+            <div tal:replace="structure provider:plone.abovecontentbody" />
+
+            <div tal:define="view nocall:view/default_view;
+                             portal_state context/@@plone_portal_state;
+                             context_state context/@@plone_context_state;
+                             plone_layout context/@@plone_layout;
+                             lang portal_state/language;
+                             dummy python: plone_layout.mark_view(view);
+                             portal_url portal_state/portal_url;
+                             checkPermission nocall: context/portal_membership/checkPermission;
+                             site_properties context/portal_properties/site_properties;">
+            <div metal:use-macro="item_macro">
+                content
+            </div>
+            </div>
+
+            <div tal:replace="structure provider:plone.belowcontentbody" />
+
+        </tal:block>
+
+        <tal:block tal:condition="rendering_error">
+            <!-- Error rendering item macro -->
+        </tal:block>
+
+        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
+            <a href=""
+               tal:attributes="href item_url"
+               i18n:translate="read_more">
+                Read More&hellip;
+            </a>
+        </p>
+
+        <div class="visualClear"><!-- --></div>
+
+    </div>
+
+</body>
+</html>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/190e081d2eef2f7b1306716a7ba2152051e6d2cf

get show_about setting from registry, if available and fall back to BBB site_properties

Files changed:
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 06414f2..7aaa31a 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -4,7 +4,15 @@
 from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
 from plone.app.contenttypes import _
+from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
+from zope.component import getUtility
+
+HAS_SECURITY_SETTINGS = True
+try:
+    from Products.CMFPlone.interfaces import ISecuritySchema
+except ImportError:
+    HAS_SECURITY_SETTINGS = False
 
 
 class FolderView(BrowserView):
@@ -12,6 +20,8 @@ class FolderView(BrowserView):
     def __init__(self, context, request):
         super(FolderView, self).__init__(context, request)
 
+        registry = getUtility(IRegistry)
+
         self.plone_view = getMultiAdapter(
             (context, request), name=u"plone")
 
@@ -21,12 +31,23 @@ def __init__(self, context, request):
         self.isAnon = self.portal_state.anonymous()
         self.navigation_root_url = self.portal_state.navigation_root_url()
 
+        # BBB
         self.site_properties = context.restrictedTraverse(
             'portal_properties').site_properties
         self.use_view_action = getattr(
             self.site_properties, 'typesUseViewActionInListings', ())
-        self.show_about = getattr(
-            self.site_properties, 'allowAnonymousViewAbout', not self.isAnon)
+
+        if HAS_SECURITY_SETTINGS:
+            security_settings = registry.forInterface(
+                ISecuritySchema, prefix="plone")
+            self.show_about = getattr(
+                security_settings, 'allow_anon_views_about', False
+            ) or not self.isAnon
+        else:
+            # BBB
+            self.show_about = getattr(
+                self.site_properties, 'allowAnonymousViewAbout', False
+            ) or not self.isAnon
 
         self.pas_member = getMultiAdapter(
             (context, request), name=u"pas_member")


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/abc7553f8c6c6edfd81bfd290d9994fffba74bdf

bugfixes

Files changed:
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/folder_album_view.pt

diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 7aaa31a..bd5dd39 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -89,7 +89,7 @@ def text(self):
         textfield = getattr(aq_base(self.context), 'text', None)
         text = getattr(textfield, 'output', None)
         if text:
-            self.text_class = 'stx' if textfield.contentType() in (
+            self.text_class = 'stx' if textfield.mimeType in (
                 'text/structured', 'text/x-rst', 'text/restructured'
             ) else 'plain'
         return text
diff --git a/plone/app/contenttypes/browser/templates/folder_album_view.pt b/plone/app/contenttypes/browser/templates/folder_album_view.pt
index 010170b..e5b5609 100644
--- a/plone/app/contenttypes/browser/templates/folder_album_view.pt
+++ b/plone/app/contenttypes/browser/templates/folder_album_view.pt
@@ -88,8 +88,9 @@
          metal:use-macro="here/batch_macros/macros/navigation" />
 
     <tal:listing condition="otherContents"
-                 define="folderContents otherContents">
-        <metal:listing metal:use-macro="here/folder_listing/macros/listing">
+                 define="folderContents otherContents;
+                         view nocall:here/@@folder_listing">
+        <metal:listing metal:use-macro="view/macros/listing">
             <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
         </metal:listing>
 


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1d8c569618e37530f04ba28d5038104df7f8c094

fix display of event dates in folder listing by reusing formatted_date from plone.app.event

Files changed:
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/listing.pt

diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index bd5dd39..91bce18 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -4,9 +4,11 @@
 from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
 from plone.app.contenttypes import _
+from plone.event.interfaces import IEvent
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
+from zope.contentprovider.interfaces import IContentProvider
 
 HAS_SECURITY_SETTINGS = True
 try:
@@ -128,6 +130,16 @@ def tabular_fielddata(self, item, fieldname):
             'value': value
         }
 
+    def is_event(self, obj):
+        return IEvent.providedBy(obj)
+
+    def formatted_date(self, item):
+        provider = getMultiAdapter(
+            (self.context, self.request, self),
+            IContentProvider, name='formatted_date'
+        )
+        return provider(item)
+
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index 1af4f25..dd38ae0 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -25,7 +25,8 @@
 
         <div metal:define-slot="entries">
             <article tal:repeat="item batch" metal:define-macro="entries">
-            <tal:block tal:define="item_url item/getURL;
+            <tal:block tal:define="obj item/getObject;
+                                   item_url item/getURL;
                                    item_id item/getId;
                                    item_title item/Title;
                                    item_description item/Description;
@@ -37,10 +38,6 @@
                                    item_wf_state item/review_state;
                                    item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                                    item_creator item/Creator;
-                                   item_start item/start|nothing;
-                                   item_end item/end|nothing;
-                                   item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False;
                                    item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
                 <metal:block define-slot="entry">
                 <header metal:define-macro="listitem"
@@ -58,46 +55,15 @@
 
                     <metal:block metal:define-macro="document_byline">
                     <span class="documentByLine">
-                        <span tal:condition="python: item_type == 'Event' and item_sametime"
-                              i18n:translate="label_event_byline_onlyfrom">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline_samedate">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start)"
-                                   i18n:name="start">from date</abbr> from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,time_only=1)"
-                                   i18n:name="starttime">from time</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,time_only=1)"
-                                   i18n:name="end">to time</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline">
-                              from
-                                   <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:view.toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:view.toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>
-                        </span>
-                         <span tal:condition="python: item_type == 'Event' and item.location"
-                              i18n:translate="label_event_byline_location">&mdash;
-                             <span tal:content="string:${item/location}"
-                                   class="location"
-                                   i18n:name="location">Oslo</span>,
-                        </span>
+                        <tal:event condition="python:view.is_event(obj)">
+                            <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                            <span tal:condition="item/location"
+                                  i18n:translate="label_event_byline_location">&mdash;
+                                <span tal:content="string:${item/location}"
+                                      class="location"
+                                      i18n:name="location">Oslo</span>,
+                            </span>
+                        </tal:event>
                         <tal:byline condition="view/show_about">
                             &mdash;
 


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/439faf4f4fcc795ce2ad1959d8a48bcaa14c980d

fix collectio listings

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index b8293b7..a666659 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -3,19 +3,22 @@
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
 from plone.app.contenttypes import _
-from Products.CMFPlone.PloneBatch import Batch
 
 
 class CollectionView(FolderView):
 
-    def results(self, **kwargs):
+    def __init__(self, *args, **kwargs):
+        super(CollectionView, self).__init__(*args, **kwargs)
         context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.results(self.b_start, **kwargs)
+        self.collection_behavior = ICollection(context)
+        self.b_size = self.collection_behavior.item_count
 
-    def batch(self):
-        batch = Batch(self.results(), self.b_start)
-        return batch
+    def results(self, **kwargs):
+        return self.collection_behavior.results(
+            b_start=self.b_start,
+            b_size=self.b_size,
+            **kwargs
+        )
 
     def getFoldersAndImages(self, **kwargs):
         context = aq_inner(self.context)
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 91bce18..1fbde08 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -78,7 +78,8 @@ def results(self):
         return results
 
     def batch(self):
-        batch = Batch(self.results(), self.b_size, self.b_start, orphan=1)
+        batch = Batch(
+            self.results(), size=self.b_size, start=self.b_start, orphan=1)
         return batch
 
     def normalizeString(self, text):


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2b7e65dfd783096a0a6cb1053cd00a475cc07cf7

deactivate old dev addons

Files changed:
M buildout.d/development.cfg

diff --git a/buildout.d/development.cfg b/buildout.d/development.cfg
index ae61c81..6ff9460 100644
--- a/buildout.d/development.cfg
+++ b/buildout.d/development.cfg
@@ -4,10 +4,10 @@ extends =
 
 eggs +=
     plone.reload
-    Products.PDBDebugMode
-    Products.DocFinderTab
-    aws.zope2zcmldoc
-    collective.profiler
+#    Products.PDBDebugMode
+#    Products.DocFinderTab
+#    aws.zope2zcmldoc
+#    collective.profiler
 
 extensions +=
     mr.developer


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/df08607cccf9f9ed90f881822a455d57d9f09594

fix tests with newer dexterity version

Conflicts:
	buildout.d/checkouts.cfg
	buildout.d/sources.cfg

Files changed:
M buildout.d/checkouts.cfg
M buildout.d/sources.cfg

diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
index d5798b1..6cb2d67 100644
--- a/buildout.d/checkouts.cfg
+++ b/buildout.d/checkouts.cfg
@@ -1,3 +1,4 @@
 [buildout]
 always-checkout = force
 auto-checkout +=
+    plone.app.dexterity
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
index d253567..7ef2979 100644
--- a/buildout.d/sources.cfg
+++ b/buildout.d/sources.cfg
@@ -5,3 +5,4 @@ plone = git://github.com/plone
 plone_push = git@github.com:plone
 
 [sources]
+plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:24+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/68f83b48a6ed9b82a2f22c7cfad99118f4104a94

move everthing to __call__

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index a666659..6af3407 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -7,11 +7,11 @@
 
 class CollectionView(FolderView):
 
-    def __init__(self, *args, **kwargs):
-        super(CollectionView, self).__init__(*args, **kwargs)
+    def __call__(self):
         context = aq_inner(self.context)
         self.collection_behavior = ICollection(context)
         self.b_size = self.collection_behavior.item_count
+        return super(CollectionView, self).__call__()
 
     def results(self, **kwargs):
         return self.collection_behavior.results(
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1fbde08..1aa15e5 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -19,8 +19,9 @@
 
 class FolderView(BrowserView):
 
-    def __init__(self, context, request):
-        super(FolderView, self).__init__(context, request)
+    def __call__(self):
+        context = self.context
+        request = self.request
 
         registry = getUtility(IRegistry)
 
@@ -62,6 +63,7 @@ def __init__(self, context, request):
         self.b_size = int(b_size) if b_size is not None else limit_display
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
+        return super(FolderView, self).__call__()
 
     def _content_filter(self):
         content_filter = getattr(self.request, 'contentFilter', None)


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8ae52bb056ac09fdce115afb11022b907fec281c

Revert "move everthing to __call__"

This reverts commit 0a0adf182c8d6a4e5b98328648eac4e8effb082e.

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 6af3407..a666659 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -7,11 +7,11 @@
 
 class CollectionView(FolderView):
 
-    def __call__(self):
+    def __init__(self, *args, **kwargs):
+        super(CollectionView, self).__init__(*args, **kwargs)
         context = aq_inner(self.context)
         self.collection_behavior = ICollection(context)
         self.b_size = self.collection_behavior.item_count
-        return super(CollectionView, self).__call__()
 
     def results(self, **kwargs):
         return self.collection_behavior.results(
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1aa15e5..1fbde08 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -19,9 +19,8 @@
 
 class FolderView(BrowserView):
 
-    def __call__(self):
-        context = self.context
-        request = self.request
+    def __init__(self, context, request):
+        super(FolderView, self).__init__(context, request)
 
         registry = getUtility(IRegistry)
 
@@ -63,7 +62,6 @@ def __call__(self):
         self.b_size = int(b_size) if b_size is not None else limit_display
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
-        return super(FolderView, self).__call__()
 
     def _content_filter(self):
         content_filter = getattr(self.request, 'contentFilter', None)


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/cc6f66c1ba4cb9675c65e1bf4f11a4b5ed450946

move code out of __init__ into properties, as __init__ is not security wrapped

Files changed:
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1fbde08..8f45b66 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -22,35 +22,10 @@ class FolderView(BrowserView):
     def __init__(self, context, request):
         super(FolderView, self).__init__(context, request)
 
-        registry = getUtility(IRegistry)
-
         self.plone_view = getMultiAdapter(
             (context, request), name=u"plone")
-
         self.portal_state = getMultiAdapter(
             (context, request), name=u"plone_portal_state")
-        self.friendly_types = self.portal_state.friendly_types()
-        self.isAnon = self.portal_state.anonymous()
-        self.navigation_root_url = self.portal_state.navigation_root_url()
-
-        # BBB
-        self.site_properties = context.restrictedTraverse(
-            'portal_properties').site_properties
-        self.use_view_action = getattr(
-            self.site_properties, 'typesUseViewActionInListings', ())
-
-        if HAS_SECURITY_SETTINGS:
-            security_settings = registry.forInterface(
-                ISecuritySchema, prefix="plone")
-            self.show_about = getattr(
-                security_settings, 'allow_anon_views_about', False
-            ) or not self.isAnon
-        else:
-            # BBB
-            self.show_about = getattr(
-                self.site_properties, 'allowAnonymousViewAbout', False
-            ) or not self.isAnon
-
         self.pas_member = getMultiAdapter(
             (context, request), name=u"pas_member")
 
@@ -88,6 +63,38 @@ def normalizeString(self, text):
     def toLocalizedTime(self, time, long_format=None, time_only=None):
         return self.plone_view.toLocalizedTime(time, long_format, time_only)
 
+    @property
+    def friendly_types(self):
+        return self.portal_state.friendly_types()
+
+    @property
+    def isAnon(self):
+        return self.portal_state.anonymous()
+
+    @property
+    def navigation_root_url(self):
+        return self.portal_state.navigation_root_url()
+
+    @property
+    def use_view_action(self):
+        site_props = self.context.restrictedTraverse(
+            'portal_properties').site_properties
+        return getattr(site_props, 'typesUseViewActionInListings', ())
+
+    @property
+    def show_about(self):
+        if not HAS_SECURITY_SETTINGS:
+            # BBB
+            site_props = self.context.restrictedTraverse(
+                'portal_properties').site_properties
+            show_about = getattr(site_props, 'allowAnonymousViewAbout', False)
+        else:
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISecuritySchema, prefix="plone")
+            show_about = getattr(settings, 'allow_anon_views_about', False)
+        return show_about or not self.isAnon
+
+    @property
     def text(self):
         textfield = getattr(aq_base(self.context), 'text', None)
         text = getattr(textfield, 'output', None)
@@ -97,6 +104,7 @@ def text(self):
             ) else 'plain'
         return text
 
+    @property
     def tabular_fields(self):
         ret = []
         ret.append('Title')
@@ -141,6 +149,7 @@ def formatted_date(self, item):
         )
         return provider(item)
 
+    @property
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8887fddfe3249170004b5dcd10c6066c3eb6b2b1

results + filter refactoring

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index a666659..06ee0f3 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -14,11 +14,24 @@ def __init__(self, *args, **kwargs):
         self.b_size = self.collection_behavior.item_count
 
     def results(self, **kwargs):
-        return self.collection_behavior.results(
-            b_start=self.b_start,
-            b_size=self.b_size,
-            **kwargs
-        )
+        """Return a content listing based result set with results from the
+        collection query.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
+        return self.collection_behavior.results(**kwargs)
 
     def getFoldersAndImages(self, **kwargs):
         context = aq_inner(self.context)
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 8f45b66..7679751 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -38,18 +38,27 @@ def __init__(self, context, request):
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
 
-    def _content_filter(self):
-        content_filter = getattr(self.request, 'contentFilter', None)
-        content_filter = dict(content_filter) if content_filter else {}
-        content_filter.setdefault('portal_type', self.friendly_types)
-        content_filter.setdefault('batch', True)
-        content_filter.setdefault('b_size', self.b_size)
-        content_filter.setdefault('b_start', self.b_start)
-        return content_filter
-
-    def results(self):
+    def results(self, **kwargs):
+        """Return a content listing based result set with contents of the
+        folder.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('portal_type', self.friendly_types)
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
         results = self.context.restrictedTraverse(
-            '@@folderListing')(**self._content_filter())
+            '@@folderListing')(**kwargs)
         return results
 
     def batch(self):


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c83f978c15d0e65b6413ca9de9f196453ae58072

robot tests for refactored unified listing views

Files changed:
M buildout.d/checkouts.cfg
M buildout.d/sources.cfg
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/robot/variables.py
M setup.py

diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
index 6cb2d67..5b289e6 100644
--- a/buildout.d/checkouts.cfg
+++ b/buildout.d/checkouts.cfg
@@ -2,3 +2,4 @@
 always-checkout = force
 auto-checkout +=
     plone.app.dexterity
+    plone.app.robotframework
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
index 7ef2979..585af8e 100644
--- a/buildout.d/sources.cfg
+++ b/buildout.d/sources.cfg
@@ -6,3 +6,4 @@ plone_push = git@github.com:plone
 
 [sources]
 plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
+plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index ff27d81..1c43e10 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -5,37 +5,159 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 
 Variables  plone/app/contenttypes/tests/robot/variables.py
 
-Test Setup  Run keywords  Open test browser
+Test Setup  Run keywords  Setup Testcontent  Open test browser
 Test Teardown  Close all browsers
 
 *** Variables ***
 
 *** Test cases ***
 
-# XXX: This test needs to be refactored. The test should use robot content
-# keywords and is way too long.
-Scenario: Test Folderlisting
+Scenario: Test listing views
     Given I am logged in as site owner
-      And a Folder  Test-Folder
-      And a File  Test-File
-      And a Image  Test-Image
-      And a Collection  Test-Collection
-      And a Link  Test-Link
-      And a News Item  Test-News
-      And a Document  Test-Document
-     When I Go to  ${PLONE_URL}/folder_contents
-     Then Page Should Contain  Test-Folder
-      And Page Should Contain  Test-File
-      And Page Should Contain  Test-Image
-      And Page Should Contain  Test-Collection
-      And Page Should Contain  Test-Link
-      And Page Should Contain  Test-News
-      And Page Should Contain  Test-Document
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_listing
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_summary_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_tabular_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
+    Then Listing should list contained content in detail
+
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
+    Then Listing should list all content in detail
 
 
 *** Keywords ***
 
+Listing should list contained content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Not Contain  Test Album Image 1
+  Page Should Not Contain  Test Album Image 2
+  Page Should Not Contain  Test Album Image 3
+  Page Should Not Contain  Test Sub Album
+  Page Should Not Contain  Test Sub Album Image 1
+  Page Should Not Contain  Test Sub Album Image 2
+  Page Should Not Contain  Test Sub Album Image 3
+
+Listing should list contained content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  0
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  0
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  0
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  0
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  0
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
+
+Listing should list all content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Page Should Contain  Test Album Image 2
+  Page Should Contain  Test Album Image 3
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Page Should Contain  Test Sub Album Image 2
+  Page Should Contain  Test Sub Album Image 3
+
+Listing should list all content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+
+
+Setup Testcontent
+  Given I am logged in as site owner
+  Create Content  type=Document  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_document  title=Test Document  text=this is a test document
+  Create Content  type=News Item  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_news_item  title=Test News Item  text=this is a test news item
+  Create Content  type=Event  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_event  title=Test Event  text=this is a test event
+  Create Content  type=Collection  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_collection  title=Test Collection  query=${COLLECTION_TEST_QUERY}  text=this is a test collection
+  Create Content  type=Link  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_link  title=Test Link  remoteUrl=http://plone.org
+  Create Content  type=File  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_file  title=Test File
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_image  title=Test Image
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_album  title=Test Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_1  title=Test Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_2  title=Test Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_3  title=Test Album Image 3
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=test_subalbum  title=Test Sub Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_1  title=Test Sub Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_2  title=Test Sub Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_3  title=Test Sub Album Image 3
+
 I go to
     [Arguments]  ${location}
     Go to  ${location}
-    Wait until page contains  Test-Document
diff --git a/plone/app/contenttypes/tests/robot/variables.py b/plone/app/contenttypes/tests/robot/variables.py
index 7310966..757ff22 100644
--- a/plone/app/contenttypes/tests/robot/variables.py
+++ b/plone/app/contenttypes/tests/robot/variables.py
@@ -2,4 +2,6 @@
 from pkg_resources import resource_filename
 
 TEST_FOLDER_ID = 'robot-test-folder'
+PLONE_PATH = '/plone'
+COLLECTION_TEST_QUERY = '[{"i": "path", "o": "plone.app.querystring.operation.string.path", "v": "%s/%s"}]' % (PLONE_PATH, TEST_FOLDER_ID)  # noqa
 PATH_TO_TEST_FILES = resource_filename("plone.app.contenttypes.tests", "")
diff --git a/setup.py b/setup.py
index 4a9198e..0d8ef0b 100644
--- a/setup.py
+++ b/setup.py
@@ -53,7 +53,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework',
+              'plone.app.robotframework [debug, reload] >= 0.9.9',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/dd36898ad2f9e77b30fd4ebab935d197b8ff20be

prettyfying html

Files changed:
A plone/app/contenttypes/browser/templates/listing_album.pt

diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
new file mode 100644
index 0000000..2fad8bf
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -0,0 +1,89 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="here/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:main_macro define-macro="content-core"
+    tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
+                images result/images;
+                albums result/folders;
+                otherContents result/others;
+                Batch python:modules['Products.CMFPlone'].Batch;
+                b_start python:request.get('b_start', 0);
+                templateId template/getId;
+                batch python:Batch(images, 12, int(b_start), orphan=1)">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <tal:images tal:condition="batch" tal:repeat="image batch">
+  <div class="photoAlbumEntry">
+    <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
+                   scale image/@@images;
+                   img_tag python:scale.scale('image', scale='thumb').tag()"
+        tal:attributes="href string:${image/absolute_url}/view;
+                        title image/Description">
+      <span class="photoAlbumEntryWrapper">
+        <img src="" alt="" tal:replace="structure img_tag" />
+      </span>
+      <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
+          Title
+      </span>
+    </a>
+  </div>
+  </tal:images>
+
+  <div class="photoAlbum" tal:condition="albums">
+    <tal:albums tal:repeat="album albums">
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
+                    number_of_images python:len(image_brains_in_album);
+                    random python:modules['random'];
+                    random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <tal:block condition="number_of_images">
+          <img src="" alt=""
+               tal:define="scale random_image/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+               tal:replace="structure img_tag" />
+          </tal:block>
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/pretty_title_or_id">Title</tal:title>
+          (<tal:number content="number_of_images" />)
+        </span>
+      </a>
+    </div>
+    </tal:albums>
+  </div>
+
+  <div class="visualClear"></div>
+  
+  <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+  <metal:empty metal:define-slot="no_items_in_listing">
+    <p class="discreet"
+        tal:condition="not: view/batch"
+        tal:content="view/no_items_message">
+      There are currently no items in this folder.
+    </p>
+  </metal:empty>
+
+
+</metal:main_macro>
+</metal:content-core>
+</body>
+</html>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f28ce652e25b660595faf8a79d7d23cfb3c7e103

unify folder_album_view and thumbnail_view into album_view

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_collection.py
D plone/app/contenttypes/browser/templates/folder_album_view.pt
D plone/app/contenttypes/browser/templates/thumbnail_view.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 2ecd4d9..bdcbed8 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -7,11 +7,12 @@ Changelog
 - Refactor full_view and incorporate fixes from collective.fullview to
   1) display the default views of it's items, 2) be recursively callable
   and 3) have the same templates for folder and collections.
-  [thet] 
+  [thet]
 
-- Refactor folder_listing, folder_summary_view, folder_tabular_view for folders
-  and standard_view (collection_view), summary_view and tabular_view for
-  collections to use the same templates and base view class.
+- Refactor folder_listing, folder_summary_view, folder_tabular_view and
+  folder_album_view for folders as well as standard_view (collection_view),
+  summary_view, tabular_view and thumbnail_view for collections to use the same
+  templates and base view class.
   [thet]
 
 - In the file view, render HTML5 ``<audio>`` or ``<video>`` tags for audio
diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 58c0773..4dbf5b8 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -145,36 +145,6 @@ def results(self, batch=True, b_start=0, b_size=None,
             limit=limit, brains=brains, custom_query=custom_query
         )
 
-    def getFoldersAndImages(self):
-        catalog = getToolByName(self.context, 'portal_catalog')
-        results = self.results(batch=False)
-
-        _mapping = {'results': results, 'images': {}}
-        portal_atct = getToolByName(self.context, 'portal_atct', None)
-        image_types = getattr(portal_atct, 'image_types', ['Image'])
-
-        filtered_results = []
-        for item in results:
-            item_path = item.getPath()
-            if item.isPrincipiaFolderish:
-                query = {
-                    'portal_type': image_types,
-                    'path': item_path,
-                }
-                _mapping['images'][item_path] = IContentListing(catalog(query))
-            elif item.portal_type in image_types:
-                _mapping['images'][item_path] = [item, ]
-            else:
-                continue
-            filtered_results.append(item)
-
-        _mapping['total_number_of_images'] = sum(map(
-            len,
-            _mapping['images'].values()
-        ))
-        _mapping['results'] = filtered_results
-        return _mapping
-
     def selectedViewFields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 06ee0f3..23953c0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
 from plone.app.contenttypes import _
@@ -33,10 +35,21 @@ def results(self, **kwargs):
 
         return self.collection_behavior.results(**kwargs)
 
-    def getFoldersAndImages(self, **kwargs):
-        context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.getFoldersAndImages(**kwargs)
+    @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        results = self.results()
+        images = []
+        folders = []
+        for it in results:
+            # TODO: potentially expensive!
+            ob = it.getObject()
+            if IImage.providedBy(ob):
+                images.append(it)
+            elif IFolder.providedBy(ob):
+                folders.append(it)
+        return {'images': images, 'folders': folders}
 
     def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index e0fa89f..24492e6 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -69,11 +69,11 @@
     />
 
   <browser:page
-    name="thumbnail_view"
+    name="album_view"
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/thumbnail_view.pt"
+    template="templates/listing_album.pt"
     />
 
   <!-- COLLECTION MENU ITEMS -->
@@ -98,8 +98,8 @@
       action="tabular_view"
       />
     <browser:menuItem
-      title="Thumbnail view"
-      action="thumbnail_view"
+      title="Album view"
+      action="album_view"
       />
   </browser:menuItems>
 
@@ -211,24 +211,12 @@
     />
 
   <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    />
-
-  <!-- BBB -->
-  <browser:page
-    name="atct_album_view"
+    name="album_view"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
     permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
     />
 
   <browser:page
@@ -291,4 +279,33 @@
       />
   </configure>
 
+
+  <!-- BBB -->
+  <browser:page
+    name="folder_album_view"
+    for="plone.dexterity.interfaces.IDexterityContainer"
+    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
+    permission="zope2.View"
+    />
+  <browser:page
+    name="atct_album_view"
+    for="plone.dexterity.interfaces.IDexterityContainer"
+    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
+    permission="zope2.View"
+    menu="plone_displayviews"
+    title="Album"
+    />
+  <browser:page
+    name="thumbnail_view"
+    permission="zope2.View"
+    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+    class=".collection.CollectionView"
+    template="templates/listing_album.pt"
+    />
+
+
 </configure>
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 7679751..72d8e72 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -4,6 +4,8 @@
 from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
 from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.event.interfaces import IEvent
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
@@ -159,6 +161,20 @@ def formatted_date(self, item):
         return provider(item)
 
     @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        images = self.results(
+            batch=False,
+            object_provides=IImage.__identifier__
+        )
+        folders = self.results(
+            batch=False,
+            object_provides=IFolder.__identifier__
+        )
+        return {'images': images, 'folders': folders}
+
+    @property
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',
diff --git a/plone/app/contenttypes/browser/templates/folder_album_view.pt b/plone/app/contenttypes/browser/templates/folder_album_view.pt
deleted file mode 100644
index e5b5609..0000000
--- a/plone/app/contenttypes/browser/templates/folder_album_view.pt
+++ /dev/null
@@ -1,104 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
-      lang="en-US"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-
-<metal:main_macro define-macro="content-core"
-     tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
-                 images result/images;
-                 albums result/folders;
-                 otherContents result/others;
-                 Batch python:modules['Products.CMFPlone'].Batch;
-                 b_start python:request.get('b_start', 0);
-                 templateId template/getId;
-                 batch python:Batch(images, 12, int(b_start), orphan=1)">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/getText;
-                     text python:has_text and here.getText() or ''"
-         tal:condition="text"
-         tal:attributes="class python: here.Format() in ('text/structured',
-                                               'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:albumsimages tal:condition="python:albums or images">
-        <tal:images tal:condition="batch" tal:repeat="image batch">
-            <div class="photoAlbumEntry">
-                <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                               scale image/@@images;
-                               img_tag python:scale.scale('image', scale='thumb').tag()"
-                   tal:attributes="href string:${image/absolute_url}/view;
-                                   title image/Description">
-                    <span class="photoAlbumEntryWrapper">
-                        <img src="" alt="" tal:replace="structure img_tag" />
-                    </span>
-                    <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
-                       Title
-                    </span>
-                </a>
-            </div>
-        </tal:images>
-
-        <div class="photoAlbum" tal:condition="albums">
-        <tal:albums tal:repeat="album albums">
-
-            <div class="photoAlbumEntry photoAlbumFolder"
-                 tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                             number_of_images python:len(image_brains_in_album);
-                             random python:modules['random'];
-                             random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-                        <a tal:attributes="href album/getURL;
-                                           title album/Description">
-                            <span class="photoAlbumEntryWrapper">
-                                <tal:block condition="number_of_images">
-                                <img src="" alt=""
-                                     tal:define="scale random_image/@@images;
-                                                 img_tag python:scale.scale('image', scale='thumb').tag()"
-                                     tal:replace="structure img_tag" />
-                                </tal:block>
-                            </span>
-                            <span class="photoAlbumEntryTitle">
-                               <tal:title content="album/pretty_title_or_id">Title</tal:title>
-                            (<tal:number content="number_of_images" />)
-                            </span>
-                        </a>
-            </div>
-
-        </tal:albums>
-        </div>
-
-        <div class="visualClear"><!-- --></div>
-
-    </tal:albumsimages>
-
-    <p class="discreet"
-       i18n:domain="atcontenttypes"
-       i18n:translate="text_no_albums_uploaded"
-       tal:condition="python:not (albums or images)">
-        No albums or photos uploaded yet.
-    </p>
-
-    <div tal:condition="python:albums or images"
-         metal:use-macro="here/batch_macros/macros/navigation" />
-
-    <tal:listing condition="otherContents"
-                 define="folderContents otherContents;
-                         view nocall:here/@@folder_listing">
-        <metal:listing metal:use-macro="view/macros/listing">
-            <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
-        </metal:listing>
-
-    </tal:listing>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-
-</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index 2fad8bf..6a443e6 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -10,14 +10,9 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:main_macro define-macro="content-core"
-    tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
+    tal:define="result view/album_results;
                 images result/images;
-                albums result/folders;
-                otherContents result/others;
-                Batch python:modules['Products.CMFPlone'].Batch;
-                b_start python:request.get('b_start', 0);
-                templateId template/getId;
-                batch python:Batch(images, 12, int(b_start), orphan=1)">
+                albums result/folders">
 
   <div metal:define-macro="text-field-view"
       id="parent-fieldname-text" class="stx"
@@ -27,48 +22,50 @@
     <div metal:define-slot="inside" tal:replace="structure text">The body</div>
   </div>
 
-  <tal:images tal:condition="batch" tal:repeat="image batch">
+  <tal:images tal:repeat="image images">
   <div class="photoAlbumEntry">
-    <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                   scale image/@@images;
-                   img_tag python:scale.scale('image', scale='thumb').tag()"
-        tal:attributes="href string:${image/absolute_url}/view;
-                        title image/Description">
+    <a tal:attributes="href string:${image/getURL}/view;
+                       title image/Description">
       <span class="photoAlbumEntryWrapper">
-        <img src="" alt="" tal:replace="structure img_tag" />
+        <img tal:define="ob image/getObject;
+                         scale ob/@@images;
+                         img_tag python:scale.scale('image', scale='thumb').tag()"
+            tal:replace="structure img_tag" />
       </span>
-      <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
+      <span class="photoAlbumEntryTitle" tal:content="image/Title">
           Title
       </span>
     </a>
   </div>
   </tal:images>
+  
+  <div class="visualClear"></div>
 
-  <div class="photoAlbum" tal:condition="albums">
-    <tal:albums tal:repeat="album albums">
-    <div class="photoAlbumEntry photoAlbumFolder"
-        tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                    number_of_images python:len(image_brains_in_album);
-                    random python:modules['random'];
-                    random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-      <a tal:attributes="href album/getURL;
-                         title album/Description">
-        <span class="photoAlbumEntryWrapper">
-          <tal:block condition="number_of_images">
-          <img src="" alt=""
-               tal:define="scale random_image/@@images;
-                           img_tag python:scale.scale('image', scale='thumb').tag()"
-               tal:replace="structure img_tag" />
-          </tal:block>
-        </span>
-        <span class="photoAlbumEntryTitle">
-          <tal:title content="album/pretty_title_or_id">Title</tal:title>
-          (<tal:number content="number_of_images" />)
-        </span>
-      </a>
-    </div>
-    </tal:albums>
+  <tal:albums tal:repeat="album albums">
+  <div class="photoAlbumEntry photoAlbumFolder"
+      tal:define="ob album/getObject;
+                  subalbum_view nocall:ob/@@album_view;
+                  subalbum_results subalbum_view/album_results;
+                  subalbum_images subalbum_results/images;
+                  number_of_images python:len(subalbum_images);
+                  random python:modules['random'];
+                  random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+    <a tal:attributes="href album/getURL;
+                       title album/Description">
+      <span class="photoAlbumEntryWrapper">
+        <tal:block condition="number_of_images">
+        <img tal:define="scale random_image/@@images;
+                         img_tag python:scale.scale('image', scale='thumb').tag()"
+             tal:replace="structure img_tag" />
+        </tal:block>
+      </span>
+      <span class="photoAlbumEntryTitle">
+        <tal:title content="album/Title">Title</tal:title>
+        (<tal:number content="number_of_images" />)
+      </span>
+    </a>
   </div>
+  </tal:albums>
 
   <div class="visualClear"></div>
   
diff --git a/plone/app/contenttypes/browser/templates/thumbnail_view.pt b/plone/app/contenttypes/browser/templates/thumbnail_view.pt
deleted file mode 100644
index 220c22d..0000000
--- a/plone/app/contenttypes/browser/templates/thumbnail_view.pt
+++ /dev/null
@@ -1,70 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:main_macro define-macro="content-core"
-     tal:define="data view/getFoldersAndImages;
-                total_number_of_images data/total_number_of_images;
-                site_properties context/portal_properties/site_properties;
-                use_view_action site_properties/typesUseViewActionInListings|python:();">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
-         tal:condition="text"
-         tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results tal:repeat="item data/results"
-                 tal:condition="total_number_of_images">
-    <div class="photoAlbumEntry photoAlbumFolder"
-         tal:define="item_path item/getPath;
-                     item_type item/portal_type;
-                     is_album python:item_type=='Folder';
-                     images_album python:data['images'].get(item_path, []);
-                     number_of_images python:len(images_album);
-                     item_title item/Title;
-                     item_url item/getURL;
-                     item_description item/Description;
-                     item_view python:item_type in use_view_action and item_url+'/view' or item_url;
-                     random python:modules['random'];
-                     random_image python:number_of_images and random.choice(images_album).getObject() or None"
-          tal:attributes="class python:is_album and 'photoAlbumEntry photoAlbumFolder' or 'photoAlbumEntry'">
-                <a tal:attributes="href item_view;
-                                   title item_description">
-                    <span class="photoAlbumEntryWrapper"
-                          tal:condition="number_of_images">
-                     <img src="" alt=""
-                          tal:define="scales random_image/@@images;
-                                      scale python:scales.scale('image', 'thumb')"
-                          tal:replace="structure python:scale and scale.tag(title=item_description) or None" />
-                    </span>
-                    <span class="photoAlbumEntryTitle">
-                       <tal:title content="item_title">Title</tal:title>
-                       <tal:count condition="is_album">(<tal:number content="number_of_images" />)</tal:count>
-                    </span>
-                </a>
-    </div>
-    </tal:results>
-    <div class="visualClear"><!-- --></div>
-
-    <p class="discreet"
-       i18n:translate=""
-       tal:condition="not: total_number_of_images">
-        No images found in this collection.
-    </p>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 1c43e10..0435688 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -27,6 +27,9 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
     Then Listing should list contained content in detail
 
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
+    Then Album should list contained images and albums
+
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
     Then Listing should list all content
@@ -40,6 +43,9 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
     Then Listing should list all content in detail
 
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
+    Then Album should list all images and albums
+
 
 *** Keywords ***
 
@@ -91,6 +97,16 @@ Listing should list contained content in detail
   Page Should Contain  Test Sub Album Image 3
   Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
 
+Album should list contained images and albums
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+
+
 Listing should list all content
   Page Should Contain  Test Document
   Page Should Contain  Test News Item
@@ -139,6 +155,25 @@ Listing should list all content in detail
   Page Should Contain  Test Sub Album Image 3
   Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
 
+Album should list all images and albums
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Sub Album
+
+
 
 Setup Testcontent
   Given I am logged in as site owner
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index f2b95cd..5bd6809 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -74,9 +74,6 @@ def test_bbb_selectedViewFields(self):
         self.assertEqual(self.collection.selectedViewFields(),
                          [('Title', 'Title'), ('Description', 'Description')])
 
-    def test_getFoldersAndImages(self):
-        pass
-
     def test_bbb_setQuery(self):
         self.collection.setQuery(query)
         self.assertEqual(self.collection.query, query)
@@ -362,79 +359,6 @@ def test_custom_query(self):
                                                 'id': 'bla'})
         self.assertEqual(len(results), 0)
 
-    def test_getFoldersAndImages(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder and a subfolder to it, both with same id
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        folder.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        subfolder = folder['folder1']
-        # add example image into folder and its subfolder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        subfolder.invokeFactory("Image",
-                                "another_image",
-                                title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Folder',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        # The current implementation for getFoldersAndImages will return
-        # another_image under subfolder and also under folder
-        self.assertEqual(imagecount, 3)
-
-    def test_getFoldersAndImages_returning_images(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        # add example image into this folder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        # add another image into the portal root
-        portal.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Image',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        self.assertEqual(imagecount, 2)
-
     def test_respect_navigation_root(self):
         portal = self.layer['portal']
         login(portal, 'admin')


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3399d45e8e38df092c4b723f79943d318fd9e47e

test fix

Files changed:
M plone/app/contenttypes/tests/robot/test_folderlisting.robot

diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 0435688..3919357 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -157,7 +157,7 @@ Listing should list all content in detail
 
 Album should list all images and albums
   Page Should Contain  Test Image
-  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Xpath Should Match X Times  //img[@title="Test Image"]  2
   Page Should Contain  Test Album Image 1
   Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
   Page Should Contain  Test Album Image 2


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/bb222446d74019258aa121c398ff77e6103a311e

Register folder and collection views under the same name. Old registrations are kept for BBB compatibility.

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/tests/test_collection.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index bdcbed8..d6bb72d 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Register folder and collection views under the same name. Old registrations
+  are kept for BBB compatibility.
+  [thet]
+
 - Refactor full_view and incorporate fixes from collective.fullview to
   1) display the default views of it's items, 2) be recursively callable
   and 3) have the same templates for folder and collections.
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 24492e6..5a9bf0a 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -9,263 +9,213 @@
 
   <browser:resource
       name="collection.css"
-      file="stylesheets/collection.css" />
+      file="stylesheets/collection.css"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"/>
 
 
-  <!-- VIEWS FOR COLLECTION ITEM -->
+  <!-- VIEWS FOR PLONE SITE ROOT -->
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
+
+
+  <!-- VIEWS FOR FOLDERS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
 
-  <browser:page
-    name="view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
 
+  <!-- VIEWS FOR COLLECTION ITEM -->
   <browser:page
-    name="standard_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
+      name="listing_view"
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      template="templates/listing.pt"
+      permission="zope2.View"
+      />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
-
        Note that these ignore other fields, but integrators should
        create other themplates if they want that.  Or improve the
        query view widget.  -->
-
-  <browser:page
-    name="collection_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
-
-  <browser:page
-    name="summary_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_summary.pt"
-    />
-
-  <browser:page
-    name="all_content"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/full_view.pt"
-    />
-
-  <browser:page
-    name="tabular_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_tabular.pt"
-    />
-
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
+
+
+  <!-- OTHER VIEWS -->
   <browser:page
-    name="album_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_album.pt"
-    />
-
-  <!-- COLLECTION MENU ITEMS -->
-
-  <browser:menuItems
-    for="plone.app.contenttypes.interfaces.ICollection"
-    menu="plone_displayviews">
-    <browser:menuItem
-      title="Standard view"
-      action="standard_view"
-      />
-    <browser:menuItem
-      title="Summary view"
-      action="summary_view"
-      />
-    <browser:menuItem
-      title="All content"
-      action="all_content"
-      />
-    <browser:menuItem
-      title="Tabular view"
-      action="tabular_view"
-      />
-    <browser:menuItem
-      title="Album view"
-      action="album_view"
+      name="full_view_item"
+      for="*"
+      class=".full_view.FullViewItem"
+      template="templates/full_view_item.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
       />
-  </browser:menuItems>
-
-  <browser:page
-    name="document_view"
-    for="plone.app.contenttypes.interfaces.IDocument"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/document.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Document"
-    />
-
-  <browser:page
-    name="file_view"
-    for="plone.app.contenttypes.interfaces.IFile"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".file.FileView"
-    template="templates/file.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View File"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="Products.CMFPlone.interfaces.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_full_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/full_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="All content"
-    />
-
   <browser:page
-    name="full_view_item"
-    for="Products.CMFCore.interfaces._content.IContentish"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".full_view.FullViewItem"
-    template="templates/full_view_item.pt"
-    permission="zope2.View"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_tabular_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="document_view"
+      for="plone.app.contenttypes.interfaces.IDocument"
+      template="templates/document.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Document"
+      />
   <browser:page
-    name="folder_tabular_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="file_view"
+      for="plone.app.contenttypes.interfaces.IFile"
+      class=".file.FileView"
+      template="templates/file.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View File"
+      />
   <browser:page
-    name="album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    />
-
+      name="image_view"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image"
+      />
   <browser:page
-    name="image_view"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image"
-    />
-
+      name="image_view_fullscreen"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image_view_fullscreen.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image Fullscreen"
+      />
   <browser:page
-    name="image_view_fullscreen"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image_view_fullscreen.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image Fullscreen"
-    />
-
+      name="link_redirect_view"
+      for="plone.app.contenttypes.interfaces.ILink"
+      class=".link_redirect_view.LinkRedirectView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Link"
+      />
   <browser:page
-    name="link_redirect_view"
-    for="plone.app.contenttypes.interfaces.ILink"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".link_redirect_view.LinkRedirectView"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Link"
-    />
-
+      name="newsitem_view"
+      for="plone.app.contenttypes.interfaces.INewsItem"
+      template="templates/newsitem.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View News Item"
+      />
   <browser:page
-    name="newsitem_view"
-    for="plone.app.contenttypes.interfaces.INewsItem"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/newsitem.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View News Item"
-    />
+      name="contenttype_utils"
+      for="*"
+      class=".utils.Utils"
+      allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      />
 
-  <browser:page
-    name="contenttype_utils"
-    for="*"
-    permission="zope2.View"
-    class=".utils.Utils"
-    allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
-    />
 
   <configure zcml:condition="installed Products.Archetypes">
     <browser:viewlet
@@ -280,32 +230,45 @@
   </configure>
 
 
-  <!-- BBB -->
-  <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    />
-  <browser:page
-    name="atct_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
-    />
-  <browser:page
-    name="thumbnail_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_album.pt"
-    />
-
+  <!-- BBB OlD VIEW NAME REGISTRATIONS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_full_view" template="templates/full_view.pt"/>
+    <browser:page name="full_view_item" template="templates/full_view_item.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+    <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
+    <browser:page name="atct_album_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="view" template="templates/listing.pt"/>
+    <browser:page name="standard_view" template="templates/listing.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="collection_view" template="templates/listing.pt"/>
+    <browser:page name="all_content" template="templates/full_view.pt"/>
+    <browser:page name="thumbnail_view" template="templates/listing_album.pt"/>
+  </browser:pages>
 
 </configure>
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index ffe12c7..3f205e0 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -31,11 +31,11 @@
   <property name="default_view">standard_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
-    <element value="standard_view" />
-    <element value="summary_view" />
-    <element value="all_content" />
-    <element value="tabular_view" />
-    <element value="thumbnail_view" />
+    <element value="summary_view"/>
+    <element value="full_view"/>
+    <element value="tabular_view"/>
+    <element value="album_view"/>
+    <element value="listing_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index e318c5d..3eb43e7 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -14,11 +14,11 @@
  <property name="allow_discussion">False</property>
  <property name="default_view">folder_listing</property>
  <property name="view_methods">
-  <element value="folder_summary_view"/>
-  <element value="folder_full_view"/>
-  <element value="folder_tabular_view"/>
-  <element value="folder_album_view"/>
-  <element value="folder_listing"/>
+  <element value="summary_view"/>
+  <element value="full_view"/>
+  <element value="tabular_view"/>
+  <element value="album_view"/>
+  <element value="listing_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index 5bd6809..bc2e06a 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -1,35 +1,28 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
 from DateTime import DateTime
-
-import unittest2 as unittest
-
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.interface import alsoProvides
-from transaction import commit
-
-from plone.dexterity.interfaces import IDexterityFTI
-
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-
-from plone.app.testing import SITE_OWNER_NAME
-from plone.app.testing import SITE_OWNER_PASSWORD
-
-from plone.testing.z2 import Browser
-from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, \
-    setRoles, login, logout
-
+from plone.app.contenttypes.behaviors.collection import ICollection as ICollection_behavior  # noqa
 from plone.app.contenttypes.interfaces import ICollection
-from plone.app.contenttypes.behaviors.collection import ICollection as \
-    ICollection_behavior
-
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
+from plone.app.contenttypes.testing import set_browserlayer
 from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import SITE_OWNER_NAME
+from plone.app.testing import SITE_OWNER_PASSWORD
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import login
+from plone.app.testing import logout
+from plone.app.testing import setRoles
 from plone.app.textfield.value import RichTextValue
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from transaction import commit
+from zope.component import createObject
+from zope.component import queryUtility
+from zope.interface import alsoProvides
 import os.path
+import unittest2 as unittest
 
 query = [{
     'i': 'Title',
@@ -140,6 +133,7 @@ def setUp(self):
         self.browser = Browser(self.layer['app'])
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
@@ -408,6 +402,7 @@ class PloneAppCollectionEditViewsIntegrationTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/94fdfa153561c9e06c1730c31e6f2a6547459f31

cleanup

Files changed:
D plone/app/contenttypes/browser/album_view.py

diff --git a/plone/app/contenttypes/browser/album_view.py b/plone/app/contenttypes/browser/album_view.py
deleted file mode 100644
index fca86d8..0000000
--- a/plone/app/contenttypes/browser/album_view.py
+++ /dev/null
@@ -1,57 +0,0 @@
-# -*- coding: utf-8 -*-
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-# from Products.CMFCore.utils import getToolByName
-
-
-class AlbumView(BrowserView):
-
-    template = ViewPageTemplateFile('templates/folder_album_view.pt')
-
-    def getAlbumContent(self,
-                        container=None,
-                        images=0,
-                        folders=0,
-                        subimages=0,
-                        others=0):
-        """ Mostly ripped out from atctListAlbum.py
-        """
-
-        if not container:
-            container = self.context
-
-        result = {}
-
-        if images:
-            result['images'] = container.getFolderContents(
-                {'portal_type': ('Image',)}, full_objects=True)
-
-        if folders:
-            result['folders'] = container.getFolderContents(
-                {'portal_type': ('Folder',)})
-
-        if subimages:
-            # Handle brains or objects
-            if getattr(container, 'getPath', None) is not None:
-                path = container.getPath()
-            else:
-                path = '/'.join(container.getPhysicalPath())
-            # Explicitly set path to remove default depth
-            result['subimages'] = container.getFolderContents(
-                {'portal_type': ('Image',), 'path': path})
-
-        if others:
-            utils = getToolByName(self.context, 'plone_utils')
-            searchContentTypes = utils.getUserFriendlyTypes()
-            filtered = [p_type for p_type in searchContentTypes
-                        if p_type not in ('Image', 'Folder',)]
-            if filtered:
-                # We don't need the full objects for the folder_listing
-                result['others'] = container.getFolderContents(
-                    {'portal_type': filtered})
-            else:
-                result['others'] = ()
-
-        return result


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b2d81dabd15bec5ad25bb311883d55fae584c6b1

dont depend on unreleased...

Files changed:
M setup.py

diff --git a/setup.py b/setup.py
index 0d8ef0b..a930bbe 100644
--- a/setup.py
+++ b/setup.py
@@ -53,7 +53,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework [debug, reload] >= 0.9.9',  # create image and file content for Image, File and News Item if not given.  # noqa
+              'plone.app.robotframework [debug, reload] > 0.9.8',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e8dc05b9fa4ed2ab58d94711ebcd09a7e219d6c1

reformat all templates

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/full_view_item.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/templates/newsitem.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index d6bb72d..30dc2c0 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Reformatted all templates for 2 space indentation, 4 space for attributes.
+  [thet]
+
 - Register folder and collection views under the same name. Old registrations
   are kept for BBB compatibility.
   [thet]
diff --git a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
index 3e1f9ce..8ba1390 100644
--- a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
+++ b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
@@ -1,20 +1,18 @@
 <tal:available condition="view/available">
-<div class="portalMessage alert-box secondary warning"
-     i18n:domain="plone">
+  <div class="portalMessage alert-box secondary warning" i18n:domain="plone">
     <strong i18n:translate="">Warning</strong>
-        <tal:manager tal:condition="not:view/can_migrate">
-            <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
-        </tal:manager>
-        <tal:manager tal:condition="view/can_migrate">
-            <span i18n:translate="">You can't edit this content unless you
-                <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
-                    migrate the default content-types to Dexterity.
-                </a>
-            </span>
-        </tal:manager>
-</div>
-
-<style type="text/css">
-#contentview-edit {display: None;}
-</style>
+    <tal:manager tal:condition="not:view/can_migrate">
+      <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
+    </tal:manager>
+    <tal:manager tal:condition="view/can_migrate">
+      <span i18n:translate="">You can't edit this content unless you
+        <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
+          migrate the default content-types to Dexterity.
+        </a>
+      </span>
+    </tal:manager>
+  </div>
+  <style type="text/css">
+    #contentview-edit {display: None;}
+  </style>
 </tal:available>
diff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt
index 25fefa0..0e6756b 100644
--- a/plone/app/contenttypes/browser/templates/document.pt
+++ b/plone/app/contenttypes/browser/templates/document.pt
@@ -1,20 +1,19 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
-    <metal:content-core define-macro="content-core">
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-              tal:content="structure python:context.text.output_relative_to(view.context)" />
-    </metal:content-core>
+<metal:content-core define-macro="content-core">
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure python:context.text.output_relative_to(view.context)" />
+</metal:content-core>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt
index 547d748..b6e8eae 100644
--- a/plone/app/contenttypes/browser/templates/file.pt
+++ b/plone/app/contenttypes/browser/templates/file.pt
@@ -1,44 +1,43 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="content_type context/file/contentType|nothing;
-                                 download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
-            <p>
-                <a tal:attributes="href download_url">
-                    <img tal:attributes="src view/get_mimetype_icon;
-                                         alt content_type;" border="0"  />
-                    <tal:name tal:content="context/file/filename" >Filename</tal:name>
-                </a>
-                <span class="discreet"
-                      tal:define="size context/file/getSize;
-                                  kb python:size/1024">
-                      &mdash; <span tal:replace="kb" /> KB</span>
-            </p>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core"
+    tal:define="content_type context/file/contentType|nothing;
+                download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
+  <p>
+    <a tal:attributes="href download_url">
+      <img tal:attributes="src view/get_mimetype_icon;
+                           alt content_type;" border="0" />
+      <tal:name tal:content="context/file/filename" >Filename</tal:name>
+    </a>
+    <span class="discreet"
+        tal:define="size context/file/getSize;
+                    kb python:size/1024">
+      &mdash; <span tal:replace="kb" /> KB</span>
+  </p>
 
-            <video tal:condition="view/is_videotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </video>
+  <video tal:condition="view/is_videotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </video>
 
-            <audio tal:condition="view/is_audiotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </audio>
+  <audio tal:condition="view/is_audiotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </audio>
 
-            <div tal:condition="python: content_type.startswith('text')">
-                <h2 i18n:translate="heading_file_contents">File contents</h2>
-                <pre tal:content="context/file/data|nothing" />
-            </div>
-        </metal:block>
-    </metal:content-core>
+  <div tal:condition="python: content_type.startswith('text')">
+    <h2 i18n:translate="heading_file_contents">File contents</h2>
+    <pre tal:content="context/file/data|nothing" />
+  </div>
 
-</body>
+</metal:block>
+</metal:content-core>
 
+</body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
index 37974ec..e0adc9f 100644
--- a/plone/app/contenttypes/browser/templates/full_view.pt
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -1,29 +1,26 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core">
-        <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
-                    <metal:entry fill-slot="entry">
-                        <div
-                            tal:define="obj item/getObject;"
-                            tal:replace="structure obj/@@full_view_item" />
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:listing>
-    </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
+    <!-- we don't want the dl -->
+    <metal:entries fill-slot="entries">
+      <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
+        <metal:entry fill-slot="entry">
+          <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
+        </metal:entry>
+      </metal:block>
+    </metal:entries>
+  </metal:listing>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
index 16eac28..0acb32f 100644
--- a/plone/app/contenttypes/browser/templates/full_view_item.pt
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -1,73 +1,70 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone"
-      tal:omit-tag="">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone"
+    tal:omit-tag="">
 <body tal:omit-tag="">
 
-    <div class="item visualIEFloatFix"
-         tal:define="item_macro nocall:view/item_macros/content-core|nothing;
-                     item_url view/item_url;
-                     rendering_error python:[];">
-
-        <div tal:replace="structure provider:plone.abovecontenttitle" />
-
-        <h2 class="headline">
-            <a href="#" class="summary url" tal:content="context/Title"
-               tal:attributes="href item_url;">
-               Title
-             </a>
-        </h2>
-
-        <div tal:replace="structure provider:plone.belowcontenttitle" />
+  <div class="item visualIEFloatFix"
+      tal:define="item_macro nocall:view/item_macros/content-core|nothing;
+      item_url view/item_url;
+      rendering_error python:[];">
 
-        <div class="description"
-             tal:content="context/Description"
-             tal:condition="context/Description">
-            Description
-        </div>
+    <div tal:replace="structure provider:plone.abovecontenttitle" />
 
-        <tal:block tal:condition="item_macro">
-        <!-- tal:on-error="python:rendering_error.append(True)"-->
+    <h2 class="headline">
+      <a class="summary url" tal:content="context/Title"
+        tal:attributes="href item_url;">
+        Title
+      </a>
+    </h2>
 
-            <div tal:replace="structure provider:plone.abovecontentbody" />
+    <div tal:replace="structure provider:plone.belowcontenttitle" />
 
-            <div tal:define="view nocall:view/default_view;
-                             portal_state context/@@plone_portal_state;
-                             context_state context/@@plone_context_state;
-                             plone_layout context/@@plone_layout;
-                             lang portal_state/language;
-                             dummy python: plone_layout.mark_view(view);
-                             portal_url portal_state/portal_url;
-                             checkPermission nocall: context/portal_membership/checkPermission;
-                             site_properties context/portal_properties/site_properties;">
-            <div metal:use-macro="item_macro">
-                content
-            </div>
-            </div>
+    <div class="description"
+        tal:content="context/Description"
+        tal:condition="context/Description">
+      Description
+    </div>
 
-            <div tal:replace="structure provider:plone.belowcontentbody" />
+    <tal:block tal:condition="item_macro">
+      <!-- tal:on-error="python:rendering_error.append(True)"-->
+
+      <div tal:replace="structure provider:plone.abovecontentbody" />
+
+      <div tal:define="view nocall:view/default_view;
+                       portal_state context/@@plone_portal_state;
+                       context_state context/@@plone_context_state;
+                       plone_layout context/@@plone_layout;
+                       lang portal_state/language;
+                       dummy python: plone_layout.mark_view(view);
+                       portal_url portal_state/portal_url;
+                       checkPermission nocall: context/portal_membership/checkPermission;
+                       site_properties context/portal_properties/site_properties;">
+        <div metal:use-macro="item_macro">
+          content
+        </div>
+      </div>
 
-        </tal:block>
+      <div tal:replace="structure provider:plone.belowcontentbody" />
 
-        <tal:block tal:condition="rendering_error">
-            <!-- Error rendering item macro -->
-        </tal:block>
+    </tal:block>
 
-        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
-            <a href=""
-               tal:attributes="href item_url"
-               i18n:translate="read_more">
-                Read More&hellip;
-            </a>
-        </p>
+    <tal:block tal:condition="rendering_error">
+      <!-- Error rendering item macro -->
+    </tal:block>
 
-        <div class="visualClear"><!-- --></div>
+    <p class="more" tal:condition="python:not(item_macro) or rendering_error">
+      <a tal:attributes="href item_url"
+          i18n:translate="read_more">
+        Read More&hellip;
+      </a>
+    </p>
 
-    </div>
+    <div class="visualClear"><!-- --></div>
 
+  </div>
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt
index 3090cab..8f15418 100644
--- a/plone/app/contenttypes/browser/templates/image.pt
+++ b/plone/app/contenttypes/browser/templates/image.pt
@@ -1,32 +1,29 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="size context/image/getSize">
-            <figure class="image-product">
-              <a class="discreet"
-                 tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
-                 tal:define="scale context/@@images;
-                             img_tag python:scale.scale('image', scale='large').tag()"
-                  tal:on-error="string: Image cannot be displayed">
-                <img tal:replace="structure img_tag" />
-              
-              <figcaption class="discreet">
-                <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
-                <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
-              </figcaption>
-              </a>
-            </figure>
-        </metal:block>
-    </metal:content-core>
-</body>
 
-</html>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core" tal:define="size context/image/getSize">
+  <figure class="image-product">
+    <a class="discreet"
+        tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
+        tal:define="scale context/@@images;
+                    img_tag python:scale.scale('image', scale='large').tag()"
+        tal:on-error="string: Image cannot be displayed">
+    <img tal:replace="structure img_tag" />
+    <figcaption class="discreet">
+      <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
+      <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
+    </figcaption>
+    </a>
+  </figure>
+</metal:block>
+</metal:content-core>
 
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
index 1cb6ca2..dec7933 100644
--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
@@ -1,69 +1,53 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone">
 <head>
-
-    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
-
-    <title tal:content="context/Title">
-        Title
-    </title>
-
-    <style type="text/css" media="screen">
+  <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
+  <title tal:content="context/Title">Title</title>
+  <style type="text/css" media="screen">
     body {
-        background-color: white;
-        color: black;
-        font-family: Helvetica, Arial, sans-serif;
-        font-size: 14px;
-        padding:0;
-        margin:0;
+      background-color: white;
+      color: black;
+      font-family: Helvetica, Arial, sans-serif;
+      font-size: 14px;
+      padding:0;
+      margin:0;
     }
     a {
-        color: #08c;
-        text-decoration: none;
-        text-align:center;
+      color: #08c;
+      text-decoration: none;
+      text-align:center;
+    }
+    a:hover {text-decoration:underline;}
+    a span {
+      display:block;
+      line-height:1.5em;
+      padding:12px;
     }
-      a:hover {text-decoration:underline;}
-      a span {
-          display:block;
-          line-height:1.5em;
-          padding:12px;
-      }
-
     img {
-        border: 0;
-        display:block;
-        margin:0 auto;
+      border: 0;
+      display:block;
+      margin:0 auto;
     }
-
-    </style>
-
+  </style>
 </head>
 
 <body>
-
-<div id="content-core"
-     tal:condition="context/@@images">
-    <a href=""
-       tal:attributes="href request/HTTP_REFERER"
-       tal:condition="request/HTTP_REFERER"
-       ><span i18n:translate="label_back_to_site">Back to site</span>
-    <tal:block replace="structure context/@@images/image" />
-  </a>
-
-    <a href=""
-       tal:attributes="href context/portal_url"
-       tal:condition="not: request/HTTP_REFERER"
-       ><span i18n:translate="label_home">Home</span>
-       <tal:block replace="structure context/@@images/image" />
+  <div id="content-core" tal:condition="context/@@images">
+    <a tal:attributes="href request/HTTP_REFERER"
+        tal:condition="request/HTTP_REFERER"
+      ><span i18n:translate="label_back_to_site">Back to site</span>
+      <tal:block replace="structure context/@@images/image" />
     </a>
-</div>
-
+    <a tal:attributes="href context/portal_url"
+        tal:condition="not: request/HTTP_REFERER"
+      ><span i18n:translate="label_home">Home</span>
+      <tal:block replace="structure context/@@images/image" />
+    </a>
+  </div>
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt
index 4aa7290..c5752e4 100644
--- a/plone/app/contenttypes/browser/templates/link.pt
+++ b/plone/app/contenttypes/browser/templates/link.pt
@@ -1,38 +1,35 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:header fill-slot="header">
-        <div class="portalMessage info"
-            tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
-            tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
-            <strong i18n:translate="">Info</strong>
-            <span tal:omit-tag=""
-                i18n:translate="message_permissions_blocking_link_redirect">
-              You see this page because you have permission to edit this link.
-              Others will be immediately redirected to the link's target URL.
-            </span>
-        </div>
-    </metal:header>
+<metal:header fill-slot="header">
+  <div class="portalMessage info"
+      tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
+      tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
+    <strong i18n:translate="">Info</strong>
+    <span tal:omit-tag=""
+        i18n:translate="message_permissions_blocking_link_redirect">
+      You see this page because you have permission to edit this link.
+      Others will be immediately redirected to the link's target URL.
+    </span>
+  </div>
+</metal:header>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core">
-        <p tal:define="portal_url portal_state/portal_url;
-                       navigation_root_url portal_state/navigation_root_url;
-                       url view/absolute_target_url">
-            <span i18n:translate="link_address">The link address is:</span>
-            <a href="#" tal:attributes="href url"
-                        tal:content="context/remoteUrl">remote url</a>
-        </p>
-        </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <p tal:define="portal_url portal_state/portal_url;
+                 navigation_root_url portal_state/navigation_root_url;
+                 url view/absolute_target_url">
+    <span i18n:translate="link_address">The link address is:</span>
+    <a tal:attributes="href url" tal:content="context/remoteUrl">remote url</a>
+  </p>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index dd38ae0..5ec5a92 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -1,136 +1,122 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <metal:listingmacro define-macro="listing">
+  <metal:listingmacro define-macro="listing">
     <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
+      <tal:listing condition="batch">
         <div metal:define-slot="entries">
-            <article tal:repeat="item batch" metal:define-macro="entries">
+          <article tal:repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="obj item/getObject;
-                                   item_url item/getURL;
-                                   item_id item/getId;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-                <metal:block define-slot="entry">
-                <header metal:define-macro="listitem"
-                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
-                    <span class="summary">
-                        <a href="#"
-                           tal:attributes="href item_link;
-                                           class string:$item_type_class $item_wf_state_class url;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-                    </span>
-
-                    <metal:block metal:define-macro="document_byline">
+                item_url item/getURL;
+                item_id item/getId;
+                item_title item/Title;
+                item_description item/Description;
+                item_type item/PortalType;
+                item_modified item/ModificationDate;
+                item_created item/CreationDate;
+                item_icon item/getIcon;
+                item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                item_wf_state item/review_state;
+                item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                item_creator item/Creator;
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+              <metal:block define-slot="entry">
+                <header metal:define-macro="listitem" tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
+                  <span class="summary">
+                    <a tal:attributes="href item_link;
+                                       class string:$item_type_class $item_wf_state_class url;
+                                       title item_type"
+                        tal:content="item_title">
+                      Item Title
+                    </a>
+                  </span>
+
+                  <metal:block metal:define-macro="document_byline">
                     <span class="documentByLine">
-                        <tal:event condition="python:view.is_event(obj)">
-                            <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
-                            <span tal:condition="item/location"
-                                  i18n:translate="label_event_byline_location">&mdash;
-                                <span tal:content="string:${item/location}"
-                                      class="location"
-                                      i18n:name="location">Oslo</span>,
-                            </span>
-                        </tal:event>
-                        <tal:byline condition="view/show_about">
-                            &mdash;
-
-                            <tal:name tal:condition="item_creator"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            creator_short_form author/username;
-                                            creator_long_form string:?author=${author/username};
-                                            creator_is_openid python:'/' in creator_short_form;
-                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                              <span i18n:translate="label_by_author">
-                                by
-                              <a href="#"
-                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                 tal:content="author/name_or_id"
-                                 tal:omit-tag="not:author"
-                                 i18n:name="author">
-                                Bob Dobalina
-                              </a>
-                              </span>
-
-                            </tal:name>
-
-                            <tal:modified condition="python: item_type != 'Event'">
-                                &mdash;
-                                <tal:mod i18n:translate="box_last_modified">
-                                  last modified
-                                </tal:mod>
-                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                                  August 16, 2001 at 23:35:59
-                                </span>
-                            </tal:modified>
-
-                            <metal:description define-slot="description_slot">
-                                <tal:comment replace="nothing">
-                                    Place custom listing info for custom types here
-                                </tal:comment>
-                            </metal:description>
-                        </tal:byline>
+                      <tal:event condition="python:view.is_event(obj)">
+                        <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                        <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                          <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                        </span>
+                      </tal:event>
+                      <tal:byline condition="view/show_about">
+                        &mdash;
+                        <tal:name tal:condition="item_creator"
+                            tal:define="author python:view.pas_member.info(item_creator);
+                                        creator_short_form author/username;
+                                        creator_long_form string:?author=${author/username};
+                                        creator_is_openid python:'/' in creator_short_form;
+                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                        <span i18n:translate="label_by_author">
+                          by
+                          <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                              tal:content="author/name_or_id"
+                              tal:omit-tag="not:author"
+                              i18n:name="author">
+                            Bob Dobalina
+                          </a>
+                        </span>
+                        </tal:name>
+
+                        <tal:modified condition="python: item_type != 'Event'">
+                          &mdash;
+                          <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                          <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                            August 16, 2001 at 23:35:59
+                          </span>
+                        </tal:modified>
+
+                        <metal:description define-slot="description_slot">
+                          <tal:comment replace="nothing">
+                            Place custom listing info for custom types here
+                          </tal:comment>
+                        </metal:description>
+                      </tal:byline>
                     </span>
-                    </metal:block>
-
+                  </metal:block>
                 </header>
 
                 <p class="description discreet"
                     tal:condition="item_description"
                     tal:content="item_description">
-                    description
+                  description
                 </p>
-            </metal:block>
+              </metal:block>
             </tal:block>
-            </article>
+          </article>
         </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
-    </tal:listing>
+      </tal:listing>
 
-    <metal:empty metal:define-slot="no_items_in_listing">
+      <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
+            tal:condition="not: view/batch"
+            tal:content="view/no_items_message">
+          There are currently no items in this folder.
         </p>
-    </metal:empty>
+      </metal:empty>
 
     </tal:results>
-    </metal:listingmacro>
+  </metal:listingmacro>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index 6a443e6..ab9c319 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -5,7 +5,6 @@
       lang="en"
       metal:use-macro="here/main_template/macros/master"
       i18n:domain="plone">
-
 <body>
 
 <metal:content-core fill-slot="content-core">
@@ -23,52 +22,52 @@
   </div>
 
   <tal:images tal:repeat="image images">
-  <div class="photoAlbumEntry">
-    <a tal:attributes="href string:${image/getURL}/view;
-                       title image/Description">
-      <span class="photoAlbumEntryWrapper">
-        <img tal:define="ob image/getObject;
-                         scale ob/@@images;
-                         img_tag python:scale.scale('image', scale='thumb').tag()"
-            tal:replace="structure img_tag" />
-      </span>
-      <span class="photoAlbumEntryTitle" tal:content="image/Title">
-          Title
-      </span>
-    </a>
-  </div>
+    <div class="photoAlbumEntry">
+      <a tal:attributes="href string:${image/getURL}/view;
+                         title image/Description">
+        <span class="photoAlbumEntryWrapper">
+          <img tal:define="ob image/getObject;
+                           scale ob/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+              tal:replace="structure img_tag" />
+        </span>
+        <span class="photoAlbumEntryTitle" tal:content="image/Title">
+            Title
+        </span>
+      </a>
+    </div>
   </tal:images>
-  
-  <div class="visualClear"></div>
+
+  <div class="visualClear"><!-- --></div>
 
   <tal:albums tal:repeat="album albums">
-  <div class="photoAlbumEntry photoAlbumFolder"
-      tal:define="ob album/getObject;
-                  subalbum_view nocall:ob/@@album_view;
-                  subalbum_results subalbum_view/album_results;
-                  subalbum_images subalbum_results/images;
-                  number_of_images python:len(subalbum_images);
-                  random python:modules['random'];
-                  random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
-    <a tal:attributes="href album/getURL;
-                       title album/Description">
-      <span class="photoAlbumEntryWrapper">
-        <tal:block condition="number_of_images">
-        <img tal:define="scale random_image/@@images;
-                         img_tag python:scale.scale('image', scale='thumb').tag()"
-             tal:replace="structure img_tag" />
-        </tal:block>
-      </span>
-      <span class="photoAlbumEntryTitle">
-        <tal:title content="album/Title">Title</tal:title>
-        (<tal:number content="number_of_images" />)
-      </span>
-    </a>
-  </div>
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="ob album/getObject;
+                    subalbum_view nocall:ob/@@album_view;
+                    subalbum_results subalbum_view/album_results;
+                    subalbum_images subalbum_results/images;
+                    number_of_images python:len(subalbum_images);
+                    random python:modules['random'];
+                    random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <tal:block condition="number_of_images">
+            <img tal:define="scale random_image/@@images;
+                             img_tag python:scale.scale('image', scale='thumb').tag()"
+                 tal:replace="structure img_tag" />
+          </tal:block>
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/Title">Title</tal:title>
+          (<tal:number content="number_of_images" />)
+        </span>
+      </a>
+    </div>
   </tal:albums>
 
-  <div class="visualClear"></div>
-  
+  <div class="visualClear"><!-- --></div>
+
   <div metal:use-macro="context/batch_macros/macros/navigation" />
 
   <metal:empty metal:define-slot="no_items_in_listing">
@@ -79,8 +78,8 @@
     </p>
   </metal:empty>
 
-
 </metal:main_macro>
 </metal:content-core>
+
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index af12928..41b6ce5 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -1,68 +1,62 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
 
-    <metal:entries fill-slot="entries">
+  <metal:entries fill-slot="entries">
     <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
-
-                    <a href="#"
-                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                        tal:attributes="href item_link">
-                        <div class="tileImage">
-                            <img src="" alt=""
-                                 tal:define="scales obj/@@images;
-                                             scale python:scales.scale('image', 'thumb')"
-                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                        </div>
-                    </a>
-
-                    <h2 class="tileHeadline" metal:define-macro="listitem">
-
-                        <a href="#"
-                           class="summary url"
-                           tal:attributes="href item_link;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-
-                    </h2>
-
-                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
-
-                    <p class="tileBody" tal:condition="item_description">
-                        <span class="description" tal:content="item_description">
-                            description
-                        </span>
-                    </p>
-
-                    <p class="tileFooter">
-                        <a href=""
-                           tal:attributes="href item_link"
-                           i18n:translate="read_more">
-                        Read More&hellip;
-                        </a>
-                    </p>
-
-                    <div class="visualClear"><!-- --></div>
-
-                </div>
-
-    </metal:entry>
+      <metal:entry fill-slot="entry">
+
+        <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+
+          <a tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
+              tal:attributes="href item_link">
+            <div class="tileImage">
+              <img src="" alt=""
+                  tal:define="scales obj/@@images;
+                              scale python:scales.scale('image', 'thumb')"
+                  tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+            </div>
+          </a>
+
+          <h2 class="tileHeadline" metal:define-macro="listitem">
+            <a class="summary url"
+                tal:attributes="href item_link;
+                                title item_type"
+                tal:content="item_title">
+              Item Title
+            </a>
+          </h2>
+
+          <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
+
+          <p class="tileBody" tal:condition="item_description">
+            <span class="description" tal:content="item_description">
+              description
+            </span>
+          </p>
+
+          <p class="tileFooter">
+            <a tal:attributes="href item_link"
+                i18n:translate="read_more">
+              Read More&hellip;
+            </a>
+          </p>
+
+          <div class="visualClear"><!-- --></div>
+
+        </div>
+
+      </metal:entry>
     </metal:block>
-    </metal:entries>
+  </metal:entries>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt
index 3bd8c4f..ab1d18e 100644
--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt
+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt
@@ -1,105 +1,97 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <tal:results define="batch view/batch">
+  <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
-
-          <div metal:use-macro="context/batch_macros/macros/navigation" />
-          <div class="has-table">
-            <table class="listing"
-                   summary="Content listing"
-                   i18n:attributes="summary summary_content_listing;">
-                <thead>
-                    <tr>
-                        <th class="nosort"
-                            i18n:translate=""
-                            tal:repeat="field view/tabular_fields"
-                            tal:content="field">Field name</th>
-                    </tr>
-                </thead>
-
-                <tbody>
-
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div class="has-table">
+        <table class="listing"
+            summary="Content listing"
+            i18n:attributes="summary summary_content_listing;">
+          <thead>
+            <tr>
+              <th class="nosort"
+                  i18n:translate=""
+                  tal:repeat="field view/tabular_fields"
+                  tal:content="field">Field name</th>
+            </tr>
+          </thead>
+          <tbody>
             <tal:entries tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-
-                    <tr metal:define-macro="listitem"
-                        tal:define="oddrow repeat/item/odd;"
-                        tal:attributes="class python: oddrow and 'even' or 'odd'">
-
-                        <tal:block tal:repeat="field view/tabular_fields">
-                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
-                                tal:define="field_data python:view.tabular_fielddata(item, field)">
-                                <tal:block tal:replace="field_data/value" />
-                            </td>
-                            <td tal:condition="python:field == 'Title'">
-                                <a href="#"
-                                   tal:attributes="href item_link;
-                                                   class string:$item_wf_state_class $item_type_class;
-                                                   title item_description;"
-                                   tal:content="item_title">
-                                    Item Title
-                                </a>
-                            </td>
-                            <td tal:condition="python:field == 'Creator'"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            name python:author['fullname'] or author['username']">
-                                <a href="#"
-                                   tal:condition="author"
-                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                   tal:content="name">Jos Henken</a>
-                            </td>
-                        </tal:block>
-
-                    </tr>
-
-            </tal:block>
+              <tal:block tal:define="item_url item/getURL;
+                                     item_title item/Title;
+                                     item_description item/Description;
+                                     item_type item/PortalType;
+                                     item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                     item_wf_state item/review_state;
+                                     item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                     item_creator item/Creator;
+                                     item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                <tr metal:define-macro="listitem"
+                    tal:define="oddrow repeat/item/odd;"
+                    tal:attributes="class python: oddrow and 'even' or 'odd'">
+
+                  <tal:block tal:repeat="field view/tabular_fields">
+                    <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                        tal:define="field_data python:view.tabular_fielddata(item, field)">
+                      <tal:block tal:replace="field_data/value" />
+                    </td>
+                    <td tal:condition="python:field == 'Title'">
+                      <a href="#"
+                          tal:attributes="href item_link;
+                          class string:$item_wf_state_class $item_type_class;
+                          title item_description;"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </td>
+                    <td tal:condition="python:field == 'Creator'"
+                        tal:define="author python:view.pas_member.info(item_creator);
+                                    name python:author['fullname'] or author['username']">
+                      <a tal:condition="author"
+                          tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                          tal:content="name">Jos Henken</a>
+                    </td>
+                  </tal:block>
+
+                </tr>
+              </tal:block>
             </tal:entries>
+          </tbody>
+        </table>
+      </div>
 
-                </tbody>
-            </table>
-          </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
 
     <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
+    <p class="discreet"
+    tal:condition="not: view/batch"
+    tal:content="view/no_items_message">
+    There are currently no items in this folder.
+    </p>
     </metal:empty>
 
-    </tal:results>
+  </tal:results>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt
index 009e8d9..ebd41fe 100644
--- a/plone/app/contenttypes/browser/templates/newsitem.pt
+++ b/plone/app/contenttypes/browser/templates/newsitem.pt
@@ -1,57 +1,49 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:head fill-slot="javascript_head_slot">
-<script type="text/javascript">
-  jQuery(function($){
-    $('.newsImageContainer a').prepOverlay({subtype: 'image'});
-  })
-</script>
+  <script type="text/javascript">
+    jQuery(function ($) {
+      $('.newsImageContainer a').prepOverlay({subtype: 'image'});
+    });
+  </script>
 </metal:head>
 
 <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core"
-          tal:define="templateId template/getId;
-                      scale_func context/@@images;
-                      scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
-
-        <figure class="newsImageContainer"
-             tal:condition="python: scaled_image">
-            <a href="#"
-               tal:define="here_url context/@@plone_context_state/object_url;
-                           large_image python: scale_func.scale('image', scale='large');"
-               tal:attributes="href large_image/url">
-              <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
-
-              <figcaption
-                 tal:condition="context/image_caption|nothing"
-                 tal:content="structure context/image_caption" >
-              </figcaption>
-
-            </a>
-        </figure>
-
-
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-             tal:content="structure context/text/output" />
-
-        <div class="newsFileContainer"
-             tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
-            <a tal:content="structure python:context.image_caption or context.image.filename"
-               tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
-            </a>
-        </div>
-
-    </metal:block>
+<metal:block define-macro="content-core"
+    tal:define="templateId template/getId;
+                scale_func context/@@images;
+                scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
+  <figure class="newsImageContainer" tal:condition="python: scaled_image">
+    <a tal:define="here_url context/@@plone_context_state/object_url;
+                   large_image python: scale_func.scale('image', scale='large');"
+        tal:attributes="href large_image/url">
+      <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
+      <figcaption tal:condition="context/image_caption|nothing"
+          tal:content="structure context/image_caption">
+      </figcaption>
+    </a>
+  </figure>
+
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure context/text/output" />
+
+  <div class="newsFileContainer"
+      tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
+    <a tal:content="structure python:context.image_caption or context.image.filename"
+        tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
+    </a>
+  </div>
+
+</metal:block>
 </metal:content-core>
 
 </body>
 </html>
-


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/650b19279850098f4d6a14db4367bdbfd9462f14

use new view names in templates, tests and upgrades

Files changed:
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_migration.py
M plone/app/contenttypes/tests/test_migration_topic.py
M plone/app/contenttypes/upgrades.py

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 5a9bf0a..055bc7c 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -238,7 +238,6 @@
       permission="zope2.View">
     <browser:page name="folder_listing" template="templates/listing.pt"/>
     <browser:page name="folder_full_view" template="templates/full_view.pt"/>
-    <browser:page name="full_view_item" template="templates/full_view_item.pt"/>
     <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
     <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
     <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
index e0adc9f..2366c33 100644
--- a/plone/app/contenttypes/browser/templates/full_view.pt
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -9,10 +9,10 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
-  <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
+  <metal:listing use-macro="context/@@listing_view/macros/content-core">
     <!-- we don't want the dl -->
     <metal:entries fill-slot="entries">
-      <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
+      <metal:block use-macro="context/@@listing_view/macros/entries">
         <metal:entry fill-slot="entry">
           <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
         </metal:entry>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index 41b6ce5..f02a961 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -8,10 +8,10 @@
 <body>
 
 <metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
+<metal:block use-macro="context/@@listing_view/macros/content-core">
 
   <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
+    <metal:block use-macro="context/@@listing_view/macros/entries">
       <metal:entry fill-slot="entry">
 
         <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
@@ -35,7 +35,7 @@
             </a>
           </h2>
 
-          <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
+          <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>
 
           <p class="tileBody" tal:condition="item_description">
             <span class="description" tal:content="item_description">
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index 5ca0793..abf84ac 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -505,7 +505,7 @@ class FolderMigrator(ATCTFolderMigrator):
 
     def beforeChange_migrate_layout(self):
         if self.old.getLayout() == 'atct_album_view':
-            self.old.setLayout('folder_album_view')
+            self.old.setLayout('album_view')
 
 
 def migrate_folders(portal):
diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index c710577..575fe5f 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -444,13 +444,13 @@ class TopicMigrator(InplaceCMFItemMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
@@ -556,13 +556,13 @@ class FolderishTopicMigrator(InplaceCMFFolderMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index 3f205e0..a4f822e 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -28,14 +28,14 @@
   </property>
 
   <!-- View information -->
-  <property name="default_view">standard_view</property>
+  <property name="default_view">listing_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
+    <element value="listing_view"/>
     <element value="summary_view"/>
-    <element value="full_view"/>
     <element value="tabular_view"/>
+    <element value="full_view"/>
     <element value="album_view"/>
-    <element value="listing_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index 3eb43e7..ff9cb4c 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -12,13 +12,13 @@
  <property name="filter_content_types">False</property>
  <property name="allowed_content_types"/>
  <property name="allow_discussion">False</property>
- <property name="default_view">folder_listing</property>
+ <property name="default_view">listing_view</property>
  <property name="view_methods">
+  <element value="listing_view"/>
   <element value="summary_view"/>
-  <element value="full_view"/>
   <element value="tabular_view"/>
+  <element value="full_view"/>
   <element value="album_view"/>
-  <element value="listing_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 3919357..18223d8 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -15,23 +15,23 @@ Test Teardown  Close all browsers
 Scenario: Test listing views
     Given I am logged in as site owner
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_listing
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_summary_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/summary_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_tabular_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/tabular_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/full_view
     Then Listing should list contained content in detail
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
     Then Album should list contained images and albums
 
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/listing_view
     Then Listing should list all content
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
@@ -40,7 +40,7 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
     Then Listing should list all content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/full_view
     Then Listing should list all content in detail
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 3354f25..217a8cd 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,7 +72,8 @@ def _get_browser(self):
         )
         return browser
 
-    def test_collection_view(self):
+    def test_default_dexterity_view(self):
+        # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue('"v": "Collection Test Page"' in browser.contents)
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index bc2e06a..30e0f1d 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -144,33 +144,33 @@ def setUp(self):
         self.request.set('URL', self.collection.absolute_url())
         self.request.set('ACTUAL_URL', self.collection.absolute_url())
 
-    def test_view(self):
+    def test_collection_view(self):
         view = self.collection.restrictedTraverse('@@view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_standard_view(self):
-        view = self.collection.restrictedTraverse('standard_view')
+    def test_collection_listing_view(self):
+        view = self.collection.restrictedTraverse('listing_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_summary_view(self):
+    def test_collection_summary_view(self):
         view = self.collection.restrictedTraverse('summary_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_all_content(self):
-        view = self.collection.restrictedTraverse('all_content')
+    def test_collection_full_view(self):
+        view = self.collection.restrictedTraverse('full_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         view = self.collection.restrictedTraverse('tabular_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_thumbnail_view(self):
-        view = self.collection.restrictedTraverse('thumbnail_view')
+    def test_collection_album_view(self):
+        view = self.collection.restrictedTraverse('album_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
@@ -247,8 +247,8 @@ def test_collection_templates(self):
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
-        # open all_content template
-        browser.open('%s/@@all_content' % url)
+        # open full_view template
+        browser.open('%s/@@full_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -258,7 +258,7 @@ def test_collection_templates(self):
         self.assertTrue("Image example" in browser.contents)
 
         # open thumbnail_view template
-        browser.open('%s/@@thumbnail_view' % url)
+        browser.open('%s/@@album_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
diff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py
index a2d9208..ac9537f 100644
--- a/plone/app/contenttypes/tests/test_folder.py
+++ b/plone/app/contenttypes/tests/test_folder.py
@@ -130,21 +130,21 @@ def test_folder_view(self):
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_summary_view(self):
-        self.browser.open(self.folder_url + '/folder_summary_view')
+        self.browser.open(self.folder_url + '/summary_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_full_view(self):
-        self.browser.open(self.folder_url + '/folder_full_view')
+        self.browser.open(self.folder_url + '/full_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_tabular_view(self):
-        self.browser.open(self.folder_url + '/folder_tabular_view')
+        self.browser.open(self.folder_url + '/tabular_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_album_view(self):
-        self.browser.open(self.folder_url + '/folder_album_view')
+        self.browser.open(self.folder_url + '/album_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index 795b5a9..a12d21f 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -922,7 +922,7 @@ def test_folder_is_migrated(self):
         dx_folder = self.portal['folder']
         self.assertTrue(IFolder.providedBy(dx_folder))
         self.assertTrue(at_folder is not dx_folder)
-        self.assertEqual(dx_folder.getLayout(), 'folder_album_view')
+        self.assertEqual(dx_folder.getLayout(), 'album_view')
 
     def test_folder_children_are_migrated(self):
         from plone.app.contenttypes.migration.migration import FolderMigrator
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 7789964..d2a3b8d 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -63,7 +63,7 @@ def test_migrate_simple_topic(self):
         self.run_migration()
         new = ICollection(self.portal.topic)
         self.assertEqual(self.portal.topic.portal_type, 'Collection')
-        self.assertEqual(self.portal.topic.getLayout(), 'standard_view')
+        self.assertEqual(self.portal.topic.getLayout(), 'listing_view')
         self.assertEqual(new.sort_on, None)
         self.assertEqual(new.sort_reversed, None)
         self.assertEqual(new.limit, 1000)
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 5615b06..70911c5 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -87,7 +87,7 @@ def migrate_to_richtext(context):
 
 
 def migrate_album_view(context):
-    """Migrate atct_album_view to folder_album_view."""
+    """Migrate atct_album_view to album_view."""
 
     # TODO: Don't reload the profile. Only change the settings.
     context.runImportStepFromProfile(
@@ -100,7 +100,7 @@ def migrate_album_view(context):
         obj = brain.getObject()
         current = context.getLayout()
         if current == 'atct_album_view':
-            obj.setLayout('folder_album_view')
+            obj.setLayout('album_view')
 
 
 def enable_shortname_behavior(context):


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/02c7bbc3422824ac57540305ca0bbd044463ff9f

upgrade step

Files changed:
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml

diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index ad295f7..34377bc 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1103</version>
+ <version>1104</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 70911c5..64c3f57 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -3,6 +3,8 @@
 from plone.app.contenttypes.utils import DEFAULT_TYPES
 from plone.dexterity.interfaces import IDexterityFTI
 from zope.component import queryUtility
+import logging
+logger = logging.getLogger(name="plone.app.contenttypes upgrade")
 
 
 def update_fti(context):
@@ -121,3 +123,44 @@ def enable_shortname_behavior(context):
         behaviors.append(behavior)
         behaviors = tuple(behaviors)
         fti._updateProperty('behaviors', behaviors)
+
+
+def use_new_view_names(context):
+    """Migrate old view names to new view names."""
+
+    # TODO: Don't reload the profile. Only change the settings.
+    context.runImportStepFromProfile(
+        'profile-plone.app.contenttypes:default',
+        'typeinfo',
+    )
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+
+    def _fixup(portal_type, view_map):
+        for brain in search(portal_type=portal_type):
+            obj = brain.getObject()
+            current = context.getLayout()
+            if current in view_map.keys():
+                obj.setLayout(view_map[current])
+                logger.info("Set view to {} for {}".format(
+                    view_map[current], obj.absolute_url()
+                ))
+
+    folder_view_map = {  # OLD : NEW
+        'folder_listing': 'listing_view',
+        'folder_full_view': 'full_view',
+        'folder_summary_view': 'summary_view',
+        'folder_tabular_view': 'tabular_view',
+        'folder_album_view': 'album_view',
+        'atct_album_view': 'album_view',
+    }
+    collection_view_map = {  # OLD : NEW
+        'view': 'listing_view',
+        'standard_view': 'listing_view',
+        'collection_view': 'listing_view',
+        'all_content': 'full_view',
+        'thumbnail_view': 'album_view',
+    }
+    _fixup('Folder', folder_view_map)
+    _fixup('Plone Site', folder_view_map)
+    _fixup('Collection', collection_view_map)
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index 1f964e7..7dc4a79 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -62,4 +62,13 @@
       handler=".upgrades.enable_shortname_behavior"
       />
 
+  <genericsetup:upgradeStep
+      source="1103"
+      destination="1104"
+      title="Use new view names"
+      description=""
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.use_new_view_names"
+      />
+
 </configure>


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0d0104c10ecc368a0656cfb18a90354173e3909b

better-to-distinguish name for these tests

Files changed:
M plone/app/contenttypes/tests/test_behaviors_collection.py

diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 217a8cd..2c2cadc 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,13 +72,13 @@ def _get_browser(self):
         )
         return browser
 
-    def test_default_dexterity_view(self):
+    def test_collection_default_dexterity_view(self):
         # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue('"v": "Collection Test Page"' in browser.contents)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/tabular_view')
         # search from here:


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8804fdc7b8d5d53ada8c192e0a38015aaf327ff4

some views need the plone_view

Files changed:
M plone/app/contenttypes/browser/templates/full_view_item.pt

diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
index 0acb32f..f8407d7 100644
--- a/plone/app/contenttypes/browser/templates/full_view_item.pt
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -35,6 +35,7 @@
       <div tal:replace="structure provider:plone.abovecontentbody" />
 
       <div tal:define="view nocall:view/default_view;
+                       plone_view context/@@plone;
                        portal_state context/@@plone_portal_state;
                        context_state context/@@plone_context_state;
                        plone_layout context/@@plone_layout;


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:42:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/a9dfd84718680fc4c470c9f40b851e553da244ed

old view titles

Files changed:
M plone/app/contenttypes/browser/configure.zcml

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 055bc7c..49136b1 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -23,19 +23,19 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
         name="tabular_view"
         template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="Tabular view"
         />
     <browser:page
         name="full_view"
@@ -47,7 +47,7 @@
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 
@@ -62,19 +62,19 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
         name="tabular_view"
         template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="Tabular view"
         />
     <browser:page
         name="full_view"
@@ -86,7 +86,7 @@
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 
@@ -114,31 +114,31 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
-        name="full_view"
-        template="templates/full_view.pt"
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="All content"
+        title="Tabular view"
         />
     <browser:page
-        name="tabular_view"
-        template="templates/listing_tabular.pt"
+        name="full_view"
+        template="templates/full_view.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="All content"
         />
     <browser:page
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-02-26T20:43:18+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/259ff4c053542249a1813d07a983dac771c7c33b

Merge pull request #215 from plone/thet-unifiedlistings

unified folder/collection listings / pt2

Files changed:
A plone/app/contenttypes/browser/folder.py
A plone/app/contenttypes/browser/full_view.py
A plone/app/contenttypes/browser/templates/full_view.pt
A plone/app/contenttypes/browser/templates/full_view_item.pt
A plone/app/contenttypes/browser/templates/listing.pt
A plone/app/contenttypes/browser/templates/listing_album.pt
A plone/app/contenttypes/browser/templates/listing_summary.pt
A plone/app/contenttypes/browser/templates/listing_tabular.pt
M buildout.d/checkouts.cfg
M buildout.d/development.cfg
M buildout.d/sources.cfg
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/newsitem.pt
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/robot/variables.py
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_migration.py
M plone/app/contenttypes/tests/test_migration_topic.py
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml
M setup.py
D plone/app/contenttypes/browser/album_view.py
D plone/app/contenttypes/browser/templates/all_content.pt
D plone/app/contenttypes/browser/templates/folder_album_view.pt
D plone/app/contenttypes/browser/templates/folder_full_view.pt
D plone/app/contenttypes/browser/templates/folder_full_view_item.pt
D plone/app/contenttypes/browser/templates/folder_listing.pt
D plone/app/contenttypes/browser/templates/folder_summary_view.pt
D plone/app/contenttypes/browser/templates/folder_tabular_view.pt
D plone/app/contenttypes/browser/templates/standard_view.pt
D plone/app/contenttypes/browser/templates/summary_view.pt
D plone/app/contenttypes/browser/templates/tabular_view.pt
D plone/app/contenttypes/browser/templates/thumbnail_view.pt

diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
index d5798b1..5b289e6 100644
--- a/buildout.d/checkouts.cfg
+++ b/buildout.d/checkouts.cfg
@@ -1,3 +1,5 @@
 [buildout]
 always-checkout = force
 auto-checkout +=
+    plone.app.dexterity
+    plone.app.robotframework
diff --git a/buildout.d/development.cfg b/buildout.d/development.cfg
index ae61c81..6ff9460 100644
--- a/buildout.d/development.cfg
+++ b/buildout.d/development.cfg
@@ -4,10 +4,10 @@ extends =
 
 eggs +=
     plone.reload
-    Products.PDBDebugMode
-    Products.DocFinderTab
-    aws.zope2zcmldoc
-    collective.profiler
+#    Products.PDBDebugMode
+#    Products.DocFinderTab
+#    aws.zope2zcmldoc
+#    collective.profiler
 
 extensions +=
     mr.developer
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
index d253567..585af8e 100644
--- a/buildout.d/sources.cfg
+++ b/buildout.d/sources.cfg
@@ -5,3 +5,5 @@ plone = git://github.com/plone
 plone_push = git@github.com:plone
 
 [sources]
+plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
+plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 8c70585..30dc2c0 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,7 +4,22 @@ Changelog
 1.2 (unreleased)
 ----------------
 
-- Define ``default_page_types`` in the ``propertiestool.xml`` profile.
+- Reformatted all templates for 2 space indentation, 4 space for attributes.
+  [thet]
+
+- Register folder and collection views under the same name. Old registrations
+  are kept for BBB compatibility.
+  [thet]
+
+- Refactor full_view and incorporate fixes from collective.fullview to
+  1) display the default views of it's items, 2) be recursively callable
+  and 3) have the same templates for folder and collections.
+  [thet]
+
+- Refactor folder_listing, folder_summary_view, folder_tabular_view and
+  folder_album_view for folders as well as standard_view (collection_view),
+  summary_view, tabular_view and thumbnail_view for collections to use the same
+  templates and base view class.
   [thet]
 
 - In the file view, render HTML5 ``<audio>`` or ``<video>`` tags for audio
@@ -12,6 +27,9 @@ Changelog
   just don't render these tags.
   [thet]
 
+- Define ``default_page_types`` in the ``propertiestool.xml`` profile.
+  [thet]
+
 - Add ``event_listing`` to available view methods for the Folder and Collection
   types.
   [thet]
diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 871e570..4dbf5b8 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -145,36 +145,6 @@ def results(self, batch=True, b_start=0, b_size=None,
             limit=limit, brains=brains, custom_query=custom_query
         )
 
-    def getFoldersAndImages(self):
-        catalog = getToolByName(self.context, 'portal_catalog')
-        results = self.results(batch=False)
-
-        _mapping = {'results': results, 'images': {}}
-        portal_atct = getToolByName(self.context, 'portal_atct', None)
-        image_types = getattr(portal_atct, 'image_types', ['Image'])
-
-        filtered_results = []
-        for item in results:
-            item_path = item.getPath()
-            if item.isPrincipiaFolderish:
-                query = {
-                    'portal_type': image_types,
-                    'path': item_path,
-                }
-                _mapping['images'][item_path] = IContentListing(catalog(query))
-            elif item.portal_type in image_types:
-                _mapping['images'][item_path] = [item, ]
-            else:
-                continue
-            filtered_results.append(item)
-
-        _mapping['total_number_of_images'] = sum(map(
-            len,
-            _mapping['images'].values()
-        ))
-        _mapping['results'] = filtered_results
-        return _mapping
-
     def selectedViewFields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
@@ -187,7 +157,8 @@ def selectedViewFields(self):
                            name='plone.app.contenttypes.metadatafields')
         for field in vocab(self.context):
             _mapping[field.value] = (field.value, field.title)
-        return [_mapping[field] for field in self.customViewFields]
+        ret = [_mapping[field] for field in self.customViewFields]
+        return ret
 
     # Getters and setters for our fields.
 
diff --git a/plone/app/contenttypes/browser/album_view.py b/plone/app/contenttypes/browser/album_view.py
deleted file mode 100644
index fca86d8..0000000
--- a/plone/app/contenttypes/browser/album_view.py
+++ /dev/null
@@ -1,57 +0,0 @@
-# -*- coding: utf-8 -*-
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-# from Products.CMFCore.utils import getToolByName
-
-
-class AlbumView(BrowserView):
-
-    template = ViewPageTemplateFile('templates/folder_album_view.pt')
-
-    def getAlbumContent(self,
-                        container=None,
-                        images=0,
-                        folders=0,
-                        subimages=0,
-                        others=0):
-        """ Mostly ripped out from atctListAlbum.py
-        """
-
-        if not container:
-            container = self.context
-
-        result = {}
-
-        if images:
-            result['images'] = container.getFolderContents(
-                {'portal_type': ('Image',)}, full_objects=True)
-
-        if folders:
-            result['folders'] = container.getFolderContents(
-                {'portal_type': ('Folder',)})
-
-        if subimages:
-            # Handle brains or objects
-            if getattr(container, 'getPath', None) is not None:
-                path = container.getPath()
-            else:
-                path = '/'.join(container.getPhysicalPath())
-            # Explicitly set path to remove default depth
-            result['subimages'] = container.getFolderContents(
-                {'portal_type': ('Image',), 'path': path})
-
-        if others:
-            utils = getToolByName(self.context, 'plone_utils')
-            searchContentTypes = utils.getUserFriendlyTypes()
-            filtered = [p_type for p_type in searchContentTypes
-                        if p_type not in ('Image', 'Folder',)]
-            if filtered:
-                # We don't need the full objects for the folder_listing
-                result['others'] = container.getFolderContents(
-                    {'portal_type': filtered})
-            else:
-                result['others'] = ()
-
-        return result
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index ddb2f6f..23953c0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,25 +1,68 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from Products.Five import BrowserView
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.app.contenttypes.behaviors.collection import ICollection
+from plone.app.contenttypes.browser.folder import FolderView
+from plone.app.contenttypes import _
 
 
-class CollectionView(BrowserView):
+class CollectionView(FolderView):
 
-    def results(self, **kwargs):
+    def __init__(self, *args, **kwargs):
+        super(CollectionView, self).__init__(*args, **kwargs)
         context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.results(**kwargs)
+        self.collection_behavior = ICollection(context)
+        self.b_size = self.collection_behavior.item_count
 
-    def getFoldersAndImages(self, **kwargs):
-        context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.getFoldersAndImages(**kwargs)
+    def results(self, **kwargs):
+        """Return a content listing based result set with results from the
+        collection query.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
 
-    def selectedViewFields(self):
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
+        return self.collection_behavior.results(**kwargs)
+
+    @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        results = self.results()
+        images = []
+        folders = []
+        for it in results:
+            # TODO: potentially expensive!
+            ob = it.getObject()
+            if IImage.providedBy(ob):
+                images.append(it)
+            elif IFolder.providedBy(ob):
+                folders.append(it)
+        return {'images': images, 'folders': folders}
+
+    def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
         """
         context = aq_inner(self.context)
         wrapped = ICollection(context)
-        return wrapped.selectedViewFields()
+        fields = wrapped.selectedViewFields()
+        fields = [field[0] for field in fields]
+        return fields
+
+    def no_items_message(self):
+        return _(
+            'description_no_results_found',
+            default=u"No results were found."
+        )
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index a3fc913..49136b1 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -9,257 +9,213 @@
 
   <browser:resource
       name="collection.css"
-      file="stylesheets/collection.css" />
+      file="stylesheets/collection.css"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"/>
 
 
-  <!-- VIEWS FOR COLLECTION ITEM -->
+  <!-- VIEWS FOR PLONE SITE ROOT -->
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
+
+
+  <!-- VIEWS FOR FOLDERS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
 
-  <browser:page
-    name="view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/standard_view.pt"
-    />
 
+  <!-- VIEWS FOR COLLECTION ITEM -->
   <browser:page
-    name="standard_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/standard_view.pt"
-    />
+      name="listing_view"
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      template="templates/listing.pt"
+      permission="zope2.View"
+      />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
-
        Note that these ignore other fields, but integrators should
        create other themplates if they want that.  Or improve the
        query view widget.  -->
-
-  <browser:page
-    name="collection_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/standard_view.pt"
-    />
-
-  <browser:page
-    name="summary_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/summary_view.pt"
-    />
-
-  <browser:page
-    name="all_content"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/all_content.pt"
-    />
-
-  <browser:page
-    name="tabular_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/tabular_view.pt"
-    />
-
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
+
+
+  <!-- OTHER VIEWS -->
   <browser:page
-    name="thumbnail_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/thumbnail_view.pt"
-    />
-
-  <!-- COLLECTION MENU ITEMS -->
-
-  <browser:menuItems
-    for="plone.app.contenttypes.interfaces.ICollection"
-    menu="plone_displayviews">
-    <browser:menuItem
-      title="Standard view"
-      action="standard_view"
-      />
-    <browser:menuItem
-      title="Summary view"
-      action="summary_view"
-      />
-    <browser:menuItem
-      title="All content"
-      action="all_content"
-      />
-    <browser:menuItem
-      title="Tabular view"
-      action="tabular_view"
-      />
-    <browser:menuItem
-      title="Thumbnail view"
-      action="thumbnail_view"
+      name="full_view_item"
+      for="*"
+      class=".full_view.FullViewItem"
+      template="templates/full_view_item.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
       />
-  </browser:menuItems>
-
   <browser:page
-    name="document_view"
-    for="plone.app.contenttypes.interfaces.IDocument"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/document.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Document"
-    />
-
-  <browser:page
-    name="file_view"
-    for="plone.app.contenttypes.interfaces.IFile"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".file.FileView"
-    template="templates/file.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View File"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="Products.CMFPlone.interfaces.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_full_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_full_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="All content"
-    />
-
-  <browser:page
-    name="folder_full_view_item"
-    for="Products.CMFCore.interfaces._content.IContentish"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_full_view_item.pt"
-    permission="zope2.View"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_summary_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_summary_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_tabular_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/folder_tabular_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="document_view"
+      for="plone.app.contenttypes.interfaces.IDocument"
+      template="templates/document.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Document"
+      />
   <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    />
-
-  <!-- BBB -->
+      name="file_view"
+      for="plone.app.contenttypes.interfaces.IFile"
+      class=".file.FileView"
+      template="templates/file.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View File"
+      />
   <browser:page
-    name="atct_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
-    />
-
+      name="image_view"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image"
+      />
   <browser:page
-    name="image_view"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image"
-    />
-
+      name="image_view_fullscreen"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image_view_fullscreen.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image Fullscreen"
+      />
   <browser:page
-    name="image_view_fullscreen"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image_view_fullscreen.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image Fullscreen"
-    />
-
+      name="link_redirect_view"
+      for="plone.app.contenttypes.interfaces.ILink"
+      class=".link_redirect_view.LinkRedirectView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Link"
+      />
   <browser:page
-    name="link_redirect_view"
-    for="plone.app.contenttypes.interfaces.ILink"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".link_redirect_view.LinkRedirectView"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Link"
-    />
-
+      name="newsitem_view"
+      for="plone.app.contenttypes.interfaces.INewsItem"
+      template="templates/newsitem.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View News Item"
+      />
   <browser:page
-    name="newsitem_view"
-    for="plone.app.contenttypes.interfaces.INewsItem"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/newsitem.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View News Item"
-    />
+      name="contenttype_utils"
+      for="*"
+      class=".utils.Utils"
+      allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      />
 
-  <browser:page
-    name="contenttype_utils"
-    for="*"
-    permission="zope2.View"
-    class=".utils.Utils"
-    allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
-    />
 
   <configure zcml:condition="installed Products.Archetypes">
     <browser:viewlet
@@ -273,4 +229,45 @@
       />
   </configure>
 
+
+  <!-- BBB OlD VIEW NAME REGISTRATIONS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_full_view" template="templates/full_view.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+    <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
+    <browser:page name="atct_album_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="view" template="templates/listing.pt"/>
+    <browser:page name="standard_view" template="templates/listing.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="collection_view" template="templates/listing.pt"/>
+    <browser:page name="all_content" template="templates/full_view.pt"/>
+    <browser:page name="thumbnail_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+
 </configure>
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
new file mode 100644
index 0000000..72d8e72
--- /dev/null
+++ b/plone/app/contenttypes/browser/folder.py
@@ -0,0 +1,182 @@
+# -*- coding: utf-8 -*-
+from Acquisition import aq_base
+from Products.CMFPlone.PloneBatch import Batch
+from Products.CMFPlone.utils import safe_callable
+from Products.Five import BrowserView
+from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
+from plone.event.interfaces import IEvent
+from plone.registry.interfaces import IRegistry
+from zope.component import getMultiAdapter
+from zope.component import getUtility
+from zope.contentprovider.interfaces import IContentProvider
+
+HAS_SECURITY_SETTINGS = True
+try:
+    from Products.CMFPlone.interfaces import ISecuritySchema
+except ImportError:
+    HAS_SECURITY_SETTINGS = False
+
+
+class FolderView(BrowserView):
+
+    def __init__(self, context, request):
+        super(FolderView, self).__init__(context, request)
+
+        self.plone_view = getMultiAdapter(
+            (context, request), name=u"plone")
+        self.portal_state = getMultiAdapter(
+            (context, request), name=u"plone_portal_state")
+        self.pas_member = getMultiAdapter(
+            (context, request), name=u"pas_member")
+
+        self.text_class = None
+
+        limit_display = getattr(self.request, 'limit_display', None)
+        limit_display = int(limit_display) if limit_display is not None else 20
+        b_size = getattr(self.request, 'b_size', None)
+        self.b_size = int(b_size) if b_size is not None else limit_display
+        b_start = getattr(self.request, 'b_start', None)
+        self.b_start = int(b_start) if b_start is not None else 0
+
+    def results(self, **kwargs):
+        """Return a content listing based result set with contents of the
+        folder.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('portal_type', self.friendly_types)
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
+        results = self.context.restrictedTraverse(
+            '@@folderListing')(**kwargs)
+        return results
+
+    def batch(self):
+        batch = Batch(
+            self.results(), size=self.b_size, start=self.b_start, orphan=1)
+        return batch
+
+    def normalizeString(self, text):
+        return self.plone_view.normalizeString(text)
+
+    def toLocalizedTime(self, time, long_format=None, time_only=None):
+        return self.plone_view.toLocalizedTime(time, long_format, time_only)
+
+    @property
+    def friendly_types(self):
+        return self.portal_state.friendly_types()
+
+    @property
+    def isAnon(self):
+        return self.portal_state.anonymous()
+
+    @property
+    def navigation_root_url(self):
+        return self.portal_state.navigation_root_url()
+
+    @property
+    def use_view_action(self):
+        site_props = self.context.restrictedTraverse(
+            'portal_properties').site_properties
+        return getattr(site_props, 'typesUseViewActionInListings', ())
+
+    @property
+    def show_about(self):
+        if not HAS_SECURITY_SETTINGS:
+            # BBB
+            site_props = self.context.restrictedTraverse(
+                'portal_properties').site_properties
+            show_about = getattr(site_props, 'allowAnonymousViewAbout', False)
+        else:
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISecuritySchema, prefix="plone")
+            show_about = getattr(settings, 'allow_anon_views_about', False)
+        return show_about or not self.isAnon
+
+    @property
+    def text(self):
+        textfield = getattr(aq_base(self.context), 'text', None)
+        text = getattr(textfield, 'output', None)
+        if text:
+            self.text_class = 'stx' if textfield.mimeType in (
+                'text/structured', 'text/x-rst', 'text/restructured'
+            ) else 'plain'
+        return text
+
+    @property
+    def tabular_fields(self):
+        ret = []
+        ret.append('Title')
+        if self.show_about:
+            ret.append('Creator')
+        ret.append('Type')
+        if self.show_about:
+            ret.append('ModificationDate')
+        return ret
+
+    def tabular_fielddata(self, item, fieldname):
+        value = getattr(item, fieldname, '')
+        if safe_callable(value):
+            value = value()
+        if fieldname in [
+                'CreationDate',
+                'ModificationDate',
+                'Date',
+                'EffectiveDate',
+                'ExpirationDate',
+                'effective',
+                'expires',
+                'start',
+                'end',
+                'created',
+                'modified',
+                'last_comment_date']:
+            value = self.toLocalizedTime(value, long_format=1)
+
+        return {
+            # 'title': _(fieldname, default=fieldname),
+            'value': value
+        }
+
+    def is_event(self, obj):
+        return IEvent.providedBy(obj)
+
+    def formatted_date(self, item):
+        provider = getMultiAdapter(
+            (self.context, self.request, self),
+            IContentProvider, name='formatted_date'
+        )
+        return provider(item)
+
+    @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        images = self.results(
+            batch=False,
+            object_provides=IImage.__identifier__
+        )
+        folders = self.results(
+            batch=False,
+            object_provides=IFolder.__identifier__
+        )
+        return {'images': images, 'folders': folders}
+
+    @property
+    def no_items_message(self):
+        return _(
+            'description_no_items_in_folder',
+            default=u"There are currently no items in this folder."
+        )
diff --git a/plone/app/contenttypes/browser/full_view.py b/plone/app/contenttypes/browser/full_view.py
new file mode 100644
index 0000000..58201f7
--- /dev/null
+++ b/plone/app/contenttypes/browser/full_view.py
@@ -0,0 +1,35 @@
+from Products.Five.browser import BrowserView
+from Products.CMFCore.utils import getToolByName
+from zope.publisher.interfaces.browser import IBrowserView
+
+
+class FullViewItem(BrowserView):
+
+    def __init__(self, context, request):
+        super(FullViewItem, self).__init__(context, request)
+        self.item_type = self.context.portal_type
+
+    @property
+    def default_view(self):
+        context = self.context
+        item_layout = context.getLayout()
+        default_view = context.restrictedTraverse(item_layout)
+        return default_view
+
+    @property
+    def item_macros(self):
+        default_view = self.default_view
+        if IBrowserView.providedBy(default_view):
+            # IBrowserView
+            return default_view.index.macros
+        else:
+            # FSPageTemplate
+            return default_view.macros
+
+    @property
+    def item_url(self):
+        context = self.context
+        url = context.absolute_url()
+        props = getToolByName(context, 'portal_properties')
+        use_view_action = props.site_properties.typesUseViewActionInListings
+        return self.item_type in use_view_action and '%s/view' % url or url
diff --git a/plone/app/contenttypes/browser/templates/all_content.pt b/plone/app/contenttypes/browser/templates/all_content.pt
deleted file mode 100644
index 7c78024..0000000
--- a/plone/app/contenttypes/browser/templates/all_content.pt
+++ /dev/null
@@ -1,29 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/standard_view/macros/content-core">
-
-    <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-        <div tal:define="realobject python:item.getObject()"
-             tal:replace="structure realobject/folder_full_view_item" />
-
-    </metal:entry>
-    </metal:block>
-    </metal:entries>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
index 3e1f9ce..8ba1390 100644
--- a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
+++ b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
@@ -1,20 +1,18 @@
 <tal:available condition="view/available">
-<div class="portalMessage alert-box secondary warning"
-     i18n:domain="plone">
+  <div class="portalMessage alert-box secondary warning" i18n:domain="plone">
     <strong i18n:translate="">Warning</strong>
-        <tal:manager tal:condition="not:view/can_migrate">
-            <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
-        </tal:manager>
-        <tal:manager tal:condition="view/can_migrate">
-            <span i18n:translate="">You can't edit this content unless you
-                <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
-                    migrate the default content-types to Dexterity.
-                </a>
-            </span>
-        </tal:manager>
-</div>
-
-<style type="text/css">
-#contentview-edit {display: None;}
-</style>
+    <tal:manager tal:condition="not:view/can_migrate">
+      <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
+    </tal:manager>
+    <tal:manager tal:condition="view/can_migrate">
+      <span i18n:translate="">You can't edit this content unless you
+        <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
+          migrate the default content-types to Dexterity.
+        </a>
+      </span>
+    </tal:manager>
+  </div>
+  <style type="text/css">
+    #contentview-edit {display: None;}
+  </style>
 </tal:available>
diff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt
index 25fefa0..0e6756b 100644
--- a/plone/app/contenttypes/browser/templates/document.pt
+++ b/plone/app/contenttypes/browser/templates/document.pt
@@ -1,20 +1,19 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
-    <metal:content-core define-macro="content-core">
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-              tal:content="structure python:context.text.output_relative_to(view.context)" />
-    </metal:content-core>
+<metal:content-core define-macro="content-core">
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure python:context.text.output_relative_to(view.context)" />
+</metal:content-core>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt
index 547d748..b6e8eae 100644
--- a/plone/app/contenttypes/browser/templates/file.pt
+++ b/plone/app/contenttypes/browser/templates/file.pt
@@ -1,44 +1,43 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="content_type context/file/contentType|nothing;
-                                 download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
-            <p>
-                <a tal:attributes="href download_url">
-                    <img tal:attributes="src view/get_mimetype_icon;
-                                         alt content_type;" border="0"  />
-                    <tal:name tal:content="context/file/filename" >Filename</tal:name>
-                </a>
-                <span class="discreet"
-                      tal:define="size context/file/getSize;
-                                  kb python:size/1024">
-                      &mdash; <span tal:replace="kb" /> KB</span>
-            </p>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core"
+    tal:define="content_type context/file/contentType|nothing;
+                download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
+  <p>
+    <a tal:attributes="href download_url">
+      <img tal:attributes="src view/get_mimetype_icon;
+                           alt content_type;" border="0" />
+      <tal:name tal:content="context/file/filename" >Filename</tal:name>
+    </a>
+    <span class="discreet"
+        tal:define="size context/file/getSize;
+                    kb python:size/1024">
+      &mdash; <span tal:replace="kb" /> KB</span>
+  </p>
 
-            <video tal:condition="view/is_videotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </video>
+  <video tal:condition="view/is_videotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </video>
 
-            <audio tal:condition="view/is_audiotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </audio>
+  <audio tal:condition="view/is_audiotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </audio>
 
-            <div tal:condition="python: content_type.startswith('text')">
-                <h2 i18n:translate="heading_file_contents">File contents</h2>
-                <pre tal:content="context/file/data|nothing" />
-            </div>
-        </metal:block>
-    </metal:content-core>
+  <div tal:condition="python: content_type.startswith('text')">
+    <h2 i18n:translate="heading_file_contents">File contents</h2>
+    <pre tal:content="context/file/data|nothing" />
+  </div>
 
-</body>
+</metal:block>
+</metal:content-core>
 
+</body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/folder_album_view.pt b/plone/app/contenttypes/browser/templates/folder_album_view.pt
deleted file mode 100644
index 010170b..0000000
--- a/plone/app/contenttypes/browser/templates/folder_album_view.pt
+++ /dev/null
@@ -1,103 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
-      lang="en-US"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-
-<metal:main_macro define-macro="content-core"
-     tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
-                 images result/images;
-                 albums result/folders;
-                 otherContents result/others;
-                 Batch python:modules['Products.CMFPlone'].Batch;
-                 b_start python:request.get('b_start', 0);
-                 templateId template/getId;
-                 batch python:Batch(images, 12, int(b_start), orphan=1)">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/getText;
-                     text python:has_text and here.getText() or ''"
-         tal:condition="text"
-         tal:attributes="class python: here.Format() in ('text/structured',
-                                               'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:albumsimages tal:condition="python:albums or images">
-        <tal:images tal:condition="batch" tal:repeat="image batch">
-            <div class="photoAlbumEntry">
-                <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                               scale image/@@images;
-                               img_tag python:scale.scale('image', scale='thumb').tag()"
-                   tal:attributes="href string:${image/absolute_url}/view;
-                                   title image/Description">
-                    <span class="photoAlbumEntryWrapper">
-                        <img src="" alt="" tal:replace="structure img_tag" />
-                    </span>
-                    <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
-                       Title
-                    </span>
-                </a>
-            </div>
-        </tal:images>
-
-        <div class="photoAlbum" tal:condition="albums">
-        <tal:albums tal:repeat="album albums">
-
-            <div class="photoAlbumEntry photoAlbumFolder"
-                 tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                             number_of_images python:len(image_brains_in_album);
-                             random python:modules['random'];
-                             random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-                        <a tal:attributes="href album/getURL;
-                                           title album/Description">
-                            <span class="photoAlbumEntryWrapper">
-                                <tal:block condition="number_of_images">
-                                <img src="" alt=""
-                                     tal:define="scale random_image/@@images;
-                                                 img_tag python:scale.scale('image', scale='thumb').tag()"
-                                     tal:replace="structure img_tag" />
-                                </tal:block>
-                            </span>
-                            <span class="photoAlbumEntryTitle">
-                               <tal:title content="album/pretty_title_or_id">Title</tal:title>
-                            (<tal:number content="number_of_images" />)
-                            </span>
-                        </a>
-            </div>
-
-        </tal:albums>
-        </div>
-
-        <div class="visualClear"><!-- --></div>
-
-    </tal:albumsimages>
-
-    <p class="discreet"
-       i18n:domain="atcontenttypes"
-       i18n:translate="text_no_albums_uploaded"
-       tal:condition="python:not (albums or images)">
-        No albums or photos uploaded yet.
-    </p>
-
-    <div tal:condition="python:albums or images"
-         metal:use-macro="here/batch_macros/macros/navigation" />
-
-    <tal:listing condition="otherContents"
-                 define="folderContents otherContents">
-        <metal:listing metal:use-macro="here/folder_listing/macros/listing">
-            <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
-        </metal:listing>
-
-    </tal:listing>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_full_view.pt b/plone/app/contenttypes/browser/templates/folder_full_view.pt
deleted file mode 100644
index cb2671b..0000000
--- a/plone/app/contenttypes/browser/templates/folder_full_view.pt
+++ /dev/null
@@ -1,26 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-    <metal:content-core fill-slot="content-core">
-        <metal:block use-macro="context/folder_listing/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/folder_listing/macros/entries">
-                    <metal:entry fill-slot="entry">
-                        <div tal:define="obj_view python:item.getObject().restrictedTraverse('folder_full_view_item')"
-                             tal:replace="structure python:obj_view()" />
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:block>
-    </metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_full_view_item.pt b/plone/app/contenttypes/browser/templates/folder_full_view_item.pt
deleted file mode 100644
index 55e3477..0000000
--- a/plone/app/contenttypes/browser/templates/folder_full_view_item.pt
+++ /dev/null
@@ -1,80 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone"
-      tal:omit-tag="">
-
-<body tal:omit-tag="">
-
-    <div class="item visualIEFloatFix"
-         tal:define="portal_state context/@@plone_portal_state;
-                     context_state context/@@plone_context_state;
-                     plone_view context/@@plone;
-                     plone_layout context/@@plone_layout;
-                     lang portal_state/language;
-                     view nocall:view | nocall: plone_view;
-                     dummy python: plone_layout.mark_view(view);
-                     portal_url portal_state/portal_url;
-                     checkPermission nocall: context/portal_membership/checkPermission;
-                     site_properties context/portal_properties/site_properties;
-                     item_type context/portal_type;
-                     item_layout here/getLayout;
-                     override python: {'Link': 'link_view'};
-                     item_macro python:path('here/%s/macros/content-core | nothing' % override.get(item_type, item_layout));
-                     use_view_action site_properties/typesUseViewActionInListings|python:();
-                     item_url context/absolute_url;
-                     normalizeString nocall: context/plone_utils/normalizeString;
-                     item_type_class python: 'contenttype-' + normalizeString(item_type);
-                     kss_inline_editable python:False;
-                     rendering_error python:[];
-                     ">
-
-        <div tal:replace="structure provider:plone.abovecontenttitle" />
-
-        <h2 class="headline">
-            <a href="#" class="summary url" tal:content="context/Title"
-               tal:attributes="href python:item_url+'/view' if item_type in use_view_action else item_url;">
-               Title or id
-             </a>
-        </h2>
-
-        <div tal:replace="structure provider:plone.belowcontenttitle" />
-
-        <div class="description"
-             tal:content="context/Description"
-             tal:condition="context/Description">
-            Description
-        </div>
-
-        <tal:block tal:condition="item_macro" tal:on-error="python:rendering_error.append(True)">
-
-            <div tal:replace="structure provider:plone.abovecontentbody" />
-
-            <div metal:use-macro="item_macro">
-                content
-            </div>
-
-            <div tal:replace="structure provider:plone.belowcontentbody" />
-
-        </tal:block>
-
-        <tal:block tal:condition="rendering_error">
-            <!-- Error rendering item macro -->
-        </tal:block>
-
-        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
-            <a href=""
-               tal:attributes="href python: item_url+'/view' if item_type in use_view_action else item_url;"
-               i18n:translate="read_more">
-                Read More&hellip;
-            </a>
-        </p>
-
-        <div class="visualClear"><!-- --></div>
-
-    </div>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_listing.pt b/plone/app/contenttypes/browser/templates/folder_listing.pt
deleted file mode 100644
index d63282c..0000000
--- a/plone/app/contenttypes/browser/templates/folder_listing.pt
+++ /dev/null
@@ -1,194 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block define-macro="content-core"
-                    tal:define="templateId template/getId">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
-         tal:condition="text"
-         tal:attributes="class python: context.Format() in ('text/structured',
-                                               'text/x-rst', ) and  'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <metal:listingmacro define-macro="listing">
-    <tal:foldercontents define="contentFilter contentFilter|request/contentFilter|nothing;
-                        contentFilter python:contentFilter and dict(contentFilter) or {};
-                        limit_display limit_display|request/limit_display|nothing;
-                        limit_display python:limit_display and int(limit_display) or None;
-                        more_url more_url|request/more_url|string:folder_contents;
-                        is_a_topic python:context.portal_type=='Topic';
-                        friendly_types portal_state/friendly_types;
-                        dummy python:not is_a_topic and contentFilter.setdefault('portal_type', friendly_types);
-                        folderContents folderContents|nothing; folderContents python:folderContents or is_a_topic and context.queryCatalog(batch=True, **contentFilter) or context.getFolderContents(contentFilter, batch=True, b_size=limit_display or 100);
-                        site_properties context/portal_properties/site_properties;
-                        use_view_action site_properties/typesUseViewActionInListings|python:();
-                        Batch python:modules['Products.CMFPlone'].Batch;
-                        plone_layout context/@@plone_layout;
-                        b_start python:request.get('b_start', 0);
-                        batch python:isinstance(folderContents, Batch) and folderContents or Batch(folderContents, limit_display or 100, int(b_start), orphan=1);
-                        isAnon portal_state/anonymous;
-                        normalizeString nocall: context/plone_utils/normalizeString;
-                        toLocalizedTime nocall: plone_view/toLocalizedTime;
-                        show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
-                        navigation_root_url portal_state/navigation_root_url;
-                        pas_member context/@@pas_member;">
-    <tal:listing condition="batch">
-
-        <ul metal:define-slot="entries">
-            <li tal:repeat="item batch" metal:define-macro="entries">
-            <tal:block tal:define="item_url item/getURL|item/absolute_url;
-                                   item_id item/getId|item/id;
-                                   item_title_or_id item/pretty_title_or_id;
-                                   item_description item/Description;
-                                   item_type item/portal_type;
-                                   item_type_title item/Type;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon python:plone_layout.getIcon(item);
-                                   item_type_class python:'contenttype-' + normalizeString(item_type);
-                                   item_wf_state item/review_state|python: context.portal_workflow.getInfoFor(item, 'review_state', '');
-                                   item_wf_state_class python:'state-' + normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_start item/start|item/StartDate|nothing;
-                                   item_end item/end|item/EndDate|nothing;
-                                   item_sametime python: item_start == item_end;
-                                   item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
-                <metal:block define-slot="entry">
-                <span metal:define-macro="listitem"
-                    tal:define="item_type_event_class python: item_type == 'Event' and 'vevent' or None"
-                    tal:attributes="class item_type_event_class|nothing">
-
-                    <span class="summary">
-                        <img tal:replace="structure item_icon/html_tag" />
-                        <a href="#"
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;
-                                           class string:$item_type_class $item_wf_state_class url"
-                           tal:content="item_title_or_id">
-                            Item Title
-                        </a>
-                    </span>
-
-                    <span class="documentByLine">
-                        <span tal:condition="python: item_type == 'Event' and item_sametime"
-                              i18n:translate="label_event_byline_onlyfrom">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline_samedate">
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start)"
-                                   i18n:name="start">from date</abbr> from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,time_only=1)"
-                                   i18n:name="starttime">from time</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,time_only=1)"
-                                   i18n:name="end">to time</abbr>
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
-                              i18n:translate="label_event_byline">
-                              from
-                                   <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>
-                        </span>
-                         <span tal:condition="python: item_type == 'Event' and item.location"
-                              i18n:translate="label_event_byline_location">&mdash;
-                             <span tal:content="string:${item/location}"
-                                   class="location"
-                                   i18n:name="location">Oslo</span>,
-                        </span>
-                        <tal:byline condition="show_about">
-                            &mdash;
-
-                            <tal:name tal:condition="item_creator"
-                                tal:define="author python:pas_member.info(item_creator);
-                                            creator_short_form author/username;
-                                            creator_long_form string:?author=${author/username};
-                                            creator_is_openid python:'/' in creator_short_form;
-                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                              <span i18n:translate="label_by_author">
-                                by
-                              <a href="#"
-                                 tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
-                                 tal:content="author/name_or_id"
-                                 tal:omit-tag="not:author"
-                                 i18n:name="author">
-                                Bob Dobalina
-                              </a>
-                              </span>
-
-                            </tal:name>
-
-                            <tal:modified condition="python: item_type != 'Event'">
-                                &mdash;
-                                <tal:mod i18n:translate="box_last_modified">
-                                  last modified
-                                </tal:mod>
-                                <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
-                                  August 16, 2001 at 23:35:59
-                                </span>
-                            </tal:modified>
-
-                            <metal:description define-slot="description_slot">
-                                <tal:comment replace="nothing">
-                                    Place custom listing info for custom types here
-                                </tal:comment>
-                            </metal:description>
-                        </tal:byline>
-                    </span>
-
-                </span>
-
-                <p class="description discreet"
-                    tal:condition="item_description"
-                    tal:content="item_description">
-                    description
-                </p>
-            </metal:block>
-            </tal:block>
-            </li>
-        </ul>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-    </tal:listing>
-    <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: folderContents"
-           i18n:translate="description_no_items_in_folder">
-            There are currently no items in this folder.
-        </p>
-    </metal:empty>
-
-    </tal:foldercontents>
-    </metal:listingmacro>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_summary_view.pt b/plone/app/contenttypes/browser/templates/folder_summary_view.pt
deleted file mode 100644
index c2d78c5..0000000
--- a/plone/app/contenttypes/browser/templates/folder_summary_view.pt
+++ /dev/null
@@ -1,122 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="listing" extend-macro="context/folder_listing/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/folder_listing/macros/entries">
-                    <metal:entry fill-slot="entry">
-                <div class="tileItem visualIEFloatFix"
-                     tal:define="item_object item/getObject;">
-
-                    <a href="#"
-                       tal:define="real_object python:item_object.aq_explicit"
-                       tal:condition="python:getattr(real_object, 'image', None)"
-                       tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url">
-                        <img tal:define="images item_object/@@images;
-                                         scale python: images.scale('image', scale='thumb')"
-                             tal:condition="scale"
-                             src="" alt=""
-                             tal:replace="structure python: scale.tag(css_class='tileImage')" />
-                    </a>
-
-                    <h2 class="tileHeadline"
-                        metal:define-macro="listitem">
-
-                        <a href="#"
-                           class="summary url"
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;"
-                           tal:content="item_title_or_id">
-                            Item Title
-                        </a>
-
-                    </h2>
-
-                    <div class="documentByLine" tal:condition="python: site_properties.allowAnonymousViewAbout or not isAnon">
-                    <tal:event condition="python: item_type == 'Event'">
-                        <span tal:condition="python: item_type == 'Event' and item.location"
-                              i18n:translate="label_event_byline_with_location">
-                            (<span tal:content="string:${item/location}"
-                                   class="location"
-                                   i18n:name="location">Oslo</span>, from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>)
-                        </span>
-                        <span tal:condition="python: item_type == 'Event' and not item.location"
-                              i18n:translate="label_event_byline_without_location">
-                            (from
-                             <abbr class="dtstart"
-                                   tal:attributes="title python:item_start"
-                                   tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                   i18n:name="start">from date</abbr> to
-                             <abbr class="dtend"
-                                   tal:attributes="title python:item_end"
-                                   tal:content="python:toLocalizedTime(item_end,long_format=1)"
-                                   i18n:name="end">to date</abbr>)
-                        </span>
-                    </tal:event>
-                    <tal:newsitem condition="python: item_type == 'News Item'">
-                        <tal:name tal:condition="item_creator"
-                            tal:define="author python:pas_member.info(item_creator)">
-                          <span class="documentAuthor" i18n:translate="label_by_author">
-                            by
-                          <a href="#"
-                             tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
-                             tal:content="author/name_or_id"
-                             tal:omit-tag="not:author"
-                             i18n:name="author">
-                            Bob Dobalina
-                          </a>
-                          </span>
-                        </tal:name>
-                        &mdash;
-                        <span class="documentModified">
-                              <tal:mod i18n:translate="box_last_modified">
-                              last modified
-                              </tal:mod>
-                              <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
-                                      August 16, 2001 at 23:35:59
-                              </span>
-                        </span>
-                    </tal:newsitem>
-                    </div>
-
-                    <p class="tileBody" tal:condition="item_description">
-                        <span class="description" tal:content="item_description">
-                            description
-                        </span>
-                    </p>
-
-                    <p class="tileFooter">
-                        <a href=""
-                           tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;"
-                           i18n:translate="read_more">
-                        Read More&hellip;
-                        </a>
-                    </p>
-
-                    <div class="visualClear"><!-- --></div>
-
-                </div>
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:block>
-    </metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt b/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
deleted file mode 100644
index c5e87a8..0000000
--- a/plone/app/contenttypes/browser/templates/folder_tabular_view.pt
+++ /dev/null
@@ -1,96 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-  <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="listing" extend-macro="context/folder_listing/macros/content-core">
-      <metal:entries fill-slot="entries">
-
-          <div metal:use-macro="context/batch_macros/macros/navigation" />
-          <div class="has-table">
-            <table class="listing"
-                   summary="Content listing"
-                   i18n:attributes="summary summary_content_listing;">
-                <thead>
-                    <tr>
-                        <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_title"
-                          >Title</tal:title>&nbsp;</th>
-                        <th class="nosort"
-                            tal:condition="show_about">&nbsp;<tal:title i18n:translate="listingheader_author"
-                          >Author</tal:title>&nbsp;</th>
-                        <th class="nosort">&nbsp;<tal:title i18n:translate="listingheader_type"
-                          >Type</tal:title>&nbsp;</th>
-                        <th class="nosort"
-                            tal:condition="show_about">&nbsp;<tal:modified i18n:translate="listingheader_modified"
-                          >Modified</tal:modified>&nbsp;</th>
-                    </tr>
-                </thead>
-
-                <tbody>
-                    <metal:block use-macro="context/folder_listing/macros/entries">
-                        <metal:entry fill-slot="entry">
-
-                    <tr metal:define-macro="listitem"
-                        tal:define="oddrow repeat/item/odd;"
-                        tal:attributes="class python: oddrow and 'even' or 'odd'">
-
-                            <td>
-                                <img width="16" height="16"
-                                     src="" alt=""
-                                     tal:condition="item_icon/url"
-                                     tal:attributes="src item_icon/url;
-                                                     alt item_icon/description;
-                                                     title item_icon/title;
-                                                     width item_icon/width;
-                                                     height item_icon/height;" />
-                                <a href="#"
-                                   tal:attributes="href python: item_type in use_view_action and item_url+'/view' or item_url;
-                                                   class string:$item_wf_state_class $item_type_class;
-                                                   title item_description;"
-                                   tal:content="item_title_or_id">
-                                    Item Title
-                                </a>
-                            </td>
-
-                            <td tal:condition="show_about">
-                                <tal:name tal:condition="item_creator"
-                                  tal:define="author python:pas_member.info(item_creator)">
-                                <a href="#"
-                                   tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
-                                   tal:content="author/name_or_id"
-                                   tal:omit-tag="not:author">
-                                  Bob Dobalina
-                                </a>
-                                </tal:name>
-                            </td>
-
-                            <td tal:content="item_type_title"
-                                i18n:translate="">
-                                Page
-                            </td>
-
-                        <td tal:condition="show_about"
-                            tal:content="python:toLocalizedTime(item_modified,long_format=1)">
-                          August 16, 2001 at 23:35:59
-                        </td>
-
-                    </tr>
-
-                        </metal:entry>
-                    </metal:block>
-                </tbody>
-            </table>
-          </div>
-      </metal:entries>
-    </metal:block>
-
-  </metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
new file mode 100644
index 0000000..2366c33
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -0,0 +1,26 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <metal:listing use-macro="context/@@listing_view/macros/content-core">
+    <!-- we don't want the dl -->
+    <metal:entries fill-slot="entries">
+      <metal:block use-macro="context/@@listing_view/macros/entries">
+        <metal:entry fill-slot="entry">
+          <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
+        </metal:entry>
+      </metal:block>
+    </metal:entries>
+  </metal:listing>
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
new file mode 100644
index 0000000..f8407d7
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -0,0 +1,71 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone"
+    tal:omit-tag="">
+<body tal:omit-tag="">
+
+  <div class="item visualIEFloatFix"
+      tal:define="item_macro nocall:view/item_macros/content-core|nothing;
+      item_url view/item_url;
+      rendering_error python:[];">
+
+    <div tal:replace="structure provider:plone.abovecontenttitle" />
+
+    <h2 class="headline">
+      <a class="summary url" tal:content="context/Title"
+        tal:attributes="href item_url;">
+        Title
+      </a>
+    </h2>
+
+    <div tal:replace="structure provider:plone.belowcontenttitle" />
+
+    <div class="description"
+        tal:content="context/Description"
+        tal:condition="context/Description">
+      Description
+    </div>
+
+    <tal:block tal:condition="item_macro">
+      <!-- tal:on-error="python:rendering_error.append(True)"-->
+
+      <div tal:replace="structure provider:plone.abovecontentbody" />
+
+      <div tal:define="view nocall:view/default_view;
+                       plone_view context/@@plone;
+                       portal_state context/@@plone_portal_state;
+                       context_state context/@@plone_context_state;
+                       plone_layout context/@@plone_layout;
+                       lang portal_state/language;
+                       dummy python: plone_layout.mark_view(view);
+                       portal_url portal_state/portal_url;
+                       checkPermission nocall: context/portal_membership/checkPermission;
+                       site_properties context/portal_properties/site_properties;">
+        <div metal:use-macro="item_macro">
+          content
+        </div>
+      </div>
+
+      <div tal:replace="structure provider:plone.belowcontentbody" />
+
+    </tal:block>
+
+    <tal:block tal:condition="rendering_error">
+      <!-- Error rendering item macro -->
+    </tal:block>
+
+    <p class="more" tal:condition="python:not(item_macro) or rendering_error">
+      <a tal:attributes="href item_url"
+          i18n:translate="read_more">
+        Read More&hellip;
+      </a>
+    </p>
+
+    <div class="visualClear"><!-- --></div>
+
+  </div>
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt
index 3090cab..8f15418 100644
--- a/plone/app/contenttypes/browser/templates/image.pt
+++ b/plone/app/contenttypes/browser/templates/image.pt
@@ -1,32 +1,29 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="size context/image/getSize">
-            <figure class="image-product">
-              <a class="discreet"
-                 tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
-                 tal:define="scale context/@@images;
-                             img_tag python:scale.scale('image', scale='large').tag()"
-                  tal:on-error="string: Image cannot be displayed">
-                <img tal:replace="structure img_tag" />
-              
-              <figcaption class="discreet">
-                <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
-                <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
-              </figcaption>
-              </a>
-            </figure>
-        </metal:block>
-    </metal:content-core>
-</body>
 
-</html>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core" tal:define="size context/image/getSize">
+  <figure class="image-product">
+    <a class="discreet"
+        tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
+        tal:define="scale context/@@images;
+                    img_tag python:scale.scale('image', scale='large').tag()"
+        tal:on-error="string: Image cannot be displayed">
+    <img tal:replace="structure img_tag" />
+    <figcaption class="discreet">
+      <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
+      <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
+    </figcaption>
+    </a>
+  </figure>
+</metal:block>
+</metal:content-core>
 
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
index 1cb6ca2..dec7933 100644
--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
@@ -1,69 +1,53 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone">
 <head>
-
-    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
-
-    <title tal:content="context/Title">
-        Title
-    </title>
-
-    <style type="text/css" media="screen">
+  <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
+  <title tal:content="context/Title">Title</title>
+  <style type="text/css" media="screen">
     body {
-        background-color: white;
-        color: black;
-        font-family: Helvetica, Arial, sans-serif;
-        font-size: 14px;
-        padding:0;
-        margin:0;
+      background-color: white;
+      color: black;
+      font-family: Helvetica, Arial, sans-serif;
+      font-size: 14px;
+      padding:0;
+      margin:0;
     }
     a {
-        color: #08c;
-        text-decoration: none;
-        text-align:center;
+      color: #08c;
+      text-decoration: none;
+      text-align:center;
+    }
+    a:hover {text-decoration:underline;}
+    a span {
+      display:block;
+      line-height:1.5em;
+      padding:12px;
     }
-      a:hover {text-decoration:underline;}
-      a span {
-          display:block;
-          line-height:1.5em;
-          padding:12px;
-      }
-
     img {
-        border: 0;
-        display:block;
-        margin:0 auto;
+      border: 0;
+      display:block;
+      margin:0 auto;
     }
-
-    </style>
-
+  </style>
 </head>
 
 <body>
-
-<div id="content-core"
-     tal:condition="context/@@images">
-    <a href=""
-       tal:attributes="href request/HTTP_REFERER"
-       tal:condition="request/HTTP_REFERER"
-       ><span i18n:translate="label_back_to_site">Back to site</span>
-    <tal:block replace="structure context/@@images/image" />
-  </a>
-
-    <a href=""
-       tal:attributes="href context/portal_url"
-       tal:condition="not: request/HTTP_REFERER"
-       ><span i18n:translate="label_home">Home</span>
-       <tal:block replace="structure context/@@images/image" />
+  <div id="content-core" tal:condition="context/@@images">
+    <a tal:attributes="href request/HTTP_REFERER"
+        tal:condition="request/HTTP_REFERER"
+      ><span i18n:translate="label_back_to_site">Back to site</span>
+      <tal:block replace="structure context/@@images/image" />
     </a>
-</div>
-
+    <a tal:attributes="href context/portal_url"
+        tal:condition="not: request/HTTP_REFERER"
+      ><span i18n:translate="label_home">Home</span>
+      <tal:block replace="structure context/@@images/image" />
+    </a>
+  </div>
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt
index 4aa7290..c5752e4 100644
--- a/plone/app/contenttypes/browser/templates/link.pt
+++ b/plone/app/contenttypes/browser/templates/link.pt
@@ -1,38 +1,35 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:header fill-slot="header">
-        <div class="portalMessage info"
-            tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
-            tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
-            <strong i18n:translate="">Info</strong>
-            <span tal:omit-tag=""
-                i18n:translate="message_permissions_blocking_link_redirect">
-              You see this page because you have permission to edit this link.
-              Others will be immediately redirected to the link's target URL.
-            </span>
-        </div>
-    </metal:header>
+<metal:header fill-slot="header">
+  <div class="portalMessage info"
+      tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
+      tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
+    <strong i18n:translate="">Info</strong>
+    <span tal:omit-tag=""
+        i18n:translate="message_permissions_blocking_link_redirect">
+      You see this page because you have permission to edit this link.
+      Others will be immediately redirected to the link's target URL.
+    </span>
+  </div>
+</metal:header>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core">
-        <p tal:define="portal_url portal_state/portal_url;
-                       navigation_root_url portal_state/navigation_root_url;
-                       url view/absolute_target_url">
-            <span i18n:translate="link_address">The link address is:</span>
-            <a href="#" tal:attributes="href url"
-                        tal:content="context/remoteUrl">remote url</a>
-        </p>
-        </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <p tal:define="portal_url portal_state/portal_url;
+                 navigation_root_url portal_state/navigation_root_url;
+                 url view/absolute_target_url">
+    <span i18n:translate="link_address">The link address is:</span>
+    <a tal:attributes="href url" tal:content="context/remoteUrl">remote url</a>
+  </p>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
new file mode 100644
index 0000000..5ec5a92
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -0,0 +1,125 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <metal:listingmacro define-macro="listing">
+    <tal:results define="batch view/batch">
+      <tal:listing condition="batch">
+        <div metal:define-slot="entries">
+          <article tal:repeat="item batch" metal:define-macro="entries">
+            <tal:block tal:define="obj item/getObject;
+                item_url item/getURL;
+                item_id item/getId;
+                item_title item/Title;
+                item_description item/Description;
+                item_type item/PortalType;
+                item_modified item/ModificationDate;
+                item_created item/CreationDate;
+                item_icon item/getIcon;
+                item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                item_wf_state item/review_state;
+                item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                item_creator item/Creator;
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+              <metal:block define-slot="entry">
+                <header metal:define-macro="listitem" tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
+                  <span class="summary">
+                    <a tal:attributes="href item_link;
+                                       class string:$item_type_class $item_wf_state_class url;
+                                       title item_type"
+                        tal:content="item_title">
+                      Item Title
+                    </a>
+                  </span>
+
+                  <metal:block metal:define-macro="document_byline">
+                    <span class="documentByLine">
+                      <tal:event condition="python:view.is_event(obj)">
+                        <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                        <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                          <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                        </span>
+                      </tal:event>
+                      <tal:byline condition="view/show_about">
+                        &mdash;
+                        <tal:name tal:condition="item_creator"
+                            tal:define="author python:view.pas_member.info(item_creator);
+                                        creator_short_form author/username;
+                                        creator_long_form string:?author=${author/username};
+                                        creator_is_openid python:'/' in creator_short_form;
+                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                        <span i18n:translate="label_by_author">
+                          by
+                          <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                              tal:content="author/name_or_id"
+                              tal:omit-tag="not:author"
+                              i18n:name="author">
+                            Bob Dobalina
+                          </a>
+                        </span>
+                        </tal:name>
+
+                        <tal:modified condition="python: item_type != 'Event'">
+                          &mdash;
+                          <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                          <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                            August 16, 2001 at 23:35:59
+                          </span>
+                        </tal:modified>
+
+                        <metal:description define-slot="description_slot">
+                          <tal:comment replace="nothing">
+                            Place custom listing info for custom types here
+                          </tal:comment>
+                        </metal:description>
+                      </tal:byline>
+                    </span>
+                  </metal:block>
+                </header>
+
+                <p class="description discreet"
+                    tal:condition="item_description"
+                    tal:content="item_description">
+                  description
+                </p>
+              </metal:block>
+            </tal:block>
+          </article>
+        </div>
+
+        <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+      </tal:listing>
+
+      <metal:empty metal:define-slot="no_items_in_listing">
+        <p class="discreet"
+            tal:condition="not: view/batch"
+            tal:content="view/no_items_message">
+          There are currently no items in this folder.
+        </p>
+      </metal:empty>
+
+    </tal:results>
+  </metal:listingmacro>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
new file mode 100644
index 0000000..ab9c319
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -0,0 +1,85 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="here/main_template/macros/master"
+      i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:main_macro define-macro="content-core"
+    tal:define="result view/album_results;
+                images result/images;
+                albums result/folders">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <tal:images tal:repeat="image images">
+    <div class="photoAlbumEntry">
+      <a tal:attributes="href string:${image/getURL}/view;
+                         title image/Description">
+        <span class="photoAlbumEntryWrapper">
+          <img tal:define="ob image/getObject;
+                           scale ob/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+              tal:replace="structure img_tag" />
+        </span>
+        <span class="photoAlbumEntryTitle" tal:content="image/Title">
+            Title
+        </span>
+      </a>
+    </div>
+  </tal:images>
+
+  <div class="visualClear"><!-- --></div>
+
+  <tal:albums tal:repeat="album albums">
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="ob album/getObject;
+                    subalbum_view nocall:ob/@@album_view;
+                    subalbum_results subalbum_view/album_results;
+                    subalbum_images subalbum_results/images;
+                    number_of_images python:len(subalbum_images);
+                    random python:modules['random'];
+                    random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <tal:block condition="number_of_images">
+            <img tal:define="scale random_image/@@images;
+                             img_tag python:scale.scale('image', scale='thumb').tag()"
+                 tal:replace="structure img_tag" />
+          </tal:block>
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/Title">Title</tal:title>
+          (<tal:number content="number_of_images" />)
+        </span>
+      </a>
+    </div>
+  </tal:albums>
+
+  <div class="visualClear"><!-- --></div>
+
+  <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+  <metal:empty metal:define-slot="no_items_in_listing">
+    <p class="discreet"
+        tal:condition="not: view/batch"
+        tal:content="view/no_items_message">
+      There are currently no items in this folder.
+    </p>
+  </metal:empty>
+
+</metal:main_macro>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
new file mode 100644
index 0000000..f02a961
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -0,0 +1,65 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block use-macro="context/@@listing_view/macros/content-core">
+
+  <metal:entries fill-slot="entries">
+    <metal:block use-macro="context/@@listing_view/macros/entries">
+      <metal:entry fill-slot="entry">
+
+        <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+
+          <a tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
+              tal:attributes="href item_link">
+            <div class="tileImage">
+              <img src="" alt=""
+                  tal:define="scales obj/@@images;
+                              scale python:scales.scale('image', 'thumb')"
+                  tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+            </div>
+          </a>
+
+          <h2 class="tileHeadline" metal:define-macro="listitem">
+            <a class="summary url"
+                tal:attributes="href item_link;
+                                title item_type"
+                tal:content="item_title">
+              Item Title
+            </a>
+          </h2>
+
+          <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>
+
+          <p class="tileBody" tal:condition="item_description">
+            <span class="description" tal:content="item_description">
+              description
+            </span>
+          </p>
+
+          <p class="tileFooter">
+            <a tal:attributes="href item_link"
+                i18n:translate="read_more">
+              Read More&hellip;
+            </a>
+          </p>
+
+          <div class="visualClear"><!-- --></div>
+
+        </div>
+
+      </metal:entry>
+    </metal:block>
+  </metal:entries>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt
new file mode 100644
index 0000000..ab1d18e
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt
@@ -0,0 +1,100 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <tal:results define="batch view/batch">
+    <tal:listing condition="batch">
+
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div class="has-table">
+        <table class="listing"
+            summary="Content listing"
+            i18n:attributes="summary summary_content_listing;">
+          <thead>
+            <tr>
+              <th class="nosort"
+                  i18n:translate=""
+                  tal:repeat="field view/tabular_fields"
+                  tal:content="field">Field name</th>
+            </tr>
+          </thead>
+          <tbody>
+            <tal:entries tal:repeat="item batch">
+              <tal:block tal:define="item_url item/getURL;
+                                     item_title item/Title;
+                                     item_description item/Description;
+                                     item_type item/PortalType;
+                                     item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                     item_wf_state item/review_state;
+                                     item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                     item_creator item/Creator;
+                                     item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                <tr metal:define-macro="listitem"
+                    tal:define="oddrow repeat/item/odd;"
+                    tal:attributes="class python: oddrow and 'even' or 'odd'">
+
+                  <tal:block tal:repeat="field view/tabular_fields">
+                    <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                        tal:define="field_data python:view.tabular_fielddata(item, field)">
+                      <tal:block tal:replace="field_data/value" />
+                    </td>
+                    <td tal:condition="python:field == 'Title'">
+                      <a href="#"
+                          tal:attributes="href item_link;
+                          class string:$item_wf_state_class $item_type_class;
+                          title item_description;"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </td>
+                    <td tal:condition="python:field == 'Creator'"
+                        tal:define="author python:view.pas_member.info(item_creator);
+                                    name python:author['fullname'] or author['username']">
+                      <a tal:condition="author"
+                          tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                          tal:content="name">Jos Henken</a>
+                    </td>
+                  </tal:block>
+
+                </tr>
+              </tal:block>
+            </tal:entries>
+          </tbody>
+        </table>
+      </div>
+
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+    </tal:listing>
+
+    <metal:empty metal:define-slot="no_items_in_listing">
+    <p class="discreet"
+    tal:condition="not: view/batch"
+    tal:content="view/no_items_message">
+    There are currently no items in this folder.
+    </p>
+    </metal:empty>
+
+  </tal:results>
+
+</metal:block>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt
index 009e8d9..ebd41fe 100644
--- a/plone/app/contenttypes/browser/templates/newsitem.pt
+++ b/plone/app/contenttypes/browser/templates/newsitem.pt
@@ -1,57 +1,49 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:head fill-slot="javascript_head_slot">
-<script type="text/javascript">
-  jQuery(function($){
-    $('.newsImageContainer a').prepOverlay({subtype: 'image'});
-  })
-</script>
+  <script type="text/javascript">
+    jQuery(function ($) {
+      $('.newsImageContainer a').prepOverlay({subtype: 'image'});
+    });
+  </script>
 </metal:head>
 
 <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core"
-          tal:define="templateId template/getId;
-                      scale_func context/@@images;
-                      scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
-
-        <figure class="newsImageContainer"
-             tal:condition="python: scaled_image">
-            <a href="#"
-               tal:define="here_url context/@@plone_context_state/object_url;
-                           large_image python: scale_func.scale('image', scale='large');"
-               tal:attributes="href large_image/url">
-              <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
-
-              <figcaption
-                 tal:condition="context/image_caption|nothing"
-                 tal:content="structure context/image_caption" >
-              </figcaption>
-
-            </a>
-        </figure>
-
-
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-             tal:content="structure context/text/output" />
-
-        <div class="newsFileContainer"
-             tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
-            <a tal:content="structure python:context.image_caption or context.image.filename"
-               tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
-            </a>
-        </div>
-
-    </metal:block>
+<metal:block define-macro="content-core"
+    tal:define="templateId template/getId;
+                scale_func context/@@images;
+                scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
+  <figure class="newsImageContainer" tal:condition="python: scaled_image">
+    <a tal:define="here_url context/@@plone_context_state/object_url;
+                   large_image python: scale_func.scale('image', scale='large');"
+        tal:attributes="href large_image/url">
+      <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
+      <figcaption tal:condition="context/image_caption|nothing"
+          tal:content="structure context/image_caption">
+      </figcaption>
+    </a>
+  </figure>
+
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure context/text/output" />
+
+  <div class="newsFileContainer"
+      tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
+    <a tal:content="structure python:context.image_caption or context.image.filename"
+        tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
+    </a>
+  </div>
+
+</metal:block>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/standard_view.pt b/plone/app/contenttypes/browser/templates/standard_view.pt
deleted file mode 100644
index 0664273..0000000
--- a/plone/app/contenttypes/browser/templates/standard_view.pt
+++ /dev/null
@@ -1,181 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-  <div metal:fill-slot="content-core">
-    <metal:block define-macro="content-core"
-                 tal:define="templateId template/getId">
-
-        <div metal:define-macro="text-field-view"
-             id="parent-fieldname-text" class="stx"
-             tal:define="has_text exists:context/aq_explicit/text/output;
-                         text python:has_text and here.text.output or ''"
-             tal:condition="text"
-             tal:attributes="class python:context.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-            <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-        </div>
-
-        <metal:listingmacro define-macro="listing">
-        <tal:results define="b_start python:request.get('b_start', 0);
-                             batch python:view.results(b_start=b_start);
-                             site_properties context/portal_properties/site_properties;
-                             use_view_action site_properties/typesUseViewActionInListings|python:();
-                             isAnon portal_state/anonymous;
-                             normalizeString nocall: context/plone_utils/normalizeString;
-                             toLocalizedTime nocall: plone_view/toLocalizedTime;
-                             show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
-                             navigation_root_url portal_state/navigation_root_url;
-                             pas_member context/@@pas_member;">
-        <tal:listing condition="batch">
-
-            <div metal:define-slot="entries">
-                <article tal:repeat="item batch" metal:define-macro="entries">
-                <tal:block tal:define="item_url item/getURL;
-                                       item_id item/getId;
-                                       item_description item/Description;
-                                       item_type item/Type;
-                                       item_modified item/ModificationDate;
-                                       item_created item/CreationDate;
-                                       item_icon item/getIcon;
-                                       item_type_class item/ContentTypeClass;
-                                       item_wf_state_class python:'state-' + normalizeString(item.review_state());
-                                       item_creator item/Creator;
-                                       item_start python:(item.start or item.StartDate) if item_type == 'Event' else None;
-                                       item_end python:(item.end or item.EndDate) if item_type == 'Event' else None;
-                                       item_modified item/ModificationDate;
-                                       item_sametime python: item_start == item_end;
-                                       item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
-                    <metal:block define-slot="entry">
-                    <header metal:define-macro="listitem"
-                        tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
-                        <span class="summary">
-                            <img tal:replace="structure item_icon" />
-                            <a href="#"
-                               tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;
-                                               class string:$item_type_class $item_wf_state_class url"
-                               tal:content="item/Title">
-                                Item Title
-                            </a>
-                        </span>
-
-                        <metal:block metal:define-macro="document_byline">
-                        <span class="documentByLine">
-                            <span tal:condition="python: item_type == 'Event' and item_sametime"
-                                  i18n:translate="label_event_byline_onlyfrom">
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                       i18n:name="start">from date</abbr>
-                            </span>
-                            <span tal:condition="python: item_type == 'Event' and item_samedate and not item_sametime"
-                                  i18n:translate="label_event_byline_samedate">
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start)"
-                                       i18n:name="start">from date</abbr> from
-                                 <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,time_only=1)"
-                                       i18n:name="starttime">from time</abbr> to
-                                 <abbr class="dtend"
-                                       tal:attributes="title python:item_end"
-                                       tal:content="python:toLocalizedTime(item_end,time_only=1)"
-                                       i18n:name="end">to time</abbr>
-                            </span>
-                            <span tal:condition="python: item_type == 'Event' and not item_samedate and not item_sametime"
-                                  i18n:translate="label_event_byline">
-                                  from
-                                       <abbr class="dtstart"
-                                       tal:attributes="title python:item_start"
-                                       tal:content="python:toLocalizedTime(item_start,long_format=1)"
-                                       i18n:name="start">from date</abbr> to
-                                 <abbr class="dtend"
-                                       tal:attributes="title python:item_end"
-                                       tal:content="python:toLocalizedTime(item_end,long_format=1)"
-                                       i18n:name="end">to date</abbr>
-                            </span>
-                             <span tal:condition="python: item_type == 'Event' and item.location"
-                                  i18n:translate="label_event_byline_location">&mdash;
-                                 <span tal:content="string:${item/location}"
-                                       class="location"
-                                       i18n:name="location">Oslo</span>,
-                            </span>
-                            <tal:byline condition="show_about">
-                                &mdash;
-
-                                <tal:name tal:condition="item_creator"
-                                    tal:define="author python:pas_member.info(item_creator);
-                                                creator_short_form author/username;
-                                                creator_long_form string:?author=${author/username};
-                                                creator_is_openid python:'/' in creator_short_form;
-                                                creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                                  <span i18n:translate="label_by_author">
-                                    by
-                                  <a href="#"
-                                     tal:attributes="href string:${navigation_root_url}/author/${item_creator}"
-                                     tal:content="author/name_or_id"
-                                     tal:omit-tag="not:author"
-                                     i18n:name="author">
-                                    Bob Dobalina
-                                  </a>
-                                  </span>
-
-                                </tal:name>
-
-                                <tal:modified condition="python: item_type != 'Event'">
-                                    &mdash;
-                                    <tal:mod i18n:translate="box_last_modified">
-                                      last modified
-                                    </tal:mod>
-                                    <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
-                                      August 16, 2001 at 23:35:59
-                                    </span>
-                                </tal:modified>
-
-                                <metal:description define-slot="description_slot">
-                                    <tal:comment replace="nothing">
-                                        Place custom listing info for custom types here
-                                    </tal:comment>
-                                </metal:description>
-                            </tal:byline>
-                        </span>
-                        </metal:block>
-
-                    </header>
-
-                    <span class="description"
-                        tal:condition="item_description"
-                        tal:content="item_description">
-                      description
-                    </span>
-                </metal:block>
-                </tal:block>
-                </article>
-            </div>
-
-            <div metal:use-macro="context/batch_macros/macros/navigation" />
-
-        </tal:listing>
-        <metal:empty metal:define-slot="no_items_in_listing">
-            <p class="discreet"
-               tal:condition="not: batch"
-               i18n:translate="description_no_items_in_folder">
-                There are currently no items in this folder.
-            </p>
-        </metal:empty>
-
-        </tal:results>
-        </metal:listingmacro>
-
-    </metal:block>
-  </div>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/summary_view.pt b/plone/app/contenttypes/browser/templates/summary_view.pt
deleted file mode 100644
index 880f1e0..0000000
--- a/plone/app/contenttypes/browser/templates/summary_view.pt
+++ /dev/null
@@ -1,67 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/standard_view/macros/content-core">
-
-    <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-        <div class="tileItem visualIEFloatFix"
-             tal:define="obj item/getObject">
-            <a href="#"
-                  tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                  tal:attributes="href item/getURL">
-                  <div class="tileImage">
-                      <img src="" alt=""
-                           tal:define="scales obj/@@images;
-                                       scale python:scales.scale('image', 'thumb')"
-                           tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                  </div>
-            </a>
-
-            <h2 class="tileHeadline" metal:define-macro="listitem">
-                <a href="#"
-                   class="summary url"
-                   tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;"
-                   tal:content="item/Title">
-                    Item Title
-                </a>
-            </h2>
-
-            <div metal:use-macro="context/standard_view/macros/document_byline"></div>
-
-            <p class="tileBody" tal:condition="item_description">
-                <span class="description" tal:content="item_description">
-                    description
-                </span>
-            </p>
-
-            <p class="tileFooter">
-                <a href=""
-                   tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;"
-                   i18n:translate="read_more">
-                Read More&hellip;
-                </a>
-            </p>
-
-            <div class="visualClear"><!-- --></div>
-        </div>
-
-    </metal:entry>
-    </metal:block>
-    </metal:entries>
-
-</metal:block>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/tabular_view.pt b/plone/app/contenttypes/browser/templates/tabular_view.pt
deleted file mode 100644
index 4f2ea22..0000000
--- a/plone/app/contenttypes/browser/templates/tabular_view.pt
+++ /dev/null
@@ -1,77 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-    <div metal:fill-slot="content-core"
-         tal:define="b_start python:request.get('b_start', 0);
-                     batch python:view.results(b_start=b_start);">
-
-         <div metal:define-macro="text-field-view"
-              id="parent-fieldname-text" class="stx"
-              tal:define="has_text exists:context/aq_explicit/text/output;
-                          text python:has_text and here.text.output or ''"
-              tal:condition="text"
-              tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-             <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-         </div>
-
-        <p class="discreet"
-           tal:condition="not: batch"
-           i18n:translate="description_no_items_in_folder">
-            There are currently no items in this folder.
-        </p>
-
-        <table class="listing" summary="Content listing"
-            i18n:attributes="summary"
-            tal:condition="batch"
-            tal:define="fields view/selectedViewFields;
-                        pas_member context/@@pas_member">
-            <thead>
-                <tr>
-                    <th class="nosort"
-                        i18n:translate=""
-                        tal:repeat="field fields"
-                        tal:content="python: field[1]">Field name</th>
-                </tr>
-            </thead>
-            <tbody>
-            <tal:block tal:repeat="item batch">
-                <tr tal:define="oddrow repeat/item/odd;"
-                    tal:attributes="class python:oddrow and 'even' or 'odd'" >
-                <tal:block tal:repeat="field fields">
-                    <td tal:condition="python:field[0] not in ['Title', 'Creator', ]"
-                        tal:define="field_data python:getattr(item, field[0])">
-                        <tal:block tal:replace="field_data" />
-                    </td>
-                    <td tal:condition="python:field[0] == 'Title'">
-                        <a href="#"
-                           tal:attributes="href item/getURL;
-                                           title item/Title"
-                           tal:content="item/Title">Item Title</a>
-                    </td>
-                    <td tal:condition="python:field[0] == 'Creator'"
-                        tal:define="author python:pas_member.info(item.Creator());
-                                    name python:author['fullname'] or author['username']">
-                        <a href="#"
-                           tal:condition="author"
-                           tal:attributes="href string:author/${author/username};
-                                           title name"
-                           tal:content="name">Jos Henken</a>
-                    </td>
-                </tal:block>
-                </tr>
-            </tal:block>
-            </tbody>
-        </table>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
-  </div>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/browser/templates/thumbnail_view.pt b/plone/app/contenttypes/browser/templates/thumbnail_view.pt
deleted file mode 100644
index 220c22d..0000000
--- a/plone/app/contenttypes/browser/templates/thumbnail_view.pt
+++ /dev/null
@@ -1,70 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:main_macro define-macro="content-core"
-     tal:define="data view/getFoldersAndImages;
-                total_number_of_images data/total_number_of_images;
-                site_properties context/portal_properties/site_properties;
-                use_view_action site_properties/typesUseViewActionInListings|python:();">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
-         tal:condition="text"
-         tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results tal:repeat="item data/results"
-                 tal:condition="total_number_of_images">
-    <div class="photoAlbumEntry photoAlbumFolder"
-         tal:define="item_path item/getPath;
-                     item_type item/portal_type;
-                     is_album python:item_type=='Folder';
-                     images_album python:data['images'].get(item_path, []);
-                     number_of_images python:len(images_album);
-                     item_title item/Title;
-                     item_url item/getURL;
-                     item_description item/Description;
-                     item_view python:item_type in use_view_action and item_url+'/view' or item_url;
-                     random python:modules['random'];
-                     random_image python:number_of_images and random.choice(images_album).getObject() or None"
-          tal:attributes="class python:is_album and 'photoAlbumEntry photoAlbumFolder' or 'photoAlbumEntry'">
-                <a tal:attributes="href item_view;
-                                   title item_description">
-                    <span class="photoAlbumEntryWrapper"
-                          tal:condition="number_of_images">
-                     <img src="" alt=""
-                          tal:define="scales random_image/@@images;
-                                      scale python:scales.scale('image', 'thumb')"
-                          tal:replace="structure python:scale and scale.tag(title=item_description) or None" />
-                    </span>
-                    <span class="photoAlbumEntryTitle">
-                       <tal:title content="item_title">Title</tal:title>
-                       <tal:count condition="is_album">(<tal:number content="number_of_images" />)</tal:count>
-                    </span>
-                </a>
-    </div>
-    </tal:results>
-    <div class="visualClear"><!-- --></div>
-
-    <p class="discreet"
-       i18n:translate=""
-       tal:condition="not: total_number_of_images">
-        No images found in this collection.
-    </p>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index 5ca0793..abf84ac 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -505,7 +505,7 @@ class FolderMigrator(ATCTFolderMigrator):
 
     def beforeChange_migrate_layout(self):
         if self.old.getLayout() == 'atct_album_view':
-            self.old.setLayout('folder_album_view')
+            self.old.setLayout('album_view')
 
 
 def migrate_folders(portal):
diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index c710577..575fe5f 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -444,13 +444,13 @@ class TopicMigrator(InplaceCMFItemMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
@@ -556,13 +556,13 @@ class FolderishTopicMigrator(InplaceCMFFolderMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index ad295f7..34377bc 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1103</version>
+ <version>1104</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index ffe12c7..a4f822e 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -28,14 +28,14 @@
   </property>
 
   <!-- View information -->
-  <property name="default_view">standard_view</property>
+  <property name="default_view">listing_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
-    <element value="standard_view" />
-    <element value="summary_view" />
-    <element value="all_content" />
-    <element value="tabular_view" />
-    <element value="thumbnail_view" />
+    <element value="listing_view"/>
+    <element value="summary_view"/>
+    <element value="tabular_view"/>
+    <element value="full_view"/>
+    <element value="album_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index e318c5d..ff9cb4c 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -12,13 +12,13 @@
  <property name="filter_content_types">False</property>
  <property name="allowed_content_types"/>
  <property name="allow_discussion">False</property>
- <property name="default_view">folder_listing</property>
+ <property name="default_view">listing_view</property>
  <property name="view_methods">
-  <element value="folder_summary_view"/>
-  <element value="folder_full_view"/>
-  <element value="folder_tabular_view"/>
-  <element value="folder_album_view"/>
-  <element value="folder_listing"/>
+  <element value="listing_view"/>
+  <element value="summary_view"/>
+  <element value="tabular_view"/>
+  <element value="full_view"/>
+  <element value="album_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index ff27d81..18223d8 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -5,37 +5,194 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 
 Variables  plone/app/contenttypes/tests/robot/variables.py
 
-Test Setup  Run keywords  Open test browser
+Test Setup  Run keywords  Setup Testcontent  Open test browser
 Test Teardown  Close all browsers
 
 *** Variables ***
 
 *** Test cases ***
 
-# XXX: This test needs to be refactored. The test should use robot content
-# keywords and is way too long.
-Scenario: Test Folderlisting
+Scenario: Test listing views
     Given I am logged in as site owner
-      And a Folder  Test-Folder
-      And a File  Test-File
-      And a Image  Test-Image
-      And a Collection  Test-Collection
-      And a Link  Test-Link
-      And a News Item  Test-News
-      And a Document  Test-Document
-     When I Go to  ${PLONE_URL}/folder_contents
-     Then Page Should Contain  Test-Folder
-      And Page Should Contain  Test-File
-      And Page Should Contain  Test-Image
-      And Page Should Contain  Test-Collection
-      And Page Should Contain  Test-Link
-      And Page Should Contain  Test-News
-      And Page Should Contain  Test-Document
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/summary_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/tabular_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/full_view
+    Then Listing should list contained content in detail
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
+    Then Album should list contained images and albums
+
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/listing_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/full_view
+    Then Listing should list all content in detail
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
+    Then Album should list all images and albums
 
 
 *** Keywords ***
 
+Listing should list contained content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Not Contain  Test Album Image 1
+  Page Should Not Contain  Test Album Image 2
+  Page Should Not Contain  Test Album Image 3
+  Page Should Not Contain  Test Sub Album
+  Page Should Not Contain  Test Sub Album Image 1
+  Page Should Not Contain  Test Sub Album Image 2
+  Page Should Not Contain  Test Sub Album Image 3
+
+Listing should list contained content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  0
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  0
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  0
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  0
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  0
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
+
+Album should list contained images and albums
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+
+
+Listing should list all content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Page Should Contain  Test Album Image 2
+  Page Should Contain  Test Album Image 3
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Page Should Contain  Test Sub Album Image 2
+  Page Should Contain  Test Sub Album Image 3
+
+Listing should list all content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+
+Album should list all images and albums
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  2
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Sub Album
+
+
+
+Setup Testcontent
+  Given I am logged in as site owner
+  Create Content  type=Document  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_document  title=Test Document  text=this is a test document
+  Create Content  type=News Item  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_news_item  title=Test News Item  text=this is a test news item
+  Create Content  type=Event  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_event  title=Test Event  text=this is a test event
+  Create Content  type=Collection  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_collection  title=Test Collection  query=${COLLECTION_TEST_QUERY}  text=this is a test collection
+  Create Content  type=Link  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_link  title=Test Link  remoteUrl=http://plone.org
+  Create Content  type=File  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_file  title=Test File
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_image  title=Test Image
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_album  title=Test Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_1  title=Test Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_2  title=Test Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_3  title=Test Album Image 3
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=test_subalbum  title=Test Sub Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_1  title=Test Sub Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_2  title=Test Sub Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_3  title=Test Sub Album Image 3
+
 I go to
     [Arguments]  ${location}
     Go to  ${location}
-    Wait until page contains  Test-Document
diff --git a/plone/app/contenttypes/tests/robot/variables.py b/plone/app/contenttypes/tests/robot/variables.py
index 7310966..757ff22 100644
--- a/plone/app/contenttypes/tests/robot/variables.py
+++ b/plone/app/contenttypes/tests/robot/variables.py
@@ -2,4 +2,6 @@
 from pkg_resources import resource_filename
 
 TEST_FOLDER_ID = 'robot-test-folder'
+PLONE_PATH = '/plone'
+COLLECTION_TEST_QUERY = '[{"i": "path", "o": "plone.app.querystring.operation.string.path", "v": "%s/%s"}]' % (PLONE_PATH, TEST_FOLDER_ID)  # noqa
 PATH_TO_TEST_FILES = resource_filename("plone.app.contenttypes.tests", "")
diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 3354f25..2c2cadc 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,12 +72,13 @@ def _get_browser(self):
         )
         return browser
 
-    def test_collection_view(self):
+    def test_collection_default_dexterity_view(self):
+        # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue('"v": "Collection Test Page"' in browser.contents)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/tabular_view')
         # search from here:
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index f2b95cd..30e0f1d 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -1,35 +1,28 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
 from DateTime import DateTime
-
-import unittest2 as unittest
-
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.interface import alsoProvides
-from transaction import commit
-
-from plone.dexterity.interfaces import IDexterityFTI
-
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-
-from plone.app.testing import SITE_OWNER_NAME
-from plone.app.testing import SITE_OWNER_PASSWORD
-
-from plone.testing.z2 import Browser
-from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, \
-    setRoles, login, logout
-
+from plone.app.contenttypes.behaviors.collection import ICollection as ICollection_behavior  # noqa
 from plone.app.contenttypes.interfaces import ICollection
-from plone.app.contenttypes.behaviors.collection import ICollection as \
-    ICollection_behavior
-
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
+from plone.app.contenttypes.testing import set_browserlayer
 from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import SITE_OWNER_NAME
+from plone.app.testing import SITE_OWNER_PASSWORD
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import login
+from plone.app.testing import logout
+from plone.app.testing import setRoles
 from plone.app.textfield.value import RichTextValue
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from transaction import commit
+from zope.component import createObject
+from zope.component import queryUtility
+from zope.interface import alsoProvides
 import os.path
+import unittest2 as unittest
 
 query = [{
     'i': 'Title',
@@ -74,9 +67,6 @@ def test_bbb_selectedViewFields(self):
         self.assertEqual(self.collection.selectedViewFields(),
                          [('Title', 'Title'), ('Description', 'Description')])
 
-    def test_getFoldersAndImages(self):
-        pass
-
     def test_bbb_setQuery(self):
         self.collection.setQuery(query)
         self.assertEqual(self.collection.query, query)
@@ -143,6 +133,7 @@ def setUp(self):
         self.browser = Browser(self.layer['app'])
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
@@ -153,33 +144,33 @@ def setUp(self):
         self.request.set('URL', self.collection.absolute_url())
         self.request.set('ACTUAL_URL', self.collection.absolute_url())
 
-    def test_view(self):
+    def test_collection_view(self):
         view = self.collection.restrictedTraverse('@@view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_standard_view(self):
-        view = self.collection.restrictedTraverse('standard_view')
+    def test_collection_listing_view(self):
+        view = self.collection.restrictedTraverse('listing_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_summary_view(self):
+    def test_collection_summary_view(self):
         view = self.collection.restrictedTraverse('summary_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_all_content(self):
-        view = self.collection.restrictedTraverse('all_content')
+    def test_collection_full_view(self):
+        view = self.collection.restrictedTraverse('full_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         view = self.collection.restrictedTraverse('tabular_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_thumbnail_view(self):
-        view = self.collection.restrictedTraverse('thumbnail_view')
+    def test_collection_album_view(self):
+        view = self.collection.restrictedTraverse('album_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
@@ -256,8 +247,8 @@ def test_collection_templates(self):
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
-        # open all_content template
-        browser.open('%s/@@all_content' % url)
+        # open full_view template
+        browser.open('%s/@@full_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -267,7 +258,7 @@ def test_collection_templates(self):
         self.assertTrue("Image example" in browser.contents)
 
         # open thumbnail_view template
-        browser.open('%s/@@thumbnail_view' % url)
+        browser.open('%s/@@album_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -362,79 +353,6 @@ def test_custom_query(self):
                                                 'id': 'bla'})
         self.assertEqual(len(results), 0)
 
-    def test_getFoldersAndImages(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder and a subfolder to it, both with same id
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        folder.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        subfolder = folder['folder1']
-        # add example image into folder and its subfolder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        subfolder.invokeFactory("Image",
-                                "another_image",
-                                title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Folder',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        # The current implementation for getFoldersAndImages will return
-        # another_image under subfolder and also under folder
-        self.assertEqual(imagecount, 3)
-
-    def test_getFoldersAndImages_returning_images(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        # add example image into this folder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        # add another image into the portal root
-        portal.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Image',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        self.assertEqual(imagecount, 2)
-
     def test_respect_navigation_root(self):
         portal = self.layer['portal']
         login(portal, 'admin')
@@ -484,6 +402,7 @@ class PloneAppCollectionEditViewsIntegrationTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
diff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py
index a2d9208..ac9537f 100644
--- a/plone/app/contenttypes/tests/test_folder.py
+++ b/plone/app/contenttypes/tests/test_folder.py
@@ -130,21 +130,21 @@ def test_folder_view(self):
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_summary_view(self):
-        self.browser.open(self.folder_url + '/folder_summary_view')
+        self.browser.open(self.folder_url + '/summary_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_full_view(self):
-        self.browser.open(self.folder_url + '/folder_full_view')
+        self.browser.open(self.folder_url + '/full_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_tabular_view(self):
-        self.browser.open(self.folder_url + '/folder_tabular_view')
+        self.browser.open(self.folder_url + '/tabular_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_album_view(self):
-        self.browser.open(self.folder_url + '/folder_album_view')
+        self.browser.open(self.folder_url + '/album_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index 795b5a9..a12d21f 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -922,7 +922,7 @@ def test_folder_is_migrated(self):
         dx_folder = self.portal['folder']
         self.assertTrue(IFolder.providedBy(dx_folder))
         self.assertTrue(at_folder is not dx_folder)
-        self.assertEqual(dx_folder.getLayout(), 'folder_album_view')
+        self.assertEqual(dx_folder.getLayout(), 'album_view')
 
     def test_folder_children_are_migrated(self):
         from plone.app.contenttypes.migration.migration import FolderMigrator
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 7789964..d2a3b8d 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -63,7 +63,7 @@ def test_migrate_simple_topic(self):
         self.run_migration()
         new = ICollection(self.portal.topic)
         self.assertEqual(self.portal.topic.portal_type, 'Collection')
-        self.assertEqual(self.portal.topic.getLayout(), 'standard_view')
+        self.assertEqual(self.portal.topic.getLayout(), 'listing_view')
         self.assertEqual(new.sort_on, None)
         self.assertEqual(new.sort_reversed, None)
         self.assertEqual(new.limit, 1000)
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 5615b06..64c3f57 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -3,6 +3,8 @@
 from plone.app.contenttypes.utils import DEFAULT_TYPES
 from plone.dexterity.interfaces import IDexterityFTI
 from zope.component import queryUtility
+import logging
+logger = logging.getLogger(name="plone.app.contenttypes upgrade")
 
 
 def update_fti(context):
@@ -87,7 +89,7 @@ def migrate_to_richtext(context):
 
 
 def migrate_album_view(context):
-    """Migrate atct_album_view to folder_album_view."""
+    """Migrate atct_album_view to album_view."""
 
     # TODO: Don't reload the profile. Only change the settings.
     context.runImportStepFromProfile(
@@ -100,7 +102,7 @@ def migrate_album_view(context):
         obj = brain.getObject()
         current = context.getLayout()
         if current == 'atct_album_view':
-            obj.setLayout('folder_album_view')
+            obj.setLayout('album_view')
 
 
 def enable_shortname_behavior(context):
@@ -121,3 +123,44 @@ def enable_shortname_behavior(context):
         behaviors.append(behavior)
         behaviors = tuple(behaviors)
         fti._updateProperty('behaviors', behaviors)
+
+
+def use_new_view_names(context):
+    """Migrate old view names to new view names."""
+
+    # TODO: Don't reload the profile. Only change the settings.
+    context.runImportStepFromProfile(
+        'profile-plone.app.contenttypes:default',
+        'typeinfo',
+    )
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+
+    def _fixup(portal_type, view_map):
+        for brain in search(portal_type=portal_type):
+            obj = brain.getObject()
+            current = context.getLayout()
+            if current in view_map.keys():
+                obj.setLayout(view_map[current])
+                logger.info("Set view to {} for {}".format(
+                    view_map[current], obj.absolute_url()
+                ))
+
+    folder_view_map = {  # OLD : NEW
+        'folder_listing': 'listing_view',
+        'folder_full_view': 'full_view',
+        'folder_summary_view': 'summary_view',
+        'folder_tabular_view': 'tabular_view',
+        'folder_album_view': 'album_view',
+        'atct_album_view': 'album_view',
+    }
+    collection_view_map = {  # OLD : NEW
+        'view': 'listing_view',
+        'standard_view': 'listing_view',
+        'collection_view': 'listing_view',
+        'all_content': 'full_view',
+        'thumbnail_view': 'album_view',
+    }
+    _fixup('Folder', folder_view_map)
+    _fixup('Plone Site', folder_view_map)
+    _fixup('Collection', collection_view_map)
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index 1f964e7..7dc4a79 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -62,4 +62,13 @@
       handler=".upgrades.enable_shortname_behavior"
       />
 
+  <genericsetup:upgradeStep
+      source="1103"
+      destination="1104"
+      title="Use new view names"
+      description=""
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.use_new_view_names"
+      />
+
 </configure>
diff --git a/setup.py b/setup.py
index 4a9198e..a930bbe 100644
--- a/setup.py
+++ b/setup.py
@@ -53,7 +53,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework',
+              'plone.app.robotframework [debug, reload] > 0.9.8',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


