Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-24T15:22:33-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/85778e9146c895489efd625946684195d86ba8ad

Some fixes

Files changed:
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py

diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index 1df4040..4ae694a 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -22,7 +22,7 @@
              prefix="plone.app.querystring.operation.int.is">
         <value key="title" i18n:translate="">Equals</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._equal</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -30,7 +30,7 @@
              prefix="plone.app.querystring.operation.int.lessThan">
         <value key="title" i18n:translate="">Less than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._lessThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -38,7 +38,7 @@
              prefix="plone.app.querystring.operation.int.largerThan">
         <value key="title" i18n:translate="">Larger than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._largerThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -179,6 +179,14 @@
     </records>
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
              prefix="plone.app.querystring.operation.string.absolutePath">
         <value key="title" i18n:translate="">Absolute path</value>
         <value key="description" i18n:translate="">Location in the site structure</value>
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index cae2cd5..f5ec001 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -65,6 +65,14 @@ def _equal(context, row):
     return {row.index: {'query': row.values, }}
 
 
+def _intEqual(context, row):
+    if type(row.values) is list:
+        values = [int(v) for v in row.values]
+    else:
+        values = int(values)
+    return {row.index: {'query': values, }}
+
+
 def _isTrue(context, row):
     return {row.index: {'query': True, }}
 
@@ -93,6 +101,16 @@ def _largerThan(context, row):
     return tmp
 
 
+def _intLargerThan(context, row):
+    tmp = {row.index:
+           {
+               'query': int(row.values),
+               'range': 'min',
+           },
+           }
+    return tmp
+
+
 def _lessThan(context, row):
     tmp = {row.index:
            {
@@ -103,6 +121,16 @@ def _lessThan(context, row):
     return tmp
 
 
+def _intLessThan(context, row):
+    tmp = {row.index:
+           {
+               'query': int(row.values),
+               'range': 'max',
+           },
+           }
+    return tmp
+
+
 def _currentUser(context, row):
     """Current user lookup"""
     mt = getToolByName(context, 'portal_membership')


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-24T16:51:39-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/eafb4a7aa678863369bc5007963287b5ba9c3c57

Upgrade step

Files changed:
A plone/app/querystring/profiles/upgrades/to_6/registry.xml
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/upgrades.zcml

diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index 99bbe10..1344a1d 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -27,4 +27,13 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+
+    <genericsetup:registerProfile
+        name="upgrade_to_6"
+        title="Querystring Upgrade profile to v6"
+        description=""
+        directory="profiles/upgrades/to_6"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml
index c637d7b..244625a 100644
--- a/plone/app/querystring/profiles/default/metadata.xml
+++ b/plone/app/querystring/profiles/default/metadata.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>5</version>
+  <version>6</version>
   <dependencies>
       <dependency>profile-plone.app.registry:default</dependency>
   </dependencies>
diff --git a/plone/app/querystring/profiles/upgrades/to_6/registry.xml b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
new file mode 100644
index 0000000..8265161
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
@@ -0,0 +1,36 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.is">
+        <value key="title" i18n:translate="">Equals</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.lessThan">
+        <value key="title" i18n:translate="">Less than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.largerThan">
+        <value key="title" i18n:translate="">Larger than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+</registry>
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index 83f12fd..cc4d83f 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -41,4 +41,14 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="5"
+      destination="6"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Fix int operators"
+        import_profile="plone.app.querystring:upgrade_to_6"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-24T17:04:58-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/3116a24d8a5e93f98d267997f1b49c78b45fd479

Some fixes

Files changed:
M plone/app/querystring/queryparser.py

diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index f5ec001..87adb1f 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -66,10 +66,11 @@ def _equal(context, row):
 
 
 def _intEqual(context, row):
+    values = None
     if type(row.values) is list:
         values = [int(v) for v in row.values]
-    else:
-        values = int(values)
+    elif type(row.values) is str:
+        values = int(row.values)
     return {row.index: {'query': values, }}
 
 
@@ -102,9 +103,12 @@ def _largerThan(context, row):
 
 
 def _intLargerThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
     tmp = {row.index:
            {
-               'query': int(row.values),
+               'query': value,
                'range': 'min',
            },
            }
@@ -122,9 +126,12 @@ def _lessThan(context, row):
 
 
 def _intLessThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
     tmp = {row.index:
            {
-               'query': int(row.values),
+               'query': value,
                'range': 'max',
            },
            }


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-27T08:49:22-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/cf7316a039b8c53414d1ed31e8e5c6f40c0e92a3

Added some tests

Files changed:
M plone/app/querystring/tests/testQueryParser.py

diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 889fd81..e9565f9 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -244,14 +244,42 @@ def test__between_reversed_dates(self):
                     'range': 'minmax'}}
         self.assertEqual(parsed, expected)
 
-    def test__largerThan(self):
+    def test__equal(self):
         data = Row(
             index='modified',
-            operator='_largerThan',
+            operator='_equal',
             values='2010/03/18'
         )
-        parsed = queryparser._largerThan(MockSite(), data)
-        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18'}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_equal',
+            values=['2010/03/18', '2010/03/19']
+        )
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': ['2010/03/18', '2010/03/19']}}
+        self.assertEqual(parsed, expected)
+
+    def test__intEqual(self):
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values='20'
+        )
+        parsed = queryparser._lessThan(MockSite(), data)
+        expected = {'modified': {'query': 20}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values=['20', '21']
+        )
+        parsed = queryparser._lessThan(MockSite(), data)
+        expected = {'modified': {'query': [20, 21]}}
         self.assertEqual(parsed, expected)
 
     def test__lessThan(self):
@@ -264,6 +292,16 @@ def test__lessThan(self):
         expected = {'modified': {'query': '2010/03/18', 'range': 'max'}}
         self.assertEqual(parsed, expected)
 
+    def test__intLessThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLessThan',
+            values='20'
+        )
+        parsed = queryparser._lessThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'max'}}
+        self.assertEqual(parsed, expected)
+
     def test__currentUser(self):
         # Anonymous user
         u = MockUser()


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-27T08:53:17-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/ca0b03a98151e4c63a5f126257c553d404af0d2f

Update changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index d439fea..8ca9e85 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix collection not filtering integer field (closes `#32`_).
+  [rodfersou]
 
 
 1.3.1 (2015-03-12)
@@ -205,3 +206,5 @@ Changelog
 ----------------
 
 * Initial release
+
+.. _`#32`: https://github.com/plone/plone.app.querystring/issues/32


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-27T09:32:43-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/6fc15f6e6a3cc13f8fdfaf52ddde4d7bd3aaae89

Fix tests

Files changed:
M plone/app/querystring/tests/testQueryParser.py

diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index e9565f9..23a1436 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -269,7 +269,7 @@ def test__intEqual(self):
             operator='_intEqual',
             values='20'
         )
-        parsed = queryparser._lessThan(MockSite(), data)
+        parsed = queryparser._intEqual(MockSite(), data)
         expected = {'modified': {'query': 20}}
         self.assertEqual(parsed, expected)
 
@@ -278,7 +278,7 @@ def test__intEqual(self):
             operator='_intEqual',
             values=['20', '21']
         )
-        parsed = queryparser._lessThan(MockSite(), data)
+        parsed = queryparser._intEqual(MockSite(), data)
         expected = {'modified': {'query': [20, 21]}}
         self.assertEqual(parsed, expected)
 
@@ -298,10 +298,30 @@ def test__intLessThan(self):
             operator='_intLessThan',
             values='20'
         )
-        parsed = queryparser._lessThan(MockSite(), data)
+        parsed = queryparser._intLessThan(MockSite(), data)
         expected = {'modified': {'query': 20, 'range': 'max'}}
         self.assertEqual(parsed, expected)
 
+    def test__largerThan(self):
+        data = Row(
+            index='modified',
+            operator='_largerThan',
+            values='2010/03/18'
+        )
+        parsed = queryparser._largerThan(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
+    def test__intLargerThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLargerThan',
+            values='20'
+        )
+        parsed = queryparser._intLargerThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
     def test__currentUser(self):
         # Anonymous user
         u = MockUser()


Repository: plone.app.querystring
Branch: refs/heads/master
Date: 2015-04-27T22:33:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/3e800c986e5af3554c37a48087c8d7ad549e58f1

Merge pull request #33 from plone/issue_32

Issue 32 - Collection not filtering integer field

Files changed:
A plone/app/querystring/profiles/upgrades/to_6/registry.xml
M CHANGES.rst
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py
M plone/app/querystring/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index d439fea..8ca9e85 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix collection not filtering integer field (closes `#32`_).
+  [rodfersou]
 
 
 1.3.1 (2015-03-12)
@@ -205,3 +206,5 @@ Changelog
 ----------------
 
 * Initial release
+
+.. _`#32`: https://github.com/plone/plone.app.querystring/issues/32
diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index 99bbe10..1344a1d 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -27,4 +27,13 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+
+    <genericsetup:registerProfile
+        name="upgrade_to_6"
+        title="Querystring Upgrade profile to v6"
+        description=""
+        directory="profiles/upgrades/to_6"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml
index c637d7b..244625a 100644
--- a/plone/app/querystring/profiles/default/metadata.xml
+++ b/plone/app/querystring/profiles/default/metadata.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>5</version>
+  <version>6</version>
   <dependencies>
       <dependency>profile-plone.app.registry:default</dependency>
   </dependencies>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index 1df4040..4ae694a 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -22,7 +22,7 @@
              prefix="plone.app.querystring.operation.int.is">
         <value key="title" i18n:translate="">Equals</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._equal</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -30,7 +30,7 @@
              prefix="plone.app.querystring.operation.int.lessThan">
         <value key="title" i18n:translate="">Less than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._lessThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -38,7 +38,7 @@
              prefix="plone.app.querystring.operation.int.largerThan">
         <value key="title" i18n:translate="">Larger than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._largerThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -179,6 +179,14 @@
     </records>
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
              prefix="plone.app.querystring.operation.string.absolutePath">
         <value key="title" i18n:translate="">Absolute path</value>
         <value key="description" i18n:translate="">Location in the site structure</value>
diff --git a/plone/app/querystring/profiles/upgrades/to_6/registry.xml b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
new file mode 100644
index 0000000..8265161
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
@@ -0,0 +1,36 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.is">
+        <value key="title" i18n:translate="">Equals</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.lessThan">
+        <value key="title" i18n:translate="">Less than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.largerThan">
+        <value key="title" i18n:translate="">Larger than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
+        <value key="widget">StringWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+</registry>
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index cae2cd5..87adb1f 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -65,6 +65,15 @@ def _equal(context, row):
     return {row.index: {'query': row.values, }}
 
 
+def _intEqual(context, row):
+    values = None
+    if type(row.values) is list:
+        values = [int(v) for v in row.values]
+    elif type(row.values) is str:
+        values = int(row.values)
+    return {row.index: {'query': values, }}
+
+
 def _isTrue(context, row):
     return {row.index: {'query': True, }}
 
@@ -93,6 +102,19 @@ def _largerThan(context, row):
     return tmp
 
 
+def _intLargerThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
+    tmp = {row.index:
+           {
+               'query': value,
+               'range': 'min',
+           },
+           }
+    return tmp
+
+
 def _lessThan(context, row):
     tmp = {row.index:
            {
@@ -103,6 +125,19 @@ def _lessThan(context, row):
     return tmp
 
 
+def _intLessThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
+    tmp = {row.index:
+           {
+               'query': value,
+               'range': 'max',
+           },
+           }
+    return tmp
+
+
 def _currentUser(context, row):
     """Current user lookup"""
     mt = getToolByName(context, 'portal_membership')
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 889fd81..23a1436 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -244,14 +244,42 @@ def test__between_reversed_dates(self):
                     'range': 'minmax'}}
         self.assertEqual(parsed, expected)
 
-    def test__largerThan(self):
+    def test__equal(self):
         data = Row(
             index='modified',
-            operator='_largerThan',
+            operator='_equal',
             values='2010/03/18'
         )
-        parsed = queryparser._largerThan(MockSite(), data)
-        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18'}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_equal',
+            values=['2010/03/18', '2010/03/19']
+        )
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': ['2010/03/18', '2010/03/19']}}
+        self.assertEqual(parsed, expected)
+
+    def test__intEqual(self):
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values='20'
+        )
+        parsed = queryparser._intEqual(MockSite(), data)
+        expected = {'modified': {'query': 20}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values=['20', '21']
+        )
+        parsed = queryparser._intEqual(MockSite(), data)
+        expected = {'modified': {'query': [20, 21]}}
         self.assertEqual(parsed, expected)
 
     def test__lessThan(self):
@@ -264,6 +292,36 @@ def test__lessThan(self):
         expected = {'modified': {'query': '2010/03/18', 'range': 'max'}}
         self.assertEqual(parsed, expected)
 
+    def test__intLessThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLessThan',
+            values='20'
+        )
+        parsed = queryparser._intLessThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'max'}}
+        self.assertEqual(parsed, expected)
+
+    def test__largerThan(self):
+        data = Row(
+            index='modified',
+            operator='_largerThan',
+            values='2010/03/18'
+        )
+        parsed = queryparser._largerThan(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
+    def test__intLargerThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLargerThan',
+            values='20'
+        )
+        parsed = queryparser._intLargerThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
     def test__currentUser(self):
         # Anonymous user
         u = MockUser()
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index 83f12fd..cc4d83f 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -41,4 +41,14 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="5"
+      destination="6"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Fix int operators"
+        import_profile="plone.app.querystring:upgrade_to_6"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>


