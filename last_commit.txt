Repository: plone.schemaeditor


Branch: refs/heads/1.3.x
Date: 2015-08-14T01:20:15+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.schemaeditor/commit/f1e052f8e53036d292ae7c92448b107ec3863815

Fixed DeprecationWarning: object.__init__() takes no parameters.

Only Python 2.6 gives this warning, not 2.7.
But it seems unwise to keep this code.
Maybe previously there *was* a super class that did something with the parameters.

For more info, see
http://freshfoo.com/blog/object__init__takes_no_parameters

Files changed:
M CHANGES.rst
M plone/schemaeditor/browser/schema/traversal.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a3f0180..6e76720 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.11 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Fixed DeprecationWarning: object.__init__() takes no parameters.
+  [maurits]
 
 
 1.3.10 (2015-07-30)
diff --git a/plone/schemaeditor/browser/schema/traversal.py b/plone/schemaeditor/browser/schema/traversal.py
index 77956ca..77aa3fb 100644
--- a/plone/schemaeditor/browser/schema/traversal.py
+++ b/plone/schemaeditor/browser/schema/traversal.py
@@ -21,7 +21,6 @@ class SchemaContext(SimpleItem):
     allowedFields = None  # all fields
 
     def __init__(self, context, request, name=u'schema', title=None):
-        super(SchemaContext, self).__init__(context, request)
         self.schema = context
         self.request = request
 


Repository: plone.schemaeditor


Branch: refs/heads/1.3.x
Date: 2015-08-14T01:25:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.schemaeditor/commit/2bf72a1003962055b3bc3e990cfa1644afd460c0

Added classifiers to setup.py.

Files changed:
M setup.py

diff --git a/setup.py b/setup.py
index bd0d2d9..a792341 100644
--- a/setup.py
+++ b/setup.py
@@ -10,7 +10,10 @@
       classifiers=[
           "Framework :: Zope2",
           "Framework :: Plone",
+          "Framework :: Plone :: 4.3",
           "Programming Language :: Python",
+          "Programming Language :: Python :: 2.6",
+          "Programming Language :: Python :: 2.7",
           "Topic :: Software Development :: Libraries :: Python Modules",
           "License :: OSI Approved :: BSD License",
       ],


Repository: plone.schemaeditor


Branch: refs/heads/1.3.x
Date: 2015-08-14T01:30:35+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.schemaeditor/commit/41dd8b438d5576ff575490efb0893aedb8d43929

Avoid DeprecationWarnings in tests.

Files changed:
M plone/schemaeditor/tests/choice.txt
M plone/schemaeditor/tests/editing.txt
M plone/schemaeditor/tests/extending.txt
M plone/schemaeditor/tests/minmax.txt
M plone/schemaeditor/tests/tests.py

diff --git a/plone/schemaeditor/tests/choice.txt b/plone/schemaeditor/tests/choice.txt
index 8637a1a..ba8a1ce 100644
--- a/plone/schemaeditor/tests/choice.txt
+++ b/plone/schemaeditor/tests/choice.txt
@@ -13,9 +13,8 @@ schema editor.
 
     >>> user = app.acl_users.userFolderAddUser(
     ...     'root', 'secret', ['Manager'], [])
-
-    >>> from Products.Five import testbrowser
-    >>> browser = testbrowser.Browser()
+    >>> from Testing.testbrowser import Browser
+    >>> browser = Browser()
     >>> browser.handleErrors = False
     >>> browser.addHeader('Authorization', 'Basic root:secret')
 
diff --git a/plone/schemaeditor/tests/editing.txt b/plone/schemaeditor/tests/editing.txt
index 282b0ca..0f8bc71 100644
--- a/plone/schemaeditor/tests/editing.txt
+++ b/plone/schemaeditor/tests/editing.txt
@@ -5,7 +5,7 @@ will print out the event, so that we can make sure events are getting raised pro
 
 Let's set up the test browser::
 
-    >>> from Products.Five.testbrowser import Browser
+    >>> from Testing.testbrowser import Browser
     >>> browser = Browser()
     >>> portal_url = 'http://nohost'
     >>> browser.handleErrors = False
diff --git a/plone/schemaeditor/tests/extending.txt b/plone/schemaeditor/tests/extending.txt
index de402c4..20c34d8 100644
--- a/plone/schemaeditor/tests/extending.txt
+++ b/plone/schemaeditor/tests/extending.txt
@@ -57,7 +57,7 @@ we need an adapter that provides the IFieldColor interface::
 Now we can bring up the edit form for one of the test fields, and it should
 have the additional 'color' setting::
 
-  >>> from Products.Five.testbrowser import Browser
+  >>> from Testing.testbrowser import Browser
   >>> browser = Browser()
   >>> browser.handleErrors = False
   >>> user = self.app.acl_users.userFolderAddUser('root', 'secret', ['Manager'], [])
diff --git a/plone/schemaeditor/tests/minmax.txt b/plone/schemaeditor/tests/minmax.txt
index 51c1bcc..d0eabe3 100644
--- a/plone/schemaeditor/tests/minmax.txt
+++ b/plone/schemaeditor/tests/minmax.txt
@@ -13,8 +13,8 @@ schema editor.
 
     >>> user = app.acl_users.userFolderAddUser(
     ...     'root', 'secret', ['Manager'], [])
-    >>> from Products.Five import testbrowser
-    >>> browser = testbrowser.Browser()
+    >>> from Testing.testbrowser import Browser
+    >>> browser = Browser()
     >>> browser.handleErrors = False
     >>> browser.addHeader('Authorization', 'Basic root:secret')
 
diff --git a/plone/schemaeditor/tests/tests.py b/plone/schemaeditor/tests/tests.py
index 72d7e28..b2410b8 100644
--- a/plone/schemaeditor/tests/tests.py
+++ b/plone/schemaeditor/tests/tests.py
@@ -6,7 +6,7 @@
 from ZPublisher.BaseRequest import BaseRequest
 from zope.interface import Interface, classImplements, implementedBy
 
-from Products.Five import zcml
+from Zope2.App import zcml
 from plone.z3cform.templates import ZopeTwoFormTemplateFactory
 from plone.z3cform.interfaces import IFormWrapper
 


