Repository: plone.app.content


Branch: refs/heads/master
Date: 2015-09-09T15:57:32+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/984d96294e894af2a70f69610d1383ccc4e23f8e

fix tests: correct API usage to get the currently set default page

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/defaultpage.py
M plone/app/content/tests/test_actions.py
M plone/app/content/tests/test_folder.py
M plone/app/content/tests/test_selectdefaultpage.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 66b3a70..ae67a48 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 3.0.11 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Fix tests: API usage to get default page in order to prevent side effects in
+  other tests.
+  [jensens]
 
 
 3.0.10 (2015-09-07)
diff --git a/plone/app/content/browser/contents/defaultpage.py b/plone/app/content/browser/contents/defaultpage.py
index 1a8355d..0293993 100644
--- a/plone/app/content/browser/contents/defaultpage.py
+++ b/plone/app/content/browser/contents/defaultpage.py
@@ -8,14 +8,14 @@ class SetDefaultPageActionView(ContentsBaseAction):
     failure_msg = _(u'Failed to set default page')
 
     def __call__(self):
-        id = self.request.form.get('id')
+        cid = self.request.form.get('id')
         self.errors = []
 
-        if id not in self.context.objectIds():
+        if cid not in self.context.objectIds():
             self.errors.append(
                 _(u'There is no object with short name '
                   u'${name} in this folder.',
-                  mapping={u'name': id}))
+                  mapping={u'name': cid}))
         else:
-            self.context.setDefaultPage(id)
+            self.context.setDefaultPage(cid)
         return self.message()
diff --git a/plone/app/content/tests/test_actions.py b/plone/app/content/tests/test_actions.py
index 4424e59..bea35ab 100644
--- a/plone/app/content/tests/test_actions.py
+++ b/plone/app/content/tests/test_actions.py
@@ -221,7 +221,7 @@ def test_default_page_updated_on_rename(self):
         doc = folder['d1']
         folder.setDefaultPage('d1')
         transaction.commit()
-        self.assertEqual(folder.default_page, 'd1')
+        self.assertEqual(folder.getDefaultPage(), 'd1')
 
         # We need zope2.CopyOrMove permission to rename content
         self.browser.open(doc.absolute_url() + '/object_rename')
@@ -229,7 +229,7 @@ def test_default_page_updated_on_rename(self):
         self.browser.getControl(name='form.widgets.new_title').value = 'Doc'
         self.browser.getControl(name='form.buttons.Rename').click()
         self.assertEqual(folder.getFolderContents()[0].id, 'renamed')
-        self.assertEqual(folder.default_page, 'renamed')
+        self.assertEqual(folder.getDefaultPage(), 'renamed')
 
     def test_rename_form_cancel(self):
         folder = self.portal['f1']
diff --git a/plone/app/content/tests/test_folder.py b/plone/app/content/tests/test_folder.py
index 3e4989e..44eb3fa 100644
--- a/plone/app/content/tests/test_folder.py
+++ b/plone/app/content/tests/test_folder.py
@@ -205,7 +205,7 @@ def test_default_page_updated_on_rename_objects(self):
         })
         view = RenameActionView(self.portal, self.request)
         view()
-        self.assertEqual(self.portal.default_page, 'page-renamed')
+        self.assertEqual(self.portal.getDefaultPage(), 'page-renamed')
 
 
 class ContextInfoTest(BaseTest):
diff --git a/plone/app/content/tests/test_selectdefaultpage.py b/plone/app/content/tests/test_selectdefaultpage.py
index 4286d15..58a07bb 100644
--- a/plone/app/content/tests/test_selectdefaultpage.py
+++ b/plone/app/content/tests/test_selectdefaultpage.py
@@ -95,7 +95,7 @@ def test_default_page_action_cancel(self):
         cancel_button.click()
 
         self.assertEqual(self.browser.url, folder.absolute_url())
-        self.assertFalse(hasattr(folder, 'default_page'))
+        self.assertIs(folder.getDefaultPage(), None)
 
     def test_default_page_action_save(self):
         """Check the Save action."""
@@ -106,7 +106,7 @@ def test_default_page_action_save(self):
         submit_button.click()
 
         self.assertEqual(self.browser.url, folder.absolute_url())
-        self.assertEqual(folder.default_page, 'testdoc')
+        self.assertEqual(folder.getDefaultPage(), 'testdoc')
 
 
 class SelectDefaultPageATTestCase(SelectDefaultPageDXTestCase):


Repository: plone.app.content


Branch: refs/heads/master
Date: 2015-09-09T17:10:47+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/5d5e684d7df059a8b7ac04dc98626f941344ef51

Merge pull request #53 from plone/default_page_api_usage

fix tests: correct API usage to get the currently set default page

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/defaultpage.py
M plone/app/content/tests/test_actions.py
M plone/app/content/tests/test_folder.py
M plone/app/content/tests/test_selectdefaultpage.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 66b3a70..ae67a48 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 3.0.11 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Fix tests: API usage to get default page in order to prevent side effects in
+  other tests.
+  [jensens]
 
 
 3.0.10 (2015-09-07)
diff --git a/plone/app/content/browser/contents/defaultpage.py b/plone/app/content/browser/contents/defaultpage.py
index 1a8355d..0293993 100644
--- a/plone/app/content/browser/contents/defaultpage.py
+++ b/plone/app/content/browser/contents/defaultpage.py
@@ -8,14 +8,14 @@ class SetDefaultPageActionView(ContentsBaseAction):
     failure_msg = _(u'Failed to set default page')
 
     def __call__(self):
-        id = self.request.form.get('id')
+        cid = self.request.form.get('id')
         self.errors = []
 
-        if id not in self.context.objectIds():
+        if cid not in self.context.objectIds():
             self.errors.append(
                 _(u'There is no object with short name '
                   u'${name} in this folder.',
-                  mapping={u'name': id}))
+                  mapping={u'name': cid}))
         else:
-            self.context.setDefaultPage(id)
+            self.context.setDefaultPage(cid)
         return self.message()
diff --git a/plone/app/content/tests/test_actions.py b/plone/app/content/tests/test_actions.py
index 4424e59..bea35ab 100644
--- a/plone/app/content/tests/test_actions.py
+++ b/plone/app/content/tests/test_actions.py
@@ -221,7 +221,7 @@ def test_default_page_updated_on_rename(self):
         doc = folder['d1']
         folder.setDefaultPage('d1')
         transaction.commit()
-        self.assertEqual(folder.default_page, 'd1')
+        self.assertEqual(folder.getDefaultPage(), 'd1')
 
         # We need zope2.CopyOrMove permission to rename content
         self.browser.open(doc.absolute_url() + '/object_rename')
@@ -229,7 +229,7 @@ def test_default_page_updated_on_rename(self):
         self.browser.getControl(name='form.widgets.new_title').value = 'Doc'
         self.browser.getControl(name='form.buttons.Rename').click()
         self.assertEqual(folder.getFolderContents()[0].id, 'renamed')
-        self.assertEqual(folder.default_page, 'renamed')
+        self.assertEqual(folder.getDefaultPage(), 'renamed')
 
     def test_rename_form_cancel(self):
         folder = self.portal['f1']
diff --git a/plone/app/content/tests/test_folder.py b/plone/app/content/tests/test_folder.py
index 3e4989e..44eb3fa 100644
--- a/plone/app/content/tests/test_folder.py
+++ b/plone/app/content/tests/test_folder.py
@@ -205,7 +205,7 @@ def test_default_page_updated_on_rename_objects(self):
         })
         view = RenameActionView(self.portal, self.request)
         view()
-        self.assertEqual(self.portal.default_page, 'page-renamed')
+        self.assertEqual(self.portal.getDefaultPage(), 'page-renamed')
 
 
 class ContextInfoTest(BaseTest):
diff --git a/plone/app/content/tests/test_selectdefaultpage.py b/plone/app/content/tests/test_selectdefaultpage.py
index 4286d15..58a07bb 100644
--- a/plone/app/content/tests/test_selectdefaultpage.py
+++ b/plone/app/content/tests/test_selectdefaultpage.py
@@ -95,7 +95,7 @@ def test_default_page_action_cancel(self):
         cancel_button.click()
 
         self.assertEqual(self.browser.url, folder.absolute_url())
-        self.assertFalse(hasattr(folder, 'default_page'))
+        self.assertIs(folder.getDefaultPage(), None)
 
     def test_default_page_action_save(self):
         """Check the Save action."""
@@ -106,7 +106,7 @@ def test_default_page_action_save(self):
         submit_button.click()
 
         self.assertEqual(self.browser.url, folder.absolute_url())
-        self.assertEqual(folder.default_page, 'testdoc')
+        self.assertEqual(folder.getDefaultPage(), 'testdoc')
 
 
 class SelectDefaultPageATTestCase(SelectDefaultPageDXTestCase):


