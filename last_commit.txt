Repository: plone.app.content


Branch: refs/heads/master
Date: 2015-09-20T17:20:55+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.content/commit/e06925f7f3d9211462c7d2e3bbe3c5144b6e7676

Move portal_properties settings to configuration registry

commit 10c896baa160943e159979df6b37801e54f7d5f9
Author: Philip Bauer &lt;bauer@starzel.de&gt;
Date:   Fri Sep 18 15:56:11 2015 +0200

    default_page_types moved to registry

commit fae2d8be6e2c1f87a5c582e20a4dfea01603c63d
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 18:19:48 2015 +0200

    Update tests to use registry lookup for types_use_view_action_in_listings

commit 59726e35f74e3e19923350c001124f37bed33ff7
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 13:01:24 2015 +0200

    Add fallback.

commit 89323c813f5a4b2372cab19174e8601bed0c102e
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 12:55:09 2015 +0200

    Pull typesUseViewActionInListings from registry.

Files changed:
M CHANGES.rst
M plone/app/content/browser/reviewlist.py
M plone/app/content/browser/selection.py
M plone/app/content/browser/templates/content_status_history.pt
M plone/app/content/tests/test_actions.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d1d9599..40282dd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,6 +7,9 @@ Changelog
 - Require cmf.ModifyPortalContent for content_status_history
   [vangheem]
 
+- Pull typesUseViewActionInListings settings from registry.
+  [esteele]
+
 
 3.0.11 (2015-09-12)
 -------------------
diff --git a/plone/app/content/browser/reviewlist.py b/plone/app/content/browser/reviewlist.py
index 97104c3..c73f336 100644
--- a/plone/app/content/browser/reviewlist.py
+++ b/plone/app/content/browser/reviewlist.py
@@ -1,9 +1,11 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from zope.component import getUtility
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
 from plone.app.content.browser.tableview import Table
 from plone.app.content.browser.tableview import TableBrowserView
+from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.i18n import translate
 from zope.publisher.browser import BrowserView
@@ -49,12 +51,12 @@ def items(self):
         plone_layout = getMultiAdapter((self.context, self.request),
                                        name=u'plone_layout')
         portal_workflow = getToolByName(self.context, 'portal_workflow')
-        portal_properties = getToolByName(self.context, 'portal_properties')
         portal_types = getToolByName(self.context, 'portal_types')
-        site_properties = portal_properties.site_properties
 
-        use_view_action = site_properties.getProperty(
-            'typesUseViewActionInListings', ())
+        registry = getUtility(IRegistry)
+        use_view_action = registry.get(
+            'plone.types_use_view_action_in_listings', ())
+
         browser_default = self.context.browserDefault()
 
         results = list()
diff --git a/plone/app/content/browser/selection.py b/plone/app/content/browser/selection.py
index 99e8d47..006e7f2 100644
--- a/plone/app/content/browser/selection.py
+++ b/plone/app/content/browser/selection.py
@@ -1,9 +1,11 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from zope.component import getUtility
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.Five.browser import BrowserView
 from Products.statusmessages.interfaces import IStatusMessage
+from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 
 
@@ -65,13 +67,13 @@ class DefaultPageSelectionView(BrowserView):
 
     def __call__(self):
         if 'form.buttons.Save' in self.request.form:
-            if not 'objectId' in self.request.form:
+            if 'objectId' not in self.request.form:
                 message = _(u'Please select an item to use.')
                 msgtype = 'error'
             else:
                 objectId = self.request.form['objectId']
 
-                if not objectId in self.context.objectIds():
+                if objectId not in self.context.objectIds():
                     message = _(u'There is no object with short name ${name} '
                                 u'in this folder.',
                                 mapping={u'name': objectId})
@@ -91,10 +93,10 @@ def get_selectable_items(self):
         """ Return brains in this container that can be used as default_pages
         """
         context = aq_inner(self.context)
-        portal_properties = getToolByName(context, 'portal_properties')
-        sp = portal_properties.site_properties
-        view_types = sp.getProperty('typesUseViewActionInListings', [])
-        default_page_types = sp.getProperty('default_page_types', [])
+        registry = getUtility(IRegistry)
+        view_types = registry.get(
+            'plone.types_use_view_action_in_listings', [])
+        default_page_types = registry.get('plone.default_page_types', [])
         portal_types = getToolByName(self.context, 'portal_types')
 
         results = []
diff --git a/plone/app/content/browser/templates/content_status_history.pt b/plone/app/content/browser/templates/content_status_history.pt
index c0b0bb3..bb805be 100644
--- a/plone/app/content/browser/templates/content_status_history.pt
+++ b/plone/app/content/browser/templates/content_status_history.pt
@@ -74,7 +74,7 @@
                 <label i18n:translate="label_affected_content">Affected content</label>
                 <div tal:content="error">Validation error output</div>
                 <div tal:define="dummy python:request.set('ids_checked', 1);
-                                 use_view_action site_properties/typesUseViewActionInListings|python:();">
+                                 use_view_action python:context.portal_registry.get('plone.types_use_view_action_in_listings', ());">
                   <table id="sortable"
                          class="listing"
                          summary="Affected content"
diff --git a/plone/app/content/tests/test_actions.py b/plone/app/content/tests/test_actions.py
index bea35ab..f19e59b 100644
--- a/plone/app/content/tests/test_actions.py
+++ b/plone/app/content/tests/test_actions.py
@@ -174,9 +174,10 @@ def test_rename_form(self):
     def test_rename_form_with_view_action(self):
         # can't be bothered to register blobs, instead we add documents to
         # typesUseViewActionInListings
-        props = self.portal.portal_properties.site_properties
-        props.manage_changeProperties(
-            typesUseViewActionInListings=['Image', 'File', 'Document'])
+        registry = self.portal.portal_registry
+        registry['plone.types_use_view_action_in_listings'] = [u'Image',
+                                                               u'File',
+                                                               u'Document']
 
         folder = self.portal['f1']
         folder.invokeFactory('Document', 'document1')
@@ -248,10 +249,10 @@ def test_rename_form_cancel(self):
     def test_rename_form_cancel_with_view_action(self):
         # can't be bothered to register blobs, instead we add documents to
         # typesUseViewActionInListings
-        props = self.portal.portal_properties.site_properties
-        props.manage_changeProperties(
-            typesUseViewActionInListings=['Image', 'File', 'Document'])
-
+        registry = self.portal.portal_registry
+        registry['plone.types_use_view_action_in_listings'] = [u'Image',
+                                                               u'File',
+                                                               u'Document']
         folder = self.portal['f1']
         folder.invokeFactory('Document', 'document1')
         document1 = folder['document1']
@@ -295,10 +296,10 @@ def test_object_cut_view(self):
     def test_object_cut_view_with_view_action(self):
         # can't be bothered to register blobs, instead we add documents to
         # typesUseViewActionInListings
-        props = self.portal.portal_properties.site_properties
-        props.manage_changeProperties(
-            typesUseViewActionInListings=['Image', 'File', 'Document'])
-
+        registry = self.portal.portal_registry
+        registry['plone.types_use_view_action_in_listings'] = [u'Image',
+                                                               u'File',
+                                                               u'Document']
         folder = self.portal['f1']
         folder.invokeFactory('Document', 'document1')
         document1 = folder['document1']
@@ -340,9 +341,10 @@ def test_object_copy_view(self):
     def test_object_copy_with_view_action(self):
         # can't be bothered to register blobs, instead we add documents to
         # typesUseViewActionInListings
-        props = self.portal.portal_properties.site_properties
-        props.manage_changeProperties(
-            typesUseViewActionInListings=['Image', 'File', 'Document'])
+        registry = self.portal.portal_registry
+        registry['plone.types_use_view_action_in_listings'] = [u'Image',
+                                                               u'File',
+                                                               u'Document']
 
         folder = self.portal['f1']
         folder.invokeFactory('Document', 'document1')


