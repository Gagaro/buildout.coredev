Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-09-07T23:11:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/b60553ed0671bc4bd43c3c6737584b55c06f0ad3

getToolByName: accept tool from mock module.

This is needed for me locally when running:

  bin/test -s Products.Archetypes -m test_pawidgets

No idea why Jenkins is happy.  Locally I get errors:

  TypeError: Object found is not a portal tool (portal_properties)

This is because those tests are accessing
self.context.portal_properties where self.context is an instance of
mock.Mock, so the portal_properties are also mock.Mock.

Files changed:
M Products/CMFPlone/patches/security.py

diff --git a/Products/CMFPlone/patches/security.py b/Products/CMFPlone/patches/security.py
index 65ebda1..22a0d56 100644
--- a/Products/CMFPlone/patches/security.py
+++ b/Products/CMFPlone/patches/security.py
@@ -63,6 +63,7 @@ def check_getToolByName(obj, name, default=_marker):
             name in _tool_interface_registry or \
             (isinstance(result, FauxArchetypeTool)) or \
             '.test' in result.__class__.__module__ or \
+            result.__class__.__module__ == 'mock' or \
             result is _marker or \
             result is default:
         return result


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-09-07T17:57:50-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b279db85b34563290dfa5db99a5ee2b263c7efe6

Merge pull request #876 from plone/maurits-toolbyname-accept-mock

getToolByName: accept tool from mock module.

Files changed:
M Products/CMFPlone/patches/security.py

diff --git a/Products/CMFPlone/patches/security.py b/Products/CMFPlone/patches/security.py
index 65ebda1..22a0d56 100644
--- a/Products/CMFPlone/patches/security.py
+++ b/Products/CMFPlone/patches/security.py
@@ -63,6 +63,7 @@ def check_getToolByName(obj, name, default=_marker):
             name in _tool_interface_registry or \
             (isinstance(result, FauxArchetypeTool)) or \
             '.test' in result.__class__.__module__ or \
+            result.__class__.__module__ == 'mock' or \
             result is _marker or \
             result is default:
         return result


