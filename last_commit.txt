Repository: mockup
Branch: refs/heads/master
Date: 2015-03-24T15:29:12-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/a064d9697d3b6ca7c0dcf7d1e385fbf11cd58dca

be able to use tinymce pattern without upload tab

Files changed:
M CHANGES.rst
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/tinymce/templates/image.xml
M mockup/patterns/tinymce/templates/link.xml

diff --git a/CHANGES.rst b/CHANGES.rst
index 442dc38..960bc1a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,13 @@
 Changelog
 =========
 
-2.0.0 (unreleased)
+2.0.1 (unreleased)
+------------------
+
+- be able to use tinymce plone plugins without image upload part
+
+
+2.0.0 (2015-03-17)
 ------------------
 
 - make sure mockup can be installable with bower again
diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index e1f6d19..dfe2265 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -376,6 +376,7 @@ define([
 
     generateModalHtml: function() {
       return this.template({
+        upload: this.options.upload,
         text: this.options.text,
         insertHeading: this.options.text.insertHeading,
         linkTypes: this.options.linkTypes,
@@ -500,15 +501,17 @@ define([
       self.initElements();
       self.initData();
       // upload init
-      self.$upload = $('.uploadify-me', self.modal.$modal);
-      self.options.upload.relatedItems = self.options.relatedItems;
-      self.$upload.addClass('pat-upload').patternUpload(self.options.upload);
-      self.$upload.on('uploadAllCompleted', function(evt, data) {
-        self.$upload.attr({
-          'data-filename': data.files ? data.files[0].name : '',
-          'data-path': data.path
+      if(self.options.upload){
+        self.$upload = $('.uploadify-me', self.modal.$modal);
+        self.options.upload.relatedItems = self.options.relatedItems;
+        self.$upload.addClass('pat-upload').patternUpload(self.options.upload);
+        self.$upload.on('uploadAllCompleted', function(evt, data) {
+          self.$upload.attr({
+            'data-filename': data.files ? data.files[0].name : '',
+            'data-path': data.path
+          });
         });
-      });
+      }
 
       self.$button.off('click').on('click', function(e) {
         e.preventDefault();
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 172921b..fc21342 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -155,7 +155,7 @@ define([
         {text: _t('Open in top frame (replaces all frames)'), value: '_top'}
       ],
       imageTypes: 'Image',
-      folderTypes: 'Folder,Plone Site',
+      folderTypes: ['Folder', 'Plone Site'],
       linkableTypes: 'Document,Event,File,Folder,Image,News Item,Topic',
       tiny: {
         'content_css': '../../../bower_components/tinymce-builded/js/tinymce/skins/lightgray/content.min.css',
@@ -178,16 +178,14 @@ define([
       var self = this;
       if (self.linkModal === null) {
         var $el = $('<div/>').insertAfter(self.$el);
+        var linkTypes = ['internal', 'upload', 'external', 'email', 'anchor'];
+        if(!self.options.upload){
+          linkTypes.splice(1, 1);
+        }
         self.linkModal = new LinkModal($el,
           $.extend(true, {}, self.options, {
             tinypattern: self,
-            linkTypes: [
-              'internal',
-              'upload',
-              'external',
-              'email',
-              'anchor'
-            ]
+            linkTypes: linkTypes
           })
         );
         self.linkModal.show();
@@ -199,9 +197,13 @@ define([
     addImageClicked: function() {
       var self = this;
       if (self.imageModal === null) {
+        var linkTypes = ['image', 'uploadImage', 'externalImage'];
+        if(!self.options.upload){
+          linkTypes.splice(1, 1);
+        }
         var options = $.extend(true, {}, self.options, {
           tinypattern: self,
-          linkTypes: ['image', 'uploadImage', 'externalImage'],
+          linkTypes: linkTypes,
           initialLinkType: 'image',
           text: {
             insertHeading: _t('Insert Image')
@@ -210,9 +212,9 @@ define([
             baseCriteria: [{
               i: 'Type',
               o: 'plone.app.querystring.operation.list.contains',
-              v: self.options.imageTypes.split(',').concat(self.options.folderTypes.split(','))
+              v: self.options.imageTypes.concat(self.options.folderTypes)
             }],
-            selectableTypes: self.options.imageTypes.split(','),
+            selectableTypes: self.options.imageTypes,
             resultTemplate: ResultTemplate,
             selectionTemplate: SelectionTemplate
           }
@@ -230,12 +232,18 @@ define([
       var part = data[self.options.linkAttribute];
       return self.options.prependToUrl + part + self.options.appendToUrl;
     },
-    generateImageUrl: function(data, scale) {
+    generateImageUrl: function(data, scale_name) {
       var self = this;
       var url = self.generateUrl(data);
-      if (scale !== ""){
-          url = (url + self.options.prependToScalePart + scale +
-                 self.options.appendToScalePart);
+      if (scale_name !== ""){
+        var part = scale_name;
+        for(var i=0; i<self.options.scales.length; i++){
+          if(self.options.scales[i].name == scale_name){
+            part = self.options.scales[i].part;
+          }
+        }
+        url = (url + self.options.prependToScalePart + part +
+               self.options.appendToScalePart);
       }
       return url;
     },
@@ -303,6 +311,23 @@ define([
         tinymce.baseURL = self.options.loadingBaseUrl;
       }
 
+      if(typeof(self.options.scales) === 'string'){
+        self.options.scales = _.map(self.options.scales.split(','), function(scale){
+          var scale = scale.split(':');
+          return {
+            part: scale[0],
+            name: scale[0],
+            label: scale[1]
+          }
+        });
+      }
+      if(typeof(self.options.folderTypes) === 'string'){
+        self.options.folderTypes = self.options.folderTypes.split(',');
+      }
+      if(typeof(self.options.imageTypes) === 'string'){
+        self.options.imageTypes = self.options.imageTypes.split(',');
+      }
+
       tinymce.init(tinyOptions);
       self.tiny = tinymce.get(id);
 
diff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml
index 5e22a51..be5a307 100644
--- a/mockup/patterns/tinymce/templates/image.xml
+++ b/mockup/patterns/tinymce/templates/image.xml
@@ -1,7 +1,9 @@
 <div>
   <div class="linkModal">
     <h1><%- insertHeading %></h1>
+    <% if(upload){ %>
     <p class="info">Drag and drop files from your desktop onto dialog to upload</p>
+    <% } %>
 
     <div class="linkTypes pat-autotoc autotabs"
          data-pat-autotoc="section:fieldset;levels:legend;">
@@ -16,10 +18,9 @@
             <label><%- scaleText %></label>
             <select name="scale">
               <option value="">Original</option>
-                <% _.each(scales.split(','), function(scale){ %>
-                  <% var scale = scale.split(':'); %>
-                  <option value="<%- scale[1] %>">
-                    <%- scale[0] %>
+                <% _.each(scales, function(scale){ %>
+                  <option value="<%- scale.part %>">
+                    <%- scale.label %>
                   </option>
                 <% }); %>
             </select>
@@ -27,10 +28,12 @@
         </div>
       </fieldset>
 
+      <% if(upload){ %>
       <fieldset class="linkType uploadImage" data-linkType="uploadImage">
         <legend>Upload</legend>
         <div class="uploadify-me"></div>
       </fieldset>
+      <% } %>
 
       <fieldset class="linkType externalImage" data-linkType="externalImage">
         <legend>External image</legend>
diff --git a/mockup/patterns/tinymce/templates/link.xml b/mockup/patterns/tinymce/templates/link.xml
index 39a08ac..f93d408 100644
--- a/mockup/patterns/tinymce/templates/link.xml
+++ b/mockup/patterns/tinymce/templates/link.xml
@@ -1,7 +1,9 @@
 <div>
   <div class="linkModal">
     <h1><%- insertHeading %></h1>
+    <% if(upload){ %>
     <p class="info">Drag and drop files from your desktop onto dialog to upload</p>
+    <% } %>
 
     <div class="linkTypes pat-autotoc autotabs"
          data-pat-autotoc="section:fieldset;levels:legend;">
@@ -16,10 +18,12 @@
         </div>
       </fieldset>
 
+      <% if(upload){ %>
       <fieldset class="linkType upload" data-linkType="upload">
         <legend>Upload</legend>
         <div class="uploadify-me"></div>
       </fieldset>
+      <% } %>
 
       <fieldset class="linkType external" data-linkType="external">
         <legend>External</legend>


