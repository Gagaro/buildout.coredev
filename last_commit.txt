Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-19T20:16:51+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.z3cform/commit/c6e44eec02445579b93152a1d574a234ec7f1854

Update test mocks to pretend to be the registry instead of portal_properties.

Files changed:
M plone/app/z3cform/tests/test_widgets.py

diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 223ded4..67958a5 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -914,10 +914,10 @@ def setUp(self):
 
     def test_widget(self):
         from plone.app.z3cform.widget import RelatedItemsWidget
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
+            registry = Mock()
+            registry.get.return_value = ['SomeType']
+            mock_method.return_value = registry
             widget = RelatedItemsWidget(self.request)
             widget.context = Mock(absolute_url=lambda: 'fake_url')
             widget.update()
@@ -943,11 +943,11 @@ def test_single_selection(self):
         """The pattern_options value for maximumSelectionSize should
         be 1 when the field only allows a single selection."""
         from plone.app.z3cform.widget import RelatedItemsFieldWidget
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
             context = Mock(absolute_url=lambda: 'fake_url')
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+            registry = Mock()
+            registry.get.return_value = []
+            mock_method.return_value = registry
             field = Choice(
                 __name__='selectfield',
                 values=['one', 'two', 'three'],
@@ -966,11 +966,11 @@ def test_multiple_selection(self):
         from zope.schema.interfaces import ISource
         from zope.schema.vocabulary import VocabularyRegistry
 
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
             context = Mock(absolute_url=lambda: 'fake_url')
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+            registry = Mock()
+            registry.get.return_value = []
+            mock_method.return_value = registry
             field = List(
                 __name__='selectfield',
                 value_type=Choice(vocabulary='foobar')


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-19T20:18:19+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.z3cform/commit/db9116ff74c0ed1075788c1e55ba2d508ce31221

Pull default_charset from registry.

Files changed:
M CHANGES.rst
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2cad99a..569b294 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
+- Get default_charset values from configuration registry.
+  [esteele]
+
 - Allow time options to be customized for DatetimeWidget.
   [thet]
 
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 8655010..1f7b240 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -492,9 +492,8 @@ def pattern(self):
     def _base_args(self):
         args = super(RichTextWidget, self)._base_args()
         args['name'] = self.name
-        properties = getToolByName(self.wrapped_context(), 'portal_properties')
-        charset = properties.site_properties.getProperty('default_charset',
-                                                         'utf-8')
+        registry = getUtility(IRegistry)
+        charset = registry.get('plone.default_charset', 'utf-8')
         value = self.value and self.value.raw_encoded or ''
         args['value'] = (self.request.get(
             self.field.getName(), value)).decode(charset)


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-20T12:26:07+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.z3cform/commit/b5d5ebceca20ea1b7ef87157a3a57dc1356192f0

Default to utf-8

Files changed:
M plone/app/z3cform/widget.py

diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 1f7b240..5bfb691 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -492,11 +492,9 @@ def pattern(self):
     def _base_args(self):
         args = super(RichTextWidget, self)._base_args()
         args['name'] = self.name
-        registry = getUtility(IRegistry)
-        charset = registry.get('plone.default_charset', 'utf-8')
         value = self.value and self.value.raw_encoded or ''
         args['value'] = (self.request.get(
-            self.field.getName(), value)).decode(charset)
+            self.field.getName(), value)).decode('utf-8')
 
         args.setdefault('pattern_options', {})
         merged = dict_merge(get_tinymce_options(self.context, self.field, self.request),  # noqa


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-20T17:32:14+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/7b60f9f5f50bec161b8c06331a97284f67508758

Merge pull request #26 from plone/portal-properties-cleanup

Portal properties cleanup

Files changed:
M CHANGES.rst
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2cad99a..569b294 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
+- Get default_charset values from configuration registry.
+  [esteele]
+
 - Allow time options to be customized for DatetimeWidget.
   [thet]
 
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 223ded4..67958a5 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -914,10 +914,10 @@ def setUp(self):
 
     def test_widget(self):
         from plone.app.z3cform.widget import RelatedItemsWidget
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
+            registry = Mock()
+            registry.get.return_value = ['SomeType']
+            mock_method.return_value = registry
             widget = RelatedItemsWidget(self.request)
             widget.context = Mock(absolute_url=lambda: 'fake_url')
             widget.update()
@@ -943,11 +943,11 @@ def test_single_selection(self):
         """The pattern_options value for maximumSelectionSize should
         be 1 when the field only allows a single selection."""
         from plone.app.z3cform.widget import RelatedItemsFieldWidget
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
             context = Mock(absolute_url=lambda: 'fake_url')
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+            registry = Mock()
+            registry.get.return_value = []
+            mock_method.return_value = registry
             field = Choice(
                 __name__='selectfield',
                 values=['one', 'two', 'three'],
@@ -966,11 +966,11 @@ def test_multiple_selection(self):
         from zope.schema.interfaces import ISource
         from zope.schema.vocabulary import VocabularyRegistry
 
-        with patch('plone.app.widgets.utils.getToolByName') as mock_method:
+        with patch('plone.app.widgets.utils.getUtility') as mock_method:
             context = Mock(absolute_url=lambda: 'fake_url')
-            props = Mock()
-            props.site_properties.getProperty.return_value = ['SomeType']
-            mock_method.return_value = props
+            registry = Mock()
+            registry.get.return_value = []
+            mock_method.return_value = registry
             field = List(
                 __name__='selectfield',
                 value_type=Choice(vocabulary='foobar')
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 8655010..5bfb691 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -492,12 +492,9 @@ def pattern(self):
     def _base_args(self):
         args = super(RichTextWidget, self)._base_args()
         args['name'] = self.name
-        properties = getToolByName(self.wrapped_context(), 'portal_properties')
-        charset = properties.site_properties.getProperty('default_charset',
-                                                         'utf-8')
         value = self.value and self.value.raw_encoded or ''
         args['value'] = (self.request.get(
-            self.field.getName(), value)).decode(charset)
+            self.field.getName(), value)).decode('utf-8')
 
         args.setdefault('pattern_options', {})
         merged = dict_merge(get_tinymce_options(self.context, self.field, self.request),  # noqa


