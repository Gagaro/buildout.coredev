Repository: plone.dexterity
Branch: refs/heads/master
Date: 2015-03-08T23:50:14-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.dexterity/commit/3f073d0d3397684d4c9c65781e101ffe28935de3

avoid failures due to daylight savings change

There may be an actual issue here where CreationDate() converts a date
from a part of the year without daylight savings time into the zone
used during daylight savings time, if run while daylight savings time
is in effect. But let's get the build green again before digging into that...

Files changed:
M plone/dexterity/tests/test_content.py

diff --git a/plone/dexterity/tests/test_content.py b/plone/dexterity/tests/test_content.py
index 7755aec..68726fc 100644
--- a/plone/dexterity/tests/test_content.py
+++ b/plone/dexterity/tests/test_content.py
@@ -636,7 +636,7 @@ def test_item_dublincore(self):
             plone.dexterity.content, 'DateTime'
         )
         mocked_datetime = datetime_patcher.start()
-        mocked_datetime.return_value = DateTime(2013, 11, 7)
+        mocked_datetime.return_value = DateTime(2014, 6, 1)
         self.addCleanup(datetime_patcher.stop)
 
         i = Item(
@@ -675,7 +675,7 @@ def test_item_dublincore(self):
         self.assertEqual(i.rights, 'CC')
         self.assertEqual(i.Rights(), 'CC')
         self.assertEqual(i.creation_date, i.created())
-        self.assertEqual(i.CreationDate()[:19], i.creation_date.ISO()[:19])
+        self.assertEqual(i.CreationDate(zone=summer_timezone)[:19], i.creation_date.ISO()[:19])
         self.assertEqual(i.modification_date, i.creation_date)
         self.assertEqual(i.modification_date, i.modified())
         self.assertEqual(
@@ -692,7 +692,7 @@ def test_item_dublincore_date(self):
             plone.dexterity.content, 'DateTime'
         )
         mocked_datetime = datetime_patcher.start()
-        mocked_datetime.return_value = DateTime(2013, 11, 7)
+        mocked_datetime.return_value = DateTime(2014, 6, 1)
         self.addCleanup(datetime_patcher.stop)
 
         i = Item(
@@ -717,7 +717,7 @@ def test_item_dublincore_date(self):
             i.ExpirationDate(zone=summer_timezone)[:10], '2013-07-09')
         self.assertEqual(i.expires(), DateTime('07/09/2013'))
         self.assertEqual(i.creation_date, i.created())
-        self.assertEqual(i.CreationDate()[:19], i.creation_date.ISO()[:19])
+        self.assertEqual(i.CreationDate(zone=summer_timezone)[:19], i.creation_date.ISO()[:19])
         self.assertEqual(i.modification_date, i.creation_date)
         self.assertEqual(i.modification_date, i.modified())
         self.assertEqual(
@@ -733,7 +733,7 @@ def test_item_dublincore_datetime(self):
             plone.dexterity.content, 'DateTime'
         )
         mocked_datetime = datetime_patcher.start()
-        mocked_datetime.return_value = DateTime(2013, 11, 7)
+        mocked_datetime.return_value = DateTime(2014, 6, 1)
         self.addCleanup(datetime_patcher.stop)
 
         i = Item(
@@ -768,7 +768,7 @@ def test_item_dublincore_datetime(self):
         )
         self.assertEqual(i.expires(), DateTime('2013/07/09 12:59:59 GMT-5'))
         self.assertEqual(i.creation_date, i.created())
-        self.assertEqual(i.CreationDate(), i.creation_date.ISO())
+        self.assertEqual(i.CreationDate(zone=summer_timezone), i.creation_date.ISO())
         self.assertEqual(i.modification_date, i.creation_date)
         self.assertEqual(i.modification_date, i.modified())
         self.assertEqual(i.ModificationDate(), i.modification_date.ISO())


