Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2015-09-11T12:48:57+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/1945de4392728833e4a85dd7e48d873a99b6b816

Fix changing searchable in types-controlpanel

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/types.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e19ac90..6fa8d96 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
 5.0rc2 (unreleased)
 -------------------
 
+- Fix changing searchable in types-controlpanel.
+  Fix https://github.com/plone/Products.CMFPlone/issues/926
+  [pbauer]
+
 - Respect view-url in livesearch-results. Fixes #918.
   [pbauer]
 
diff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py
index 7b69930..10663e0 100644
--- a/Products/CMFPlone/controlpanel/browser/types.py
+++ b/Products/CMFPlone/controlpanel/browser/types.py
@@ -63,18 +63,8 @@ def handleSave(self, action):
         if errors:
             self.status = self.formErrorsMessage
             return
-        #portal = getSite()
-        #pprop = getToolByName(portal, 'portal_properties')
-        #site_properties = pprop.site_properties
-        #site_properties.manage_changeProperties(
-        #    visible_ids=data['visible_ids'],
-        #    enable_inline_types=data['enable_inline_types'],
-        #    enable_link_integrity_checks=data['enable_link_integrity_checks'],
-        #    ext_editor=data['ext_editor'],
-        #    default_editor=data['default_editor'],
-        #    lock_on_ttw_edit=data['lock_on_ttw_edit'])
-        #IStatusMessage(self.request).addStatusMessage(_(u"Changes saved"),
-        #S                                              "info")
+        IStatusMessage(self.request).addStatusMessage(
+            _(u"Changes saved"), "info")
         self.request.response.redirect("@@content-controlpanel")
 
     @button.buttonAndHandler(_(u"Cancel"), name='cancel')
@@ -187,14 +177,14 @@ def __call__(self):
                 searchable = form.get('searchable', False)
 
                 registry = getUtility(IRegistry)
-                site_settings = registry.forInterface(ISearchSchema, prefix="plone")
-                blacklisted = site_settings.types_not_searched
-
+                site_settings = registry.forInterface(
+                    ISearchSchema, prefix="plone")
+                blacklisted = [i for i in site_settings.types_not_searched]
                 if searchable and type_id in blacklisted:
                     blacklisted.remove(type_id)
                 elif not searchable and type_id not in blacklisted:
                     blacklisted.append(type_id)
-                site_settings.types_not_searched = blacklisted
+                site_settings.types_not_searched = tuple(blacklisted)
 
                 redirect_links = form.get('redirect_links', False)
                 site_properties.manage_changeProperties(


