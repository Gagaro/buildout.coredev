Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-01T17:48:17-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/6ef03795883b0a92aee85eb1b4f5e0a38e4c401e

Fixed QuerystringRegistryReader.mapSortableIndex so it doesnt return ZCTextIndex type indexes

Files changed:
M plone/app/querystring/registryreader.py

diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 8060a2f..6ed0a04 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -8,6 +8,10 @@
 from zope.schema.interfaces import IVocabularyFactory
 import logging
 
+from Products.ZCTextIndex.interfaces import IZCTextIndex
+from Products.CMFCore.utils import getToolByName
+
+
 logger = logging.getLogger("plone.app.querystring")
 
 
@@ -102,9 +106,11 @@ def mapOperations(self, values):
 
     def mapSortableIndexes(self, values):
         """Map sortable indexes"""
+        catalog = getToolByName(self.context, 'portal_catalog')._catalog
         sortables = {}
         for key, field in values.get('%s.field' % self.prefix).iteritems():
-            if field['sortable']:
+            if field['sortable'] and \
+               not IZCTextIndex.providedBy(catalog.getIndex(key)):
                 sortables[key] = values.get('%s.field.%s' % (self.prefix, key))
         values['sortable'] = sortables
         return values


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-10T09:50:41-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/32a0162466aa030ce06bb7122f369dea50d463b2

updated change log

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 8029e85..f05a87a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.7 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fixed Sortable Indexes to not return ZCTextIndex type indexes.
+  [winstonf88]
 
 
 1.3.6 (2015-08-24)


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-17T12:04:13-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/f050df9e090002d6c9de7368e9feb0ba2086e266

Bugfix

Files changed:
M plone/app/querystring/registryreader.py

diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 6ed0a04..8a3f2cc 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -6,6 +6,7 @@
 from zope.i18nmessageid import Message
 from zope.interface import implements
 from zope.schema.interfaces import IVocabularyFactory
+from zope.component.hooks import getSite
 import logging
 
 from Products.ZCTextIndex.interfaces import IZCTextIndex
@@ -106,7 +107,7 @@ def mapOperations(self, values):
 
     def mapSortableIndexes(self, values):
         """Map sortable indexes"""
-        catalog = getToolByName(self.context, 'portal_catalog')._catalog
+        catalog = getToolByName(getSite(), 'portal_catalog')._catalog
         sortables = {}
         for key, field in values.get('%s.field' % self.prefix).iteritems():
             if field['sortable'] and \


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-17T12:06:09-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/7bfe9606571cbea3d60b389249639d8ed2dfc2ea

Merge branch 'issue_37' of https://github.com/plone/plone.app.querystring into issue_37

Files changed:
M CHANGES.rst
M plone/app/querystring/registryreader.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0789088..da49dba 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.8 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fixed Sortable Indexes to not return ZCTextIndex type indexes.
+  [winstonf88]
 
 
 1.3.7 (2015-09-11)
diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 2eb0def..f92a5ba 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -7,8 +7,13 @@
 from zope.i18nmessageid import Message
 from zope.interface import implements
 from zope.schema.interfaces import IVocabularyFactory
+from zope.component.hooks import getSite
 import logging
 
+from Products.ZCTextIndex.interfaces import IZCTextIndex
+from Products.CMFCore.utils import getToolByName
+
+
 logger = logging.getLogger("plone.app.querystring")
 
 
@@ -108,9 +113,11 @@ def mapOperations(self, values):
 
     def mapSortableIndexes(self, values):
         """Map sortable indexes"""
+        catalog = getToolByName(getSite(), 'portal_catalog')._catalog
         sortables = {}
         for key, field in values.get('%s.field' % self.prefix).iteritems():
-            if field['sortable']:
+            if field['sortable'] and \
+               not IZCTextIndex.providedBy(catalog.getIndex(key)):
                 sortables[key] = values.get('%s.field.%s' % (self.prefix, key))
         values['sortable'] = sortables
         return values


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-17T18:47:46-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/0ddfdf17ef0c8f405c32e4c3230dd3123c64c047

Fixed import order

Files changed:
M plone/app/querystring/registryreader.py

diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 8a3f2cc..bf5afeb 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -1,5 +1,7 @@
 from .interfaces import IQuerystringRegistryReader
 from operator import attrgetter
+from Products.CMFCore.utils import getToolByName
+from Products.ZCTextIndex.interfaces import IZCTextIndex
 from zope.component import queryUtility
 from zope.globalrequest import getRequest
 from zope.i18n import translate
@@ -9,9 +11,6 @@
 from zope.component.hooks import getSite
 import logging
 
-from Products.ZCTextIndex.interfaces import IZCTextIndex
-from Products.CMFCore.utils import getToolByName
-
 
 logger = logging.getLogger("plone.app.querystring")
 


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-17T18:48:59-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/e1bed22312f7744b3ba8afda85d8808aa0474499

Fixed import order

Files changed:
M plone/app/querystring/registryreader.py

diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index bf5afeb..3a49c28 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -3,15 +3,14 @@
 from Products.CMFCore.utils import getToolByName
 from Products.ZCTextIndex.interfaces import IZCTextIndex
 from zope.component import queryUtility
+from zope.component.hooks import getSite
 from zope.globalrequest import getRequest
 from zope.i18n import translate
 from zope.i18nmessageid import Message
 from zope.interface import implements
 from zope.schema.interfaces import IVocabularyFactory
-from zope.component.hooks import getSite
 import logging
 
-
 logger = logging.getLogger("plone.app.querystring")
 
 


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-17T18:53:44-03:00
Author: Winston Ferreira (winstonf88) <winstonf88@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/07edaa26dc7a76a96e7d3b6ec8ba20b75044d192

merge with master

Files changed:
M plone/app/querystring/registryreader.py

diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index f92a5ba..3a49c28 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -1,19 +1,16 @@
 from .interfaces import IQuerystringRegistryReader
-from collections import OrderedDict
-from Products.CMFPlone.utils import normalizeString, safe_unicode
+from operator import attrgetter
+from Products.CMFCore.utils import getToolByName
+from Products.ZCTextIndex.interfaces import IZCTextIndex
 from zope.component import queryUtility
+from zope.component.hooks import getSite
 from zope.globalrequest import getRequest
 from zope.i18n import translate
 from zope.i18nmessageid import Message
 from zope.interface import implements
 from zope.schema.interfaces import IVocabularyFactory
-from zope.component.hooks import getSite
 import logging
 
-from Products.ZCTextIndex.interfaces import IZCTextIndex
-from Products.CMFCore.utils import getToolByName
-
-
 logger = logging.getLogger("plone.app.querystring")
 
 
@@ -73,24 +70,19 @@ def getVocabularyValues(self, values):
         """Get all vocabulary values if a vocabulary is defined"""
 
         for field in values.get(self.prefix + '.field').values():
-            field['values'] = OrderedDict()
+            field['values'] = {}
             vocabulary = field.get('vocabulary', [])
             if vocabulary:
                 utility = queryUtility(IVocabularyFactory, vocabulary)
                 if utility is not None:
-                    translated = []
-                    for item in utility(self.context):
+                    for item in sorted(utility(self.context),
+                                       key=attrgetter('title')):
                         if isinstance(item.title, Message):
                             title = translate(item.title, context=self.request)
                         else:
                             title = item.title
-                        translated.append((title, item.value))
-                    translated = sorted(
-                        translated,
-                        key=lambda x: normalizeString(safe_unicode(x[0]))
-                    )
-                    for (title, value) in translated:
-                        field['values'][value] = {'title': title}
+
+                        field['values'][item.value] = {'title': title}
                 else:
                     logger.info("%s is missing, ignored." % vocabulary)
         return values


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-09-18T15:56:56+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/c167af5841e6db73a4ccb166acbb7fd35cf0f381

Merge pull request #43 from plone/issue_37

Fixed QuerystringRegistryReader.mapSortableIndex so it doesnt return …

Files changed:
M CHANGES.rst
M plone/app/querystring/registryreader.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0789088..da49dba 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.3.8 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fixed Sortable Indexes to not return ZCTextIndex type indexes.
+  [winstonf88]
 
 
 1.3.7 (2015-09-11)
diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py
index 2eb0def..3a49c28 100644
--- a/plone/app/querystring/registryreader.py
+++ b/plone/app/querystring/registryreader.py
@@ -1,7 +1,9 @@
 from .interfaces import IQuerystringRegistryReader
-from collections import OrderedDict
-from Products.CMFPlone.utils import normalizeString, safe_unicode
+from operator import attrgetter
+from Products.CMFCore.utils import getToolByName
+from Products.ZCTextIndex.interfaces import IZCTextIndex
 from zope.component import queryUtility
+from zope.component.hooks import getSite
 from zope.globalrequest import getRequest
 from zope.i18n import translate
 from zope.i18nmessageid import Message
@@ -68,24 +70,19 @@ def getVocabularyValues(self, values):
         """Get all vocabulary values if a vocabulary is defined"""
 
         for field in values.get(self.prefix + '.field').values():
-            field['values'] = OrderedDict()
+            field['values'] = {}
             vocabulary = field.get('vocabulary', [])
             if vocabulary:
                 utility = queryUtility(IVocabularyFactory, vocabulary)
                 if utility is not None:
-                    translated = []
-                    for item in utility(self.context):
+                    for item in sorted(utility(self.context),
+                                       key=attrgetter('title')):
                         if isinstance(item.title, Message):
                             title = translate(item.title, context=self.request)
                         else:
                             title = item.title
-                        translated.append((title, item.value))
-                    translated = sorted(
-                        translated,
-                        key=lambda x: normalizeString(safe_unicode(x[0]))
-                    )
-                    for (title, value) in translated:
-                        field['values'][value] = {'title': title}
+
+                        field['values'][item.value] = {'title': title}
                 else:
                     logger.info("%s is missing, ignored." % vocabulary)
         return values
@@ -108,9 +105,11 @@ def mapOperations(self, values):
 
     def mapSortableIndexes(self, values):
         """Map sortable indexes"""
+        catalog = getToolByName(getSite(), 'portal_catalog')._catalog
         sortables = {}
         for key, field in values.get('%s.field' % self.prefix).iteritems():
-            if field['sortable']:
+            if field['sortable'] and \
+               not IZCTextIndex.providedBy(catalog.getIndex(key)):
                 sortables[key] = values.get('%s.field.%s' % (self.prefix, key))
         values['sortable'] = sortables
         return values


