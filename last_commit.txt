Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-02T14:38:29+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/f48ab56d2d28ab2548c59e1c6c236605621a9f63

Removing Portal Language Tool

Files changed:
M plone/app/upgrade/__init__.py
M plone/app/upgrade/bbb.py
M plone/app/upgrade/v50/betas.py
M setup.py

diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index d0e945a..6b1a970 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -115,3 +115,9 @@ def getNonInstallableProducts(self):
     else:
         from Products.ATContentTypes.tool import metadata
         alias_module('Products.CMFPlone.MetadataTool', metadata)
+
+try:
+    from Products.PloneLanguageTool import interfaces
+except ImportError:
+    alias_module('Products.PloneLanguageTool.interfaces', bbb)
+    alias_module('Products.PloneLanguageTool.LanguageTool', bbb)
diff --git a/plone/app/upgrade/bbb.py b/plone/app/upgrade/bbb.py
index 888c91e..7cf5fe2 100644
--- a/plone/app/upgrade/bbb.py
+++ b/plone/app/upgrade/bbb.py
@@ -1,6 +1,7 @@
 from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import registerToolInterface
 from zope.interface import Interface
+from ZPublisher import BeforeTraverse
 
 
 CalendarTool = SimpleItem
@@ -11,6 +12,21 @@
 TinyMCE = SimpleItem
 
 
+class LanguageTool(SimpleItem):
+
+    def __call__(self, container, req):
+        pass
+
+    def manage_beforeDelete(self, item, container):
+        if item is self:
+            handle = self.meta_type + '/' + self.getId()
+            BeforeTraverse.unregisterBeforeTraverse(container, handle)
+
+
+class ILanguageTool(Interface):
+    pass
+
+
 class ITinyMCE(Interface):
     pass
 
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 2d44444..a0d4ab4 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -3,15 +3,79 @@
 from Products.CMFPlone.interfaces import IMailSchema
 from Products.CMFPlone.interfaces import IMarkupSchema
 from Products.CMFPlone.interfaces import ISecuritySchema
+from Products.CMFPlone.interfaces import ILanguageSchema
 from plone.app.upgrade.utils import loadMigrationProfile
 from plone.registry.interfaces import IRegistry
 from zope.component import getUtility
 from zope.component.hooks import getSite
+from Products.CMFCore.interfaces import ISiteRoot
 
 
 def to50beta1(context):
     """5.0alpha3 -> 5.0beta1"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to50beta1')
+    upgrade_portal_language(context)
+
+
+def upgrade_portal_css_to_registry(context):
+    pass
+
+
+def upgrade_portal_js_to_registry(context):
+    pass
+
+
+def upgrade_portal_language(context):
+    portal = getSite()
+    registry = getUtility(IRegistry)
+    # XXX: Somehow this code is excecuted for old migration steps as well
+    # ( < Plone 4 ) and breaks because there is no registry. Looking up the
+    # registry interfaces with 'check=False' will not work, because it will
+    # return a settings object and then fail when we try to access the
+    # attributes.
+    try:
+        lang_settings = registry.forInterface(ILanguageSchema, prefix='plone')
+    except KeyError:
+        return
+    # Get old values
+
+    # Merge default language options to registry
+    portal = getUtility(ISiteRoot)
+    if portal.hasProperty('default_language'):
+        default_lang = portal.getProperty('default_language')
+
+    portal_properties = getToolByName(context, "portal_properties", None)
+    if portal_properties is not None:
+        site_properties = getattr(portal_properties, 'site_properties', None)
+        if site_properties is not None:
+            if site_properties.hasProperty('default_language'):
+                default_lang = site_properties.getProperty('default_language')
+
+    lang_settings.default_language = default_lang
+
+    portal_languages = getToolByName(context, "portal_languages")
+    lang_settings.available_languages = portal_languages.supported_langs
+
+    lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes
+    lang_settings.display_flags = portal_languages.display_flags
+
+    lang_settings.use_path_negotiation = portal_languages.use_path_negotiation
+    lang_settings.use_content_negotiation = portal_languages.use_content_negotiation
+    lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation
+    lang_settings.set_cookie_always =  portal_languages.set_cookie_everywhere
+    lang_settings.authenticated_users_only = portal_languages.authenticated_users_only
+    lang_settings.use_request_negotiation = portal_languages.use_request_negotiation
+    lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation
+    lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation
+    # portal_languages.force_language_urls = 1
+    # portal_languages.allow_content_language_fallback = 0
+    # start_neutral = 0
+
+    # Used by functional tests.
+    # always_show_selector = 0
+
+    # Remove the old tool
+    portal.manage_delObjects('portal_languages')
 
 
 def upgrade_mail_controlpanel_settings(context):
diff --git a/setup.py b/setup.py
index 9c38656..9bef711 100644
--- a/setup.py
+++ b/setup.py
@@ -68,7 +68,7 @@
         'Products.DCWorkflow',
         'Products.GenericSetup',
         'Products.MimetypesRegistry',
-        'Products.PloneLanguageTool',
+        # 'Products.PloneLanguageTool',
         'Products.PlonePAS',
         'Products.PluggableAuthService',
         'Products.PortalTransforms',


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-16T10:52:12+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/d09f4bc555c12538dc515391c725748c2396a806

Comment to remove the portal skin

Files changed:
M plone/app/upgrade/v50/betas.py

diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index a0d4ab4..7d58137 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -77,6 +77,11 @@ def upgrade_portal_language(context):
     # Remove the old tool
     portal.manage_delObjects('portal_languages')
 
+    # TODO: Remove portal skin
+    # <object name="LanguageTool" meta_type="Filesystem Directory View"
+    # directory="Products.PloneLanguageTool:skins/LanguageTool"/>
+
+
 
 def upgrade_mail_controlpanel_settings(context):
     registry = getUtility(IRegistry)


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-16T13:18:26+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/391decd764e49f3efc6835a47c2f38a3b2daf917

Merge branch 'master' into plip13091

Files changed:
M CHANGES.rst
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v30/tests.py
M plone/app/upgrade/v43/tests.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f75c955..e25607e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.3.9 (unreleased)
 ------------------
 
+- Update tests after removal of ``allowAnonymousViewAbout`` and
+  ``validate_email`` properties in CMFPlone.
+  [jcerjak]
+
 - Do not run tests not suited for the current Plone version 
   (implemented for 4.0 and below)
   [jensens]
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index 5359e35..c17c50f 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -10,9 +10,7 @@
 from zope.site.hooks import setSite
 
 from Testing.ZopeTestCase.sandbox import Sandboxed
-from Products.PloneTestCase.PloneTestCase import PloneTestCase
-from Products.PloneTestCase.layer import PloneSiteLayer
-from Products.PloneTestCase.setup import setupPloneSite
+from plone.app.testing.bbb import PloneTestCase
 
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
@@ -22,7 +20,7 @@
 
 from Products.Five import zcml
 
-setupPloneSite(products=["plone.app.folder"])
+
 
 class MigrationTest(PloneTestCase):
 
@@ -112,21 +110,10 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
-class FunctionalUpgradeLayer(PloneSiteLayer):
-
-    @classmethod
-    def setUp(cls):
-        pass
-
-    @classmethod
-    def tearDown(cls):
-        pass
-
 
-class FunctionalUpgradeTestCase(Sandboxed, PloneTestCase, WarningInterceptor):
+class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
-    layer = FunctionalUpgradeLayer
     site_id = 'test'
 
     def afterSetUp(self):
diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index e4bf5da..2a3a2cf 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -13,6 +13,7 @@
 from plone.portlets.interfaces import ILocalPortletAssignmentManager
 from plone.portlets.constants import CONTEXT_CATEGORY as CONTEXT_PORTLETS
 
+from zExceptions import BadRequest
 from zope.location.interfaces import ISite
 from zope.component import getGlobalSiteManager
 from zope.component import getSiteManager
@@ -88,6 +89,7 @@
 from plone.app.upgrade.v30.alphas import reorderUserActions
 from plone.app.upgrade.v30.alphas import updatePASPlugins
 from plone.app.upgrade.v30.alphas import updateConfigletTitles
+from plone.app.upgrade.v30.alphas import updateMemberSecurity
 from plone.app.upgrade.v30.alphas import addCacheForResourceRegistry
 from plone.app.upgrade.v30.alphas import removeTablelessSkin
 from plone.app.upgrade.v30.alphas import addObjectProvidesIndex
@@ -661,10 +663,26 @@ def testAddEmailCharsetProperty(self):
             self.assertEqual(self.portal.getProperty('email_charset'), 'utf-8')
 
     def testUpdateMemberSecurity(self):
+        # These properties were removed in Plone 5, so we add them
+        # manually here if needed and check if they are properly updated by the
+        # updateMemberSecurity upgrade step
         pprop = getToolByName(self.portal, 'portal_properties')
+        try:
+            self.portal.manage_addProperty('validate_email', False, 'boolean')
+        except BadRequest:  # property is already there
+            pass
+        try:
+            pprop.site_properties.manage_addProperty(
+                'allowAnonymousViewAbout', True, 'boolean')
+        except BadRequest:  # property is already there
+            pass
+
+        updateMemberSecurity(self.portal)
+
         self.assertEqual(
-                pprop.site_properties.getProperty('allowAnonymousViewAbout'),
-                False)
+            pprop.site_properties.getProperty('allowAnonymousViewAbout'),
+            False
+        )
 
         pmembership = getToolByName(self.portal, 'portal_membership')
         self.assertEqual(pmembership.memberareaCreationFlag, False)
diff --git a/plone/app/upgrade/v43/tests.py b/plone/app/upgrade/v43/tests.py
index bbd789f..0b07f64 100644
--- a/plone/app/upgrade/v43/tests.py
+++ b/plone/app/upgrade/v43/tests.py
@@ -33,7 +33,6 @@ def testUpgradeToI18NCaseNormalizer(self):
         ctool.plone_lexicon._pipeline[1] == (Splitter(), CaseNormalizer())
         alphas.upgradeToI18NCaseNormalizer(self.portal.portal_setup)
         self.assertEqual(ctool.plone_lexicon._pipeline[1].__class__.__name__, 'I18NNormalizer')
-        self.assertTrue(len(ctool.searchResults(SearchableText="welcome")) > 0)
 
     def testUpgradeTinyMCE(self):
         # skip test in new Plones that don't install tinymce to begin with
diff --git a/setup.py b/setup.py
index 9bef711..7f3bf15 100644
--- a/setup.py
+++ b/setup.py
@@ -29,13 +29,13 @@
             'mock',
             'Products.CMFPlacefulWorkflow',
             'Products.CMFQuickInstallerTool',
-            'Products.PloneTestCase',
             'plone.contentrules',
             'plone.app.i18n',
             'plone.app.iterate',
             'plone.app.openid',
             'plone.app.redirector',
             'plone.app.viewletmanager',
+            'plone.app.testing',
             'plone.app.theming',
         ]
       ),


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-19T17:23:02+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/fedc5648c44fc69349d4ce8d796e54b4739a0fff

Wrong alias

Files changed:
M plone/app/upgrade/__init__.py

diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index 6b1a970..104a929 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -120,4 +120,4 @@ def getNonInstallableProducts(self):
     from Products.PloneLanguageTool import interfaces
 except ImportError:
     alias_module('Products.PloneLanguageTool.interfaces', bbb)
-    alias_module('Products.PloneLanguageTool.LanguageTool', bbb)
+    alias_module('Products.PloneLanguageTool', bbb)


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-19T19:45:23+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/e3443f17ee9a5b81f488f8e72ab7db64421066dc

Upgrade tricky for languages

Files changed:
A plone/app/upgrade/bbbd/LanguageTool.py
A plone/app/upgrade/bbbd/__init__.py
M plone/app/upgrade/__init__.py
M plone/app/upgrade/bbb.py
M plone/app/upgrade/v50/betas.py

diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index 104a929..c66cd36 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -4,6 +4,7 @@
 from Products.CMFQuickInstallerTool.interfaces import INonInstallable
 from plone.app.upgrade.utils import alias_module
 import bbb
+import bbbd
 
 
 class HiddenProducts(object):
@@ -120,4 +121,5 @@ def getNonInstallableProducts(self):
     from Products.PloneLanguageTool import interfaces
 except ImportError:
     alias_module('Products.PloneLanguageTool.interfaces', bbb)
-    alias_module('Products.PloneLanguageTool', bbb)
+    alias_module('Products.PloneLanguageTool', bbbd)
+    __import__('Products.PloneLanguageTool.LanguageTool').PloneLanguageTool.LanguageTool = __import__('Products.PloneLanguageTool.LanguageTool').PloneLanguageTool.LanguageTool.LanguageTool
diff --git a/plone/app/upgrade/bbb.py b/plone/app/upgrade/bbb.py
index 7cf5fe2..1d5946b 100644
--- a/plone/app/upgrade/bbb.py
+++ b/plone/app/upgrade/bbb.py
@@ -12,17 +12,6 @@
 TinyMCE = SimpleItem
 
 
-class LanguageTool(SimpleItem):
-
-    def __call__(self, container, req):
-        pass
-
-    def manage_beforeDelete(self, item, container):
-        if item is self:
-            handle = self.meta_type + '/' + self.getId()
-            BeforeTraverse.unregisterBeforeTraverse(container, handle)
-
-
 class ILanguageTool(Interface):
     pass
 
diff --git a/plone/app/upgrade/bbbd/LanguageTool.py b/plone/app/upgrade/bbbd/LanguageTool.py
new file mode 100644
index 0000000..b43e57a
--- /dev/null
+++ b/plone/app/upgrade/bbbd/LanguageTool.py
@@ -0,0 +1,15 @@
+from OFS.SimpleItem import SimpleItem
+from Products.CMFCore.utils import registerToolInterface
+from zope.interface import Interface
+from ZPublisher import BeforeTraverse
+
+
+class LanguageTool(SimpleItem):
+
+    def __call__(self, container, req):
+        pass
+
+    def manage_beforeDelete(self, item, container):
+        if item is self:
+            handle = self.meta_type + '/' + self.getId()
+            BeforeTraverse.unregisterBeforeTraverse(container, handle)
\ No newline at end of file
diff --git a/plone/app/upgrade/bbbd/__init__.py b/plone/app/upgrade/bbbd/__init__.py
new file mode 100644
index 0000000..fd1fad2
--- /dev/null
+++ b/plone/app/upgrade/bbbd/__init__.py
@@ -0,0 +1,2 @@
+from .LanguageTool import LanguageTool
+
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 7d58137..2884da0 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -52,30 +52,31 @@ def upgrade_portal_language(context):
                 default_lang = site_properties.getProperty('default_language')
 
     lang_settings.default_language = default_lang
-
-    portal_languages = getToolByName(context, "portal_languages")
-    lang_settings.available_languages = portal_languages.supported_langs
-
-    lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes
-    lang_settings.display_flags = portal_languages.display_flags
-
-    lang_settings.use_path_negotiation = portal_languages.use_path_negotiation
-    lang_settings.use_content_negotiation = portal_languages.use_content_negotiation
-    lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation
-    lang_settings.set_cookie_always =  portal_languages.set_cookie_everywhere
-    lang_settings.authenticated_users_only = portal_languages.authenticated_users_only
-    lang_settings.use_request_negotiation = portal_languages.use_request_negotiation
-    lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation
-    lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation
-    # portal_languages.force_language_urls = 1
-    # portal_languages.allow_content_language_fallback = 0
-    # start_neutral = 0
-
-    # Used by functional tests.
-    # always_show_selector = 0
-
-    # Remove the old tool
-    portal.manage_delObjects('portal_languages')
+    if hasattr(portal, 'portal_languages'):
+        portal_languages = getSite().portal_languages
+        lang_settings.available_languages = portal_languages.supported_langs
+
+        lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes
+        lang_settings.display_flags = portal_languages.display_flags
+
+        lang_settings.use_path_negotiation = portal_languages.use_path_negotiation
+        lang_settings.use_content_negotiation = portal_languages.use_content_negotiation
+        lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation
+        lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere
+        lang_settings.authenticated_users_only = portal_languages.authenticated_users_only
+        lang_settings.use_request_negotiation = portal_languages.use_request_negotiation
+        lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation
+        lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation
+        lang_settings.always_show_selector = portal_languages.always_show_selector
+        # portal_languages.force_language_urls = 1
+        # portal_languages.allow_content_language_fallback = 0
+        # start_neutral = 0
+
+        # Used by functional tests.
+        # always_show_selector = 0
+
+        # Remove the old tool
+        portal.manage_delObjects('portal_languages')
 
     # TODO: Remove portal skin
     # <object name="LanguageTool" meta_type="Filesystem Directory View"


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-23T14:43:45+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/ac85dd49acb1c0db02b938ba144f813af56906de

Typo

Files changed:
M plone/app/upgrade/v50/alphas.py
M plone/app/upgrade/v50/betas.py

diff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py
index b4a56c0..05fbbe7 100644
--- a/plone/app/upgrade/v50/alphas.py
+++ b/plone/app/upgrade/v50/alphas.py
@@ -149,7 +149,7 @@ def upgrade_editing_controlpanel_settings(context):
     site_properties = portal_properties.site_properties
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -185,7 +185,7 @@ def upgrade_maintenance_controlpanel_settings(context):
     site_properties = portal_properties.site_properties
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -212,7 +212,7 @@ def upgrade_navigation_controlpanel_settings(context):
     types_tool = getToolByName(context, "portal_types")
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -254,7 +254,7 @@ def upgrade_search_controlpanel_settings(context):
     types_tool = getToolByName(context, "portal_types")
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -285,7 +285,7 @@ def upgrade_site_controlpanel_settings(context):
     portal = getSite()
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 2884da0..b8c4a69 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -86,7 +86,7 @@ def upgrade_portal_language(context):
 
 def upgrade_mail_controlpanel_settings(context):
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -125,7 +125,7 @@ def upgrade_markup_controlpanel_settings(context):
     site_properties = portal_properties.site_properties
     # get the new registry
     registry = getUtility(IRegistry)
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the
@@ -174,7 +174,7 @@ def _get_enable_self_reg():
     # get the new registry
     registry = getUtility(IRegistry)
 
-    # XXX: Somehow this code is excecuted for old migration steps as well
+    # XXX: Somehow this code is executed for old migration steps as well
     # ( < Plone 4 ) and breaks because there is no registry. Looking up the
     # registry interfaces with 'check=False' will not work, because it will
     # return a settings object and then fail when we try to access the


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-23T15:51:10+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/ed5c73014375872e585a3b163f901caaa4e9f0b0

Registry elements, language remove step and skins from Language Tools to be removed

Files changed:
A plone/app/upgrade/v50/profiles/to_beta1/skins.xml
M plone/app/upgrade/v50/betas.py
M plone/app/upgrade/v50/configure.zcml
M plone/app/upgrade/v50/profiles/to_beta1/registry.xml

diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index b8c4a69..d724d0d 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -14,15 +14,6 @@
 def to50beta1(context):
     """5.0alpha3 -> 5.0beta1"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to50beta1')
-    upgrade_portal_language(context)
-
-
-def upgrade_portal_css_to_registry(context):
-    pass
-
-
-def upgrade_portal_js_to_registry(context):
-    pass
 
 
 def upgrade_portal_language(context):
@@ -50,7 +41,6 @@ def upgrade_portal_language(context):
         if site_properties is not None:
             if site_properties.hasProperty('default_language'):
                 default_lang = site_properties.getProperty('default_language')
-
     lang_settings.default_language = default_lang
     if hasattr(portal, 'portal_languages'):
         portal_languages = getSite().portal_languages
@@ -62,18 +52,14 @@ def upgrade_portal_language(context):
         lang_settings.use_path_negotiation = portal_languages.use_path_negotiation
         lang_settings.use_content_negotiation = portal_languages.use_content_negotiation
         lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation
-        lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere
+        if hasattr(portal_languages, 'set_cookie_everywhere'):
+            lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere
         lang_settings.authenticated_users_only = portal_languages.authenticated_users_only
         lang_settings.use_request_negotiation = portal_languages.use_request_negotiation
         lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation
         lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation
-        lang_settings.always_show_selector = portal_languages.always_show_selector
-        # portal_languages.force_language_urls = 1
-        # portal_languages.allow_content_language_fallback = 0
-        # start_neutral = 0
-
-        # Used by functional tests.
-        # always_show_selector = 0
+        if hasattr(portal_languages, 'always_show_selector'):
+            lang_settings.always_show_selector = portal_languages.always_show_selector
 
         # Remove the old tool
         portal.manage_delObjects('portal_languages')
diff --git a/plone/app/upgrade/v50/configure.zcml b/plone/app/upgrade/v50/configure.zcml
index b840fc8..7090fac 100644
--- a/plone/app/upgrade/v50/configure.zcml
+++ b/plone/app/upgrade/v50/configure.zcml
@@ -111,6 +111,12 @@
            handler=".betas.upgrade_security_controlpanel_settings"
            />
 
+       <gs:upgradeStep
+           title="Remove Language Tool and migrate settings"
+           description=""
+           handler=".betas.upgrade_portal_language"
+           />
+
     </gs:upgradeSteps>
 
 </configure>
diff --git a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
index 6865f48..98a4a0c 100644
--- a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
@@ -8,7 +8,8 @@
            prefix="plone" />
   <records interface="Products.CMFPlone.interfaces.ISiteSchema"
            prefix="plone" />
-
+  <records interface="Products.CMFPlone.interfaces.ILanguageSchema"
+           prefix="plone" />
   <records prefix="plone.resources/mockup-patterns-contentloader"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/contentloader/pattern.js</value>
diff --git a/plone/app/upgrade/v50/profiles/to_beta1/skins.xml b/plone/app/upgrade/v50/profiles/to_beta1/skins.xml
new file mode 100644
index 0000000..adeefa1
--- /dev/null
+++ b/plone/app/upgrade/v50/profiles/to_beta1/skins.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"?>
+<object name="portal_skins">
+ <object name="LanguageTool" meta_type="Filesystem Directory View"
+    directory="Products.PloneLanguageTool:skins/LanguageTool" remove="True"/>
+  <skin-path name="*">
+  <layer name="LanguageTool" remove="True"/>
+ </skin-path>
+</object>


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-03-25T21:35:52+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/3e116c88615652b197f5f6b660974f4c15a0cd31

Merge pull request #29 from plone/plip13091

Plip13091

Files changed:
A plone/app/upgrade/bbbd/LanguageTool.py
A plone/app/upgrade/bbbd/__init__.py
A plone/app/upgrade/v50/profiles/to_beta1/skins.xml
M plone/app/upgrade/__init__.py
M plone/app/upgrade/bbb.py
M plone/app/upgrade/v50/betas.py
M plone/app/upgrade/v50/configure.zcml
M plone/app/upgrade/v50/profiles/to_beta1/registry.xml
M setup.py

diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index d0e945a..c66cd36 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -4,6 +4,7 @@
 from Products.CMFQuickInstallerTool.interfaces import INonInstallable
 from plone.app.upgrade.utils import alias_module
 import bbb
+import bbbd
 
 
 class HiddenProducts(object):
@@ -115,3 +116,10 @@ def getNonInstallableProducts(self):
     else:
         from Products.ATContentTypes.tool import metadata
         alias_module('Products.CMFPlone.MetadataTool', metadata)
+
+try:
+    from Products.PloneLanguageTool import interfaces
+except ImportError:
+    alias_module('Products.PloneLanguageTool.interfaces', bbb)
+    alias_module('Products.PloneLanguageTool', bbbd)
+    __import__('Products.PloneLanguageTool.LanguageTool').PloneLanguageTool.LanguageTool = __import__('Products.PloneLanguageTool.LanguageTool').PloneLanguageTool.LanguageTool.LanguageTool
diff --git a/plone/app/upgrade/bbb.py b/plone/app/upgrade/bbb.py
index 888c91e..1d5946b 100644
--- a/plone/app/upgrade/bbb.py
+++ b/plone/app/upgrade/bbb.py
@@ -1,6 +1,7 @@
 from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import registerToolInterface
 from zope.interface import Interface
+from ZPublisher import BeforeTraverse
 
 
 CalendarTool = SimpleItem
@@ -11,6 +12,10 @@
 TinyMCE = SimpleItem
 
 
+class ILanguageTool(Interface):
+    pass
+
+
 class ITinyMCE(Interface):
     pass
 
diff --git a/plone/app/upgrade/bbbd/LanguageTool.py b/plone/app/upgrade/bbbd/LanguageTool.py
new file mode 100644
index 0000000..b43e57a
--- /dev/null
+++ b/plone/app/upgrade/bbbd/LanguageTool.py
@@ -0,0 +1,15 @@
+from OFS.SimpleItem import SimpleItem
+from Products.CMFCore.utils import registerToolInterface
+from zope.interface import Interface
+from ZPublisher import BeforeTraverse
+
+
+class LanguageTool(SimpleItem):
+
+    def __call__(self, container, req):
+        pass
+
+    def manage_beforeDelete(self, item, container):
+        if item is self:
+            handle = self.meta_type + '/' + self.getId()
+            BeforeTraverse.unregisterBeforeTraverse(container, handle)
\ No newline at end of file
diff --git a/plone/app/upgrade/bbbd/__init__.py b/plone/app/upgrade/bbbd/__init__.py
new file mode 100644
index 0000000..fd1fad2
--- /dev/null
+++ b/plone/app/upgrade/bbbd/__init__.py
@@ -0,0 +1,2 @@
+from .LanguageTool import LanguageTool
+
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 9c58ca9..89ccb61 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -3,10 +3,12 @@
 from Products.CMFPlone.interfaces import IMailSchema
 from Products.CMFPlone.interfaces import IMarkupSchema
 from Products.CMFPlone.interfaces import ISecuritySchema
+from Products.CMFPlone.interfaces import ILanguageSchema
 from plone.app.upgrade.utils import loadMigrationProfile
 from plone.registry.interfaces import IRegistry
 from zope.component import getUtility
 from zope.component.hooks import getSite
+from Products.CMFCore.interfaces import ISiteRoot
 
 
 def to50beta1(context):
@@ -14,6 +16,60 @@ def to50beta1(context):
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to50beta1')
 
 
+def upgrade_portal_language(context):
+    portal = getSite()
+    registry = getUtility(IRegistry)
+    # XXX: Somehow this code is executed for old migration steps as well
+    # ( < Plone 4 ) and breaks because there is no registry. Looking up the
+    # registry interfaces with 'check=False' will not work, because it will
+    # return a settings object and then fail when we try to access the
+    # attributes.
+    try:
+        lang_settings = registry.forInterface(ILanguageSchema, prefix='plone')
+    except KeyError:
+        return
+    # Get old values
+
+    # Merge default language options to registry
+    portal = getUtility(ISiteRoot)
+    if portal.hasProperty('default_language'):
+        default_lang = portal.getProperty('default_language')
+
+    portal_properties = getToolByName(context, "portal_properties", None)
+    if portal_properties is not None:
+        site_properties = getattr(portal_properties, 'site_properties', None)
+        if site_properties is not None:
+            if site_properties.hasProperty('default_language'):
+                default_lang = site_properties.getProperty('default_language')
+    lang_settings.default_language = default_lang
+    if hasattr(portal, 'portal_languages'):
+        portal_languages = getSite().portal_languages
+        lang_settings.available_languages = portal_languages.supported_langs
+
+        lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes
+        lang_settings.display_flags = portal_languages.display_flags
+
+        lang_settings.use_path_negotiation = portal_languages.use_path_negotiation
+        lang_settings.use_content_negotiation = portal_languages.use_content_negotiation
+        lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation
+        if hasattr(portal_languages, 'set_cookie_everywhere'):
+            lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere
+        lang_settings.authenticated_users_only = portal_languages.authenticated_users_only
+        lang_settings.use_request_negotiation = portal_languages.use_request_negotiation
+        lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation
+        lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation
+        if hasattr(portal_languages, 'always_show_selector'):
+            lang_settings.always_show_selector = portal_languages.always_show_selector
+
+        # Remove the old tool
+        portal.manage_delObjects('portal_languages')
+
+    # TODO: Remove portal skin
+    # <object name="LanguageTool" meta_type="Filesystem Directory View"
+    # directory="Products.PloneLanguageTool:skins/LanguageTool"/>
+
+
+
 def upgrade_mail_controlpanel_settings(context):
     registry = getUtility(IRegistry)
     # XXX: Somehow this code is executed for old migration steps as well
diff --git a/plone/app/upgrade/v50/configure.zcml b/plone/app/upgrade/v50/configure.zcml
index b840fc8..7090fac 100644
--- a/plone/app/upgrade/v50/configure.zcml
+++ b/plone/app/upgrade/v50/configure.zcml
@@ -111,6 +111,12 @@
            handler=".betas.upgrade_security_controlpanel_settings"
            />
 
+       <gs:upgradeStep
+           title="Remove Language Tool and migrate settings"
+           description=""
+           handler=".betas.upgrade_portal_language"
+           />
+
     </gs:upgradeSteps>
 
 </configure>
diff --git a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
index 6865f48..98a4a0c 100644
--- a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
@@ -8,7 +8,8 @@
            prefix="plone" />
   <records interface="Products.CMFPlone.interfaces.ISiteSchema"
            prefix="plone" />
-
+  <records interface="Products.CMFPlone.interfaces.ILanguageSchema"
+           prefix="plone" />
   <records prefix="plone.resources/mockup-patterns-contentloader"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/contentloader/pattern.js</value>
diff --git a/plone/app/upgrade/v50/profiles/to_beta1/skins.xml b/plone/app/upgrade/v50/profiles/to_beta1/skins.xml
new file mode 100644
index 0000000..adeefa1
--- /dev/null
+++ b/plone/app/upgrade/v50/profiles/to_beta1/skins.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"?>
+<object name="portal_skins">
+ <object name="LanguageTool" meta_type="Filesystem Directory View"
+    directory="Products.PloneLanguageTool:skins/LanguageTool" remove="True"/>
+  <skin-path name="*">
+  <layer name="LanguageTool" remove="True"/>
+ </skin-path>
+</object>
diff --git a/setup.py b/setup.py
index a88acf9..7f3bf15 100644
--- a/setup.py
+++ b/setup.py
@@ -68,7 +68,7 @@
         'Products.DCWorkflow',
         'Products.GenericSetup',
         'Products.MimetypesRegistry',
-        'Products.PloneLanguageTool',
+        # 'Products.PloneLanguageTool',
         'Products.PlonePAS',
         'Products.PluggableAuthService',
         'Products.PortalTransforms',


