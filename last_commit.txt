Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-07-13T16:36:52+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/599ab251129478cd88ec3d514768bb8f13b3367a

unlock before changing id (fixes https://github.com/plone/Products.CMFPlone/issues/623)

Files changed:
M plone/app/dexterity/behaviors/id.py

diff --git a/plone/app/dexterity/behaviors/id.py b/plone/app/dexterity/behaviors/id.py
index 2b50df2..65896db 100644
--- a/plone/app/dexterity/behaviors/id.py
+++ b/plone/app/dexterity/behaviors/id.py
@@ -5,6 +5,7 @@
 from plone.app.dexterity import MessageFactory as _
 from plone.autoform import directives
 from plone.autoform.interfaces import IFormFieldProvider
+from plone.locking.interfaces import ILockable
 from plone.supermodel import model
 from zope import schema
 from zope.container.interfaces import INameChooser
@@ -49,7 +50,17 @@ def _set_id(self, value):
         new_id = INameChooser(parent).chooseName(value, context)
         if getattr(aq_base(context), 'id', None):
             transaction.savepoint()
+            locked = False
+            try:
+                lockable = ILockable(context)
+                if lockable.locked():
+                    locked = True
+                    lockable.unlock()
+            except TypeError:
+                pass
             parent.manage_renameObject(context.getId(), new_id)
+            if locked:
+                lockable.lock()
         else:
             context.id = new_id
     id = property(_get_id, _set_id)


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-07-14T13:00:08+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/841c0650935085a7b5d956667fddc229a8b12853

simplify unlocking

Files changed:
M plone/app/dexterity/behaviors/id.py

diff --git a/plone/app/dexterity/behaviors/id.py b/plone/app/dexterity/behaviors/id.py
index 65896db..e88cc4d 100644
--- a/plone/app/dexterity/behaviors/id.py
+++ b/plone/app/dexterity/behaviors/id.py
@@ -51,13 +51,10 @@ def _set_id(self, value):
         if getattr(aq_base(context), 'id', None):
             transaction.savepoint()
             locked = False
-            try:
-                lockable = ILockable(context)
-                if lockable.locked():
-                    locked = True
-                    lockable.unlock()
-            except TypeError:
-                pass
+            lockable = ILockable(context, None)
+            if lockable is not None and lockable.locked():
+                locked = True
+                lockable.unlock()
             parent.manage_renameObject(context.getId(), new_id)
             if locked:
                 lockable.lock()


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-07-14T13:13:11+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/bb4bbb17a4e35ca1b0957b13b99d581d20b5cfaf

test unlocking (before it resulted in "HTTPError: HTTP Error 423: Locked")

Files changed:
M plone/app/dexterity/behaviors/tests/test_id.py

diff --git a/plone/app/dexterity/behaviors/tests/test_id.py b/plone/app/dexterity/behaviors/tests/test_id.py
index 3f660eb..d768d2d 100644
--- a/plone/app/dexterity/behaviors/tests/test_id.py
+++ b/plone/app/dexterity/behaviors/tests/test_id.py
@@ -89,3 +89,23 @@ def test_edit_item_doesnt_rename_if_same_id(self):
         self.assertEqual(
             mtime, self.layer['portal'].foo.bobobase_modification_time()
         )
+
+        behaviors = list(self.layer['portal'].portal_types.Document.behaviors)
+        behaviors.append('plone.app.lockingbehavior.behaviors.ILocking')
+
+    def test_rename_works_with_lockingbehavior(self):
+        """Test if the object is unlocked before renaming"""
+        behaviors = list(self.layer['portal'].portal_types.Document.behaviors)
+        behaviors.append('plone.app.lockingbehavior.behaviors.ILocking')
+        self.layer['portal'].portal_types.Document.behaviors = tuple(behaviors)
+        transaction.commit()
+
+        self.browser.getLink('Page').click()
+        self.browser.getControl('Title').value = 'title'
+        self.browser.getControl('Short name').value = 'foo'
+        self.browser.getControl('Save').click()
+        self.browser.getLink('Edit').click()
+        self.assertEqual(self.browser.getControl('Short name').value, 'foo')
+        self.browser.getControl('Short name').value = 'bar'
+        self.browser.getControl('Save').click()
+        self.assertEqual(self.browser.url, 'http://nohost/plone/bar')


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-07-14T17:17:18+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/aacb33275bc16192bf03c39343b59ad1b69add21

Merge pull request #171 from plone/fix_renaming

Unlock before changing id

Files changed:
M plone/app/dexterity/behaviors/id.py
M plone/app/dexterity/behaviors/tests/test_id.py

diff --git a/plone/app/dexterity/behaviors/id.py b/plone/app/dexterity/behaviors/id.py
index 2b50df2..e88cc4d 100644
--- a/plone/app/dexterity/behaviors/id.py
+++ b/plone/app/dexterity/behaviors/id.py
@@ -5,6 +5,7 @@
 from plone.app.dexterity import MessageFactory as _
 from plone.autoform import directives
 from plone.autoform.interfaces import IFormFieldProvider
+from plone.locking.interfaces import ILockable
 from plone.supermodel import model
 from zope import schema
 from zope.container.interfaces import INameChooser
@@ -49,7 +50,14 @@ def _set_id(self, value):
         new_id = INameChooser(parent).chooseName(value, context)
         if getattr(aq_base(context), 'id', None):
             transaction.savepoint()
+            locked = False
+            lockable = ILockable(context, None)
+            if lockable is not None and lockable.locked():
+                locked = True
+                lockable.unlock()
             parent.manage_renameObject(context.getId(), new_id)
+            if locked:
+                lockable.lock()
         else:
             context.id = new_id
     id = property(_get_id, _set_id)
diff --git a/plone/app/dexterity/behaviors/tests/test_id.py b/plone/app/dexterity/behaviors/tests/test_id.py
index 3f660eb..d768d2d 100644
--- a/plone/app/dexterity/behaviors/tests/test_id.py
+++ b/plone/app/dexterity/behaviors/tests/test_id.py
@@ -89,3 +89,23 @@ def test_edit_item_doesnt_rename_if_same_id(self):
         self.assertEqual(
             mtime, self.layer['portal'].foo.bobobase_modification_time()
         )
+
+        behaviors = list(self.layer['portal'].portal_types.Document.behaviors)
+        behaviors.append('plone.app.lockingbehavior.behaviors.ILocking')
+
+    def test_rename_works_with_lockingbehavior(self):
+        """Test if the object is unlocked before renaming"""
+        behaviors = list(self.layer['portal'].portal_types.Document.behaviors)
+        behaviors.append('plone.app.lockingbehavior.behaviors.ILocking')
+        self.layer['portal'].portal_types.Document.behaviors = tuple(behaviors)
+        transaction.commit()
+
+        self.browser.getLink('Page').click()
+        self.browser.getControl('Title').value = 'title'
+        self.browser.getControl('Short name').value = 'foo'
+        self.browser.getControl('Save').click()
+        self.browser.getLink('Edit').click()
+        self.assertEqual(self.browser.getControl('Short name').value, 'foo')
+        self.browser.getControl('Short name').value = 'bar'
+        self.browser.getControl('Save').click()
+        self.assertEqual(self.browser.url, 'http://nohost/plone/bar')


