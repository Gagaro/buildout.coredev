Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-05-26T23:38:28+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/64aab3271ad70aafc1425efc1f87061a5cbc80bc

Unwrap search_base for portlets, as it might be wrapped by the portlet renderer class. Fixes an error with getting the events to display.

Files changed:
M CHANGES.rst
M plone/app/event/portlets/portlet_calendar.py
M plone/app/event/portlets/portlet_events.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e4bc502..18c9419 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0a12 (unreleased)
 -------------------
 
+- Unwrap search_base for portlets, as it might be wrapped by the portlet
+  renderer class. Fixes an error with getting the events to display.
+  [thet]
+
 - Import BBB superclasses from  plone.app.portlets.portlets.base so it works
   with plone.app.portlets 3.0 and up
   [frapell]
diff --git a/plone/app/event/portlets/portlet_calendar.py b/plone/app/event/portlets/portlet_calendar.py
index dff9a2e..c5c7094 100644
--- a/plone/app/event/portlets/portlet_calendar.py
+++ b/plone/app/event/portlets/portlet_calendar.py
@@ -105,7 +105,8 @@ class Renderer(base.Renderer):
     def search_base(self):
         if not self._search_base:
             self._search_base = uuidToObject(self.data.search_base_uid)
-        return self._search_base
+        # aq_inner, because somehow search_base gets wrapped by the renderer
+        return aq_inner(self._search_base)
 
     @property
     def search_base_path(self):
diff --git a/plone/app/event/portlets/portlet_events.py b/plone/app/event/portlets/portlet_events.py
index f620e78..86c34fc 100644
--- a/plone/app/event/portlets/portlet_events.py
+++ b/plone/app/event/portlets/portlet_events.py
@@ -111,7 +111,8 @@ class Renderer(base.Renderer):
     def search_base(self):
         if not self._search_base:
             self._search_base = uuidToObject(self.data.search_base_uid)
-        return self._search_base
+        # aq_inner, because somehow search_base gets wrapped by the renderer
+        return aq_inner(self._search_base)
 
     @property
     def search_base_path(self):


Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-05-31T22:55:28+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/64118876fefa1615ea8ff50af00229cc9a2c93e9

Merge pull request #187 from plone/thet-unwrap-searchbase

unwrap search_base in portlets

Files changed:
M CHANGES.rst
M plone/app/event/portlets/portlet_calendar.py
M plone/app/event/portlets/portlet_events.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e4bc502..18c9419 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0a12 (unreleased)
 -------------------
 
+- Unwrap search_base for portlets, as it might be wrapped by the portlet
+  renderer class. Fixes an error with getting the events to display.
+  [thet]
+
 - Import BBB superclasses from  plone.app.portlets.portlets.base so it works
   with plone.app.portlets 3.0 and up
   [frapell]
diff --git a/plone/app/event/portlets/portlet_calendar.py b/plone/app/event/portlets/portlet_calendar.py
index dff9a2e..c5c7094 100644
--- a/plone/app/event/portlets/portlet_calendar.py
+++ b/plone/app/event/portlets/portlet_calendar.py
@@ -105,7 +105,8 @@ class Renderer(base.Renderer):
     def search_base(self):
         if not self._search_base:
             self._search_base = uuidToObject(self.data.search_base_uid)
-        return self._search_base
+        # aq_inner, because somehow search_base gets wrapped by the renderer
+        return aq_inner(self._search_base)
 
     @property
     def search_base_path(self):
diff --git a/plone/app/event/portlets/portlet_events.py b/plone/app/event/portlets/portlet_events.py
index f620e78..86c34fc 100644
--- a/plone/app/event/portlets/portlet_events.py
+++ b/plone/app/event/portlets/portlet_events.py
@@ -111,7 +111,8 @@ class Renderer(base.Renderer):
     def search_base(self):
         if not self._search_base:
             self._search_base = uuidToObject(self.data.search_base_uid)
-        return self._search_base
+        # aq_inner, because somehow search_base gets wrapped by the renderer
+        return aq_inner(self._search_base)
 
     @property
     def search_base_path(self):


