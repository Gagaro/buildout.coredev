Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-10T12:11:47-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/9f0111f85cd14f3f067044b59b93e2856c99d542

Apply hotfixes from https://pypi.python.org/pypi/Products.PloneHotfix20150910

Files changed:
A Products/CMFPlone/patches/addMember.py
A Products/CMFPlone/patches/kupu.py
M Products/CMFPlone/URLTool.py
M Products/CMFPlone/patches/__init__.py
M Products/CMFPlone/tests/testCSRFProtection.py
M Products/CMFPlone/tests/testURLTool.py
M docs/CHANGES.rst

diff --git a/Products/CMFPlone/URLTool.py b/Products/CMFPlone/URLTool.py
index 9cb6695..bb0b9e8 100644
--- a/Products/CMFPlone/URLTool.py
+++ b/Products/CMFPlone/URLTool.py
@@ -30,6 +30,9 @@ def isURLInPortal(self, url, context=None):
         """
         # sanitize url
         url = re.sub('^[\x00-\x20]+', '', url).strip()
+        if ('<script' in url or '%3Cscript' in url or 'javascript:' in url or
+                'javascript%3A' in url):
+            return False
 
         p_url = self()
 
diff --git a/Products/CMFPlone/patches/__init__.py b/Products/CMFPlone/patches/__init__.py
index 3499b59..4c80d4d 100644
--- a/Products/CMFPlone/patches/__init__.py
+++ b/Products/CMFPlone/patches/__init__.py
@@ -24,3 +24,11 @@
 
 import sendmail
 sendmail.applyPatches()
+
+try:
+    # kupu may not be installed
+    import kupu
+except ImportError:
+    pass
+
+import addMember
\ No newline at end of file
diff --git a/Products/CMFPlone/patches/addMember.py b/Products/CMFPlone/patches/addMember.py
new file mode 100644
index 0000000..232ef79
--- /dev/null
+++ b/Products/CMFPlone/patches/addMember.py
@@ -0,0 +1,8 @@
+try:
+    from Products.CMFPlone import patches  # noqa
+except ImportError:
+    pass
+
+from Products.CMFCore.RegistrationTool import RegistrationTool
+if hasattr(RegistrationTool.addMember.im_func, '__doc__'):
+    del RegistrationTool.addMember.im_func.__doc__
diff --git a/Products/CMFPlone/patches/kupu.py b/Products/CMFPlone/patches/kupu.py
new file mode 100644
index 0000000..37f5f17
--- /dev/null
+++ b/Products/CMFPlone/patches/kupu.py
@@ -0,0 +1,22 @@
+#####################
+# Newly created sites
+
+from AccessControl.Permission import _registeredPermissions
+from AccessControl.Permission import ApplicationDefaultPermissions
+from AccessControl.Permission import pname
+from Products.kupu.plone import permissions
+
+
+mangled = pname(permissions.ManageLibraries)
+if hasattr(ApplicationDefaultPermissions, mangled):
+    delattr(ApplicationDefaultPermissions, mangled)
+
+
+if permissions.ManageLibraries in _registeredPermissions:
+    del _registeredPermissions[permissions.ManageLibraries]
+
+
+permissions.setDefaultRoles(
+    permissions.ManageLibraries,
+    ('Manager', 'Site Administrator',)
+    )
diff --git a/Products/CMFPlone/tests/testCSRFProtection.py b/Products/CMFPlone/tests/testCSRFProtection.py
index bdbba95..39446c9 100644
--- a/Products/CMFPlone/tests/testCSRFProtection.py
+++ b/Products/CMFPlone/tests/testCSRFProtection.py
@@ -63,9 +63,18 @@ def test_PloneTool_renameObjectsByPaths(self):
         self.assertTrue(self.portal.get('foo', None))
 
     def test_RegistrationTool_addMember(self):
-        self.checkAuthenticator(
-            '/portal_registration/addMember',
-            'id=john&password=y0d4Wg')
+        # self.checkAuthenticator(
+        #    '/portal_registration/addMember',
+        #    'id=john&password=y0d4Wg')
+        # instead of authenticator, with latest patch, addMember should not
+        # be published
+        path = '/portal_registration/addMember'
+        path = '/' + self.portal.absolute_url(relative=True) + path
+        query = 'id=john&password=y0d4Wg'
+        data = StringIO(query)
+        response = self.publish(path=path, env={},
+                                request_method='POST', stdin=data)
+        self.assertEqual(response.getStatus(), 404)
 
     def test_RegistrationTool_editMember(self):
         self.checkAuthenticator(
diff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py
index 1fa0b14..e08cc68 100644
--- a/Products/CMFPlone/tests/testURLTool.py
+++ b/Products/CMFPlone/tests/testURLTool.py
@@ -96,3 +96,12 @@ def test_isURLInPortalExternal(self):
         self.assertFalse(iURLiP('http://external4/other'))
         self.assertFalse(iURLiP('http://external5'))
         self.assertFalse(iURLiP('http://external11'))
+
+    def test_script_tag_url_not_in_portal(self):
+        self.assertFalse(self.portal.portal_url.isURLInPortal('<script>alert("hi");</script>'))
+        self.assertFalse(
+            self.portal.portal_url.isURLInPortal('%3Cscript%3Ealert(%22hi%22)%3B%3C%2Fscript%3E'))
+
+    def test_inline_url_not_in_portal(self):
+        self.assertFalse(self.portal.portal_url.isURLInPortal('javascript%3Aalert(3)'))
+        self.assertFalse(self.portal.portal_url.isURLInPortal('javascript:alert(3)'))
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index fa6bf2c..162e415 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -8,6 +8,9 @@ Changelog
 4.3.7 (unreleased)
 ------------------
 
+- Apply hotfixes from https://pypi.python.org/pypi/Products.PloneHotfix20150910
+  [vangheem]
+
 - Do not throw a 404 on site root RSS feeds
   [vangheem]
 


Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-10T12:58:15-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/79c32b74a53c3de6e4683387898abd18a38fa7d9

fix tests

Files changed:
M Products/CMFPlone/tests/testURLTool.py

diff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py
index e08cc68..d9ec743 100644
--- a/Products/CMFPlone/tests/testURLTool.py
+++ b/Products/CMFPlone/tests/testURLTool.py
@@ -98,10 +98,14 @@ def test_isURLInPortalExternal(self):
         self.assertFalse(iURLiP('http://external11'))
 
     def test_script_tag_url_not_in_portal(self):
-        self.assertFalse(self.portal.portal_url.isURLInPortal('<script>alert("hi");</script>'))
+        url_tool = self._makeOne()
+        iURLiP = url_tool.isURLInPortal
+        self.assertFalse(iURLiP('<script>alert("hi");</script>'))
         self.assertFalse(
-            self.portal.portal_url.isURLInPortal('%3Cscript%3Ealert(%22hi%22)%3B%3C%2Fscript%3E'))
+            iURLiP('%3Cscript%3Ealert(%22hi%22)%3B%3C%2Fscript%3E'))
 
     def test_inline_url_not_in_portal(self):
-        self.assertFalse(self.portal.portal_url.isURLInPortal('javascript%3Aalert(3)'))
-        self.assertFalse(self.portal.portal_url.isURLInPortal('javascript:alert(3)'))
+        url_tool = self._makeOne()
+        iURLiP = url_tool.isURLInPortal
+        self.assertFalse(iURLiP('javascript%3Aalert(3)'))
+        self.assertFalse(iURLiP('javascript:alert(3)'))


Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-10T12:58:36-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/455df75cc9bae20b34cb4203f2dff23019fcff7e

Merge pull request #917 from plone/hotfix

Apply hotfixes

Files changed:
A Products/CMFPlone/patches/addMember.py
A Products/CMFPlone/patches/kupu.py
M Products/CMFPlone/URLTool.py
M Products/CMFPlone/patches/__init__.py
M Products/CMFPlone/tests/testCSRFProtection.py
M Products/CMFPlone/tests/testURLTool.py
M docs/CHANGES.rst

diff --git a/Products/CMFPlone/URLTool.py b/Products/CMFPlone/URLTool.py
index 9cb6695..bb0b9e8 100644
--- a/Products/CMFPlone/URLTool.py
+++ b/Products/CMFPlone/URLTool.py
@@ -30,6 +30,9 @@ def isURLInPortal(self, url, context=None):
         """
         # sanitize url
         url = re.sub('^[\x00-\x20]+', '', url).strip()
+        if ('<script' in url or '%3Cscript' in url or 'javascript:' in url or
+                'javascript%3A' in url):
+            return False
 
         p_url = self()
 
diff --git a/Products/CMFPlone/patches/__init__.py b/Products/CMFPlone/patches/__init__.py
index 3499b59..4c80d4d 100644
--- a/Products/CMFPlone/patches/__init__.py
+++ b/Products/CMFPlone/patches/__init__.py
@@ -24,3 +24,11 @@
 
 import sendmail
 sendmail.applyPatches()
+
+try:
+    # kupu may not be installed
+    import kupu
+except ImportError:
+    pass
+
+import addMember
\ No newline at end of file
diff --git a/Products/CMFPlone/patches/addMember.py b/Products/CMFPlone/patches/addMember.py
new file mode 100644
index 0000000..232ef79
--- /dev/null
+++ b/Products/CMFPlone/patches/addMember.py
@@ -0,0 +1,8 @@
+try:
+    from Products.CMFPlone import patches  # noqa
+except ImportError:
+    pass
+
+from Products.CMFCore.RegistrationTool import RegistrationTool
+if hasattr(RegistrationTool.addMember.im_func, '__doc__'):
+    del RegistrationTool.addMember.im_func.__doc__
diff --git a/Products/CMFPlone/patches/kupu.py b/Products/CMFPlone/patches/kupu.py
new file mode 100644
index 0000000..37f5f17
--- /dev/null
+++ b/Products/CMFPlone/patches/kupu.py
@@ -0,0 +1,22 @@
+#####################
+# Newly created sites
+
+from AccessControl.Permission import _registeredPermissions
+from AccessControl.Permission import ApplicationDefaultPermissions
+from AccessControl.Permission import pname
+from Products.kupu.plone import permissions
+
+
+mangled = pname(permissions.ManageLibraries)
+if hasattr(ApplicationDefaultPermissions, mangled):
+    delattr(ApplicationDefaultPermissions, mangled)
+
+
+if permissions.ManageLibraries in _registeredPermissions:
+    del _registeredPermissions[permissions.ManageLibraries]
+
+
+permissions.setDefaultRoles(
+    permissions.ManageLibraries,
+    ('Manager', 'Site Administrator',)
+    )
diff --git a/Products/CMFPlone/tests/testCSRFProtection.py b/Products/CMFPlone/tests/testCSRFProtection.py
index bdbba95..39446c9 100644
--- a/Products/CMFPlone/tests/testCSRFProtection.py
+++ b/Products/CMFPlone/tests/testCSRFProtection.py
@@ -63,9 +63,18 @@ def test_PloneTool_renameObjectsByPaths(self):
         self.assertTrue(self.portal.get('foo', None))
 
     def test_RegistrationTool_addMember(self):
-        self.checkAuthenticator(
-            '/portal_registration/addMember',
-            'id=john&password=y0d4Wg')
+        # self.checkAuthenticator(
+        #    '/portal_registration/addMember',
+        #    'id=john&password=y0d4Wg')
+        # instead of authenticator, with latest patch, addMember should not
+        # be published
+        path = '/portal_registration/addMember'
+        path = '/' + self.portal.absolute_url(relative=True) + path
+        query = 'id=john&password=y0d4Wg'
+        data = StringIO(query)
+        response = self.publish(path=path, env={},
+                                request_method='POST', stdin=data)
+        self.assertEqual(response.getStatus(), 404)
 
     def test_RegistrationTool_editMember(self):
         self.checkAuthenticator(
diff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py
index 1fa0b14..d9ec743 100644
--- a/Products/CMFPlone/tests/testURLTool.py
+++ b/Products/CMFPlone/tests/testURLTool.py
@@ -96,3 +96,16 @@ def test_isURLInPortalExternal(self):
         self.assertFalse(iURLiP('http://external4/other'))
         self.assertFalse(iURLiP('http://external5'))
         self.assertFalse(iURLiP('http://external11'))
+
+    def test_script_tag_url_not_in_portal(self):
+        url_tool = self._makeOne()
+        iURLiP = url_tool.isURLInPortal
+        self.assertFalse(iURLiP('<script>alert("hi");</script>'))
+        self.assertFalse(
+            iURLiP('%3Cscript%3Ealert(%22hi%22)%3B%3C%2Fscript%3E'))
+
+    def test_inline_url_not_in_portal(self):
+        url_tool = self._makeOne()
+        iURLiP = url_tool.isURLInPortal
+        self.assertFalse(iURLiP('javascript%3Aalert(3)'))
+        self.assertFalse(iURLiP('javascript:alert(3)'))
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index fa6bf2c..162e415 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -8,6 +8,9 @@ Changelog
 4.3.7 (unreleased)
 ------------------
 
+- Apply hotfixes from https://pypi.python.org/pypi/Products.PloneHotfix20150910
+  [vangheem]
+
 - Do not throw a 404 on site root RSS feeds
   [vangheem]
 


