Repository: mockup


Branch: refs/heads/master
Date: 2015-10-27T21:40:34+01:00
Author: domruf (domruf) <dominikruf@gmail.com>
Commit: https://github.com/plone/mockup/commit/bf9801eccf9d013949ef86e5e1830756fe51e284

add test for uploading image file

Files changed:
M mockup/patterns/autotoc/pattern.js
M mockup/tests/fakeserver.js
M mockup/tests/pattern-tinymce-test.js

diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js
index 0acf0a4..a80fdf2 100644
--- a/mockup/patterns/autotoc/pattern.js
+++ b/mockup/patterns/autotoc/pattern.js
@@ -122,6 +122,7 @@ define([
         if(window.location.hash === '#' + id){
           activeId = id;
         }
+        $level.data('navref', id);
         $('<a/>')
           .appendTo(self.$toc)
           .text($level.text())
diff --git a/mockup/tests/fakeserver.js b/mockup/tests/fakeserver.js
index 196fdf4..0c1c45e 100644
--- a/mockup/tests/fakeserver.js
+++ b/mockup/tests/fakeserver.js
@@ -229,7 +229,11 @@ define([
       {UID: 'sdfbsfdh345', Title: 'Board of Directors', path: '/about/board-of-directors', portal_type: 'Document'},
       // staff
       {UID: 'asdfasdf9sdf', Title: 'Mike', path: '/about/staff/mike', portal_type: 'Document'},
-      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'}
+      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'},
+      
+      // upload file
+      {UID: 'sldlfkjsldkjlskdjf', Title: 'blah.png', path: 'blah.png', portal_type: 'Image'}
+
     ];
     searchables = searchables.concat(randomItems);
 
@@ -424,7 +428,7 @@ define([
     xhr.respond(200, {'content-Type': 'application/json'},
       JSON.stringify({
         url: 'http://localhost:8000/blah.png',
-        uid: 'sldlfkjsldkjlskdjf',
+        UID: 'sldlfkjsldkjlskdjf',
         name: 'blah.png',
         filename: 'blah.png',
         portal_type: 'Image',
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index e2554b3..756ac31 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -26,7 +26,43 @@ define([
     beforeEach(function() {
       this.server = sinon.fakeServer.create();
       this.server.autoRespond = true;
-
+      this.clock = sinon.useFakeTimers();
+      //this.server.respondImmediately = true;
+
+      this.server.respondWith('POST', /upload/, function (xhr, id) {
+        xhr.respond(200, {'content-Type': 'application/json'},
+          JSON.stringify({
+            url: 'http://localhost:8000/blah.png',
+            UID: 'sldlfkjsldkjlskdjf',
+            name: 'blah.png',
+            filename: 'blah.png',
+            portal_type: 'Image',
+            size: 239292
+          })
+        );
+      });
+      this.server.respondWith(/relateditems-test\.json/, function(xhr, id) {
+        var query = xhr.url.split('?')[1];
+        var vars = query.split('&');
+        for (var i = 0; i < vars.length; i += 1) {
+          var pair = vars[i].split('=');
+          if (decodeURIComponent(pair[0]) === 'query') {
+            query = $.parseJSON(decodeURIComponent(pair[1]));
+          }
+        }
+        var results = [];
+        for (var j = 0; j < query.criteria.length; j += 1) {
+          if(query.criteria[j].i === 'UID'){
+            results.push({UID: query.criteria[j].v[0], Title: 'blah.png', path: '/blah.png', portal_type: 'Image'});
+          }
+        }
+        xhr.respond(200, { 'Content-Type': 'application/json' },
+          JSON.stringify({
+            total: results.length,
+            results: results
+          })
+        );
+      });
       this.server.respondWith('GET', /data.json/, function (xhr, id) {
         var items = [
           {
@@ -242,6 +278,40 @@ define([
       pattern.imageModal.$scale.find('[value="thumb"]')[0].selected = true;
       expect(pattern.imageModal.getLinkUrl()).to.equal('resolveuid/foobar/@@images/image/thumb');
     });
+    it('test add image link upload', function() {
+      var $el = $('<textarea class="pat-tinymce" data-pat-tinymce=\'' +
+        '{' +
+        '  "relatedItems": {' +
+        '    "vocabularyUrl": "/relateditems-test.json"' +
+        '  },' +
+        '  "upload": {' +
+        '    "baseUrl": "/",' +
+        '    "relativePath": "upload"' +
+        '}' +
+      '}\'></textarea>').appendTo('body');
+      registry.scan($el);
+      this.clock.tick(1000);
+      var pattern = $el.data().patternTinymce;
+      pattern.addImageClicked();
+      $('#' + $('#tinylink-uploadImage').data().navref).click();
+      expect($('#tinylink-uploadImage').parent().hasClass('active')).to.equal(true);
+      var blob;
+      try{
+        blob = new Blob(['dummy data'],  {type: 'image/png'});
+      } catch (err) {
+        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
+        var builder = new BlobBuilder();
+        builder.append('dummy data');
+        blob = builder.getBlob();
+      }
+      blob.name = 'blah.png';
+      pattern.imageModal.$upload.data().patternUpload.dropzone.addFile(blob);
+      $('.upload-all', pattern.imageModal.$upload).click();
+      this.clock.tick(1000);
+
+      expect($('#tinylink-image').parent().hasClass('active')).to.equal(true);
+      expect(pattern.imageModal.getLinkUrl()).to.equal('/blah.png/imagescale/large');
+    });
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();


Repository: mockup


Branch: refs/heads/master
Date: 2015-10-27T21:47:21+01:00
Author: domruf (domruf) <dominikruf@gmail.com>
Commit: https://github.com/plone/mockup/commit/aa103d46d5d8760c22b5788336020dca131dcd50

fix autotoc does not change to internal link after upload

Files changed:
M mockup/patterns/tinymce/js/links.js

diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index 82e8526..323b5d9 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -553,10 +553,10 @@ define([
         self.$upload.on('uploadAllCompleted', function(evt, data) {
           if(self.linkTypes.image){
             self.linkTypes.image.set(data.data.UID);
-            $('#tinylink-image' , self.modal.$modal).trigger('click');
+            $('#' + $('#tinylink-image' , self.modal.$modal).data('navref')).trigger('click');
           }else{
             self.linkTypes.internal.set(data.data.UID);
-            $('#tinylink-internal', self.modal.$modal).trigger('click');
+            $('#' + $('#tinylink-internal' , self.modal.$modal).data('navref')).trigger('click');
           }
         });
       }


Repository: mockup


Branch: refs/heads/master
Date: 2015-11-01T17:42:49-06:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/247b92228640bd0d184dc4a3abf4a092d2126ffe

Merge pull request #602 from domruf/imageuploadtest

Imageuploadtest

Files changed:
M mockup/patterns/autotoc/pattern.js
M mockup/patterns/tinymce/js/links.js
M mockup/tests/fakeserver.js
M mockup/tests/pattern-tinymce-test.js

diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js
index 0acf0a4..a80fdf2 100644
--- a/mockup/patterns/autotoc/pattern.js
+++ b/mockup/patterns/autotoc/pattern.js
@@ -122,6 +122,7 @@ define([
         if(window.location.hash === '#' + id){
           activeId = id;
         }
+        $level.data('navref', id);
         $('<a/>')
           .appendTo(self.$toc)
           .text($level.text())
diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index 82e8526..323b5d9 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -553,10 +553,10 @@ define([
         self.$upload.on('uploadAllCompleted', function(evt, data) {
           if(self.linkTypes.image){
             self.linkTypes.image.set(data.data.UID);
-            $('#tinylink-image' , self.modal.$modal).trigger('click');
+            $('#' + $('#tinylink-image' , self.modal.$modal).data('navref')).trigger('click');
           }else{
             self.linkTypes.internal.set(data.data.UID);
-            $('#tinylink-internal', self.modal.$modal).trigger('click');
+            $('#' + $('#tinylink-internal' , self.modal.$modal).data('navref')).trigger('click');
           }
         });
       }
diff --git a/mockup/tests/fakeserver.js b/mockup/tests/fakeserver.js
index 196fdf4..0c1c45e 100644
--- a/mockup/tests/fakeserver.js
+++ b/mockup/tests/fakeserver.js
@@ -229,7 +229,11 @@ define([
       {UID: 'sdfbsfdh345', Title: 'Board of Directors', path: '/about/board-of-directors', portal_type: 'Document'},
       // staff
       {UID: 'asdfasdf9sdf', Title: 'Mike', path: '/about/staff/mike', portal_type: 'Document'},
-      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'}
+      {UID: 'cvbcvb82345', Title: 'Joe', path: '/about/staff/joe', portal_type: 'Document'},
+      
+      // upload file
+      {UID: 'sldlfkjsldkjlskdjf', Title: 'blah.png', path: 'blah.png', portal_type: 'Image'}
+
     ];
     searchables = searchables.concat(randomItems);
 
@@ -424,7 +428,7 @@ define([
     xhr.respond(200, {'content-Type': 'application/json'},
       JSON.stringify({
         url: 'http://localhost:8000/blah.png',
-        uid: 'sldlfkjsldkjlskdjf',
+        UID: 'sldlfkjsldkjlskdjf',
         name: 'blah.png',
         filename: 'blah.png',
         portal_type: 'Image',
diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js
index e2554b3..756ac31 100644
--- a/mockup/tests/pattern-tinymce-test.js
+++ b/mockup/tests/pattern-tinymce-test.js
@@ -26,7 +26,43 @@ define([
     beforeEach(function() {
       this.server = sinon.fakeServer.create();
       this.server.autoRespond = true;
-
+      this.clock = sinon.useFakeTimers();
+      //this.server.respondImmediately = true;
+
+      this.server.respondWith('POST', /upload/, function (xhr, id) {
+        xhr.respond(200, {'content-Type': 'application/json'},
+          JSON.stringify({
+            url: 'http://localhost:8000/blah.png',
+            UID: 'sldlfkjsldkjlskdjf',
+            name: 'blah.png',
+            filename: 'blah.png',
+            portal_type: 'Image',
+            size: 239292
+          })
+        );
+      });
+      this.server.respondWith(/relateditems-test\.json/, function(xhr, id) {
+        var query = xhr.url.split('?')[1];
+        var vars = query.split('&');
+        for (var i = 0; i < vars.length; i += 1) {
+          var pair = vars[i].split('=');
+          if (decodeURIComponent(pair[0]) === 'query') {
+            query = $.parseJSON(decodeURIComponent(pair[1]));
+          }
+        }
+        var results = [];
+        for (var j = 0; j < query.criteria.length; j += 1) {
+          if(query.criteria[j].i === 'UID'){
+            results.push({UID: query.criteria[j].v[0], Title: 'blah.png', path: '/blah.png', portal_type: 'Image'});
+          }
+        }
+        xhr.respond(200, { 'Content-Type': 'application/json' },
+          JSON.stringify({
+            total: results.length,
+            results: results
+          })
+        );
+      });
       this.server.respondWith('GET', /data.json/, function (xhr, id) {
         var items = [
           {
@@ -242,6 +278,40 @@ define([
       pattern.imageModal.$scale.find('[value="thumb"]')[0].selected = true;
       expect(pattern.imageModal.getLinkUrl()).to.equal('resolveuid/foobar/@@images/image/thumb');
     });
+    it('test add image link upload', function() {
+      var $el = $('<textarea class="pat-tinymce" data-pat-tinymce=\'' +
+        '{' +
+        '  "relatedItems": {' +
+        '    "vocabularyUrl": "/relateditems-test.json"' +
+        '  },' +
+        '  "upload": {' +
+        '    "baseUrl": "/",' +
+        '    "relativePath": "upload"' +
+        '}' +
+      '}\'></textarea>').appendTo('body');
+      registry.scan($el);
+      this.clock.tick(1000);
+      var pattern = $el.data().patternTinymce;
+      pattern.addImageClicked();
+      $('#' + $('#tinylink-uploadImage').data().navref).click();
+      expect($('#tinylink-uploadImage').parent().hasClass('active')).to.equal(true);
+      var blob;
+      try{
+        blob = new Blob(['dummy data'],  {type: 'image/png'});
+      } catch (err) {
+        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
+        var builder = new BlobBuilder();
+        builder.append('dummy data');
+        blob = builder.getBlob();
+      }
+      blob.name = 'blah.png';
+      pattern.imageModal.$upload.data().patternUpload.dropzone.addFile(blob);
+      $('.upload-all', pattern.imageModal.$upload).click();
+      this.clock.tick(1000);
+
+      expect($('#tinylink-image').parent().hasClass('active')).to.equal(true);
+      expect(pattern.imageModal.getLinkUrl()).to.equal('/blah.png/imagescale/large');
+    });
 
     it('test adds data attributes', function() {
       var pattern = createTinymce();


