Repository: plone.app.controlpanel
Branch: refs/heads/master
Date: 2015-04-10T17:00:10+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.controlpanel/commit/b64442f9014cb3ebb8d8e01c3b84a0340ec55e9a

i18n fixes

Files changed:
M plone/app/controlpanel/qi.pt
M plone/app/controlpanel/qi.py

diff --git a/plone/app/controlpanel/qi.pt b/plone/app/controlpanel/qi.pt
index 2b42cda..2e4e96a 100644
--- a/plone/app/controlpanel/qi.pt
+++ b/plone/app/controlpanel/qi.pt
@@ -94,10 +94,9 @@
                         </tal:span>
                       </span>
 
-                      <div i18n:translate=""
-                            tal:condition="not:upgrade_info/available">
-                        <strong>Warning</strong>
-                        <span>There is no upgrade procedure defined for this
+                      <div tal:condition="not:upgrade_info/available">
+                        <strong i18n:translate="">Warning</strong>
+                        <span i18n:translate="">There is no upgrade procedure defined for this
                         addon. Please consult the addon documentation
                         for upgrade information, or contact the addon
                         author.</span>
diff --git a/plone/app/controlpanel/qi.py b/plone/app/controlpanel/qi.py
index 5d5a118..4dd465e 100644
--- a/plone/app/controlpanel/qi.py
+++ b/plone/app/controlpanel/qi.py
@@ -140,13 +140,13 @@ def upgrade_product(self, product):
         messages = IStatusMessage(self.request)
         try:
             qi.upgradeProduct(product)
-            messages.addStatusMessage(_(u'Upgraded %s!' % product),
-                                      type="info")
+            messages.addStatusMessage(
+                _(u'Upgraded ${product}!', mapping={'product', product}), type="info")
             return True
         except Exception, e:
             logging.error("Could not upgrade %s: %s" % (product, e))
-            messages.addStatusMessage(_(u'Error upgrading %s.' % product),
-                                      type="error")
+            messages.addStatusMessage(
+                _(u'Error upgrading ${product}.', mapping={'product': product}), type="error")
 
         return False
 
@@ -182,7 +182,7 @@ def __call__(self):
                 # TODO: find out where this is and don't run already
                 # activated profiles
                 setupTool.runAllImportStepsFromProfile(profile)
-                msg = _(u'Installed %s!' % profile)
+                msg = _(u'Installed ${product}!', mapping={'product': profile})
                 messages.addStatusMessage(msg, type=msg_type)
 
         purl = getToolByName(self.context, 'portal_url')()
@@ -201,11 +201,11 @@ def __call__(self):
             for product in products:
                 try:
                     qi.uninstallProducts(products=[product, ])
-                    msg = _(u'Uninstalled %s.' % product)
+                    msg = _(u'Uninstalled ${product}.', mapping={'product': product})
                 except Exception, e:
                     logging.error("Could not uninstall %s: %s" % (product, e))
                     msg_type = 'error'
-                    msg = _(u'Error uninstalling %s' % product)
+                    msg = _(u'Error uninstalling ${product}.', mapping={'product': product})
                 messages.addStatusMessage(msg, type=msg_type)
 
         purl = getToolByName(self.context, 'portal_url')()


