Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-08T17:38:13-04:00
Author: cewing (cewing) <cris@crisewing.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3721792ed02989fd509117a942442859be48660a

Provide information about installable packages that are broken for some reason.

Addresses #419

Style updates for plonetheme.barcelonetta coming in a related commit

Files changed:
M Products/CMFPlone/controlpanel/browser/quickinstaller.pt
M Products/CMFPlone/controlpanel/browser/quickinstaller.py

diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
index 83e70d3..106a817 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
@@ -196,6 +196,28 @@
           </section>
         </section>
 
+        <section tal:define="products view/get_broken;
+                             num_products python:len(products);"
+                 tal:condition="num_products"
+                 id="broken-products" class="portlet">
+          <header class="portletHeader" i18n:translate="">Broken add-ons</header>
+          <section class="portletContent">
+            <ul class="configlets">
+              <li tal:repeat="product products">
+                <h3>
+                  <span tal:replace="product/productname">
+                    Add-on Name
+                  </span>
+                </h3>
+                <p class="configletDescription discreet">
+                  <span tal:content="product/type">Error Type</span>
+                  <em class="discreet"> - <tal:span tal:content="product/value">Error Reason</tal:span></em>
+                </p>
+              </li>
+            </ul>
+          </section>
+        </section>
+
     </div>
 </metal:main>
 
diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
index 970b327..df8948c 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
@@ -113,6 +113,8 @@ def get_addons(self, apply_filter=None, product_name=None):
                   'upgrades': only products with upgrades
                   'available': products that are not installed bit
                                could be
+                  'broken': uninstallable products with broken 
+                            dependencies
 
         @product_name:= a specific product id that you want info on. Do
                    not pass in the profile type, just the name
@@ -121,29 +123,34 @@ def get_addons(self, apply_filter=None, product_name=None):
         """
         addons = self.marshall_addons()
         filtered = {}
-        for product_id, addon in addons.items():
-            if product_name and addon['id'] != product_name:
-                continue
-
-            installed = addon['is_installed']
-            if apply_filter in ['installed', 'upgrades'] and not installed:
-                continue
-            elif apply_filter == 'available':
-                if installed:
-                    continue
-                # filter out upgrade profiles
-                if addon['profile_type'] != 'default':
-                    continue
-            elif apply_filter == 'upgrades':
-                # weird p.a.discussion integration behavior
-                upgrade_info = addon['upgrade_info']
-                if type(upgrade_info) == bool:
+        if apply_filter == 'broken':
+            all_broken = self.qi.getBrokenInstalls()
+            for broken in all_broken:
+                filtered[broken['productname']] = broken
+        else:
+            for product_id, addon in addons.items():
+                if product_name and addon['id'] != product_name:
                     continue
 
-                if not upgrade_info['available']:
+                installed = addon['is_installed']
+                if apply_filter in ['installed', 'upgrades'] and not installed:
                     continue
+                elif apply_filter == 'available':
+                    if installed:
+                        continue
+                    # filter out upgrade profiles
+                    if addon['profile_type'] != 'default':
+                        continue
+                elif apply_filter == 'upgrades':
+                    # weird p.a.discussion integration behavior
+                    upgrade_info = addon['upgrade_info']
+                    if type(upgrade_info) == bool:
+                        continue
 
-            filtered[product_id] = addon
+                    if not upgrade_info['available']:
+                        continue
+
+                filtered[product_id] = addon
 
         return filtered
 
@@ -159,6 +166,9 @@ def get_installed(self):
     def get_available(self):
         return self.get_addons(apply_filter='available').values()
 
+    def get_broken(self):
+        return self.get_addons(apply_filter='broken').values()
+
     def upgrade_product(self, product):
         qi = getToolByName(self.context, 'portal_quickinstaller')
         messages = IStatusMessage(self.request)


Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-09T14:09:12+02:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/65777eebe0211ec65821b65b71b6d60d89a8ddbe

Merge pull request #420 from plone/cewing-issue-419

Provide information about broken packages in add-ons control panel

Files changed:
M Products/CMFPlone/controlpanel/browser/quickinstaller.pt
M Products/CMFPlone/controlpanel/browser/quickinstaller.py

diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
index 83e70d3..106a817 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt
@@ -196,6 +196,28 @@
           </section>
         </section>
 
+        <section tal:define="products view/get_broken;
+                             num_products python:len(products);"
+                 tal:condition="num_products"
+                 id="broken-products" class="portlet">
+          <header class="portletHeader" i18n:translate="">Broken add-ons</header>
+          <section class="portletContent">
+            <ul class="configlets">
+              <li tal:repeat="product products">
+                <h3>
+                  <span tal:replace="product/productname">
+                    Add-on Name
+                  </span>
+                </h3>
+                <p class="configletDescription discreet">
+                  <span tal:content="product/type">Error Type</span>
+                  <em class="discreet"> - <tal:span tal:content="product/value">Error Reason</tal:span></em>
+                </p>
+              </li>
+            </ul>
+          </section>
+        </section>
+
     </div>
 </metal:main>
 
diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
index 970b327..df8948c 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
@@ -113,6 +113,8 @@ def get_addons(self, apply_filter=None, product_name=None):
                   'upgrades': only products with upgrades
                   'available': products that are not installed bit
                                could be
+                  'broken': uninstallable products with broken 
+                            dependencies
 
         @product_name:= a specific product id that you want info on. Do
                    not pass in the profile type, just the name
@@ -121,29 +123,34 @@ def get_addons(self, apply_filter=None, product_name=None):
         """
         addons = self.marshall_addons()
         filtered = {}
-        for product_id, addon in addons.items():
-            if product_name and addon['id'] != product_name:
-                continue
-
-            installed = addon['is_installed']
-            if apply_filter in ['installed', 'upgrades'] and not installed:
-                continue
-            elif apply_filter == 'available':
-                if installed:
-                    continue
-                # filter out upgrade profiles
-                if addon['profile_type'] != 'default':
-                    continue
-            elif apply_filter == 'upgrades':
-                # weird p.a.discussion integration behavior
-                upgrade_info = addon['upgrade_info']
-                if type(upgrade_info) == bool:
+        if apply_filter == 'broken':
+            all_broken = self.qi.getBrokenInstalls()
+            for broken in all_broken:
+                filtered[broken['productname']] = broken
+        else:
+            for product_id, addon in addons.items():
+                if product_name and addon['id'] != product_name:
                     continue
 
-                if not upgrade_info['available']:
+                installed = addon['is_installed']
+                if apply_filter in ['installed', 'upgrades'] and not installed:
                     continue
+                elif apply_filter == 'available':
+                    if installed:
+                        continue
+                    # filter out upgrade profiles
+                    if addon['profile_type'] != 'default':
+                        continue
+                elif apply_filter == 'upgrades':
+                    # weird p.a.discussion integration behavior
+                    upgrade_info = addon['upgrade_info']
+                    if type(upgrade_info) == bool:
+                        continue
 
-            filtered[product_id] = addon
+                    if not upgrade_info['available']:
+                        continue
+
+                filtered[product_id] = addon
 
         return filtered
 
@@ -159,6 +166,9 @@ def get_installed(self):
     def get_available(self):
         return self.get_addons(apply_filter='available').values()
 
+    def get_broken(self):
+        return self.get_addons(apply_filter='broken').values()
+
     def upgrade_product(self, product):
         qi = getToolByName(self.context, 'portal_quickinstaller')
         messages = IStatusMessage(self.request)


