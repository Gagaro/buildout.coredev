Repository: plone.app.collection


Branch: refs/heads/master
Date: 2015-09-20T17:19:54+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.collection/commit/6197557caf712f897763c86d133fdd8c019db8c9

Move portal_properties settings to configuration registry

commit 9480e233dd66a3cdb985c42f1970c7ef8407ffe4
Author: esteele &lt;eric@esteele.net&gt;
Date:   Sat Sep 19 14:15:30 2015 +0200

    Show author info if user is logged in

commit ed09753ee94a1c3504c0710bc003fb6d07829203
Author: esteele &lt;eric@esteele.net&gt;
Date:   Sat Sep 19 13:39:02 2015 +0200

    Use registry for variable lookup. pproperties deprecated.

commit c5f1d922534fce142c6279c135321de1b2f6e90e
Author: esteele &lt;eric@esteele.net&gt;
Date:   Sat Sep 19 11:13:21 2015 +0200

    Remove portal_properties fallback

commit c631f3e8c290c29bc15de2baa01dc2c42628c4eb
Author: esteele &lt;eric@esteele.net&gt;
Date:   Sat Sep 19 11:12:35 2015 +0200

    Add fallback for 'allow_anon_views_about' lookup

commit 71ae394d2efa1d37c23e95f39d8746e9301274be
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 23:14:38 2015 +0200

    Fix registry id

commit be59d00845296e8269c62942c5b8b444b4a06a3d
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 12:51:41 2015 +0200

    Pull typesUseViewActionInListings from registry.

Files changed:
M CHANGES.rst
M plone/app/collection/browser/templates/standard_view.pt
M plone/app/collection/browser/templates/tabular_view.pt
M plone/app/collection/browser/templates/thumbnail_view.pt
M plone/app/collection/tests/test_collection.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fa8b8a7..4ee5ce0 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Pull typesUseViewActionInListings value from portal_registry.
+  [esteele]
 
 
 1.1.4 (2015-06-05)
diff --git a/plone/app/collection/browser/templates/standard_view.pt b/plone/app/collection/browser/templates/standard_view.pt
index 2d036bc..a805c46 100644
--- a/plone/app/collection/browser/templates/standard_view.pt
+++ b/plone/app/collection/browser/templates/standard_view.pt
@@ -28,15 +28,13 @@
         <metal:listingmacro define-macro="listing">
         <tal:results define="b_start python:request.get('b_start', 0);
                              batch python:context.results(b_start=b_start);
-                             site_properties context/portal_properties/site_properties;
                              portal_registry context/portal_registry|nothing;
-                             use_view_action site_properties/typesUseViewActionInListings|python:();
+                             use_view_action python:portal_registry.get('plone.types_use_view_action_in_listings', []);
                              isAnon context/@@plone_portal_state/anonymous;
                              normalizeString nocall: context/plone_utils/normalizeString;
                              toLocalizedTime nocall: context/@@plone/toLocalizedTime;
-                             show_about_bbb site_properties/allowAnonymousViewAbout|nothing;
-                             show_about_registry python:portal_registry and portal_registry.get('plone.allow_anon_views_about');
-                             show_about python:not isAnon or show_about_registry or show_about_bbb;
+                             show_about_registry python:portal_registry.get('plone.allow_anon_views_about', []) if portal_registry else [];
+                             show_about python:not isAnon or show_about_registry;
                              navigation_root_url context/@@plone_portal_state/navigation_root_url;
                              pas_member context/@@pas_member;">
         <tal:listing condition="batch">
diff --git a/plone/app/collection/browser/templates/tabular_view.pt b/plone/app/collection/browser/templates/tabular_view.pt
index a215aca..ef32ac2 100644
--- a/plone/app/collection/browser/templates/tabular_view.pt
+++ b/plone/app/collection/browser/templates/tabular_view.pt
@@ -33,8 +33,7 @@
               i18n:attributes="summary"
               tal:define="fields context/selectedViewFields;
                           pas_member context/@@pas_member;
-                          site_properties context/portal_properties/site_properties;
-                          use_view_action site_properties/typesUseViewActionInListings|python:();">
+                          use_view_action python:context.portal_registry.get('plone.types_use_view_action_in_listings');">
               <thead>
                   <tr>
                       <th class="nosort"
diff --git a/plone/app/collection/browser/templates/thumbnail_view.pt b/plone/app/collection/browser/templates/thumbnail_view.pt
index 4d82a74..e47d356 100644
--- a/plone/app/collection/browser/templates/thumbnail_view.pt
+++ b/plone/app/collection/browser/templates/thumbnail_view.pt
@@ -14,8 +14,7 @@
                 otherContents data/others;
                 images data/images;
                 total_number_of_images data/total_number_of_images;
-                site_properties context/portal_properties/site_properties;
-                use_view_action site_properties/typesUseViewActionInListings|python:();">
+                use_view_action python:context.portal_registry.get('plone.types_use_view_action_in_listings', ());">
 
     <div metal:define-macro="text-field-view"
          id="parent-fieldname-text" class="stx"
diff --git a/plone/app/collection/tests/test_collection.py b/plone/app/collection/tests/test_collection.py
index 0804004..0335020 100644
--- a/plone/app/collection/tests/test_collection.py
+++ b/plone/app/collection/tests/test_collection.py
@@ -1,6 +1,8 @@
+from zope.component import getUtility
 from Products.Archetypes.Marshall import parseRFC822
 from Products.CMFCore.utils import getToolByName
 from plone.app.collection.testing import PLONEAPPCOLLECTION_INTEGRATION_TESTING
+from plone.registry.interfaces import IRegistry
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
@@ -8,8 +10,6 @@
 from plone.app.testing import setRoles
 from plone.testing.z2 import Browser
 from transaction import commit
-from zExceptions import BadRequest
-
 import unittest2 as unittest
 
 
@@ -123,152 +123,12 @@ def test_viewingCollection(self):
         browser.open(self.collection.absolute_url())
         self.assertTrue("Collection Test Page" in browser.contents)
 
-    def test_show_about_no_registry_has_property_noshow(self):
-        """Test the case where we fetch show about information from portal
-        properties (Plone < 5) and show about is False.
-        """
-        # disable show about in site properties
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_addProperty(
-                'allowAnonymousViewAbout', False, 'boolean')
-        except BadRequest:
-            properties.site_properties.manage_changeProperties(
-                allowAnonymousViewAbout=False)
-        self.portal.portal_registry = None
-
-        self._set_up_collection()
-
-        # logout and check if author information is hidden
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertFalse("author" in result)
-        self.assertFalse("test-user" in result)
-
-    def test_show_about_no_registry_has_property_show(self):
-        """Test the case where we fetch show about information from portal
-        properties (Plone < 5) and show about is True.
-        """
-        # enable show about in site properties
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_addProperty(
-                'allowAnonymousViewAbout', True, 'boolean')
-        except BadRequest:
-            properties.site_properties.manage_changeProperties(
-                allowAnonymousViewAbout=True)
-        self.portal.portal_registry = None
-
-        self._set_up_collection()
-
-        # logout and check if author information is shown
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertTrue("author" in result)
-        self.assertTrue("test-user" in result)
-
-    def test_show_about_has_property_and_registry_noshow(self):
-        """Test the case where we fetch show about information from portal
-        properties, but registry is also present (Plone < 5, with
-        plone.app.registry installed) and show about is False.
-        """
-        # disable show about in site properties, create an empty registry
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_addProperty(
-                'allowAnonymousViewAbout', False, 'boolean')
-        except BadRequest:
-            properties.site_properties.manage_changeProperties(
-                allowAnonymousViewAbout=False)
-        self.portal.portal_registry = {}  # mock the registry
-
-        self._set_up_collection()
-
-        # logout and check if author information is hidden
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertFalse("author" in result)
-        self.assertFalse("test-user" in result)
-
-    def test_show_about_has_property_and_registry_show(self):
-        """Test the case where we fetch show about information from portal
-        properties, but registry is also present (Plone < 5, with
-        plone.app.registry installed) and show about is True.
-        """
-        # enable show about in site properties, create an empty registry
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_addProperty(
-                'allowAnonymousViewAbout', True, 'boolean')
-        except BadRequest:
-            properties.site_properties.manage_changeProperties(
-                allowAnonymousViewAbout=True)
-        self.portal.portal_registry = {}  # mock the registry
-
-        self._set_up_collection()
-
-        # logout and check if author information is shown
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertTrue("author" in result)
-        self.assertTrue("test-user" in result)
-
-    def test_show_about_has_registry_no_property_noshow(self):
-        """Test the case where we fetch show about information from the
-        registry (Plone >= 5) and show about is False.
-        """
-        # disable show about in the registry, delete 'allowAnonymousViewAbout'
-        # property
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_delProperties(
-                ['allowAnonymousViewAbout'])
-        except BadRequest:
-            pass
-        self.portal.portal_registry = {'plone.allow_anon_views_about': False}
-
-        self._set_up_collection()
-
-        # logout and check if author information is hidden
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertFalse("author" in result)
-        self.assertFalse("test-user" in result)
-
-    def test_show_about_has_registry_no_property_show(self):
-        """Test the case where we fetch show about information from the
-        registry (Plone >= 5) and show about is True.
-        """
-        # enable show about in the registry, delete 'allowAnonymousViewAbout'
-        # property
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_delProperties(
-                ['allowAnonymousViewAbout'])
-        except BadRequest:
-            pass
-        self.portal.portal_registry = {'plone.allow_anon_views_about': True}
-
-        self._set_up_collection()
-
-        # logout and check if author information is shown
-        logout()
-        result = self.collection.restrictedTraverse('standard_view')()
-        self.assertTrue("author" in result)
-        self.assertTrue("test-user" in result)
-
     def test_show_about_logged_in(self):
         """Test the case where we show about information if a user is logged in
         even though show about is set to False
         """
-        properties = getToolByName(self.portal, 'portal_properties')
-        try:
-            properties.site_properties.manage_addProperty(
-                'allowAnonymousViewAbout', False, 'boolean')
-        except BadRequest:
-            properties.site_properties.manage_changeProperties(
-                allowAnonymousViewAbout=False)
-        self.portal.portal_registry = {'plone.allow_anon_views_about': False}
+        registry = getUtility(IRegistry)
+        registry['plone.allow_anon_views_about'] = False        
 
         self._set_up_collection()
 


