Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2015-10-23T09:13:18+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.contentrules/commit/ec3bedce256d3ac73f2424083b3c74708a236fce

Fix a write on read situation

Only get the rule management assignable if it's going to be used.

Getting it has the side effect of creating it if it does not exist,
thus causing a write on read.

Files changed:
M CHANGES.rst
M plone/app/contentrules/browser/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d321c93..f862bbb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 4.0.9 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- CSRF fix: safe write on read.
+  [gforcada]
 
 
 4.0.8 (2015-09-20)
diff --git a/plone/app/contentrules/browser/assignments.py b/plone/app/contentrules/browser/assignments.py
index 98f8fef..39d58d0 100644
--- a/plone/app/contentrules/browser/assignments.py
+++ b/plone/app/contentrules/browser/assignments.py
@@ -25,11 +25,11 @@ def __call__(self):
         request = aq_inner(self.request)
         form = request.form
         status = IStatusMessage(self.request)
-        assignable = IRuleAssignmentManager(context)
 
         operation = request.get('operation', None)
 
         if operation == 'move_up':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)
@@ -37,6 +37,7 @@ def __call__(self):
             keys.insert(idx - 1, rule_id)
             assignable.updateOrder(keys)
         elif operation == 'move_down':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)


Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2015-10-23T14:49:06+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contentrules/commit/f2839b9b62ede96ffcaa06c6b63146c08631e05b

Merge pull request #17 from derFreitag/write-on-read

Fix a write on read situation

Files changed:
M CHANGES.rst
M plone/app/contentrules/browser/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d321c93..f862bbb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 4.0.9 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- CSRF fix: safe write on read.
+  [gforcada]
 
 
 4.0.8 (2015-09-20)
diff --git a/plone/app/contentrules/browser/assignments.py b/plone/app/contentrules/browser/assignments.py
index 98f8fef..39d58d0 100644
--- a/plone/app/contentrules/browser/assignments.py
+++ b/plone/app/contentrules/browser/assignments.py
@@ -25,11 +25,11 @@ def __call__(self):
         request = aq_inner(self.request)
         form = request.form
         status = IStatusMessage(self.request)
-        assignable = IRuleAssignmentManager(context)
 
         operation = request.get('operation', None)
 
         if operation == 'move_up':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)
@@ -37,6 +37,7 @@ def __call__(self):
             keys.insert(idx - 1, rule_id)
             assignable.updateOrder(keys)
         elif operation == 'move_down':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)


