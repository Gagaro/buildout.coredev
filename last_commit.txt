Repository: plone.app.portlets
Branch: refs/heads/master
Date: 2015-05-12T08:58:49-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/bdb4b7b877a28b1a5c05d3ca5ff4ba93e5f339c7

just pep8 right now

Files changed:
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/traversal.py

diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index a5f8458..0e87982 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -73,14 +73,17 @@ def has_legacy_portlets(self):
         return (left_slots or right_slots)
 
     # view @@set-portlet-blacklist-status
-    def set_blacklist_status(self, manager, group_status, content_type_status, context_status):
+    def set_blacklist_status(self, manager, group_status, content_type_status,
+                             context_status):
         authenticator = getMultiAdapter((self.context, self.request),
                                         name=u"authenticator")
         if not authenticator.verify():
             raise Unauthorized
         portletManager = getUtility(IPortletManager, name=manager)
-        assignable = getMultiAdapter((self.context, portletManager), ILocalPortletAssignmentManager)
-        assignments = getMultiAdapter((self.context, portletManager), IPortletAssignmentMapping)
+        assignable = getMultiAdapter((self.context, portletManager),
+                                     ILocalPortletAssignmentManager)
+        assignments = getMultiAdapter((self.context, portletManager),
+                                      IPortletAssignmentMapping)
 
         IPortletPermissionChecker(assignments.__of__(aq_inner(self.context)))()
 
@@ -93,7 +96,8 @@ def int2status(status):
                 return False
 
         assignable.setBlacklistStatus(GROUP_CATEGORY, int2status(group_status))
-        assignable.setBlacklistStatus(CONTENT_TYPE_CATEGORY, int2status(content_type_status))
+        assignable.setBlacklistStatus(CONTENT_TYPE_CATEGORY,
+                                      int2status(content_type_status))
         assignable.setBlacklistStatus(CONTEXT_CATEGORY, int2status(context_status))
 
         baseUrl = str(getMultiAdapter((self.context, self.request), name='absolute_url'))
@@ -139,21 +143,21 @@ def getAssignmentsForManager(self, manager):
         category = column[USER_CATEGORY]
         mapping = category.get(userId, None)
         if mapping is None:
-            mapping = category[userId] = UserPortletAssignmentMapping(manager=manager.__name__,
-                                                                      category=USER_CATEGORY,
-                                                                      name=userId)
+            mapping = category[userId] = UserPortletAssignmentMapping(
+                manager=manager.__name__, category=USER_CATEGORY, name=userId)
         return mapping.values()
 
     def _getUserId(self):
         membership = getToolByName(aq_inner(self.context), 'portal_membership', None)
         if membership.isAnonymousUser():
-            raise Unauthorized, "Cannot get portlet assignments for anonymous through this view"
+            raise Unauthorized("Cannot get portlet assignments for anonymous "
+                               "through this view")
 
         member = membership.getAuthenticatedMember()
         memberId = member.getId()
 
         if memberId is None:
-            raise KeyError, "Cannot find user id of current user"
+            raise KeyError("Cannot find user id of current user")
 
         return memberId
 
@@ -270,9 +274,8 @@ def getAssignmentsForManager(self, manager):
         category = column[CONTENT_TYPE_CATEGORY]
         mapping = category.get(pt, None)
         if mapping is None:
-            mapping = category[pt] = PortletAssignmentMapping(manager=manager.__name__,
-                                                              category=CONTENT_TYPE_CATEGORY,
-                                                              name=pt)
+            mapping = category[pt] = PortletAssignmentMapping(
+                manager=manager.__name__, category=CONTENT_TYPE_CATEGORY, name=pt)
         return mapping.values()
 
     # View attributes
@@ -281,8 +284,8 @@ def portal_type(self):
         return self.fti().Title()
 
     def portal_type_icon(self):
-        plone_layout = getMultiAdapter((self.context, self.request),
-            name=u"plone_layout")
+        plone_layout = getMultiAdapter(
+            (self.context, self.request), name=u"plone_layout")
         return plone_layout.getIcon(self.fti())
 
     @memoize
@@ -341,7 +344,8 @@ def getAssignmentsForManager(self, manager):
     def ultimate_parent(self):
         # Walk the __parent__ chain to find the principal view
         parent = self.__parent__
-        while hasattr(parent, '__parent__') and IBrowserView.providedBy(parent.__parent__):
+        while (hasattr(parent, '__parent__') and
+                IBrowserView.providedBy(parent.__parent__)):
             parent = parent.__parent__
         return parent
 
diff --git a/plone/app/portlets/browser/traversal.py b/plone/app/portlets/browser/traversal.py
index 55ada6f..6e4c14e 100644
--- a/plone/app/portlets/browser/traversal.py
+++ b/plone/app/portlets/browser/traversal.py
@@ -50,9 +50,8 @@ def traverse(self, name, ignore):
         category = column[USER_CATEGORY]
         manager = category.get(user, None)
         if manager is None:
-            manager = category[user] = UserPortletAssignmentMapping(manager=col,
-                                                                    category=USER_CATEGORY,
-                                                                    name=user)
+            manager = category[user] = UserPortletAssignmentMapping(
+                manager=col, category=USER_CATEGORY, name=user)
 
         # XXX: For graceful migration
         if not getattr(manager, '__manager__', None):
@@ -133,9 +132,8 @@ def traverse(self, name, ignore):
         category = column[CONTENT_TYPE_CATEGORY]
         manager = category.get(pt, None)
         if manager is None:
-            manager = category[pt] = PortletAssignmentMapping(manager=col,
-                                                              category=CONTENT_TYPE_CATEGORY,
-                                                              name=pt)
+            manager = category[pt] = PortletAssignmentMapping(
+                manager=col, category=CONTENT_TYPE_CATEGORY, name=pt)
 
         # XXX: For graceful migration
         if not getattr(manager, '__manager__', None):


Repository: plone.app.portlets
Branch: refs/heads/master
Date: 2015-05-13T23:59:59-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/19162acec5ca4593ab2b4b4b2cec9b0786796d9e

Convert manage-portlets.js into a pattern and make improvements on
  using the manage portlets infrastructure

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/editmanager.py
M plone/app/portlets/browser/manage-portlets.js
M plone/app/portlets/browser/templates/edit-manager-contextual.pt
M plone/app/portlets/browser/templates/edit-manager-macros.pt
M plone/app/portlets/browser/templates/edit-manager.pt
M plone/app/portlets/browser/templates/manage-content-type.pt
M plone/app/portlets/browser/templates/manage-contextual.pt
M plone/app/portlets/browser/templates/manage-dashboard.pt
M plone/app/portlets/browser/templates/manage-group-dashboard.pt
M plone/app/portlets/browser/templates/manage-group.pt
M plone/app/portlets/manager.py
M plone/app/portlets/tests/testViewName.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 2dbf31b..bbf96cc 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,11 @@ Changelog
 3.0.5 (unreleased)
 ------------------
 
+- Convert manage-portlets.js into a pattern and make improvements on
+  using the manage portlets infrastructure
+  [vangheem]
+
+
 - Supress a ZopeTestCase warning.
   This fixes https://github.com/plone/Products.CMFPlone/issues/501
   [gforcada]
diff --git a/plone/app/portlets/browser/editmanager.py b/plone/app/portlets/browser/editmanager.py
index f4bb370..811143c 100644
--- a/plone/app/portlets/browser/editmanager.py
+++ b/plone/app/portlets/browser/editmanager.py
@@ -10,11 +10,11 @@
 from plone.portlets.interfaces import ILocalPortletAssignmentManager
 from plone.portlets.interfaces import IPortletContext
 from plone.portlets.utils import hashPortletInfo
-from plone.portlets.utils import unhashPortletInfo
 
-from zope.container  import contained
+from zope.container import contained
 from zope.interface import implements, Interface
-from zope.component import adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility
+from zope.component import (
+    adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility)
 from zope.contentprovider.interfaces import UpdateNotCalled
 from zope.publisher.interfaces.browser import IDefaultBrowserLayer
 from five.customerize.zpt import TTWViewTemplateRenderer
@@ -50,7 +50,7 @@ class EditPortletManagerRenderer(Explicit):
 
     def __init__(self, context, request, view, manager):
         self.__parent__ = view
-        self.manager = manager # part of interface
+        self.manager = manager  # part of interface
         self.context = context
         self.request = request
         self.__updated = False
@@ -95,13 +95,11 @@ def normalized_manager_name(self):
     def baseUrl(self):
         return self.__parent__.getAssignmentMappingUrl(self.manager)
 
-
     def portlets(self):
         assignments = self._lazyLoadAssignments(self.manager)
         return self.portlets_for_assignments(
             assignments, self.manager, self.baseUrl())
 
-
     def portlets_for_assignments(self, assignments, manager, base_url):
         category = self.__parent__.category
         key = self.__parent__.key
@@ -131,16 +129,16 @@ def portlets_for_assignments(self, assignments, manager, base_url):
                 visible = False
 
             data.append({
-                'title'      : assignments[idx].title,
-                'editview'   : editviewName,
-                'hash'       : portlet_hash,
-                'name'       : name,
-                'up_url'     : '%s/@@move-portlet-up' % (base_url),
-                'down_url'   : '%s/@@move-portlet-down' % (base_url),
-                'delete_url' : '%s/@@delete-portlet' % (base_url),
-                'hide_url'   : '%s/@@toggle-visibility' % (base_url),
-                'show_url'   : '%s/@@toggle-visibility' % (base_url),
-                'visible'    : visible,
+                'title': assignments[idx].title,
+                'editview': editviewName,
+                'hash': portlet_hash,
+                'name': name,
+                'up_url': '%s/@@move-portlet-up' % (base_url),
+                'down_url': '%s/@@move-portlet-down' % (base_url),
+                'delete_url': '%s/@@delete-portlet' % (base_url),
+                'hide_url': '%s/@@toggle-visibility' % (base_url),
+                'show_url': '%s/@@toggle-visibility' % (base_url),
+                'visible': visible,
                 })
         if len(data) > 0:
             data[0]['up_url'] = data[-1]['down_url'] = None
@@ -166,10 +164,10 @@ def check_permission(p):
                 return False
             return True
 
-        portlets =  [{
-            'title' : p.title,
-            'description' : p.description,
-            'addview' : '%s/+/%s' % (addviewbase, p.addview)
+        portlets = [{
+            'title': p.title,
+            'description': p.description,
+            'addview': '%s/+/%s' % (addviewbase, p.addview)
             } for p in self.manager.getAddablePortletTypes() if check_permission(p)]
 
         portlets.sort(key=sort_key)
@@ -209,7 +207,8 @@ def context_url(self):
 
 class ContextualEditPortletManagerRenderer(EditPortletManagerRenderer):
     """Render a portlet manager in edit mode for contextual portlets"""
-    adapts(Interface, IDefaultBrowserLayer, IManageContextualPortletsView, IPortletManager)
+    adapts(Interface, IDefaultBrowserLayer,
+           IManageContextualPortletsView, IPortletManager)
 
     template = ViewPageTemplateFile('templates/edit-manager-contextual.pt')
 
@@ -224,13 +223,15 @@ def manager_name(self):
         return self.manager.__name__
 
     def context_blacklist_status(self):
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         return assignable.getBlacklistStatus(CONTEXT_CATEGORY)
 
     def group_blacklist_status(self, check_parent=False):
         # If check_parent is True and the blacklist status is None, it returns the
         # parent status recursively.
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         status = assignable.getBlacklistStatus(GROUP_CATEGORY)
 
         if check_parent and status is None:
@@ -240,7 +241,8 @@ def group_blacklist_status(self, check_parent=False):
         return status
 
     def content_type_blacklist_status(self, check_parent=False):
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         status = assignable.getBlacklistStatus(CONTENT_TYPE_CATEGORY)
 
         if check_parent and status is None:
@@ -260,7 +262,8 @@ def parent_blacklist_status(self, category):
         current = pcontext.getParent()
         currentpc = pcontext
         while status is None and current is not None:
-            assignable = getMultiAdapter((current, self.manager,), ILocalPortletAssignmentManager)
+            assignable = getMultiAdapter((current, self.manager,),
+                                         ILocalPortletAssignmentManager)
             status = assignable.getBlacklistStatus(category)
 
             current = currentpc.getParent()
@@ -295,14 +298,17 @@ def is_visible(a):
                 context = context.__parent__
 
             # we get the contextual portlets view to access its utility methods
-            view = queryMultiAdapter((context, self.request), name=self.__parent__.__name__)
+            view = queryMultiAdapter((context, self.request),
+                                     name=self.__parent__.__name__)
             if view is not None:
                 assignments = view.getAssignmentsForManager(self.manager)
                 assignments_to_show = [a for a in assignments if is_visible(a)]
                 base_url = view.getAssignmentMappingUrl(self.manager)
-                data.extend(self.portlets_for_assignments(assignments_to_show, self.manager, base_url))
+                data.extend(self.portlets_for_assignments(assignments_to_show,
+                                                          self.manager, base_url))
 
-            assignable = queryMultiAdapter((context, self.manager), ILocalPortletAssignmentManager)
+            assignable = queryMultiAdapter((context, self.manager),
+                                           ILocalPortletAssignmentManager)
             if assignable is not None and assignable.getBlacklistStatus(CONTEXT_CATEGORY):
                 # Current context has blocked inherited portlets, stop.
                 break
@@ -320,7 +326,7 @@ def global_portlets(self, category, prefix):
         # get the portlet context
         pcontext = IPortletContext(self.context)
 
-        portal_state = getMultiAdapter((context, self.request), name=u'plone_portal_state')
+        portal_state = getMultiAdapter((context, self.request), name=u'plone_portal_state')  # noqa
         base_url = portal_state.portal_url()
 
         portlets = []
@@ -329,20 +335,25 @@ def global_portlets(self, category, prefix):
                 mapping = self.manager.get(category, None)
                 assignments = []
                 if mapping is not None:
-                    is_visible = lambda a: IPortletAssignmentSettings(a).get('visible', True)
-                    assignments.extend([a for a in mapping.get(key, {}).values() if is_visible(a)])
+                    is_visible = lambda a: IPortletAssignmentSettings(a).get('visible', True)  # noqa
+                    assignments.extend([a for a in mapping.get(key, {}).values()
+                                        if is_visible(a)])
                 if assignments:
-                    edit_url = '%s/++%s++%s+%s' % (base_url, prefix, self.manager.__name__, key)
-                    portlets.extend(self.portlets_for_assignments(assignments, self.manager, edit_url))
+                    edit_url = '%s/++%s++%s+%s' % (
+                        base_url, prefix, self.manager.__name__, key)
+                    portlets.extend(self.portlets_for_assignments(
+                        assignments, self.manager, edit_url))
 
         return portlets
 
     def group_portlets(self):
-        """Return the list of global portlets from the group category for the current context."""
+        """Return the list of global portlets from the group category for the
+           current context."""
         return self.global_portlets(GROUP_CATEGORY, 'groupportlets')
 
     def content_type_portlets(self):
-        """Return the list of global portlets from the content type category for the current context."""
+        """Return the list of global portlets from the content type category for
+           the current context."""
         return self.global_portlets(CONTENT_TYPE_CATEGORY, 'contenttypeportlets')
 
 
diff --git a/plone/app/portlets/browser/manage-portlets.js b/plone/app/portlets/browser/manage-portlets.js
index 268ae54..c5185aa 100644
--- a/plone/app/portlets/browser/manage-portlets.js
+++ b/plone/app/portlets/browser/manage-portlets.js
@@ -1,28 +1,123 @@
-(function($){
-$(document).ready(function(){
-    $('#portal-columns').delegate('.portlet-action', 'submit', function(e){
-        $('#kss-spinner').show();
-        var form = $(this);
-        var formdata = form.serializeArray();
-        var data = {};
-        for(var i=0; i<formdata.length; i++){
-            data[formdata[i].name] = formdata[i].value;
+define([
+  'jquery',
+  'mockup-patterns-base',
+  'pat-registry',
+  'mockup-utils',
+  'mockup-patterns-modal',
+  'translate',
+  'jquery.form'
+], function ($, Base, Registry, utils, Modal, _t) {
+  'use strict';
+  var ManagePortlets = Base.extend({
+    name: 'manage-portlets',
+    trigger: '.pat-manage-portlets',
+    messageTimeout: 0,
+    isModal: false,
+    dirty: false,
+    init: function(){
+      var that = this;
+      that.setupAddDropdown();
+      that.setupSavePortletsSettings();
+      var $modal = that.$el.parents('.plone-modal');
+      if($modal.size() === 1){
+        this.isModal = true;
+        /* want to do something on exit from modal now */
+        var modal = $modal.data('pattern-plone-modal');
+        modal.on('hide', function(){
+          if(that.dirty){
+            window.location.reload();
+          }
+        });
+      }
+    },
+    rebind: function($el){
+      this.$el.replaceWith($el);
+      this.$el = $el;
+      this.init();
+      this.statusMessage();
+      this.dirty = true;
+    },
+    statusMessage: function(msg){
+      if(msg === undefined){
+        msg = _t("Portlet changes saved");
+      }
+      var that = this;
+
+      var $message = $('#portlet-message');
+      if($message.size() === 0){
+        $message = $('<div class="portalMessage info" id="portlet-message" style="display:none"></div>');
+        if(that.isModal){
+          $('.plone-modal-body:visible').prepend($message);
+        }else{
+          $('#content-core').prepend($message);
         }
-        data.ajax = true;
-        $.ajax({
-            url: form.attr('action'),
-            data: data,
-            type: 'POST',
-            success: function(data){
-                var container = form.parents('.portlets-manager');
-                container.replaceWith($(data));
-                $('#kss-spinner').hide();
-            },
-            error: function(){
-                $('#kss-spinner').hide();
+      }
+      $message.html('<strong>' + _t("Info") + '</strong>' + msg);
+      clearTimeout(that.messageTimeout);
+      if(!$message.is(':visible')){
+        $message.fadeIn();
+      }
+      that.messageTimeout = setTimeout(function(){
+        $message.fadeOut();
+      }, 3000);
+    },
+    setupAddDropdown: function(){
+      var that = this;
+      $('.add-portlet', that.$el).change(function(e){
+        e.preventDefault();
+        var $select = $(this);
+        var $form = $select.parents('form');
+        var contextUrl = $select.attr('data-context-url');
+        var url = contextUrl + $select.val() +
+          '?_authenticator=' + $('[name="_authenticator"]').val() +
+          '&referer=' + $('[name="referer"]', $form).val();
+        /* create model */
+        var $a = $('<a/>');
+        $('body').append($a);
+        var pattern = new Modal($a, {
+          ajaxUrl: url,
+          actionOptions: {
+            displayInModal: false,
+            reloadWindowOnClose: false,
+            isForm: true,
+            onSuccess: function(modal, html){
+              pattern.hide();
+              var $body = $(utils.parseBodyTag(html));
+              that.rebind($('#' + that.$el.attr('id'), $body));
+              that.statusMessage(_t('Portlet added'));
             }
+          }
+        });
+        pattern.on('after-render', function(){
+          var $el = $('#' + that.$el.attr('id'), pattern.$raw);
+          /* this is a check that the add form doesn't just automatically
+             create the portlet without an actual form.
+             If element is found here, we can short circuit and
+             continue on. */
+          if($el.size() === 1){
+            /* hacky, trying to prevent modal parts from flickering here */
+            $el = $el.clone();
+            pattern.on('shown', function(){
+              pattern.hide();
+            });
+            that.rebind($el);
+            that.statusMessage(_t('Portlet added'));
+          }
         });
-        return false;
-    });
-});
-})(jQuery);
\ No newline at end of file
+        pattern.show();
+      });
+    },
+    setupSavePortletsSettings: function(){
+      var that = this;
+      $('.portlets-settings,form.portlet-action', that.$el).ajaxForm(function(html){
+        var $body = $(utils.parseBodyTag(html));
+        that.rebind($('#' + that.$el.attr('id'), $body));
+      });
+      $('.portlets-settings select', that.$el).change(function(){
+        $('.portlets-settings', that.$el).submit();
+      });
+    }
+  });
+
+  return ManagePortlets;
+});
\ No newline at end of file
diff --git a/plone/app/portlets/browser/templates/edit-manager-contextual.pt b/plone/app/portlets/browser/templates/edit-manager-contextual.pt
index cc825d6..02f0345 100644
--- a/plone/app/portlets/browser/templates/edit-manager-contextual.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-contextual.pt
@@ -3,7 +3,7 @@
       xmlns:metal="http://xml.zope.org/namespaces/metal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       tal:omit-tag="">
-<div class="portlets-manager"
+<div class="portlets-manager pat-manage-portlets"
      tal:attributes="id string:portletmanager-${view/normalized_manager_name};"
      i18n:domain="plone">
 
@@ -17,11 +17,11 @@
         Block/unblock portlets
     </h4>
 
-    <form method="post" tal:attributes="action view/blacklist_status_action">
+    <form method="post" tal:attributes="action view/blacklist_status_action" class="portlets-settings">
       <span tal:replace="structure context/@@authenticator/authenticator" />
       <input type="hidden" name="manager" tal:attributes="value view/manager_name" />
 
-      <div tal:define="status view/context_blacklist_status">
+      <div tal:define="status view/context_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_parent_folders">
@@ -47,7 +47,7 @@
         <tal:block define="portlets view/inherited_portlets;"
                    condition="portlets">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'" tal:repeat="portlet portlets">
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'" tal:repeat="portlet portlets">
             <div class="portletHeader">
 
               <a tal:omit-tag="not:portlet/editview"
@@ -68,7 +68,7 @@
 
       </div>
 
-      <div tal:define="status view/group_blacklist_status">
+      <div tal:define="status view/group_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_group_portlets">Group portlets:</span>
@@ -98,7 +98,7 @@
         <tal:block define="portlets view/group_portlets;
                            status python:view.group_blacklist_status(check_parent=True)">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'" tal:repeat="portlet portlets">
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'" tal:repeat="portlet portlets">
             <div class="portletHeader">
 
               <a tal:omit-tag="not:portlet/editview"
@@ -121,7 +121,7 @@
       </div>
 
 
-      <div tal:define="status view/content_type_blacklist_status">
+      <div tal:define="status view/content_type_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_content_type_portlets">
@@ -152,7 +152,7 @@
         <tal:block define="portlets view/content_type_portlets;
                    status python:view.content_type_blacklist_status(check_parent=True)">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'"
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'"
             tal:repeat="portlet portlets">
             <div class="portletHeader">
               <a tal:omit-tag="not:portlet/editview"
@@ -173,13 +173,14 @@
 
       </div>
 
-
+      <noscript>
       <div class="formControls">
           <input class="context"
                  type="submit"
                  value="Save settings"
                  i18n:attributes="value label_save_settings"/>
       </div>
+      </noscript>
 
     </form>
   </div>
diff --git a/plone/app/portlets/browser/templates/edit-manager-macros.pt b/plone/app/portlets/browser/templates/edit-manager-macros.pt
index ea10450..22a50a8 100644
--- a/plone/app/portlets/browser/templates/edit-manager-macros.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-macros.pt
@@ -11,7 +11,8 @@
             Add portlet
         </label>
 
-        <select name=":action" onchange="this.form.submit()">
+        <select name=":action" class="add-portlet"
+                tal:attributes="data-context-url python: view.context_url()">
             <option tal:attributes="value python:request['ACTUAL_URL'].replace(view.context_url(), '')"
                     i18n:translate="label_add_portlet_ellipsis">
                 Add portlet&hellip;
@@ -47,7 +48,11 @@
                 tal:attributes="class string:managedPortlet portlet ${hiddenPortletClass};
                                 data-portlethash portlet/hash;
                                 data-viewname view/view_name;">
+
                 <div class="portletHeader" tal:define="authenticator context/@@authenticator/authenticator">
+                    <a tal:omit-tag="not:portlet/editview"
+                       tal:attributes="href string:${portlet/editview}?referer=${view/url_quote_referer}"
+                       tal:content="portlet/title" />
                     <span class="managedPortletActions">
                       <form class="portlet-action up" method="POST" tal:attributes="action portlet/up_url"
                           tal:condition="not:repeat/portlet/start">
@@ -103,9 +108,6 @@
                           tal:attributes="name string:${portlet/name}-remove">&times;</button>
                       </form>
                     </span>
-                    <a tal:omit-tag="not:portlet/editview"
-                       tal:attributes="href string:${portlet/editview}?referer=${view/url_quote_referer}"
-                       tal:content="portlet/title" />
                 </div>
             </div>
         </tal:block>
diff --git a/plone/app/portlets/browser/templates/edit-manager.pt b/plone/app/portlets/browser/templates/edit-manager.pt
index eaa03ab..55421e7 100644
--- a/plone/app/portlets/browser/templates/edit-manager.pt
+++ b/plone/app/portlets/browser/templates/edit-manager.pt
@@ -3,7 +3,7 @@
       xmlns:tal="http://xml.zope.org/namespaces/tal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       tal:omit-tag="">
-<div class="portlets-manager"
+<div class="portlets-manager pat-manage-portlets"
      tal:attributes="id string:portletmanager-${view/normalized_manager_name};">
 
   <div metal:use-macro="context/@@manage-portlets-macros/macros/portlet-add-form" />
diff --git a/plone/app/portlets/browser/templates/manage-content-type.pt b/plone/app/portlets/browser/templates/manage-content-type.pt
index 7973618..133f86a 100644
--- a/plone/app/portlets/browser/templates/manage-content-type.pt
+++ b/plone/app/portlets/browser/templates/manage-content-type.pt
@@ -5,12 +5,6 @@
       metal:use-macro="context/main_template/macros/master"
       i18n:domain="plone">
 
-<metal:javascript fill-slot="javascript_head_slot" tal:omit-tag="">
-    <script type="text/javascript"
-        tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-    </script>
-</metal:javascript>
-
 <body>
 <metal:main fill-slot="main">
 
diff --git a/plone/app/portlets/browser/templates/manage-contextual.pt b/plone/app/portlets/browser/templates/manage-contextual.pt
index d01927c..232ceb0 100644
--- a/plone/app/portlets/browser/templates/manage-contextual.pt
+++ b/plone/app/portlets/browser/templates/manage-contextual.pt
@@ -4,13 +4,6 @@
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       metal:use-macro="context/main_template/macros/master"
       i18n:domain="plone">
-<head>
-    <metal:javascript fill-slot="javascript_head_slot" tal:omit-tag="">
-        <script type="text/javascript"
-            tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-        </script>
-    </metal:javascript>
-</head>
 
 <body>
 <metal:main fill-slot="main" tal:define="plone_view context/@@plone">
diff --git a/plone/app/portlets/browser/templates/manage-dashboard.pt b/plone/app/portlets/browser/templates/manage-dashboard.pt
index 886a858..2145916 100644
--- a/plone/app/portlets/browser/templates/manage-dashboard.pt
+++ b/plone/app/portlets/browser/templates/manage-dashboard.pt
@@ -11,11 +11,6 @@
                  tal:define="dummy python:request.set('disable_border',1);
                              disable_column_one python:request.set('disable_plone.leftcolumn',1);
                              disable_column_two python:request.set('disable_plone.rightcolumn',1);" />
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-          tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/browser/templates/manage-group-dashboard.pt b/plone/app/portlets/browser/templates/manage-group-dashboard.pt
index 597de19..b4c492d 100644
--- a/plone/app/portlets/browser/templates/manage-group-dashboard.pt
+++ b/plone/app/portlets/browser/templates/manage-group-dashboard.pt
@@ -10,11 +10,6 @@
     <metal:block fill-slot="top_slot"
              tal:define="dummy python:request.set('disable_border',1)" />
 
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-        tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/browser/templates/manage-group.pt b/plone/app/portlets/browser/templates/manage-group.pt
index 544a2a3..74fe591 100644
--- a/plone/app/portlets/browser/templates/manage-group.pt
+++ b/plone/app/portlets/browser/templates/manage-group.pt
@@ -9,12 +9,6 @@
 <head>
     <metal:block fill-slot="top_slot"
              tal:define="dummy python:request.set('disable_border',1)" />
-
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-          tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/manager.py b/plone/app/portlets/manager.py
index 98ecc30..98b529e 100644
--- a/plone/app/portlets/manager.py
+++ b/plone/app/portlets/manager.py
@@ -7,15 +7,13 @@
 from zope.publisher.interfaces.browser import IDefaultBrowserLayer
 
 from Acquisition import Explicit, aq_inner, aq_acquire
-from Products.CMFCore.utils import getToolByName
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from ZODB.POSException import ConflictError
 
-from plone.portlets.interfaces import IPortletRenderer, ILocalPortletAssignable
+from plone.portlets.interfaces import IPortletRenderer
 from plone.portlets.manager import PortletManagerRenderer as BasePortletManagerRenderer
 from plone.app.portlets.interfaces import IColumn
 from plone.app.portlets.interfaces import IDashboard
-#from plone.app.layout.navigation.defaultpage import isDefaultPage
 
 logger = logging.getLogger('portlets')
 
@@ -29,7 +27,7 @@ def _dataToPortlet(self, data):
         data object.
         """
         portlet = getMultiAdapter((self.context, self.request, self.__parent__,
-                                        self.manager, data, ), IPortletRenderer)
+                                  self.manager, data, ), IPortletRenderer)
         return portlet.__of__(self.context)
 
 
@@ -47,7 +45,8 @@ def base_url(self):
         """If context is a default-page, return URL of folder, else
         return URL of context.
         """
-        return str(getMultiAdapter((self._context(), self.request, ), name=u'absolute_url'))
+        return str(getMultiAdapter((self._context(), self.request, ),
+                                   name=u'absolute_url'))
 
     def safe_render(self, portlet_renderer):
         try:
diff --git a/plone/app/portlets/tests/testViewName.rst b/plone/app/portlets/tests/testViewName.rst
index efd5fc6..0d0eb69 100644
--- a/plone/app/portlets/tests/testViewName.rst
+++ b/plone/app/portlets/tests/testViewName.rst
@@ -38,11 +38,6 @@ Now customize the manage dashboard view and check the name is in place too::
     ...                  tal:define="dummy python:request.set('disable_border',1);
     ...                              disable_column_one python:request.set('disable_plone.leftcolumn',1);
     ...                              disable_column_two python:request.set('disable_plone.rightcolumn',1);" />
-    ...     <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-    ...         <script type="text/javascript"
-    ...             tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-    ...         </script>
-    ...     </div>
     ... </head>
     ... <body>
     ... <tal:comment replace="nothing">


Repository: plone.app.portlets
Branch: refs/heads/master
Date: 2015-05-14T00:31:30-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/49c125155bb23601e6a464de487402c018cb1d9c

edit in modal also

Files changed:
M plone/app/portlets/browser/manage-portlets.js

diff --git a/plone/app/portlets/browser/manage-portlets.js b/plone/app/portlets/browser/manage-portlets.js
index c5185aa..04bb668 100644
--- a/plone/app/portlets/browser/manage-portlets.js
+++ b/plone/app/portlets/browser/manage-portlets.js
@@ -16,8 +16,6 @@ define([
     dirty: false,
     init: function(){
       var that = this;
-      that.setupAddDropdown();
-      that.setupSavePortletsSettings();
       var $modal = that.$el.parents('.plone-modal');
       if($modal.size() === 1){
         this.isModal = true;
@@ -29,11 +27,18 @@ define([
           }
         });
       }
+      that.bind();
+    },
+    bind: function(){
+      var that = this;
+      that.setupAddDropdown();
+      that.setupSavePortletsSettings();
+      that.setupPortletEdit();
     },
     rebind: function($el){
       this.$el.replaceWith($el);
       this.$el = $el;
-      this.init();
+      this.bind();
       this.statusMessage();
       this.dirty = true;
     },
@@ -61,6 +66,49 @@ define([
         $message.fadeOut();
       }, 3000);
     },
+    showEditPortlet: function(url){
+      var that = this;
+      var $a = $('<a/>');
+      $('body').append($a);
+      var pattern = new Modal($a, {
+        ajaxUrl: url,
+        actionOptions: {
+          displayInModal: false,
+          reloadWindowOnClose: false,
+          isForm: true,
+          onSuccess: function(modal, html){
+            pattern.hide();
+            var $body = $(utils.parseBodyTag(html));
+            that.rebind($('#' + that.$el.attr('id'), $body));
+            that.statusMessage(_t('Portlet added'));
+          }
+        }
+      });
+      pattern.on('after-render', function(){
+        var $el = $('#' + that.$el.attr('id'), pattern.$raw);
+        /* this is a check that the add form doesn't just automatically
+           create the portlet without an actual form.
+           If element is found here, we can short circuit and
+           continue on. */
+        if($el.size() === 1){
+          /* hacky, trying to prevent modal parts from flickering here */
+          $el = $el.clone();
+          pattern.on('shown', function(){
+            pattern.hide();
+          });
+          that.rebind($el);
+          that.statusMessage(_t('Portlet added'));
+        }
+      });
+      pattern.show();
+    },
+    setupPortletEdit: function(){
+      var that = this;
+      $('.managedPortlet .portletHeader > a', that.$el).click(function(e){
+        e.preventDefault();
+        that.showEditPortlet($(this).attr('href'));
+      });
+    },
     setupAddDropdown: function(){
       var that = this;
       $('.add-portlet', that.$el).change(function(e){
@@ -71,40 +119,7 @@ define([
         var url = contextUrl + $select.val() +
           '?_authenticator=' + $('[name="_authenticator"]').val() +
           '&referer=' + $('[name="referer"]', $form).val();
-        /* create model */
-        var $a = $('<a/>');
-        $('body').append($a);
-        var pattern = new Modal($a, {
-          ajaxUrl: url,
-          actionOptions: {
-            displayInModal: false,
-            reloadWindowOnClose: false,
-            isForm: true,
-            onSuccess: function(modal, html){
-              pattern.hide();
-              var $body = $(utils.parseBodyTag(html));
-              that.rebind($('#' + that.$el.attr('id'), $body));
-              that.statusMessage(_t('Portlet added'));
-            }
-          }
-        });
-        pattern.on('after-render', function(){
-          var $el = $('#' + that.$el.attr('id'), pattern.$raw);
-          /* this is a check that the add form doesn't just automatically
-             create the portlet without an actual form.
-             If element is found here, we can short circuit and
-             continue on. */
-          if($el.size() === 1){
-            /* hacky, trying to prevent modal parts from flickering here */
-            $el = $el.clone();
-            pattern.on('shown', function(){
-              pattern.hide();
-            });
-            that.rebind($el);
-            that.statusMessage(_t('Portlet added'));
-          }
-        });
-        pattern.show();
+        that.showEditPortlet(url);
       });
     },
     setupSavePortletsSettings: function(){


Repository: plone.app.portlets
Branch: refs/heads/master
Date: 2015-05-14T08:43:56-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/2f89ba21834568481acf8fd83fe6cada1a3e633c

Merge pull request #50 from plone/portlet-manager

manage portlets js fixes

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/editmanager.py
M plone/app/portlets/browser/manage-portlets.js
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/templates/edit-manager-contextual.pt
M plone/app/portlets/browser/templates/edit-manager-macros.pt
M plone/app/portlets/browser/templates/edit-manager.pt
M plone/app/portlets/browser/templates/manage-content-type.pt
M plone/app/portlets/browser/templates/manage-contextual.pt
M plone/app/portlets/browser/templates/manage-dashboard.pt
M plone/app/portlets/browser/templates/manage-group-dashboard.pt
M plone/app/portlets/browser/templates/manage-group.pt
M plone/app/portlets/browser/traversal.py
M plone/app/portlets/manager.py
M plone/app/portlets/tests/testViewName.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index f2f2c48..cbc535f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,11 @@ Changelog
 3.0.5 (2015-05-12)
 ------------------
 
+- Convert manage-portlets.js into a pattern and make improvements on
+  using the manage portlets infrastructure
+  [vangheem]
+
+
 - Supress a ZopeTestCase warning.
   This fixes https://github.com/plone/Products.CMFPlone/issues/501
   [gforcada]
diff --git a/plone/app/portlets/browser/editmanager.py b/plone/app/portlets/browser/editmanager.py
index f4bb370..811143c 100644
--- a/plone/app/portlets/browser/editmanager.py
+++ b/plone/app/portlets/browser/editmanager.py
@@ -10,11 +10,11 @@
 from plone.portlets.interfaces import ILocalPortletAssignmentManager
 from plone.portlets.interfaces import IPortletContext
 from plone.portlets.utils import hashPortletInfo
-from plone.portlets.utils import unhashPortletInfo
 
-from zope.container  import contained
+from zope.container import contained
 from zope.interface import implements, Interface
-from zope.component import adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility
+from zope.component import (
+    adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility)
 from zope.contentprovider.interfaces import UpdateNotCalled
 from zope.publisher.interfaces.browser import IDefaultBrowserLayer
 from five.customerize.zpt import TTWViewTemplateRenderer
@@ -50,7 +50,7 @@ class EditPortletManagerRenderer(Explicit):
 
     def __init__(self, context, request, view, manager):
         self.__parent__ = view
-        self.manager = manager # part of interface
+        self.manager = manager  # part of interface
         self.context = context
         self.request = request
         self.__updated = False
@@ -95,13 +95,11 @@ def normalized_manager_name(self):
     def baseUrl(self):
         return self.__parent__.getAssignmentMappingUrl(self.manager)
 
-
     def portlets(self):
         assignments = self._lazyLoadAssignments(self.manager)
         return self.portlets_for_assignments(
             assignments, self.manager, self.baseUrl())
 
-
     def portlets_for_assignments(self, assignments, manager, base_url):
         category = self.__parent__.category
         key = self.__parent__.key
@@ -131,16 +129,16 @@ def portlets_for_assignments(self, assignments, manager, base_url):
                 visible = False
 
             data.append({
-                'title'      : assignments[idx].title,
-                'editview'   : editviewName,
-                'hash'       : portlet_hash,
-                'name'       : name,
-                'up_url'     : '%s/@@move-portlet-up' % (base_url),
-                'down_url'   : '%s/@@move-portlet-down' % (base_url),
-                'delete_url' : '%s/@@delete-portlet' % (base_url),
-                'hide_url'   : '%s/@@toggle-visibility' % (base_url),
-                'show_url'   : '%s/@@toggle-visibility' % (base_url),
-                'visible'    : visible,
+                'title': assignments[idx].title,
+                'editview': editviewName,
+                'hash': portlet_hash,
+                'name': name,
+                'up_url': '%s/@@move-portlet-up' % (base_url),
+                'down_url': '%s/@@move-portlet-down' % (base_url),
+                'delete_url': '%s/@@delete-portlet' % (base_url),
+                'hide_url': '%s/@@toggle-visibility' % (base_url),
+                'show_url': '%s/@@toggle-visibility' % (base_url),
+                'visible': visible,
                 })
         if len(data) > 0:
             data[0]['up_url'] = data[-1]['down_url'] = None
@@ -166,10 +164,10 @@ def check_permission(p):
                 return False
             return True
 
-        portlets =  [{
-            'title' : p.title,
-            'description' : p.description,
-            'addview' : '%s/+/%s' % (addviewbase, p.addview)
+        portlets = [{
+            'title': p.title,
+            'description': p.description,
+            'addview': '%s/+/%s' % (addviewbase, p.addview)
             } for p in self.manager.getAddablePortletTypes() if check_permission(p)]
 
         portlets.sort(key=sort_key)
@@ -209,7 +207,8 @@ def context_url(self):
 
 class ContextualEditPortletManagerRenderer(EditPortletManagerRenderer):
     """Render a portlet manager in edit mode for contextual portlets"""
-    adapts(Interface, IDefaultBrowserLayer, IManageContextualPortletsView, IPortletManager)
+    adapts(Interface, IDefaultBrowserLayer,
+           IManageContextualPortletsView, IPortletManager)
 
     template = ViewPageTemplateFile('templates/edit-manager-contextual.pt')
 
@@ -224,13 +223,15 @@ def manager_name(self):
         return self.manager.__name__
 
     def context_blacklist_status(self):
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         return assignable.getBlacklistStatus(CONTEXT_CATEGORY)
 
     def group_blacklist_status(self, check_parent=False):
         # If check_parent is True and the blacklist status is None, it returns the
         # parent status recursively.
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         status = assignable.getBlacklistStatus(GROUP_CATEGORY)
 
         if check_parent and status is None:
@@ -240,7 +241,8 @@ def group_blacklist_status(self, check_parent=False):
         return status
 
     def content_type_blacklist_status(self, check_parent=False):
-        assignable = getMultiAdapter((self.context, self.manager,), ILocalPortletAssignmentManager)
+        assignable = getMultiAdapter((self.context, self.manager,),
+                                     ILocalPortletAssignmentManager)
         status = assignable.getBlacklistStatus(CONTENT_TYPE_CATEGORY)
 
         if check_parent and status is None:
@@ -260,7 +262,8 @@ def parent_blacklist_status(self, category):
         current = pcontext.getParent()
         currentpc = pcontext
         while status is None and current is not None:
-            assignable = getMultiAdapter((current, self.manager,), ILocalPortletAssignmentManager)
+            assignable = getMultiAdapter((current, self.manager,),
+                                         ILocalPortletAssignmentManager)
             status = assignable.getBlacklistStatus(category)
 
             current = currentpc.getParent()
@@ -295,14 +298,17 @@ def is_visible(a):
                 context = context.__parent__
 
             # we get the contextual portlets view to access its utility methods
-            view = queryMultiAdapter((context, self.request), name=self.__parent__.__name__)
+            view = queryMultiAdapter((context, self.request),
+                                     name=self.__parent__.__name__)
             if view is not None:
                 assignments = view.getAssignmentsForManager(self.manager)
                 assignments_to_show = [a for a in assignments if is_visible(a)]
                 base_url = view.getAssignmentMappingUrl(self.manager)
-                data.extend(self.portlets_for_assignments(assignments_to_show, self.manager, base_url))
+                data.extend(self.portlets_for_assignments(assignments_to_show,
+                                                          self.manager, base_url))
 
-            assignable = queryMultiAdapter((context, self.manager), ILocalPortletAssignmentManager)
+            assignable = queryMultiAdapter((context, self.manager),
+                                           ILocalPortletAssignmentManager)
             if assignable is not None and assignable.getBlacklistStatus(CONTEXT_CATEGORY):
                 # Current context has blocked inherited portlets, stop.
                 break
@@ -320,7 +326,7 @@ def global_portlets(self, category, prefix):
         # get the portlet context
         pcontext = IPortletContext(self.context)
 
-        portal_state = getMultiAdapter((context, self.request), name=u'plone_portal_state')
+        portal_state = getMultiAdapter((context, self.request), name=u'plone_portal_state')  # noqa
         base_url = portal_state.portal_url()
 
         portlets = []
@@ -329,20 +335,25 @@ def global_portlets(self, category, prefix):
                 mapping = self.manager.get(category, None)
                 assignments = []
                 if mapping is not None:
-                    is_visible = lambda a: IPortletAssignmentSettings(a).get('visible', True)
-                    assignments.extend([a for a in mapping.get(key, {}).values() if is_visible(a)])
+                    is_visible = lambda a: IPortletAssignmentSettings(a).get('visible', True)  # noqa
+                    assignments.extend([a for a in mapping.get(key, {}).values()
+                                        if is_visible(a)])
                 if assignments:
-                    edit_url = '%s/++%s++%s+%s' % (base_url, prefix, self.manager.__name__, key)
-                    portlets.extend(self.portlets_for_assignments(assignments, self.manager, edit_url))
+                    edit_url = '%s/++%s++%s+%s' % (
+                        base_url, prefix, self.manager.__name__, key)
+                    portlets.extend(self.portlets_for_assignments(
+                        assignments, self.manager, edit_url))
 
         return portlets
 
     def group_portlets(self):
-        """Return the list of global portlets from the group category for the current context."""
+        """Return the list of global portlets from the group category for the
+           current context."""
         return self.global_portlets(GROUP_CATEGORY, 'groupportlets')
 
     def content_type_portlets(self):
-        """Return the list of global portlets from the content type category for the current context."""
+        """Return the list of global portlets from the content type category for
+           the current context."""
         return self.global_portlets(CONTENT_TYPE_CATEGORY, 'contenttypeportlets')
 
 
diff --git a/plone/app/portlets/browser/manage-portlets.js b/plone/app/portlets/browser/manage-portlets.js
index 268ae54..04bb668 100644
--- a/plone/app/portlets/browser/manage-portlets.js
+++ b/plone/app/portlets/browser/manage-portlets.js
@@ -1,28 +1,138 @@
-(function($){
-$(document).ready(function(){
-    $('#portal-columns').delegate('.portlet-action', 'submit', function(e){
-        $('#kss-spinner').show();
-        var form = $(this);
-        var formdata = form.serializeArray();
-        var data = {};
-        for(var i=0; i<formdata.length; i++){
-            data[formdata[i].name] = formdata[i].value;
-        }
-        data.ajax = true;
-        $.ajax({
-            url: form.attr('action'),
-            data: data,
-            type: 'POST',
-            success: function(data){
-                var container = form.parents('.portlets-manager');
-                container.replaceWith($(data));
-                $('#kss-spinner').hide();
-            },
-            error: function(){
-                $('#kss-spinner').hide();
-            }
+define([
+  'jquery',
+  'mockup-patterns-base',
+  'pat-registry',
+  'mockup-utils',
+  'mockup-patterns-modal',
+  'translate',
+  'jquery.form'
+], function ($, Base, Registry, utils, Modal, _t) {
+  'use strict';
+  var ManagePortlets = Base.extend({
+    name: 'manage-portlets',
+    trigger: '.pat-manage-portlets',
+    messageTimeout: 0,
+    isModal: false,
+    dirty: false,
+    init: function(){
+      var that = this;
+      var $modal = that.$el.parents('.plone-modal');
+      if($modal.size() === 1){
+        this.isModal = true;
+        /* want to do something on exit from modal now */
+        var modal = $modal.data('pattern-plone-modal');
+        modal.on('hide', function(){
+          if(that.dirty){
+            window.location.reload();
+          }
         });
-        return false;
-    });
-});
-})(jQuery);
\ No newline at end of file
+      }
+      that.bind();
+    },
+    bind: function(){
+      var that = this;
+      that.setupAddDropdown();
+      that.setupSavePortletsSettings();
+      that.setupPortletEdit();
+    },
+    rebind: function($el){
+      this.$el.replaceWith($el);
+      this.$el = $el;
+      this.bind();
+      this.statusMessage();
+      this.dirty = true;
+    },
+    statusMessage: function(msg){
+      if(msg === undefined){
+        msg = _t("Portlet changes saved");
+      }
+      var that = this;
+
+      var $message = $('#portlet-message');
+      if($message.size() === 0){
+        $message = $('<div class="portalMessage info" id="portlet-message" style="display:none"></div>');
+        if(that.isModal){
+          $('.plone-modal-body:visible').prepend($message);
+        }else{
+          $('#content-core').prepend($message);
+        }
+      }
+      $message.html('<strong>' + _t("Info") + '</strong>' + msg);
+      clearTimeout(that.messageTimeout);
+      if(!$message.is(':visible')){
+        $message.fadeIn();
+      }
+      that.messageTimeout = setTimeout(function(){
+        $message.fadeOut();
+      }, 3000);
+    },
+    showEditPortlet: function(url){
+      var that = this;
+      var $a = $('<a/>');
+      $('body').append($a);
+      var pattern = new Modal($a, {
+        ajaxUrl: url,
+        actionOptions: {
+          displayInModal: false,
+          reloadWindowOnClose: false,
+          isForm: true,
+          onSuccess: function(modal, html){
+            pattern.hide();
+            var $body = $(utils.parseBodyTag(html));
+            that.rebind($('#' + that.$el.attr('id'), $body));
+            that.statusMessage(_t('Portlet added'));
+          }
+        }
+      });
+      pattern.on('after-render', function(){
+        var $el = $('#' + that.$el.attr('id'), pattern.$raw);
+        /* this is a check that the add form doesn't just automatically
+           create the portlet without an actual form.
+           If element is found here, we can short circuit and
+           continue on. */
+        if($el.size() === 1){
+          /* hacky, trying to prevent modal parts from flickering here */
+          $el = $el.clone();
+          pattern.on('shown', function(){
+            pattern.hide();
+          });
+          that.rebind($el);
+          that.statusMessage(_t('Portlet added'));
+        }
+      });
+      pattern.show();
+    },
+    setupPortletEdit: function(){
+      var that = this;
+      $('.managedPortlet .portletHeader > a', that.$el).click(function(e){
+        e.preventDefault();
+        that.showEditPortlet($(this).attr('href'));
+      });
+    },
+    setupAddDropdown: function(){
+      var that = this;
+      $('.add-portlet', that.$el).change(function(e){
+        e.preventDefault();
+        var $select = $(this);
+        var $form = $select.parents('form');
+        var contextUrl = $select.attr('data-context-url');
+        var url = contextUrl + $select.val() +
+          '?_authenticator=' + $('[name="_authenticator"]').val() +
+          '&referer=' + $('[name="referer"]', $form).val();
+        that.showEditPortlet(url);
+      });
+    },
+    setupSavePortletsSettings: function(){
+      var that = this;
+      $('.portlets-settings,form.portlet-action', that.$el).ajaxForm(function(html){
+        var $body = $(utils.parseBodyTag(html));
+        that.rebind($('#' + that.$el.attr('id'), $body));
+      });
+      $('.portlets-settings select', that.$el).change(function(){
+        $('.portlets-settings', that.$el).submit();
+      });
+    }
+  });
+
+  return ManagePortlets;
+});
\ No newline at end of file
diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index a5f8458..0e87982 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -73,14 +73,17 @@ def has_legacy_portlets(self):
         return (left_slots or right_slots)
 
     # view @@set-portlet-blacklist-status
-    def set_blacklist_status(self, manager, group_status, content_type_status, context_status):
+    def set_blacklist_status(self, manager, group_status, content_type_status,
+                             context_status):
         authenticator = getMultiAdapter((self.context, self.request),
                                         name=u"authenticator")
         if not authenticator.verify():
             raise Unauthorized
         portletManager = getUtility(IPortletManager, name=manager)
-        assignable = getMultiAdapter((self.context, portletManager), ILocalPortletAssignmentManager)
-        assignments = getMultiAdapter((self.context, portletManager), IPortletAssignmentMapping)
+        assignable = getMultiAdapter((self.context, portletManager),
+                                     ILocalPortletAssignmentManager)
+        assignments = getMultiAdapter((self.context, portletManager),
+                                      IPortletAssignmentMapping)
 
         IPortletPermissionChecker(assignments.__of__(aq_inner(self.context)))()
 
@@ -93,7 +96,8 @@ def int2status(status):
                 return False
 
         assignable.setBlacklistStatus(GROUP_CATEGORY, int2status(group_status))
-        assignable.setBlacklistStatus(CONTENT_TYPE_CATEGORY, int2status(content_type_status))
+        assignable.setBlacklistStatus(CONTENT_TYPE_CATEGORY,
+                                      int2status(content_type_status))
         assignable.setBlacklistStatus(CONTEXT_CATEGORY, int2status(context_status))
 
         baseUrl = str(getMultiAdapter((self.context, self.request), name='absolute_url'))
@@ -139,21 +143,21 @@ def getAssignmentsForManager(self, manager):
         category = column[USER_CATEGORY]
         mapping = category.get(userId, None)
         if mapping is None:
-            mapping = category[userId] = UserPortletAssignmentMapping(manager=manager.__name__,
-                                                                      category=USER_CATEGORY,
-                                                                      name=userId)
+            mapping = category[userId] = UserPortletAssignmentMapping(
+                manager=manager.__name__, category=USER_CATEGORY, name=userId)
         return mapping.values()
 
     def _getUserId(self):
         membership = getToolByName(aq_inner(self.context), 'portal_membership', None)
         if membership.isAnonymousUser():
-            raise Unauthorized, "Cannot get portlet assignments for anonymous through this view"
+            raise Unauthorized("Cannot get portlet assignments for anonymous "
+                               "through this view")
 
         member = membership.getAuthenticatedMember()
         memberId = member.getId()
 
         if memberId is None:
-            raise KeyError, "Cannot find user id of current user"
+            raise KeyError("Cannot find user id of current user")
 
         return memberId
 
@@ -270,9 +274,8 @@ def getAssignmentsForManager(self, manager):
         category = column[CONTENT_TYPE_CATEGORY]
         mapping = category.get(pt, None)
         if mapping is None:
-            mapping = category[pt] = PortletAssignmentMapping(manager=manager.__name__,
-                                                              category=CONTENT_TYPE_CATEGORY,
-                                                              name=pt)
+            mapping = category[pt] = PortletAssignmentMapping(
+                manager=manager.__name__, category=CONTENT_TYPE_CATEGORY, name=pt)
         return mapping.values()
 
     # View attributes
@@ -281,8 +284,8 @@ def portal_type(self):
         return self.fti().Title()
 
     def portal_type_icon(self):
-        plone_layout = getMultiAdapter((self.context, self.request),
-            name=u"plone_layout")
+        plone_layout = getMultiAdapter(
+            (self.context, self.request), name=u"plone_layout")
         return plone_layout.getIcon(self.fti())
 
     @memoize
@@ -341,7 +344,8 @@ def getAssignmentsForManager(self, manager):
     def ultimate_parent(self):
         # Walk the __parent__ chain to find the principal view
         parent = self.__parent__
-        while hasattr(parent, '__parent__') and IBrowserView.providedBy(parent.__parent__):
+        while (hasattr(parent, '__parent__') and
+                IBrowserView.providedBy(parent.__parent__)):
             parent = parent.__parent__
         return parent
 
diff --git a/plone/app/portlets/browser/templates/edit-manager-contextual.pt b/plone/app/portlets/browser/templates/edit-manager-contextual.pt
index cc825d6..02f0345 100644
--- a/plone/app/portlets/browser/templates/edit-manager-contextual.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-contextual.pt
@@ -3,7 +3,7 @@
       xmlns:metal="http://xml.zope.org/namespaces/metal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       tal:omit-tag="">
-<div class="portlets-manager"
+<div class="portlets-manager pat-manage-portlets"
      tal:attributes="id string:portletmanager-${view/normalized_manager_name};"
      i18n:domain="plone">
 
@@ -17,11 +17,11 @@
         Block/unblock portlets
     </h4>
 
-    <form method="post" tal:attributes="action view/blacklist_status_action">
+    <form method="post" tal:attributes="action view/blacklist_status_action" class="portlets-settings">
       <span tal:replace="structure context/@@authenticator/authenticator" />
       <input type="hidden" name="manager" tal:attributes="value view/manager_name" />
 
-      <div tal:define="status view/context_blacklist_status">
+      <div tal:define="status view/context_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_parent_folders">
@@ -47,7 +47,7 @@
         <tal:block define="portlets view/inherited_portlets;"
                    condition="portlets">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'" tal:repeat="portlet portlets">
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'" tal:repeat="portlet portlets">
             <div class="portletHeader">
 
               <a tal:omit-tag="not:portlet/editview"
@@ -68,7 +68,7 @@
 
       </div>
 
-      <div tal:define="status view/group_blacklist_status">
+      <div tal:define="status view/group_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_group_portlets">Group portlets:</span>
@@ -98,7 +98,7 @@
         <tal:block define="portlets view/group_portlets;
                            status python:view.group_blacklist_status(check_parent=True)">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'" tal:repeat="portlet portlets">
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'" tal:repeat="portlet portlets">
             <div class="portletHeader">
 
               <a tal:omit-tag="not:portlet/editview"
@@ -121,7 +121,7 @@
       </div>
 
 
-      <div tal:define="status view/content_type_blacklist_status">
+      <div tal:define="status view/content_type_blacklist_status" class="portlet-group">
 
         <span tal:omit-tag=""
               i18n:translate="label_portlets_content_type_portlets">
@@ -152,7 +152,7 @@
         <tal:block define="portlets view/content_type_portlets;
                    status python:view.content_type_blacklist_status(check_parent=True)">
 
-          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet'"
+          <div tal:attributes="class python:status and 'managedPortlet inheritedPortlet blockedPortlet' or 'managedPortlet inheritedPortlet'"
             tal:repeat="portlet portlets">
             <div class="portletHeader">
               <a tal:omit-tag="not:portlet/editview"
@@ -173,13 +173,14 @@
 
       </div>
 
-
+      <noscript>
       <div class="formControls">
           <input class="context"
                  type="submit"
                  value="Save settings"
                  i18n:attributes="value label_save_settings"/>
       </div>
+      </noscript>
 
     </form>
   </div>
diff --git a/plone/app/portlets/browser/templates/edit-manager-macros.pt b/plone/app/portlets/browser/templates/edit-manager-macros.pt
index ea10450..22a50a8 100644
--- a/plone/app/portlets/browser/templates/edit-manager-macros.pt
+++ b/plone/app/portlets/browser/templates/edit-manager-macros.pt
@@ -11,7 +11,8 @@
             Add portlet
         </label>
 
-        <select name=":action" onchange="this.form.submit()">
+        <select name=":action" class="add-portlet"
+                tal:attributes="data-context-url python: view.context_url()">
             <option tal:attributes="value python:request['ACTUAL_URL'].replace(view.context_url(), '')"
                     i18n:translate="label_add_portlet_ellipsis">
                 Add portlet&hellip;
@@ -47,7 +48,11 @@
                 tal:attributes="class string:managedPortlet portlet ${hiddenPortletClass};
                                 data-portlethash portlet/hash;
                                 data-viewname view/view_name;">
+
                 <div class="portletHeader" tal:define="authenticator context/@@authenticator/authenticator">
+                    <a tal:omit-tag="not:portlet/editview"
+                       tal:attributes="href string:${portlet/editview}?referer=${view/url_quote_referer}"
+                       tal:content="portlet/title" />
                     <span class="managedPortletActions">
                       <form class="portlet-action up" method="POST" tal:attributes="action portlet/up_url"
                           tal:condition="not:repeat/portlet/start">
@@ -103,9 +108,6 @@
                           tal:attributes="name string:${portlet/name}-remove">&times;</button>
                       </form>
                     </span>
-                    <a tal:omit-tag="not:portlet/editview"
-                       tal:attributes="href string:${portlet/editview}?referer=${view/url_quote_referer}"
-                       tal:content="portlet/title" />
                 </div>
             </div>
         </tal:block>
diff --git a/plone/app/portlets/browser/templates/edit-manager.pt b/plone/app/portlets/browser/templates/edit-manager.pt
index eaa03ab..55421e7 100644
--- a/plone/app/portlets/browser/templates/edit-manager.pt
+++ b/plone/app/portlets/browser/templates/edit-manager.pt
@@ -3,7 +3,7 @@
       xmlns:tal="http://xml.zope.org/namespaces/tal"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       tal:omit-tag="">
-<div class="portlets-manager"
+<div class="portlets-manager pat-manage-portlets"
      tal:attributes="id string:portletmanager-${view/normalized_manager_name};">
 
   <div metal:use-macro="context/@@manage-portlets-macros/macros/portlet-add-form" />
diff --git a/plone/app/portlets/browser/templates/manage-content-type.pt b/plone/app/portlets/browser/templates/manage-content-type.pt
index 7973618..133f86a 100644
--- a/plone/app/portlets/browser/templates/manage-content-type.pt
+++ b/plone/app/portlets/browser/templates/manage-content-type.pt
@@ -5,12 +5,6 @@
       metal:use-macro="context/main_template/macros/master"
       i18n:domain="plone">
 
-<metal:javascript fill-slot="javascript_head_slot" tal:omit-tag="">
-    <script type="text/javascript"
-        tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-    </script>
-</metal:javascript>
-
 <body>
 <metal:main fill-slot="main">
 
diff --git a/plone/app/portlets/browser/templates/manage-contextual.pt b/plone/app/portlets/browser/templates/manage-contextual.pt
index d01927c..232ceb0 100644
--- a/plone/app/portlets/browser/templates/manage-contextual.pt
+++ b/plone/app/portlets/browser/templates/manage-contextual.pt
@@ -4,13 +4,6 @@
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       metal:use-macro="context/main_template/macros/master"
       i18n:domain="plone">
-<head>
-    <metal:javascript fill-slot="javascript_head_slot" tal:omit-tag="">
-        <script type="text/javascript"
-            tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-        </script>
-    </metal:javascript>
-</head>
 
 <body>
 <metal:main fill-slot="main" tal:define="plone_view context/@@plone">
diff --git a/plone/app/portlets/browser/templates/manage-dashboard.pt b/plone/app/portlets/browser/templates/manage-dashboard.pt
index 886a858..2145916 100644
--- a/plone/app/portlets/browser/templates/manage-dashboard.pt
+++ b/plone/app/portlets/browser/templates/manage-dashboard.pt
@@ -11,11 +11,6 @@
                  tal:define="dummy python:request.set('disable_border',1);
                              disable_column_one python:request.set('disable_plone.leftcolumn',1);
                              disable_column_two python:request.set('disable_plone.rightcolumn',1);" />
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-          tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/browser/templates/manage-group-dashboard.pt b/plone/app/portlets/browser/templates/manage-group-dashboard.pt
index 597de19..b4c492d 100644
--- a/plone/app/portlets/browser/templates/manage-group-dashboard.pt
+++ b/plone/app/portlets/browser/templates/manage-group-dashboard.pt
@@ -10,11 +10,6 @@
     <metal:block fill-slot="top_slot"
              tal:define="dummy python:request.set('disable_border',1)" />
 
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-        tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/browser/templates/manage-group.pt b/plone/app/portlets/browser/templates/manage-group.pt
index 544a2a3..74fe591 100644
--- a/plone/app/portlets/browser/templates/manage-group.pt
+++ b/plone/app/portlets/browser/templates/manage-group.pt
@@ -9,12 +9,6 @@
 <head>
     <metal:block fill-slot="top_slot"
              tal:define="dummy python:request.set('disable_border',1)" />
-
-    <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-      <script type="text/javascript"
-          tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-      </script>
-    </div>
 </head>
 
 <body>
diff --git a/plone/app/portlets/browser/traversal.py b/plone/app/portlets/browser/traversal.py
index 55ada6f..6e4c14e 100644
--- a/plone/app/portlets/browser/traversal.py
+++ b/plone/app/portlets/browser/traversal.py
@@ -50,9 +50,8 @@ def traverse(self, name, ignore):
         category = column[USER_CATEGORY]
         manager = category.get(user, None)
         if manager is None:
-            manager = category[user] = UserPortletAssignmentMapping(manager=col,
-                                                                    category=USER_CATEGORY,
-                                                                    name=user)
+            manager = category[user] = UserPortletAssignmentMapping(
+                manager=col, category=USER_CATEGORY, name=user)
 
         # XXX: For graceful migration
         if not getattr(manager, '__manager__', None):
@@ -133,9 +132,8 @@ def traverse(self, name, ignore):
         category = column[CONTENT_TYPE_CATEGORY]
         manager = category.get(pt, None)
         if manager is None:
-            manager = category[pt] = PortletAssignmentMapping(manager=col,
-                                                              category=CONTENT_TYPE_CATEGORY,
-                                                              name=pt)
+            manager = category[pt] = PortletAssignmentMapping(
+                manager=col, category=CONTENT_TYPE_CATEGORY, name=pt)
 
         # XXX: For graceful migration
         if not getattr(manager, '__manager__', None):
diff --git a/plone/app/portlets/manager.py b/plone/app/portlets/manager.py
index 98ecc30..98b529e 100644
--- a/plone/app/portlets/manager.py
+++ b/plone/app/portlets/manager.py
@@ -7,15 +7,13 @@
 from zope.publisher.interfaces.browser import IDefaultBrowserLayer
 
 from Acquisition import Explicit, aq_inner, aq_acquire
-from Products.CMFCore.utils import getToolByName
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from ZODB.POSException import ConflictError
 
-from plone.portlets.interfaces import IPortletRenderer, ILocalPortletAssignable
+from plone.portlets.interfaces import IPortletRenderer
 from plone.portlets.manager import PortletManagerRenderer as BasePortletManagerRenderer
 from plone.app.portlets.interfaces import IColumn
 from plone.app.portlets.interfaces import IDashboard
-#from plone.app.layout.navigation.defaultpage import isDefaultPage
 
 logger = logging.getLogger('portlets')
 
@@ -29,7 +27,7 @@ def _dataToPortlet(self, data):
         data object.
         """
         portlet = getMultiAdapter((self.context, self.request, self.__parent__,
-                                        self.manager, data, ), IPortletRenderer)
+                                  self.manager, data, ), IPortletRenderer)
         return portlet.__of__(self.context)
 
 
@@ -47,7 +45,8 @@ def base_url(self):
         """If context is a default-page, return URL of folder, else
         return URL of context.
         """
-        return str(getMultiAdapter((self._context(), self.request, ), name=u'absolute_url'))
+        return str(getMultiAdapter((self._context(), self.request, ),
+                                   name=u'absolute_url'))
 
     def safe_render(self, portlet_renderer):
         try:
diff --git a/plone/app/portlets/tests/testViewName.rst b/plone/app/portlets/tests/testViewName.rst
index efd5fc6..0d0eb69 100644
--- a/plone/app/portlets/tests/testViewName.rst
+++ b/plone/app/portlets/tests/testViewName.rst
@@ -38,11 +38,6 @@ Now customize the manage dashboard view and check the name is in place too::
     ...                  tal:define="dummy python:request.set('disable_border',1);
     ...                              disable_column_one python:request.set('disable_plone.leftcolumn',1);
     ...                              disable_column_two python:request.set('disable_plone.rightcolumn',1);" />
-    ...     <div metal:fill-slot="javascript_head_slot" tal:omit-tag="">
-    ...         <script type="text/javascript"
-    ...             tal:attributes="src string:${context/absolute_url}/++resource++manage-portlets.js">
-    ...         </script>
-    ...     </div>
     ... </head>
     ... <body>
     ... <tal:comment replace="nothing">


