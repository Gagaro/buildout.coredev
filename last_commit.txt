Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-01-24T12:59:43+01:00
Author: Jure Cerjak (jcerjak) <jcerjak@termitnjak.si>
Commit: https://github.com/plone/plone.app.upgrade/commit/d64f2e7f4228417ccd38117aa2143e5d0d6f568e

fix member security test (validate_email was removed in CMFPlone)

Files changed:
M plone/app/upgrade/v30/tests.py

diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index 9325d0d..174ed33 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -87,6 +87,7 @@
 from plone.app.upgrade.v30.alphas import reorderUserActions
 from plone.app.upgrade.v30.alphas import updatePASPlugins
 from plone.app.upgrade.v30.alphas import updateConfigletTitles
+from plone.app.upgrade.v30.alphas import updateMemberSecurity
 from plone.app.upgrade.v30.alphas import addCacheForResourceRegistry
 from plone.app.upgrade.v30.alphas import removeTablelessSkin
 from plone.app.upgrade.v30.alphas import addObjectProvidesIndex
@@ -660,6 +661,12 @@ def testAddEmailCharsetProperty(self):
             self.assertEqual(self.portal.getProperty('email_charset'), 'utf-8')
 
     def testUpdateMemberSecurity(self):
+        # validate_email was removed in Plone 5, so we need to add it
+        # manually here
+        self.portal.manage_addProperty('validate_email', False, 'boolean')
+
+        updateMemberSecurity(self.portal)
+
         pprop = getToolByName(self.portal, 'portal_properties')
         self.assertEqual(
                 pprop.site_properties.getProperty('allowAnonymousViewAbout'),


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-01-26T18:22:10+01:00
Author: Jure Cerjak (jcerjak) <jcerjak@termitnjak.si>
Commit: https://github.com/plone/plone.app.upgrade/commit/cb2da21ac688e8def4f8f175fa493a7eeb8829f8

another test fix ('allowAnonymousViewAbout' property was removed)

Files changed:
M plone/app/upgrade/v30/tests.py

diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index 174ed33..65fb99c 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -661,16 +661,20 @@ def testAddEmailCharsetProperty(self):
             self.assertEqual(self.portal.getProperty('email_charset'), 'utf-8')
 
     def testUpdateMemberSecurity(self):
-        # validate_email was removed in Plone 5, so we need to add it
-        # manually here
+        # These properties were removed in Plone 5, so we add them
+        # manually here and check if they are properly updated by the
+        # updateMemberSecurity upgrade step
+        pprop = getToolByName(self.portal, 'portal_properties')
         self.portal.manage_addProperty('validate_email', False, 'boolean')
+        pprop.site_properties.manage_addProperty(
+            'allowAnonymousViewAbout', True, 'boolean')
 
         updateMemberSecurity(self.portal)
 
-        pprop = getToolByName(self.portal, 'portal_properties')
         self.assertEqual(
-                pprop.site_properties.getProperty('allowAnonymousViewAbout'),
-                False)
+            pprop.site_properties.getProperty('allowAnonymousViewAbout'),
+            False
+        )
 
         pmembership = getToolByName(self.portal, 'portal_membership')
         self.assertEqual(pmembership.memberareaCreationFlag, False)


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-01-26T19:42:49+01:00
Author: Jure Cerjak (jcerjak) <jcerjak@termitnjak.si>
Commit: https://github.com/plone/plone.app.upgrade/commit/d4525b59f8b5ccabbd3c633ebf37a4921c298840

update changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 1bf846a..910e15b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.3.9 (unreleased)
 ------------------
 
+- Update tests after removal of ``allowAnonymousViewAbout`` and
+  ``validate_email`` properties in CMFPlone.
+  [jcerjak]
+
 - Add upgrade step for the security control panel.
   [jcerjak]
 


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-02-27T07:47:36+01:00
Author: Timo Stollenwerk () <contact@timostollenwerk.net>
Commit: https://github.com/plone/plone.app.upgrade/commit/a3d575cba24976e450ef5d5ef3f2e2d5079113b6

Merge branch 'master' into plip10359-security-controlpanel

Conflicts:
	CHANGES.rst

Files changed:
M CHANGES.rst
M MANIFEST.in
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/tests/test_upgrade.py
M plone/app/upgrade/utils.py
M plone/app/upgrade/v25/tests.py
M plone/app/upgrade/v30/tests.py
M plone/app/upgrade/v31/tests.py
M plone/app/upgrade/v32/tests.py
M plone/app/upgrade/v33/tests.py
M plone/app/upgrade/v40/tests.py
M plone/app/upgrade/v42/configure.zcml
M plone/app/upgrade/v42/profiles/to_rc1/metadata.xml
M plone/app/upgrade/v43/configure.zcml
M plone/app/upgrade/v50/configure.zcml
M plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
M plone/app/upgrade/v50/profiles/to_beta1/registry.xml
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 910e15b..e25607e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
   ``validate_email`` properties in CMFPlone.
   [jcerjak]
 
+- Do not run tests not suited for the current Plone version 
+  (implemented for 4.0 and below)
+  [jensens]
+
 - Add upgrade step for the security control panel.
   [jcerjak]
 
diff --git a/MANIFEST.in b/MANIFEST.in
index 233d37d..6acb23e 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,4 +1,3 @@
-include *.txt
 include *.rst
 
 recursive-include docs *
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index 840416c..5359e35 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -10,9 +10,9 @@
 from zope.site.hooks import setSite
 
 from Testing.ZopeTestCase.sandbox import Sandboxed
+from Products.PloneTestCase.PloneTestCase import PloneTestCase
 from Products.PloneTestCase.layer import PloneSiteLayer
-from Products.PloneTestCase.ptc import PloneTestCase
-from Products.PloneTestCase.ptc import setupPloneSite
+from Products.PloneTestCase.setup import setupPloneSite
 
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
@@ -20,8 +20,9 @@
 from Products.CMFCore.tests.base.testcase import WarningInterceptor
 from Products.GenericSetup.context import TarballImportContext
 
-setupPloneSite()
+from Products.Five import zcml
 
+setupPloneSite(products=["plone.app.folder"])
 
 class MigrationTest(PloneTestCase):
 
diff --git a/plone/app/upgrade/tests/test_upgrade.py b/plone/app/upgrade/tests/test_upgrade.py
index c697671..6771463 100644
--- a/plone/app/upgrade/tests/test_upgrade.py
+++ b/plone/app/upgrade/tests/test_upgrade.py
@@ -1,7 +1,8 @@
 from Products.CMFPlone.factory import _DEFAULT_PROFILE
 from Products.CMFCore.utils import getToolByName
-
+from plone.app.upgrade.utils import version_match
 from plone.app.upgrade.tests.base import MigrationTest
+import mock
 
 
 class TestUpgrade(MigrationTest):
@@ -24,6 +25,16 @@ def testProfileVersion(self):
         last = self.setup.getLastVersionForProfile(_DEFAULT_PROFILE)
         self.assertEqual(last, current)
 
+    @mock.patch('plone.app.upgrade.utils.plone_version', '5.0b1')
+    def testVersionMatch(self):
+        self.assertFalse(version_match('2.5'))
+        self.assertFalse(version_match('3.1b1'))
+        self.assertFalse(version_match('5.2.b1'))
+        self.assertTrue(version_match('5.0a3.dev0'))
+        self.assertTrue(version_match('5.0b1.dev0'))
+        self.assertTrue(version_match('5.0b3'))
+        self.assertTrue(version_match('5.0'))
+
     def testDoUpgrades(self):
         self.setRoles(['Manager'])
 
diff --git a/plone/app/upgrade/utils.py b/plone/app/upgrade/utils.py
index 5f1b5c7..66e72ff 100644
--- a/plone/app/upgrade/utils.py
+++ b/plone/app/upgrade/utils.py
@@ -11,10 +11,25 @@
 from Products.ZCatalog.ProgressHandler import ZLogHandler
 from ZODB.POSException import ConflictError
 
+import pkg_resources
+
 _marker = []
 
 logger = logging.getLogger('plone.app.upgrade')
 
+plone_version = pkg_resources.get_distribution("Products.CMFPlone").version
+
+
+def version_match(target):
+    """ Given, our versioning scheme is always major.minorANYTHING, where major
+    and minor are single-digit numbers, we can compare versions as follows.
+    pkg_resources.parse_version is not compatible with our versioning scheme
+    (like '5.0b1') and also not compatible with the semver.org proposal
+    (requires '5.0-beta1').
+    """
+    # MAJOR.MINOR
+    return (target[0], target[2]) == (plone_version[0], plone_version[2])
+
 
 def null_upgrade_step(tool):
     """ This is a null upgrade, use it when nothing happens """
diff --git a/plone/app/upgrade/v25/tests.py b/plone/app/upgrade/v25/tests.py
index 036e8b5..32628fb 100644
--- a/plone/app/upgrade/v25/tests.py
+++ b/plone/app/upgrade/v25/tests.py
@@ -4,6 +4,7 @@
 from plone.app.upgrade.tests.base import FunctionalUpgradeTestCase
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.utils import loadMigrationProfile
+from plone.app.upgrade.utils import version_match
 
 from plone.app.upgrade.v25 import fixupPloneLexicon
 from plone.app.upgrade.v25 import setLoginFormInCookieAuth
@@ -117,6 +118,8 @@ def testDCMIStorageUpdated(self):
 def test_suite():
     from unittest import TestSuite, makeSuite
     suite = TestSuite()
+    if not version_match('2.5'):
+        return suite
     suite.addTest(makeSuite(TestMigrations_v2_5_0))
     suite.addTest(makeSuite(TestMigrations_v2_5_1))
     suite.addTest(makeSuite(TestMigrations_v2_5_2))
diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index 65fb99c..7f1c7d2 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -74,6 +74,7 @@
 from plone.app.upgrade.tests.base import FunctionalUpgradeTestCase
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.utils import loadMigrationProfile
+from plone.app.upgrade.utils import version_match
 
 from plone.app.upgrade.v30.alphas import enableZope3Site
 from plone.app.upgrade.v30.alphas import migrateOldActions
@@ -1111,6 +1112,8 @@ def testFullUpgrade(self):
 def test_suite():
     from unittest import TestSuite, makeSuite
     suite = TestSuite()
+    if not version_match('3.0'):
+        return suite
     suite.addTest(makeSuite(TestMigrations_v2_5_x))
     suite.addTest(makeSuite(TestMigrations_v3_0_Actions))
     suite.addTest(makeSuite(TestMigrations_v3_0_alpha1))
diff --git a/plone/app/upgrade/v31/tests.py b/plone/app/upgrade/v31/tests.py
index 01005b3..a0a49e9 100644
--- a/plone/app/upgrade/v31/tests.py
+++ b/plone/app/upgrade/v31/tests.py
@@ -5,6 +5,7 @@
 
 from plone.app.upgrade.tests.base import FunctionalUpgradeTestCase
 from plone.app.upgrade.tests.base import MigrationTest
+from plone.app.upgrade.utils import version_match
 
 from plone.app.upgrade.v31.betas import reinstallCMFPlacefulWorkflow
 
@@ -113,6 +114,8 @@ def testFullUpgrade(self):
 def test_suite():
     from unittest import TestSuite, makeSuite
     suite = TestSuite()
+    if not version_match('3.1'):
+        return suite
     suite.addTest(makeSuite(TestMigrations_v3_1))
     suite.addTest(makeSuite(TestFunctionalMigrations))
     return suite
diff --git a/plone/app/upgrade/v32/tests.py b/plone/app/upgrade/v32/tests.py
index bc0e7a1..5cf445a 100644
--- a/plone/app/upgrade/v32/tests.py
+++ b/plone/app/upgrade/v32/tests.py
@@ -1,5 +1,6 @@
 from plone.app.upgrade.tests.base import FunctionalUpgradeTestCase
 from plone.app.upgrade.tests.base import MigrationTest
+from plone.app.upgrade.utils import version_match
 from plone.app.upgrade.v32.betas import three1_beta1
 
 class TestMigrations_v3_2(MigrationTest):
@@ -45,6 +46,8 @@ def testFullUpgrade(self):
 def test_suite():
     from unittest import TestSuite, makeSuite
     suite = TestSuite()
+    if not version_match('3.2'):
+        return suite
     suite.addTest(makeSuite(TestMigrations_v3_2))
     suite.addTest(makeSuite(TestFunctionalMigrations))
     return suite
diff --git a/plone/app/upgrade/v33/tests.py b/plone/app/upgrade/v33/tests.py
index 01a5de8..3c846cd 100644
--- a/plone/app/upgrade/v33/tests.py
+++ b/plone/app/upgrade/v33/tests.py
@@ -3,6 +3,8 @@
 from plone.app.upgrade.tests.base import FunctionalUpgradeTestCase
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v33 import three2_three3
+from plone.app.upgrade.utils import version_match
+
 
 class TestMigrations_v3_3(MigrationTest):
 
@@ -88,6 +90,8 @@ def testFolderUpgrade(self):
 def test_suite():
     from unittest import TestSuite, makeSuite
     suite = TestSuite()
+    if not version_match('3.3'):
+        return suite
     suite.addTest(makeSuite(TestMigrations_v3_3))
     suite.addTest(makeSuite(TestFunctionalMigrations))
     return suite
diff --git a/plone/app/upgrade/v40/tests.py b/plone/app/upgrade/v40/tests.py
index c350619..42b7bb0 100644
--- a/plone/app/upgrade/v40/tests.py
+++ b/plone/app/upgrade/v40/tests.py
@@ -30,6 +30,7 @@
 from plone.app.upgrade.v40.betas import updateIconMetadata
 from plone.app.upgrade.v40.betas import removeLargePloneFolder
 from plone.app.upgrade.tests.base import MigrationTest
+from plone.app.upgrade.utils import version_match
 
 from plone.portlet.static import static
 from plone.portlets.interfaces import IPortletAssignmentMapping
@@ -662,5 +663,7 @@ def testProfile(self):
 
 
 def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
+    import unittest
+    if not version_match('4.0'):
+        return unittest.TestSuite()
+    return unittest.defaultTestLoader.loadTestsFromName(__name__)
diff --git a/plone/app/upgrade/v42/configure.zcml b/plone/app/upgrade/v42/configure.zcml
index 11cdb91..8ee6574 100644
--- a/plone/app/upgrade/v42/configure.zcml
+++ b/plone/app/upgrade/v42/configure.zcml
@@ -185,4 +185,29 @@
 
     </genericsetup:upgradeSteps>
 
+    <genericsetup:upgradeSteps
+        source="4211"
+        destination="4212"
+        profile="Products.CMFPlone:plone">
+
+        <genericsetup:upgradeStep
+            title="Miscellaneous"
+            description=""
+            handler="..utils.null_upgrade_step"
+            />
+    </genericsetup:upgradeSteps>
+
+    <genericsetup:upgradeSteps
+        source="4212"
+        destination="4213"
+        profile="Products.CMFPlone:plone">
+
+        <genericsetup:upgradeStep
+            title="Miscellaneous"
+            description=""
+            handler="..utils.null_upgrade_step"
+            />
+    </genericsetup:upgradeSteps>
+
+
 </configure>
diff --git a/plone/app/upgrade/v42/profiles/to_rc1/metadata.xml b/plone/app/upgrade/v42/profiles/to_rc1/metadata.xml
index 048b99f..df3a631 100644
--- a/plone/app/upgrade/v42/profiles/to_rc1/metadata.xml
+++ b/plone/app/upgrade/v42/profiles/to_rc1/metadata.xml
@@ -3,6 +3,5 @@
   <version>1</version>
   <dependencies>
     <dependency>profile-plone.app.jquery:default</dependency>
-    <dependency>profile-plone.app.search:default</dependency>
   </dependencies>
 </metadata>
diff --git a/plone/app/upgrade/v43/configure.zcml b/plone/app/upgrade/v43/configure.zcml
index 523f731..71c0a87 100644
--- a/plone/app/upgrade/v43/configure.zcml
+++ b/plone/app/upgrade/v43/configure.zcml
@@ -8,7 +8,7 @@
     <include file="profiles.zcml" />
 
     <genericsetup:upgradeSteps
-        source="4208"
+        source="4213"
         destination="4300"
         profile="Products.CMFPlone:plone">
 
diff --git a/plone/app/upgrade/v50/configure.zcml b/plone/app/upgrade/v50/configure.zcml
index 01dd8e9..b840fc8 100644
--- a/plone/app/upgrade/v50/configure.zcml
+++ b/plone/app/upgrade/v50/configure.zcml
@@ -7,7 +7,7 @@
     <include file="profiles.zcml" />
 
     <gs:upgradeSteps
-        source="4309"
+        source="4310"
         destination="5000"
         profile="Products.CMFPlone:plone">
 
diff --git a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
index 94c1214..de3f86f 100644
--- a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
@@ -108,7 +108,7 @@
     <field type="plone.registry.field.ASCII">
       <title>URL of less.js</title>
     </field>
-    <value>++plone++static/components/less/dist/less-1.7.4.js</value>
+    <value>++plone++static/components/less/dist/less.js</value>
   </record>
   <record name="plone.resources.less-modify">
     <field type="plone.registry.field.ASCII">
@@ -120,7 +120,7 @@
 
   <records prefix="plone.resources/less"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/less/dist/less-1.7.4.js</value>
+      <value key="js">++plone++static/components/less/dist/less.js</value>
   </records>
 
   <record name="plone.resources.less-variables">
@@ -138,6 +138,10 @@
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++plone++static/components/mockup-core/js/pattern.js</value>
   </records>
+  <records prefix="plone.resources/mockup-parser"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/mockup-core/js/parser.js</value>
+  </records>
 
   <records prefix="plone.resources/jquery"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
@@ -386,224 +390,224 @@
 
   <records prefix="plone.resources/tinymce-advlist"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/advlist/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/advlist/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
 
 
   <records prefix="plone.resources/tinymce-anchor"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/anchor/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/anchor/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-autolink"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/autolink/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autolink/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-autoresize"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/autoresize/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autoresize/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-autosave"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/autosave/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autosave/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-bbcode"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/bbcode/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/bbcode/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-charmap"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/charmap/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/charmap/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-code"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/code/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/code/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-colorpicker"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/colorpicker/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/colorpicker/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-contextmenu"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/contextmenu/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/contextmenu/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-directionality"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/directionality/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/directionality/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-emoticons"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/emoticons/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/emoticons/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-fullpage"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/fullpage/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/fullpage/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-fullscreen"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/fullscreen/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/fullscreen/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-hr"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/hr/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/hr/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-image"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/image/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/image/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-importcss"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/importcss/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/importcss/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-insertdatetime"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/insertdatetime/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/insertdatetime/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-layer"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/layer/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/layer/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-legacyoutput"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/legacyoutput/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/legacyoutput/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-link"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/link/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/link/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-lists"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/lists/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/lists/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-media"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/media/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/media/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-nonbreaking"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/nonbreaking/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/nonbreaking/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-noneditable"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/noneditable/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/noneditable/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-pagebreak"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/pagebreak/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/pagebreak/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-paste"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/paste/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/paste/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-preview"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/preview/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/preview/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-print"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/print/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/print/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-save"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/save/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/save/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-searchreplace"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/searchreplace/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/searchreplace/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-spellchecker"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/spellchecker/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/spellchecker/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-tabfocus"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/tabfocus/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/tabfocus/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-table"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/table/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/table/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-template"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/template/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/template/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-textcolor"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/textcolor/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/textcolor/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-textpattern"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/textpattern/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/textpattern/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-visualblocks"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/visualblocks/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/visualblocks/plugin.js</value>
       <value key="css">
-        <element>++plone++static/components/tinymce/plugins/visualblocks/css/visualblocks.css</element>
+        <element>++plone++static/components/tinymce-builded/js/tinymce/plugins/visualblocks/css/visualblocks.css</element>
       </value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-visualchars"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/visualchars/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/visualchars/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-wordcount"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/plugins/wordcount/plugin.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/wordcount/plugin.js</value>
       <value key="deps">tinymce</value>
   </records>
   <records prefix="plone.resources/tinymce-modern-theme"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/themes/modern/theme.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/themes/modern/theme.js</value>
       <value key="deps">tinymce</value>
   </records>
 
 
   <records prefix="plone.resources/tinymce"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++plone++static/components/tinymce/tinymce.js</value>
+      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/tinymce.js</value>
       <value key="export">window.tinyMCE</value>
       <value key="init">function () { this.tinyMCE.DOM.events.domLoaded = true; return this.tinyMCE; }</value>
       <value key="css">
-        <element>++plone++static/components/tinymce/skins/lightgray/skin.min.css</element>
-        <element>++plone++static/components/tinymce/skins/lightgray/content.inline.min.css</element>
+        <element>++plone++static/components/tinymce-builded/js/tinymce/skins/lightgray/skin.min.css</element>
+        <element>++plone++static/components/tinymce-builded/js/tinymce/skins/lightgray/content.inline.min.css</element>
       </value>
   </records>
 
@@ -629,6 +633,11 @@
       <value key="js">++resource++mockupjs/i18n.js</value>
   </records>
 
+  <records prefix="plone.resources/translate"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockupjs/i18n-wrapper.js</value>
+  </records>
+
 
  <!-- Patterns -->
 
@@ -642,12 +651,20 @@
 
   <records prefix="plone.resources/mockup-patterns-select2"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">++resource++mockup/select2/patterns.js</value>
+      <value key="js">++resource++mockup/select2/pattern.js</value>
       <value key="css">
         <element>++resource++mockup/select2/pattern.select2.less</element>
       </value>
   </records>
 
+  <records prefix="plone.resources/mockup-patterns-livesearch"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/livesearch/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/livesearch/pattern.livesearch.less</element>
+      </value>
+  </records>
+
   <records prefix="plone.resources/mockup-patterns-accessibility"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/accessibility/pattern.js</value>
@@ -666,6 +683,11 @@
       <value key="js">++resource++mockup/backdrop/pattern.js</value>
   </records>
 
+  <records prefix="plone.resources/mockup-patterns-cookietrigger"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/cookietrigger/pattern.js</value>
+  </records>
+
   <records prefix="plone.resources/mockup-patterns-sortable"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/sortable/pattern.js</value>
@@ -681,6 +703,11 @@
       <value key="js">++resource++mockup/formunloadalert/pattern.js</value>
   </records>
 
+  <records prefix="plone.resources/mockup-patterns-inlinevalidation"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/inlinevalidation/pattern.js</value>
+  </records>
+
   <records prefix="plone.resources/mockup-patterns-modal"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/modal/pattern.js</value>
@@ -726,6 +753,9 @@
   <records prefix="plone.resources/mockup-patterns-select2"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/select2/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/select2/pattern.select2.less</element>
+      </value>
   </records>
 
   <records prefix="plone.resources/mockup-patterns-structure"
@@ -751,6 +781,11 @@
       <value key="js">++resource++mockup/tablesorter/pattern.js</value>
   </records>
 
+  <records prefix="plone.resources/mockup-patterns-textareamimetypeselector"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/textareamimetypeselector/pattern.js</value>
+  </records>
+
   <records prefix="plone.resources/mockup-patterns-tinymce"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">++resource++mockup/tinymce/pattern.js</value>
@@ -818,44 +853,13 @@
       <value key="js">++plone++static/components/r.js/dist/r.js</value>
   </records>
 
-  <!-- legacy js -->
-
 
-  <records prefix="plone.resources/plone_javascript_variables"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">plone_javascript_variables.js</value>
-  </records>
 
-  <records prefix="plone.resources/cookie_functions"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">cookie_functions.js</value>
-  </records>
+  <!-- legacy js -->
   <records prefix="plone.resources/jquery-highlightsearchterms"
             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
       <value key="js">jquery.highlightsearchterms.js</value>
   </records>
-  <records prefix="plone.resources/inline-validation"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">inline_validation.js</value>
-  </records>
-  <records prefix="plone.resources/kss-bbb"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">kss-bbb.js</value>
-  </records>
-  <records prefix="plone.resources/table_sorter"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">table_sorter.js</value>
-  </records>
-  <records prefix="plone.resources/unlockOnFormUnload"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">unlockOnFormUnload.js</value>
-  </records>
-
-  <!-- disabled -->
-  <records prefix="plone.resources/mark_special_links"
-            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
-      <value key="js">mark_special_links.js</value>
-  </records>
 
   <record name="plone.resources.last_legacy_import">
     <field type="plone.registry.field.Datetime">
@@ -921,7 +925,6 @@
       <value key="css">
         <element>++plone++static/plone.less</element>
       </value>
-      <value key="deps">jquery</value>
   </records>
 
   <!-- Bundles -->
@@ -940,12 +943,7 @@
   <records prefix="plone.bundles/plone-legacy"
             interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="resources" purge="false">
-      <element>plone_javascript_variables</element>
-      <element>unlockOnFormUnload</element>
-      <element>table_sorter</element>
-      <element>inline-validation</element>
       <element>jquery-highlightsearchterms</element>
-      <element>cookie_functions</element>
     </value>
     <value key="depends">plone</value>
     <value key="jscompilation">++plone++static/plone-legacy-compiled.js</value>
diff --git a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
index 12883fa..6865f48 100644
--- a/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_beta1/registry.xml
@@ -8,4 +8,170 @@
            prefix="plone" />
   <records interface="Products.CMFPlone.interfaces.ISiteSchema"
            prefix="plone" />
+
+  <records prefix="plone.resources/mockup-patterns-contentloader"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/contentloader/pattern.js</value>
+  </records>
+  <records prefix="plone.resources/mockup-patterns-resourceregistry"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="url">++resource++mockup/resourceregistry</value>
+      <value key="js">++resource++mockup/resourceregistry/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/resourceregistry/pattern.resourceregistry.less</element>
+      </value>
+  </records>
+
+
+  <!-- Plone bundle resources -->
+  <records prefix="plone.resources/plone"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++plone.js</value>
+      <value key="css">
+        <element>++plone++static/plone.less</element>
+      </value>
+  </records>
+  <records prefix="plone.resources/plone-logged-in"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++plone-logged-in.js</value>
+      <value key="css">
+        <element>++plone++static/plone-logged-in.less</element>
+      </value>
+  </records>
+  <records prefix="plone.resources/resourceregistry"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/resourceregistry.js</value>
+      <value key="css">
+        <element>++plone++static/resourceregistry.less</element>
+      </value>
+  </records>
+
+  <!-- Bundles -->
+  <records prefix="plone.bundles/plone"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+    <value key="resources">
+      <element>plone</element>
+    </value>
+    <value key="enabled">True</value>
+    <value key="jscompilation">++plone++static/plone-compiled.min.js</value>
+    <value key="csscompilation">++plone++static/plone-compiled.css</value>
+    <value key="last_compilation">2014-11-26 00:00:00</value>
+    <value key="depends">plone-logged-in</value>
+  </records>
+
+  <records prefix="plone.bundles/plone-logged-in"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+    <value key="resources">
+      <element>plone-logged-in</element>
+    </value>
+    <value key="enabled">True</value>
+    <value key="expression">python: member is not None</value>
+    <value key="jscompilation">++plone++static/plone-logged-in-compiled.min.js</value>
+    <value key="csscompilation">++plone++static/plone-logged-in-compiled.css</value>
+    <value key="last_compilation">2014-11-26 00:00:00</value>
+  </records>
+
+  <records prefix="plone.bundles/resourceregistry"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+    <value key="resources">
+      <element>resourceregistry</element>
+    </value>
+    <value key="enabled">False</value>
+    <value key="jscompilation">++plone++static/resourceregistry-compiled.min.js</value>
+    <value key="csscompilation">++plone++static/resourceregistry-compiled.css</value>
+    <value key="last_compilation">2015-02-13 00:00:00</value>
+  </records>
+
+  <!-- recurrence widget registrations -->
+  <records prefix="plone.resources/jquery.recurrenceinput"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput</value>
+      <!-- Perhaps a bit wonky here for now, depending on legacy jquery tools stuff here -->
+      <value key="deps">jquery,resource-plone-app-jquerytools-js,resource-plone-app-jquerytools-dateinput-js,jquery.tmpl</value>
+  </records>
+  <records prefix="plone.resources/jquery.tmpl"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl</value>
+      <value key="deps">jquery</value>
+  </records>
+
+  <records prefix="plone.resources/mockup-patterns-markspeciallinks"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++mockup/markspeciallinks/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/markspeciallinks/pattern.markspeciallinks.less</element>
+      </value>
+  </records>
+
+   <!-- patternslib dependencies -->
+  <records prefix="plone.resources/pat-compat"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/compat</value>
+  </records>
+  <records prefix="plone.resources/pat-registry"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/registry</value>
+  </records>
+  <records prefix="plone.resources/pat-jquery-ext"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/jquery-ext</value>
+  </records>
+  <records prefix="plone.resources/pat-logger"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/logger</value>
+  </records>
+  <records prefix="plone.resources/pat-parser"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/parser</value>
+  </records>
+  <records prefix="plone.resources/pat-utils"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/patternslib/src/core/utils</value>
+  </records>
+  <records prefix="plone.resources/logging"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++plone++static/components/logging/src/logging</value>
+  </records>
+
+
+  <!-- add theme mapper related -->
+  
+    <!-- pattern -->
+    <records prefix="plone.resources/mockup-patterns-filemanager"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="url">++resource++mockup/filemanager</value>
+      <value key="js">++resource++mockup/filemanager/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/filemanager/pattern.filemanager.less</element>
+      </value>
+    </records>
+    <records prefix="plone.resources/mockup-patterns-thememapper"
+            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="url">++resource++mockup/thememapper</value>
+      <value key="js">++resource++mockup/thememapper/pattern.js</value>
+      <value key="css">
+        <element>++resource++mockup/thememapper/pattern.thememapper.less</element>
+      </value>
+    </records>
+
+    <!-- bundle resource -->
+    <records prefix="plone.resources/thememapper"
+             interface='Products.CMFPlone.interfaces.IResourceRegistry'>
+      <value key="js">++resource++plone.app.theming/thememapper.js</value>
+      <value key="css">
+        <element>++resource++plone.app.theming/thememapper.less</element>
+      </value>
+    </records>
+
+    <!-- bundle -->
+    <records prefix="plone.bundles/thememapper"
+             interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+      <value key="resources">
+        <element>thememapper</element>
+       </value>
+       <value key="enabled">False</value>
+       <value key="jscompilation">++resource++plone.app.theming/thememapper-compiled.min.js</value>
+       <value key="csscompilation">++resource++plone.app.theming/thememapper-compiled.css</value>
+       <value key="last_compilation">2015-02-13 00:00:00</value>
+    </records>
 </registry>
diff --git a/setup.py b/setup.py
index 1dd33a5..9c38656 100644
--- a/setup.py
+++ b/setup.py
@@ -26,6 +26,7 @@
       zip_safe=False,
       extras_require=dict(
         test=[
+            'mock',
             'Products.CMFPlacefulWorkflow',
             'Products.CMFQuickInstallerTool',
             'Products.PloneTestCase',


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-02-27T17:22:00+01:00
Author: Jure Cerjak (jcerjak) <jcerjak@termitnjak.si>
Commit: https://github.com/plone/plone.app.upgrade/commit/edadcaeddd63cb370a3284dc82417ea52694586a

fix tests (don't fail if the security properties are already there)

This restores Plone 4 compatibility

Files changed:
M plone/app/upgrade/v30/tests.py

diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index 7f1c7d2..1bf4207 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -663,12 +663,18 @@ def testAddEmailCharsetProperty(self):
 
     def testUpdateMemberSecurity(self):
         # These properties were removed in Plone 5, so we add them
-        # manually here and check if they are properly updated by the
+        # manually here if needed and check if they are properly updated by the
         # updateMemberSecurity upgrade step
         pprop = getToolByName(self.portal, 'portal_properties')
-        self.portal.manage_addProperty('validate_email', False, 'boolean')
-        pprop.site_properties.manage_addProperty(
-            'allowAnonymousViewAbout', True, 'boolean')
+        try:
+            self.portal.manage_addProperty('validate_email', False, 'boolean')
+        except:  # property is already there
+            pass
+        try:
+            pprop.site_properties.manage_addProperty(
+                'allowAnonymousViewAbout', True, 'boolean')
+        except:  # property is already there
+            pass
 
         updateMemberSecurity(self.portal)
 


Repository: plone.app.upgrade
Branch: refs/heads/master
Date: 2015-02-27T17:38:40+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/e8a445959e6c2a1ee8d4bb467105c56033ed34f2

Merge pull request #24 from plone/plip10359-security-controlpanel

Plip10359 security controlpanel

Files changed:
M CHANGES.rst
M plone/app/upgrade/v30/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f75c955..e25607e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.3.9 (unreleased)
 ------------------
 
+- Update tests after removal of ``allowAnonymousViewAbout`` and
+  ``validate_email`` properties in CMFPlone.
+  [jcerjak]
+
 - Do not run tests not suited for the current Plone version 
   (implemented for 4.0 and below)
   [jensens]
diff --git a/plone/app/upgrade/v30/tests.py b/plone/app/upgrade/v30/tests.py
index e4bf5da..1bf4207 100644
--- a/plone/app/upgrade/v30/tests.py
+++ b/plone/app/upgrade/v30/tests.py
@@ -88,6 +88,7 @@
 from plone.app.upgrade.v30.alphas import reorderUserActions
 from plone.app.upgrade.v30.alphas import updatePASPlugins
 from plone.app.upgrade.v30.alphas import updateConfigletTitles
+from plone.app.upgrade.v30.alphas import updateMemberSecurity
 from plone.app.upgrade.v30.alphas import addCacheForResourceRegistry
 from plone.app.upgrade.v30.alphas import removeTablelessSkin
 from plone.app.upgrade.v30.alphas import addObjectProvidesIndex
@@ -661,10 +662,26 @@ def testAddEmailCharsetProperty(self):
             self.assertEqual(self.portal.getProperty('email_charset'), 'utf-8')
 
     def testUpdateMemberSecurity(self):
+        # These properties were removed in Plone 5, so we add them
+        # manually here if needed and check if they are properly updated by the
+        # updateMemberSecurity upgrade step
         pprop = getToolByName(self.portal, 'portal_properties')
+        try:
+            self.portal.manage_addProperty('validate_email', False, 'boolean')
+        except:  # property is already there
+            pass
+        try:
+            pprop.site_properties.manage_addProperty(
+                'allowAnonymousViewAbout', True, 'boolean')
+        except:  # property is already there
+            pass
+
+        updateMemberSecurity(self.portal)
+
         self.assertEqual(
-                pprop.site_properties.getProperty('allowAnonymousViewAbout'),
-                False)
+            pprop.site_properties.getProperty('allowAnonymousViewAbout'),
+            False
+        )
 
         pmembership = getToolByName(self.portal, 'portal_membership')
         self.assertEqual(pmembership.memberareaCreationFlag, False)


