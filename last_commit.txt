Repository: archetypes.querywidget


Branch: refs/heads/master
Date: 2015-05-04T11:08:08-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/archetypes.querywidget/commit/604d35613199442bee51d3ef7120f76bc18f1ba7

Added 'safe_unicode' call for raw query values

Files changed:
M CHANGES.rst
M archetypes/querywidget/field.py
M archetypes/querywidget/tests/integration.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index d30a250..dab34c9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Added 'safe_unicode' call for raw query values.
+  [rodfersou]
 
 
 1.1.2 (2014-11-05)
diff --git a/archetypes/querywidget/field.py b/archetypes/querywidget/field.py
index 876564a..6fda4ad 100644
--- a/archetypes/querywidget/field.py
+++ b/archetypes/querywidget/field.py
@@ -1,8 +1,9 @@
-from copy import deepcopy
 from AccessControl import ClassSecurityInfo
 from archetypes.querywidget.interfaces import IQueryField
+from copy import deepcopy
 from Products.Archetypes.Field import ObjectField
 from Products.Archetypes.Field import registerField
+from Products.CMFPlone.utils import safe_unicode
 from zope.component import getMultiAdapter
 from zope.interface import implements
 from zope.site.hooks import getSite
@@ -37,7 +38,22 @@ def get(self, instance, **kwargs):
                             custom_query=kwargs.get('custom_query', {}))
 
     def getRaw(self, instance, **kwargs):
-        return deepcopy(ObjectField.get(self, instance, **kwargs) or [])
+        value = deepcopy(ObjectField.get(self, instance, **kwargs) or [])
+        safe_value = []
+        for query in value:
+            safe_query = {}
+            for k, v in query.items():
+                if type(v) is list:
+                    safe_v = []
+                    for i in v:
+                        safe_v.append(safe_unicode(i))
+                    safe_query[k] = safe_v
+                elif type(v) is str:
+                    safe_query[k] = safe_unicode(v)
+                else:
+                    safe_query[k] = v
+            safe_value.append(safe_query)
+        return safe_value
 
 
 registerField(QueryField, title='QueryField',
diff --git a/archetypes/querywidget/tests/integration.rst b/archetypes/querywidget/tests/integration.rst
index b22d4a1..2a60bc1 100644
--- a/archetypes/querywidget/tests/integration.rst
+++ b/archetypes/querywidget/tests/integration.rst
@@ -38,7 +38,7 @@ Check for bug `#13144 <https://dev.plone.org/ticket/13144>`_::
     >>> field.set(portal.collection, [{'i': 'start', 'o': 'some.namespace.op.foo'}])
     >>> raw1 = field.get(portal.collection, raw=True)
     >>> raw1
-    [{'i': 'start', 'o': 'some.namespace.op.foo'}]
+    [{'i': u'start', 'o': u'some.namespace.op.foo'}]
 
     >>> length1 = len(raw1)
     >>> raw1.append({'i': 'end', 'o': 'some.namespace.op.bar'})
@@ -48,3 +48,10 @@ Now the amount of entries in raw2 has to be the same as in raw1::
 
     >>> length1 == len(raw2)
     True
+
+Check for bug with unicode strings as a value::
+
+    >>> field = portal.collection.getField('query')
+    >>> field.set(portal.collection, [{'i': 'start', 'o': 'some.namespace.op.foo', 'v': 'áéíóú'}])
+    >>> field.get(portal.collection, raw=True)
+    [{'i': u'start', 'o': u'some.namespace.op.foo', 'v': u'\xe1\xe9\xed\xf3\xfa'}]


Repository: archetypes.querywidget


Branch: refs/heads/master
Date: 2015-11-09T20:28:02-02:00
Author: Héctor Velarde (hvelarde) <hvelarde@yahoo.com>
Commit: https://github.com/plone/archetypes.querywidget/commit/80fd0c9ff0b3800b2936993dd96cff0831bbf156

Merge pull request #12 from plone/use_safe_unicode

Added 'safe_unicode' call for raw query values

Files changed:
M CHANGES.rst
M archetypes/querywidget/field.py
M archetypes/querywidget/tests/integration.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index d30a250..dab34c9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Added 'safe_unicode' call for raw query values.
+  [rodfersou]
 
 
 1.1.2 (2014-11-05)
diff --git a/archetypes/querywidget/field.py b/archetypes/querywidget/field.py
index 876564a..6fda4ad 100644
--- a/archetypes/querywidget/field.py
+++ b/archetypes/querywidget/field.py
@@ -1,8 +1,9 @@
-from copy import deepcopy
 from AccessControl import ClassSecurityInfo
 from archetypes.querywidget.interfaces import IQueryField
+from copy import deepcopy
 from Products.Archetypes.Field import ObjectField
 from Products.Archetypes.Field import registerField
+from Products.CMFPlone.utils import safe_unicode
 from zope.component import getMultiAdapter
 from zope.interface import implements
 from zope.site.hooks import getSite
@@ -37,7 +38,22 @@ def get(self, instance, **kwargs):
                             custom_query=kwargs.get('custom_query', {}))
 
     def getRaw(self, instance, **kwargs):
-        return deepcopy(ObjectField.get(self, instance, **kwargs) or [])
+        value = deepcopy(ObjectField.get(self, instance, **kwargs) or [])
+        safe_value = []
+        for query in value:
+            safe_query = {}
+            for k, v in query.items():
+                if type(v) is list:
+                    safe_v = []
+                    for i in v:
+                        safe_v.append(safe_unicode(i))
+                    safe_query[k] = safe_v
+                elif type(v) is str:
+                    safe_query[k] = safe_unicode(v)
+                else:
+                    safe_query[k] = v
+            safe_value.append(safe_query)
+        return safe_value
 
 
 registerField(QueryField, title='QueryField',
diff --git a/archetypes/querywidget/tests/integration.rst b/archetypes/querywidget/tests/integration.rst
index b22d4a1..2a60bc1 100644
--- a/archetypes/querywidget/tests/integration.rst
+++ b/archetypes/querywidget/tests/integration.rst
@@ -38,7 +38,7 @@ Check for bug `#13144 <https://dev.plone.org/ticket/13144>`_::
     >>> field.set(portal.collection, [{'i': 'start', 'o': 'some.namespace.op.foo'}])
     >>> raw1 = field.get(portal.collection, raw=True)
     >>> raw1
-    [{'i': 'start', 'o': 'some.namespace.op.foo'}]
+    [{'i': u'start', 'o': u'some.namespace.op.foo'}]
 
     >>> length1 = len(raw1)
     >>> raw1.append({'i': 'end', 'o': 'some.namespace.op.bar'})
@@ -48,3 +48,10 @@ Now the amount of entries in raw2 has to be the same as in raw1::
 
     >>> length1 == len(raw2)
     True
+
+Check for bug with unicode strings as a value::
+
+    >>> field = portal.collection.getField('query')
+    >>> field.set(portal.collection, [{'i': 'start', 'o': 'some.namespace.op.foo', 'v': 'áéíóú'}])
+    >>> field.get(portal.collection, raw=True)
+    [{'i': u'start', 'o': u'some.namespace.op.foo', 'v': u'\xe1\xe9\xed\xf3\xfa'}]


