Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-08-14T09:38:07+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/558ecefdb1dc2ac2fc0fdc8de97143f00c2aed63

test upgrade step 'use_new_view_names'

Files changed:
M plone/app/contenttypes/tests/test_upgrade.py
M plone/app/contenttypes/upgrades.py

diff --git a/plone/app/contenttypes/tests/test_upgrade.py b/plone/app/contenttypes/tests/test_upgrade.py
index 8c5cb86..f4d8a86 100644
--- a/plone/app/contenttypes/tests/test_upgrade.py
+++ b/plone/app/contenttypes/tests/test_upgrade.py
@@ -12,6 +12,7 @@
 )
 
 from plone.app.contenttypes.upgrades import update_fti
+from plone.app.contenttypes.upgrades import use_new_view_names
 
 
 class UpgradeTo1000IntegrationTest(unittest.TestCase):
@@ -131,3 +132,55 @@ def test_update_fti_news_item(self):
             fti.model_file,
             'plone.app.contenttypes.schema:news_item.xml'
         )
+
+    def test_use_new_view_names(self):
+        old_methods = (
+            'atct_album_view',
+            'folder_summary_view',
+            'folder_tabular_view',
+            'folder_listing',
+        )
+
+        new_methods = (
+            'listing_view',
+            'summary_view',
+            'tabular_view',
+            'full_view',
+            'album_view',
+            'event_listing'
+        )
+
+        self.portal.invokeFactory('Folder', 'folder1')
+        folder = self.portal['folder1']
+        folder.setLayout('folder_summary_view')
+        folder_fti = queryUtility(IDexterityFTI, name='Folder')
+        folder_fti.manage_changeProperties(
+            view_methods=old_methods,
+            default_view='folder_summary_view',
+        )
+
+        portal_fti = self.portal.portal_types.get('Plone Site')
+        portal_fti.manage_changeProperties(
+            view_methods=old_methods,
+            default_view='folder_listing',
+        )
+        self.portal.setLayout('folder_tabular_view')
+        self.portal.setDefaultPage('folder1')
+
+        self.assertEqual(folder_fti.view_methods, old_methods)
+        self.assertEqual(folder_fti.default_view, 'folder_summary_view')
+
+        self.assertEqual(portal_fti.view_methods, old_methods)
+        self.assertEqual(portal_fti.default_view, 'folder_listing')
+
+        # run upgrade-step
+        use_new_view_names(self.portal, types_to_fix=['Folder', 'Plone Site'])
+
+        self.assertEqual(folder_fti.view_methods, new_methods)
+        self.assertEqual(folder_fti.default_view, 'summary_view')
+        self.assertEqual(folder.getLayout(), 'summary_view')
+
+        self.assertEqual(self.portal.getLayout(), 'tabular_view')
+        self.assertEqual(self.portal.getDefaultPage(), 'folder1')
+        self.assertEqual(portal_fti.default_view, 'listing_view')
+        self.assertEqual(portal_fti.view_methods, new_methods)
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 831ec40..bdda4f0 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -159,7 +159,11 @@ def use_new_view_names(context, types_to_fix=None):  # noqa
         'event_listing',
     ]
     for ctype in types_to_fix:
-        fti = portal_types.get(ctype)
+        fti = queryUtility(IDexterityFTI, name=ctype)
+        if fti is None and ctype == 'Plone Site':
+            fti = portal_types.get(ctype)
+        if fti is None:
+            return
         view_methods = [i for i in fti.getAvailableViewMethods(None)]
         changed = False
         for method in outdated_methods:


