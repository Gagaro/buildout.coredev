Repository: Products.CMFPlacefulWorkflow


Branch: refs/heads/1.5.x
Date: 2015-09-28T15:19:42+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlacefulWorkflow/commit/cb5f837b8ca45e29fb5cb2994e35f98df8c40e56

fix at-tests

Files changed:
M CHANGES.rst
M Products/CMFPlacefulWorkflow/tests/testCMFPlacefulWorkflow.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ff3e1b4..1ed9d5a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.5.12 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Fix test after new default dependecy-strategy for GenericSetup.
+  [pbauer]
 
 
 1.5.11 (2015-08-28)
diff --git a/Products/CMFPlacefulWorkflow/tests/testCMFPlacefulWorkflow.py b/Products/CMFPlacefulWorkflow/tests/testCMFPlacefulWorkflow.py
index 4d2bdca..139d82f 100644
--- a/Products/CMFPlacefulWorkflow/tests/testCMFPlacefulWorkflow.py
+++ b/Products/CMFPlacefulWorkflow/tests/testCMFPlacefulWorkflow.py
@@ -94,11 +94,32 @@ def test_marker_applied_and_unapplied(self):
         Check that the IPlacefulMarker is applied to the workflow tool by
         the install, and removed by the uninstall.
         """
+        try:
+            # GenericSetup 1.7.8 and higher
+            from Products.GenericSetup.tool import DEPENDENCY_STRATEGY_REAPPLY
+            DEPENDENCY_STRATEGY_REAPPLY  # pyflakes
+        except ImportError:
+            DEPENDENCY_STRATEGY_REAPPLY = None
+
         self.failUnless(IPlacefulMarker.providedBy(self.workflow))
         self.loginAsPortalOwner()
         self.qi.uninstallProducts(['CMFPlacefulWorkflow'])
         self.failIf(IPlacefulMarker.providedBy(self.workflow))
-        self.qi.installProduct('CMFPlacefulWorkflow')
+
+        profile_id = 'Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow'
+        if DEPENDENCY_STRATEGY_REAPPLY is None:
+            # Older GenericSetup.  Reapply is the default.  No alternative
+            # strategy can be given.
+            self.qi.installProduct('CMFPlacefulWorkflow')
+            # setup_tool.runAllImportStepsFromProfile('profile-%s' % profile_id)
+        else:
+            # Newer GenericSetup.  Upgrade is the default.  We want to
+            # reapply.
+            setup_tool = self.portal.portal_setup
+            setup_tool.runAllImportStepsFromProfile(
+                'profile-%s' % profile_id,
+                dependency_strategy=DEPENDENCY_STRATEGY_REAPPLY)
+
         self.failUnless(IPlacefulMarker.providedBy(self.workflow))
 
     def test_reinstall(self):


