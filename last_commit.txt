Repository: plone.app.event


Branch: refs/heads/master
Date: 2015-11-21T00:53:04+01:00
Author: Johannes Raggam () <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/1689aac68057b66bf6549bacad4853500b0a500a

fix for bug on collection search base introduced by leadimage thumb feature

Files changed:
M plone/app/event/portlets/portlet_events.py

diff --git a/plone/app/event/portlets/portlet_events.py b/plone/app/event/portlets/portlet_events.py
index 29b5c4c..7ce32ea 100644
--- a/plone/app/event/portlets/portlet_events.py
+++ b/plone/app/event/portlets/portlet_events.py
@@ -182,10 +182,12 @@ def events(self):
                 ret_mode=RET_MODE_ACCESSORS,
                 expand=True, limit=data.count, **query
             )
-            eventlist=[]
-            for ev in events:
-                hasimage = bool(getattr(ev.context, 'image', None))
-                eventlist.append((ev, hasimage))
+
+        eventlist = []
+        for ev in events:
+            hasimage = bool(getattr(ev.context, 'image', None))
+            eventlist.append((ev, hasimage))
+
         return eventlist
 
     def formatted_date(self, event):


Repository: plone.app.event


Branch: refs/heads/master
Date: 2015-11-21T00:59:16+01:00
Author: Johannes Raggam () <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/7aa0f0227a73efbba40668b7fc6fdd3dfa1c6503

restore old event return list, to avoid code breaks. other projects may overload portlet_events.pt and would have needed to adapt otherwise.

Files changed:
M CHANGES.rst
M plone/app/event/portlets/portlet_events.pt
M plone/app/event/portlets/portlet_events.py
M plone/app/event/tests/test_portlet_events.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 637b6d2..035db0f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,16 +6,15 @@ Changelog
 
 New:
 
-- *add item here*
+- Show thumbs when leadimage behavior enabled for eventtype:
+  see  https://github.com/plone/Products.CMFPlone/issues/1226
+  [fgrcon]
 
 Fixes:
 
-- show thumbs when leadimage behavior enabled for eventtype:
-  see  https://github.com/plone/Products.CMFPlone/issues/1226
-  [fgrcon]
+- *add item here*
   
 
-
 2.0.4 (2015-10-28)
 ------------------
 
diff --git a/plone/app/event/portlets/portlet_events.pt b/plone/app/event/portlets/portlet_events.pt
index 134635f..cb2775b 100644
--- a/plone/app/event/portlets/portlet_events.pt
+++ b/plone/app/event/portlets/portlet_events.pt
@@ -18,28 +18,27 @@
     <ul>
       <tal:events repeat="item view/events">
       <li class="portletItem"
-          tal:define="normalize nocall:view/context/@@plone/normalizeString;
-                      oddrow repeat/item/odd;
-                      item_url      python:item[0].url;
-                      item_descr    python:item[0].description; 
-                      item_title    python:item[0].title;
-                      item_location python:item[0].location;
-                      item_hasimage python:item[1]"
+          tal:define="oddrow repeat/item/odd;
+                      item_url      item/url;
+                      item_descr    item/description;
+                      item_title    item/title;
+                      item_location item/location;
+                      item_hasimage item/context/image|nothing"
           tal:attributes="class python:'portletItem odd' if oddrow else 'portletItem even'">
         <a href="#" class="tile"
             tal:attributes="href item_url;
                             title item_descr">
-            <img class="image-icon" 
-               tal:define="getIcon python:item[0].url+'/@@images/image/icon'"
+            <img class="image-icon"
                tal:condition="item_hasimage"
+               tal:define="getIcon string:${item_url}/@@images/image/icon"
                tal:attributes="href item_url;
-                               src  string:$getIcon">                               
+                               src  string:$getIcon">
           <span tal:replace="item_title">Some Event</span>
         </a>
         <span class="portletItemDetails">
-          <tal:date replace="structure python:view.formatted_date(item[0])" /><br />
+          <tal:date replace="structure python:view.formatted_date(item)" /><br />
           <span class="timezone"
-              tal:define="tz python:item[0].timezone"
+              tal:define="tz item/timezone"
               tal:condition="tz">
             (<tal:tzname replace="tz">TZ</tal:tzname>)
           </span>
@@ -47,7 +46,7 @@
               tal:condition="item_location"> &mdash;
             <tal:location content="structure item_location">Location</tal:location>
           </span>
-        </span>	
+        </span>
       </li>
       </tal:events>
     </ul>
diff --git a/plone/app/event/portlets/portlet_events.py b/plone/app/event/portlets/portlet_events.py
index 7ce32ea..38c1c38 100644
--- a/plone/app/event/portlets/portlet_events.py
+++ b/plone/app/event/portlets/portlet_events.py
@@ -183,12 +183,7 @@ def events(self):
                 expand=True, limit=data.count, **query
             )
 
-        eventlist = []
-        for ev in events:
-            hasimage = bool(getattr(ev.context, 'image', None))
-            eventlist.append((ev, hasimage))
-
-        return eventlist
+        return events
 
     def formatted_date(self, event):
         provider = getMultiAdapter(
diff --git a/plone/app/event/tests/test_portlet_events.py b/plone/app/event/tests/test_portlet_events.py
index 3b7e3f7..14b4915 100644
--- a/plone/app/event/tests/test_portlet_events.py
+++ b/plone/app/event/tests/test_portlet_events.py
@@ -220,7 +220,7 @@ def test_portlet_event_renderer__recurring(self):
                                                  state=('published',)))
         events = r.events
         self.assertEqual(5, len(events))
-        self.assertTrue('Event 2' not in [x[0].title for x in events])
+        self.assertTrue('Event 2' not in [x.title for x in events])
 
         rd = r.render()
         occ1dt = start + timedelta(days=7)


