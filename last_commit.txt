Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-09-19T17:48:17+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/051caa65e7f51c7ef2118029bacf6f4cf506664e

Do not raise errors when IPrimaryFieldInfo(obj) fails

Files changed:
M CHANGES.rst
M plone/app/contenttypes/indexers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b50361d..11a98b5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,11 @@ Changelog
 1.2.3 (unreleased)
 ------------------
 
+- Do not raise errors when IPrimaryFieldInfo(obj) fails (e.g. when the
+  Schema-Cache is gone).
+  Fixes https://github.com/plone/Products.CMFPlone/issues/839
+  [pbauer]
+
 - Fix an error with logging an exception on indexing SearchableText for files
   and concating utf-8 encoded strings.
   [thet]
diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index 084a95a..e78d55b 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -56,7 +56,13 @@ def SearchableText_document(obj):
 
 @indexer(IFile)
 def SearchableText_file(obj):
-    primary_field = IPrimaryFieldInfo(obj)
+    try:
+        primary_field = IPrimaryFieldInfo(obj)
+    except TypeError:
+        logger.warn(u'Lookup of PrimaryField failed for %s '
+                    u'If renaming or importing please reindex!' %
+                    obj.absolute_url())
+        return
     if primary_field.value is None:
         return SearchableText(obj)
     mimetype = primary_field.value.contentType
@@ -100,13 +106,25 @@ def getRemoteUrl(obj):
 
 @indexer(IImage)
 def getObjSize_image(obj):
-    primary_field_info = IPrimaryFieldInfo(obj)
+    try:
+        primary_field_info = IPrimaryFieldInfo(obj)
+    except TypeError:
+        logger.warn(u'Lookup of PrimaryField failed for %s '
+                    u'If renaming or importing please reindex!' %
+                    obj.absolute_url())
+        return
     return obj.getObjSize(None, primary_field_info.value.size)
 
 
 @indexer(IFile)
 def getObjSize_file(obj):
-    primary_field_info = IPrimaryFieldInfo(obj)
+    try:
+        primary_field_info = IPrimaryFieldInfo(obj)
+    except TypeError:
+        logger.warn(u'Lookup of PrimaryField failed for %s '
+                    u'If renaming or importing please reindex!' %
+                    obj.absolute_url())
+        return
     return obj.getObjSize(None, primary_field_info.value.size)
 
 
@@ -120,7 +138,13 @@ def getIcon_file(obj):
     if mtr is None:
         return None
 
-    primary_field_info = IPrimaryFieldInfo(obj)
+    try:
+        primary_field_info = IPrimaryFieldInfo(obj, None)
+    except TypeError:
+        logger.warn(u'Lookup of PrimaryField failed for %s '
+                    u'If renaming or importing please reindex!' %
+                    obj.absolute_url())
+        return
     if not primary_field_info.value:
         # There is no file so we should show a generic icon
         # TODO : find a better icon for generic


