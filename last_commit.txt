Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2015-10-11T00:39:23+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/7413307f98134d51016bf8a20df8941cd0779606

Let test layers to declare themselves dirty and force server restart in lazy sandbox-server (Zope2Server) shutdown support

Files changed:
M src/plone/app/robotframework/server.py

diff --git a/src/plone/app/robotframework/server.py b/src/plone/app/robotframework/server.py
index b6b6fa4..bb089c7 100644
--- a/src/plone/app/robotframework/server.py
+++ b/src/plone/app/robotframework/server.py
@@ -230,7 +230,9 @@ def _import_layer(self, layer_dotted_name):
     def start_zope_server(self, layer_dotted_name):
         new_layer = self._import_layer(layer_dotted_name)
         if self.zope_layer and self.zope_layer is not new_layer:
-            self.stop_zope_server()
+            self.stop_zope_server(force=True)
+        elif self.zope_layer and self.zope_layer.get('dirty', False):
+            self.stop_zope_server(force=True)
         setup_layer(new_layer)
         self.zope_layer = new_layer
 
@@ -257,8 +259,8 @@ def prune_zope_server(self):
         self.extra_layers = {}
         self.zope_layer = None
 
-    def stop_zope_server(self):
-        if not self.stop_zope_server_lazy:
+    def stop_zope_server(self, force=False):
+        if not self.stop_zope_server_lazy or force:
             tear_down()
         else:
             # With lazy stop, the layer is saved to enable Zope2Server re-use


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2015-10-11T00:40:29+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/79df2d1b2e5383105d7d12c89b9e9de9f2921421

Fix PloneRobotFixture to know if its deployment state and declare itself dirty if it does not match the current requirements

Files changed:
M src/plone/app/robotframework/testing.py

diff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py
index b4d8593..3d9c024 100644
--- a/src/plone/app/robotframework/testing.py
+++ b/src/plone/app/robotframework/testing.py
@@ -161,10 +161,12 @@ def _get_robot_variable(self, name):
             return filter(bool, [s.strip() for s in candidates])
 
     def setUpZope(self, app, configurationContext):
+
         for locales in self._get_robot_variable('REGISTER_TRANSLATIONS'):
             if locales and os.path.isdir(locales):
                 from zope.i18n.zcml import registerTranslations
                 registerTranslations(configurationContext, locales)
+                self['state'].append(locales)
 
         for name in self._get_robot_variable('META_PACKAGES'):
             if not name in sys.modules:
@@ -172,6 +174,7 @@ def setUpZope(self, app, configurationContext):
             package = sys.modules[name]
             xmlconfig.file('meta.zcml', package,
                            context=configurationContext)
+            self['state'].append(name)
 
         for name in self._get_robot_variable('CONFIGURE_PACKAGES'):
             if not name in sys.modules:
@@ -179,6 +182,7 @@ def setUpZope(self, app, configurationContext):
             package = sys.modules[name]
             xmlconfig.file('configure.zcml', package,
                            context=configurationContext)
+            self['state'].append(name)
 
         for name in self._get_robot_variable('OVERRIDE_PACKAGES'):
             if not name in sys.modules:
@@ -186,15 +190,34 @@ def setUpZope(self, app, configurationContext):
             package = sys.modules[name]
             xmlconfig.includeOverrides(
                 configurationContext, 'overrides.zcml', package=package)
+            self['state'].append(name)
 
         for name in self._get_robot_variable('INSTALL_PRODUCTS'):
             if not name in sys.modules:
                 __import__(name)
             z2.installProduct(app, name)
+            self['state'].append(name)
 
     def setUpPloneSite(self, portal):
         for name in self._get_robot_variable('APPLY_PROFILES'):
             self.applyProfile(portal, name)
+            self['state'].append(name)
+
+    def setUp(self):
+        self['state'] = []
+        super(PloneRobotFixture, self).setUp()
+
+        class Value:
+            __repr__ = lambda x: str(bool(x))
+            __nonzero__ = lambda x: self.get('state', []) != (
+                self._get_robot_variable('REGISTER_TRANSLATIONS') +
+                self._get_robot_variable('META_PACKAGES') +
+                self._get_robot_variable('CONFIGURE_PACKAGES') +
+                self._get_robot_variable('OVERRIDE_PACKAGES') +
+                self._get_robot_variable('INSTALL_PRODUCTS') +
+                self._get_robot_variable('APPLY_PROFILES')
+            )
+        self['dirty'] = Value()
 
 
 PLONE_ROBOT_FIXTURE = PloneRobotFixture()


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2015-10-11T00:42:36+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/5698d5a7780302243468130eeaa254b17220d692

Update changelog

Files changed:
M CHANGES.txt

diff --git a/CHANGES.txt b/CHANGES.txt
index caca058..21190e2 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,8 +4,13 @@ Changelog
 0.9.14 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- With lazy sandbox-server shutdown, let test layers to declare themselves
+  dirty and force sandbox rebuild when required
+  [datakurre]
 
+- Fix PloneRobotFixture to know its deployment state and declare itself
+  dirty when required for lazy sandbox-server shutdown support
+  [datakurre]
 
 0.9.13 (2015-10-10)
 -------------------


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2015-10-11T00:42:47+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/dd365e048fa4c6432c32d60e8e3bdd0b8119dfe3

Preparing release 0.9.14

Files changed:
M CHANGES.txt
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 21190e2..73f84de 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-0.9.14 (unreleased)
+0.9.14 (2015-10-11)
 -------------------
 
 - With lazy sandbox-server shutdown, let test layers to declare themselves
diff --git a/setup.py b/setup.py
index 496fd54..cf04e73 100644
--- a/setup.py
+++ b/setup.py
@@ -1,7 +1,7 @@
 from setuptools import setup
 from setuptools import find_packages
 
-version = '0.9.14.dev0'
+version = '0.9.14'
 
 
 def indented(filename):


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2015-10-11T00:43:13+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/f2c244929f67ccebe4f4605e8579cab417fb971a

Back to development: 0.9.15

Files changed:
M CHANGES.txt
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 73f84de..7745222 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,6 +1,12 @@
 Changelog
 =========
 
+0.9.15 (unreleased)
+-------------------
+
+- Nothing changed yet.
+
+
 0.9.14 (2015-10-11)
 -------------------
 
diff --git a/setup.py b/setup.py
index cf04e73..1d0ef7f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,7 +1,7 @@
 from setuptools import setup
 from setuptools import find_packages
 
-version = '0.9.14'
+version = '0.9.15.dev0'
 
 
 def indented(filename):


