Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-02-19T08:41:42-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3f61b0672fd0c6ea9a0d0eb1265935a0248d3b47

pay attention to FEDEV environ variable still

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/browser/scripts.py
M Products/CMFPlone/resources/browser/styles.py

diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py
index 1684c43..960b77f 100644
--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py
+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py
@@ -12,8 +12,10 @@
 from zope.component import getUtility
 import json
 from Products.CMFPlone.resources import add_bundle_on_request
+from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE
 from plone.registry import field
 from plone.registry.record import Record
+from Products.statusmessages.interfaces import IStatusMessage
 
 
 class JSONEncoder(json.JSONEncoder):
@@ -128,6 +130,11 @@ def __call__(self):
                     'msg': 'Invalid action: ' + action
                 })
         else:
+            if RESOURCE_DEVELOPMENT_MODE:
+                messages = IStatusMessage(self.request)
+                messages.add(u"The FEDEV environment variable is set. No matter "
+                             u"what settings are done here, all bundles will "
+                             u"always be in development mode.", type=u"warn")
             return self.index()
 
     @property
diff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py
index 9a616c0..41e2e36 100644
--- a/Products/CMFPlone/resources/__init__.py
+++ b/Products/CMFPlone/resources/__init__.py
@@ -1,5 +1,11 @@
 from zope.component import adapter
 from plone.app.theming.interfaces import IThemeAppliedEvent
+import os
+
+
+RESOURCE_DEVELOPMENT_MODE = False
+if os.getenv('FEDEV', '').lower() == 'true':
+    RESOURCE_DEVELOPMENT_MODE = True
 
 
 @adapter(IThemeAppliedEvent)
diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py
index f4ce902..af9b570 100644
--- a/Products/CMFPlone/resources/browser/resource.py
+++ b/Products/CMFPlone/resources/browser/resource.py
@@ -14,7 +14,8 @@
 from zope.component import getUtility
 from zope.ramcache.interfaces import ram
 from Products.CMFCore.utils import _getAuthenticatedUser
-import os
+from plone.memoize.view import memoize
+from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE
 
 
 class ResourceView(ViewletBase):
@@ -22,6 +23,7 @@ class ResourceView(ViewletBase):
     """
 
     @property
+    @memoize
     def development(self):
         """
         To set development mode:
@@ -30,16 +32,17 @@ def development(self):
         - otherwise if its anonymous is using production mode
         - finally is checked on the registry entry
         """
-        env_development = os.getenv('FEDEV')
-        if env_development:
-            if env_development.lower() == 'false':
-                return False
-            elif env_development.lower() == 'true':
-                return True
+        if RESOURCE_DEVELOPMENT_MODE:
+            return True
         if _getAuthenticatedUser(self.context).getUserName() == 'Anonymous User':
             return False
         return self.registry.records['plone.resources.development'].value
 
+    def develop_bundle(self, bundle, attr):
+        if RESOURCE_DEVELOPMENT_MODE:
+            return True
+        return self.development and getattr(bundle, attr, False)
+
     @property
     def last_legacy_import(self):
         return self.registry.records['plone.resources.last_legacy_import'].value  # noqa
diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py
index 7e13e28..5675c91 100644
--- a/Products/CMFPlone/resources/browser/scripts.py
+++ b/Products/CMFPlone/resources/browser/scripts.py
@@ -9,7 +9,7 @@ class ScriptsView(ResourceView):
 
     def get_data(self, bundle, result):
         bundle_name = bundle.__prefix__.split('/', 1)[1].rstrip('.')
-        if self.development and getattr(bundle, 'develop_javascript', False):
+        if self.develop_bundle(bundle, 'develop_javascript'):
             resources = self.get_resources()
             for resource in bundle.resources:
                 if resource in resources:
diff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py
index 92b5020..66e92bc 100644
--- a/Products/CMFPlone/resources/browser/styles.py
+++ b/Products/CMFPlone/resources/browser/styles.py
@@ -42,7 +42,7 @@ def get_data(self, bundle, result):
         bundle_name = bundle.__prefix__.split(
             '/',
             1)[1].rstrip('.') if bundle else 'none'
-        if self.development and getattr(bundle, 'develop_css', False):
+        if self.develop_bundle(bundle, 'develop_css'):
             self.resources = self.get_resources()
             # The bundle resources
             for resource in bundle.resources:


