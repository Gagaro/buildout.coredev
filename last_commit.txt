Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-03-10T12:55:28+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/82cc188f03ad956217c635e7b016a7acfdd8d7e9

Take the language from the correct place

Files changed:
M plone/app/contenttypes/setuphandlers.py

diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py
index 3246133..39b53b2 100644
--- a/plone/app/contenttypes/setuphandlers.py
+++ b/plone/app/contenttypes/setuphandlers.py
@@ -23,6 +23,7 @@
 from zope.i18n.interfaces import ITranslationDomain
 from zope.i18n.locales import locales
 from zope.interface import implements
+from plone.registry.interfaces import IRegistry
 
 import pkg_resources
 
@@ -107,7 +108,8 @@ def addContentToContainer(container, object, checkConstraints=True):
 
 
 def _get_locales_info(portal):
-    language = portal.Language()
+    reg = queryUtility(IRegistry, context=portal)
+    language = reg['plone.default_language']
     parts = (language.split('-') + [None, None])[:3]
     locale = locales.getLocale(*parts)
 
@@ -118,15 +120,15 @@ def _get_locales_info(portal):
     return locale.id.language, False, locale
 
 
-def _set_language_settings(portal, uses_combined_lanagage):
-    """Set the portals language settings from the given lanage codes."""
-    language = portal.Language()
-    portal_languages = getToolByName(portal, 'portal_languages')
-    portal_languages.manage_setLanguageSettings(
-        language,
-        [language],
-        setUseCombinedLanguageCodes=uses_combined_lanagage,
-        startNeutral=False)
+# def _set_language_settings(portal, uses_combined_lanagage):
+#     """Set the portals language settings from the given lanage codes."""
+#     language = portal.Language()
+#     portal_languages = getToolByName(portal, 'portal_languages')
+#     portal_languages.manage_setLanguageSettings(
+#         language,
+#         [language],
+#         setUseCombinedLanguageCodes=uses_combined_lanagage,
+#         startNeutral=False)
 
 
 # ??? Why do we only do this calendar setup when content is created?
@@ -350,7 +352,7 @@ def step_import_content(context):
     target_language, is_combined_language, locale = _get_locales_info(portal)
 
     # Set up Language specific information
-    _set_language_settings(portal, is_combined_language)
+    # _set_language_settings(portal, is_combined_language)
     _setup_calendar(locale)
     _setup_visible_ids(target_language, locale)
     _delete_at_example_content(portal)


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-03-17T13:13:42+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c06679a08db78ecf4cf0e2e1f2057b3da4745ef9

No need to depend on multilingual, on contenttypes installation on plone5 and setting the language on the content when its created

Files changed:
M plone/app/contenttypes/setuphandlers.py

diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py
index 39b53b2..4a02168 100644
--- a/plone/app/contenttypes/setuphandlers.py
+++ b/plone/app/contenttypes/setuphandlers.py
@@ -28,13 +28,6 @@
 import pkg_resources
 
 try:
-    pkg_resources.get_distribution('plone.multilingualbehavior')
-except pkg_resources.DistributionNotFound:
-    HAS_MULTILINGUAL = False
-else:
-    HAS_MULTILINGUAL = True
-
-try:
     DEXTERITY_WITH_CONSTRAINS = True
     from plone.app.dexterity.behaviors import constrains
 except ImportError:
@@ -190,6 +183,7 @@ def create_frontpage(portal, target_language):
         content = createContent('Document', id=frontpage_id,
                                 title=title,
                                 description=description,
+                                language=target_language
                                 )
         content = addContentToContainer(portal, content)
         front_text = None
@@ -230,7 +224,8 @@ def create_news_topic(portal, target_language):
                                  u'Site News')
         container = createContent('Folder', id=news_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         _createObjectByType('Collection', container,
                             id='aggregator', title=title,
@@ -274,7 +269,8 @@ def create_events_topic(portal, target_language):
                                  u'Site Events')
         container = createContent('Folder', id=events_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         _createObjectByType('Collection', container,
                             id='aggregator', title=title,
@@ -321,7 +317,8 @@ def configure_members_folder(portal, target_language):
                                  u"Site Users")
         container = createContent('Folder', id=members_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         container.setOrdering('unordered')
         container.reindexObject()
@@ -401,19 +398,19 @@ def step_setup_various(context):
     if context.readDataFile('plone.app.contenttypes_default.txt') is None:
         return
     portal = context.getSite()
-    enable_multilingual_behavior(portal)
-
-
-def enable_multilingual_behavior(portal):
-    if not HAS_MULTILINGUAL:
-        return
-    types_tool = portal.portal_types
-    all_ftis = types_tool.listTypeInfo()
-    dx_ftis = [x for x in all_ftis if getattr(x, 'behaviors', False)]
-    for fti in dx_ftis:
-        behaviors = [i for i in fti.behaviors]
-        behaviors.extend([
-            'plone.multilingualbehavior.interfaces.IDexterityTranslatable',
-        ])
-        behaviors = tuple(set(behaviors))
-        fti._updateProperty('behaviors', behaviors)
+#     enable_multilingual_behavior(portal)
+
+
+# def enable_multilingual_behavior(portal):
+#     if not HAS_MULTILINGUAL:
+#         return
+#     types_tool = portal.portal_types
+#     all_ftis = types_tool.listTypeInfo()
+#     dx_ftis = [x for x in all_ftis if getattr(x, 'behaviors', False)]
+#     for fti in dx_ftis:
+#         behaviors = [i for i in fti.behaviors]
+#         behaviors.extend([
+#             'plone.app.multilingual.dx.interfaces.IDexterityTranslatable',
+#         ])
+#         behaviors = tuple(set(behaviors))
+#         fti._updateProperty('behaviors', behaviors)


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-03-21T19:39:39+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/382a64c2df05c0757096ebf72c23086a2244681c

Merge branch 'master' into plip13091

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/leadimage.pt
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/tests/test_link.py
M setup.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 61d9679..ffaecb8 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -1,8 +1,21 @@
 Changelog
 =========
 
-1.2 (unreleased)
-----------------
+1.2a6 (2015-03-13)
+------------------
+
+- In the listing view, don't repeat on the ``article`` tag, which makes it
+  impossible to override this structure. Instead, repeat on a unrendered
+  ``tal`` tag and move the article tag within.
+  [thet]
+
+- Don't try to show IContentLeadImage images, if theree none. Use the "mini"
+  scale as default scale for IContentLeadImage.
+  [thet]
+
+- Improve handling of Link types with other URL schemes than ``http://`` and
+  ``https://``.
+  [thet]
 
 - When installing the default profile, restrict uninstalling of old types to
   old FTI based ones.
diff --git a/plone/app/contenttypes/behaviors/leadimage.pt b/plone/app/contenttypes/behaviors/leadimage.pt
index 5e3b3ca..1c50f80 100644
--- a/plone/app/contenttypes/behaviors/leadimage.pt
+++ b/plone/app/contenttypes/behaviors/leadimage.pt
@@ -1,5 +1,6 @@
-<div class="leadImage"
-     tal:condition="view/available">
-  <img tal:define="scale context/@@images"
-       tal:replace="structure python: scale.scale('image', width=200, height=200).tag(css_class='newsImage')" />
-</div>
\ No newline at end of file
+<div class="leadImage" tal:condition="view/available">
+  <img tal:define="has_img context/image|nothing;
+                   scales context/@@images|nothing"
+       tal:condition="python:has_img and scales" 
+       tal:replace="structure python: scales.scale('image', scale='mini').tag(css_class='newsImage')" />
+</div>
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 23953c0..e49eefe 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -5,6 +5,8 @@
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
 from plone.app.contenttypes import _
+from plone.memoize.view import memoize
+import random
 
 
 class CollectionView(FolderView):
@@ -36,7 +38,8 @@ def results(self, **kwargs):
         return self.collection_behavior.results(**kwargs)
 
     @property
-    def album_results(self):
+    @memoize
+    def _album_results(self):
         """Get results to display an album with subalbums.
         """
         results = self.results()
@@ -51,6 +54,18 @@ def album_results(self):
                 folders.append(it)
         return {'images': images, 'folders': folders}
 
+    @property
+    def album_images(self):
+        """Get all images within this collection.
+        """
+        return self._album_results['images']
+
+    @property
+    def album_folders(self):
+        """Get all folders within this collection.
+        """
+        return self._album_results['folders']
+
     def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 72d8e72..2de8505 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -7,10 +7,12 @@
 from plone.app.contenttypes.interfaces import IFolder
 from plone.app.contenttypes.interfaces import IImage
 from plone.event.interfaces import IEvent
+from plone.memoize.view import memoize
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.contentprovider.interfaces import IContentProvider
+import random
 
 HAS_SECURITY_SETTINGS = True
 try:
@@ -150,7 +152,15 @@ def tabular_fielddata(self, item, fieldname):
             'value': value
         }
 
+    def has_image(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
+        img = getattr(aq_base(obj), 'image', None)
+        return True if img else False
+
     def is_event(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
         return IEvent.providedBy(obj)
 
     def formatted_date(self, item):
@@ -161,18 +171,43 @@ def formatted_date(self, item):
         return provider(item)
 
     @property
-    def album_results(self):
-        """Get results to display an album with subalbums.
+    @memoize
+    def album_images(self):
+        """Get all images within this folder.
         """
         images = self.results(
             batch=False,
             object_provides=IImage.__identifier__
         )
-        folders = self.results(
+        return images
+
+    @property
+    @memoize
+    def album_folders(self):
+        """Get all folders within this folder.
+        """
+        images = self.results(
             batch=False,
             object_provides=IFolder.__identifier__
         )
-        return {'images': images, 'folders': folders}
+        return images
+
+    @property
+    def album_random_image(self):
+        """Get random image from this folder.
+        """
+        img = None
+        images = self.album_images
+        if images:
+            img = random.choice(images)
+        return img
+
+    @property
+    def album_number_images(self):
+        """Get number of images from this folder.
+        """
+        images = self.album_images
+        return len(images)
 
     @property
     def no_items_message(self):
diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py
index 4e4a45d..adb74a1 100644
--- a/plone/app/contenttypes/browser/link_redirect_view.py
+++ b/plone/app/contenttypes/browser/link_redirect_view.py
@@ -5,14 +5,38 @@
 from plone.app.contenttypes.utils import replace_link_variables_by_paths
 
 
+# links starting with these URL scheme should not be redirected to
+NON_REDIRECTABLE_URL_SCHEMES = [
+    'mailto:',
+    'tel:',
+    'callto:',
+    'webdav:',
+    'caldav:'
+]
+
+# links starting with these URL scheme should not be resolved to paths
+NON_RESOLVABLE_URL_SCHEMES = NON_REDIRECTABLE_URL_SCHEMES + [
+    'file:',
+    'ftp:',
+]
+
+
 class LinkRedirectView(BrowserView):
 
     index = ViewPageTemplateFile('templates/link.pt')
 
+    def _url_uses_scheme(self, schemes, url=None):
+        url = url or self.context.remoteUrl
+        for scheme in schemes:
+            if url.startswith(scheme):
+                return True
+        return False
+
     def __call__(self):
         """Redirect to the Link target URL, if and only if:
          - redirect_links property is enabled in
            portal_properties/site_properties
+         - the link is of a redirectable type (no mailto:, etc)
          - AND current user doesn't have permission to edit the Link"""
         context = self.context
         ptool = getToolByName(context, 'portal_properties')
@@ -24,6 +48,8 @@ def __call__(self):
             False
         )
         can_edit = mtool.checkPermission('Modify portal content', context)
+        redirect_links = redirect_links\
+            and not self._url_uses_scheme(NON_REDIRECTABLE_URL_SCHEMES)
 
         if redirect_links and not can_edit:
             return self.request.RESPONSE.redirect(self.absolute_target_url())
@@ -32,7 +58,13 @@ def __call__(self):
 
     def absolute_target_url(self):
         """Compute the absolute target URL."""
-        if self.context.remoteUrl.startswith('.'):
+        url = self.context.remoteUrl
+
+        if self._url_uses_scheme(NON_RESOLVABLE_URL_SCHEMES):
+            # For non http/https url schemes, there is no path to resolve.
+            return url
+
+        if url.startswith('.'):
             # we just need to adapt ../relative/links, /absolute/ones work
             # anyway -> this requires relative links to start with ./ or
             # ../
@@ -41,13 +73,10 @@ def absolute_target_url(self):
             )
             url = '/'.join([
                 context_state.canonical_object_url(),
-                self.context.remoteUrl
+                url
             ])
         else:
-            url = replace_link_variables_by_paths(
-                self.context,
-                self.context.remoteUrl
-            )
+            url = replace_link_variables_by_paths(self.context, url)
             if not (url.startswith('http://') or url.startswith('https://')):
                 url = self.request.physicalPathToURL(url)
 
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index 5ec5a92..b21f554 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -21,8 +21,8 @@
   <metal:listingmacro define-macro="listing">
     <tal:results define="batch view/batch">
       <tal:listing condition="batch">
-        <div metal:define-slot="entries">
-          <article tal:repeat="item batch" metal:define-macro="entries">
+        <div class="entries" metal:define-slot="entries">
+          <tal:repeat repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="obj item/getObject;
                 item_url item/getURL;
                 item_id item/getId;
@@ -36,71 +36,74 @@
                 item_wf_state item/review_state;
                 item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                 item_creator item/Creator;
-                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url;
+                item_has_image python:view.has_image(obj);
+                item_is_event python:view.is_event(obj)">
               <metal:block define-slot="entry">
-                <header metal:define-macro="listitem" tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-                  <span class="summary">
-                    <a tal:attributes="href item_link;
-                                       class string:$item_type_class $item_wf_state_class url;
-                                       title item_type"
-                        tal:content="item_title">
-                      Item Title
-                    </a>
-                  </span>
-
-                  <metal:block metal:define-macro="document_byline">
-                    <span class="documentByLine">
-                      <tal:event condition="python:view.is_event(obj)">
-                        <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
-                        <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
-                          <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
-                        </span>
-                      </tal:event>
-                      <tal:byline condition="view/show_about">
-                        &mdash;
-                        <tal:name tal:condition="item_creator"
-                            tal:define="author python:view.pas_member.info(item_creator);
-                                        creator_short_form author/username;
-                                        creator_long_form string:?author=${author/username};
-                                        creator_is_openid python:'/' in creator_short_form;
-                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                        <span i18n:translate="label_by_author">
-                          by
-                          <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                              tal:content="author/name_or_id"
-                              tal:omit-tag="not:author"
-                              i18n:name="author">
-                            Bob Dobalina
-                          </a>
-                        </span>
-                        </tal:name>
+                <article class="entry">
+                  <header metal:define-macro="listitem" tal:attributes="class python:'vevent' if item_is_event else None">
+                    <span class="summary">
+                      <a tal:attributes="href item_link;
+                                         class string:$item_type_class $item_wf_state_class url;
+                                         title item_type"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </span>
 
-                        <tal:modified condition="python: item_type != 'Event'">
+                    <metal:block metal:define-macro="document_byline">
+                      <span class="documentByLine">
+                        <tal:event condition="item_is_event">
+                          <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                          <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                            <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                          </span>
+                        </tal:event>
+                        <tal:byline condition="view/show_about">
                           &mdash;
-                          <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
-                          <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                            August 16, 2001 at 23:35:59
+                          <tal:name tal:condition="item_creator"
+                              tal:define="author python:view.pas_member.info(item_creator);
+                                          creator_short_form author/username;
+                                          creator_long_form string:?author=${author/username};
+                                          creator_is_openid python:'/' in creator_short_form;
+                                          creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                          <span i18n:translate="label_by_author">
+                            by
+                            <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                                tal:content="author/name_or_id"
+                                tal:omit-tag="not:author"
+                                i18n:name="author">
+                              Bob Dobalina
+                            </a>
                           </span>
-                        </tal:modified>
+                          </tal:name>
 
-                        <metal:description define-slot="description_slot">
-                          <tal:comment replace="nothing">
-                            Place custom listing info for custom types here
-                          </tal:comment>
-                        </metal:description>
-                      </tal:byline>
-                    </span>
-                  </metal:block>
-                </header>
+                          <tal:modified condition="python: item_type != 'Event'">
+                            &mdash;
+                            <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                            <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                              August 16, 2001 at 23:35:59
+                            </span>
+                          </tal:modified>
 
-                <p class="description discreet"
-                    tal:condition="item_description"
-                    tal:content="item_description">
-                  description
-                </p>
+                          <metal:description define-slot="description_slot">
+                            <tal:comment replace="nothing">
+                              Place custom listing info for custom types here
+                            </tal:comment>
+                          </metal:description>
+                        </tal:byline>
+                      </span>
+                    </metal:block>
+                  </header>
+                  <p class="description discreet"
+                      tal:condition="item_description"
+                      tal:content="item_description">
+                    description
+                  </p>
+                </article>
               </metal:block>
             </tal:block>
-          </article>
+          </tal:repeat>
         </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index ab9c319..61f46e6 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -9,9 +9,8 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:main_macro define-macro="content-core"
-    tal:define="result view/album_results;
-                images result/images;
-                albums result/folders">
+    tal:define="images view/album_images;
+                albums view/album_folders">
 
   <div metal:define-macro="text-field-view"
       id="parent-fieldname-text" class="stx"
@@ -42,25 +41,21 @@
 
   <tal:albums tal:repeat="album albums">
     <div class="photoAlbumEntry photoAlbumFolder"
-        tal:define="ob album/getObject;
-                    subalbum_view nocall:ob/@@album_view;
-                    subalbum_results subalbum_view/album_results;
-                    subalbum_images subalbum_results/images;
-                    number_of_images python:len(subalbum_images);
-                    random python:modules['random'];
-                    random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+        tal:define="album_ob album/getObject;
+                    subalbum_view nocall:album_ob/@@album_view;
+                    random_image subalbum_view/album_random_image;
+                    number_images subalbum_view/album_number_images"
+        tal:condition="random_image">
       <a tal:attributes="href album/getURL;
                          title album/Description">
         <span class="photoAlbumEntryWrapper">
-          <tal:block condition="number_of_images">
-            <img tal:define="scale random_image/@@images;
-                             img_tag python:scale.scale('image', scale='thumb').tag()"
-                 tal:replace="structure img_tag" />
-          </tal:block>
+          <img tal:define="random_img_ob random_image/getObject;
+                           scales random_img_ob/@@images"
+               tal:replace="structure python:scales.tag(fieldname='image', scale='thumb')" />
         </span>
         <span class="photoAlbumEntryTitle">
           <tal:title content="album/Title">Title</tal:title>
-          (<tal:number content="number_of_images" />)
+          (<tal:number content="number_images" />)
         </span>
       </a>
     </div>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index f02a961..a4455e4 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -14,17 +14,15 @@
     <metal:block use-macro="context/@@listing_view/macros/entries">
       <metal:entry fill-slot="entry">
 
-        <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+        <article class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
 
-          <a tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-              tal:attributes="href item_link">
-            <div class="tileImage">
-              <img src="" alt=""
-                  tal:define="scales obj/@@images;
-                              scale python:scales.scale('image', 'thumb')"
+          <div class="tileImage" tal:condition="item_has_image">
+            <a tal:attributes="href item_link">
+              <img tal:define="scales obj/@@images;
+                               scale python:scales.scale('image', 'thumb')"
                   tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-            </div>
-          </a>
+            </a>
+          </div>
 
           <h2 class="tileHeadline" metal:define-macro="listitem">
             <a class="summary url"
@@ -52,7 +50,7 @@
 
           <div class="visualClear"><!-- --></div>
 
-        </div>
+        </article>
 
       </metal:entry>
     </metal:block>
diff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py
index 88d5b45..729b414 100644
--- a/plone/app/contenttypes/tests/test_link.py
+++ b/plone/app/contenttypes/tests/test_link.py
@@ -1,31 +1,23 @@
 # -*- coding: utf-8 -*-
-import unittest2 as unittest
-
 from Products.CMFCore.utils import getToolByName
-
-from zope.interface import alsoProvides
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.component import getMultiAdapter
-from zope.event import notify
-from zope.traversing.interfaces import BeforeTraverseEvent
-
-from plone.dexterity.interfaces import IDexterityFTI
-
+from datetime import datetime
+from plone.app.contenttypes.interfaces import ILink
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
-from plone.app.testing import logout
-from plone.testing.z2 import Browser
-
-from plone.app.contenttypes.interfaces import ILink
-
-from plone.app.contenttypes.testing import (
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-)
-
 from plone.app.testing import TEST_USER_ID, setRoles
+from plone.app.testing import logout
 from plone.app.z3cform.interfaces import IPloneFormLayer
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from zope.component import createObject
+from zope.component import getMultiAdapter
+from zope.component import queryUtility
+from zope.event import notify
+from zope.interface import alsoProvides
+from zope.traversing.interfaces import BeforeTraverseEvent
+import unittest2 as unittest
 
 
 class LinkIntegrationTest(unittest.TestCase):
@@ -162,6 +154,69 @@ def test_link_redirect_view_path_with_variable(self):
         self.assertTrue(view())
         self._assert_redirect('http://nohost/plone/my-folder/my-item')
 
+    def test_mailto_type(self):
+        self.link.remoteUrl = 'mailto:stress@test.us'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="mailto:stress@test.us"' in rendered)
+        self._assert_response_OK()
+
+    def test_tel_type(self):
+        self.link.remoteUrl = 'tel:123'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="tel:123"' in rendered)
+        self._assert_response_OK()
+
+    def test_callto_type(self):
+        self.link.remoteUrl = 'callto:123'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="callto:123"' in rendered)
+        self._assert_response_OK()
+
+    def test_webdav_type(self):
+        self.link.remoteUrl = 'webdav://web.site/resource'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="webdav://web.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_caldav_type(self):
+        self.link.remoteUrl = 'caldav://calendar.site/resource'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="caldav://calendar.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_file_type(self):
+        self.link.remoteUrl = 'file:///some/file/on/your/system'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
+
+    def test_ftp_type(self):
+        self.link.remoteUrl = 'ftp://thereIsNoSuchDomain.isThere{0}'.format(
+            datetime.now().isoformat()
+        )
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
+
     def _publish(self, obj):
         portal_workflow = getToolByName(self.portal, "portal_workflow")
         portal_workflow.doActionFor(obj, 'publish')
@@ -170,6 +225,9 @@ def _assert_redirect(self, url):
         self.assertEqual(self.response.status, 302)
         self.assertEqual(self.response.headers['location'], url)
 
+    def _assert_response_OK(self):
+        self.assertEqual(self.response.status, 200)
+
     def _get_link_redirect_view(self, obj):
         return getMultiAdapter((obj, self.request), name='link_redirect_view')
 
diff --git a/setup.py b/setup.py
index a930bbe..908b1bb 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@
 
 import os
 
-version = '1.2b1.dev0'
+version = '1.2a6'
 
 
 def read(*rnames):


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-03-22T11:07:55+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/48910d692915f6f77ae9d5ec8ae6578e5cf416ef

Merge branch 'master' into plip13091

Files changed:
M plone/app/contenttypes/tests/robot/keywords.txt
M plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot

diff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.txt
index 30f8d0e..f61a9b7 100644
--- a/plone/app/contenttypes/tests/robot/keywords.txt
+++ b/plone/app/contenttypes/tests/robot/keywords.txt
@@ -20,31 +20,16 @@ a collection
   [Arguments]  ${title}
   [Return]  ${uid}
   ${uid} =  Create content  type=Collection  title=${title}
-# Go to  ${PLONE_URL}/++add++Collection
-# Wait until page contains  Add Collection
-# Input text  name=form.widgets.IDublinCore.title  ${title}
-# Click Button  Save
-# Wait until page contains  Item created
 
 a document
   [Arguments]  ${title}
   [Return]  ${uid}
   ${uid} =  Create content  type=Document  title=${title}
-# Go to  ${PLONE_URL}/++add++Document
-# Wait until page contains  Add Page
-# Input text  name=form.widgets.IDublinCore.title  ${title}
-# Click Button  Save
-# Wait until page contains  Item created
 
 a event
   [Arguments]  ${title}
   [Return]  ${uid}
   ${uid} =  Create content  type=Event  title=${title}
-# Go to  ${PLONE_URL}/++add++Event
-# Wait until page contains  Add Event
-# Input text  name=form.widgets.IDublinCore.title  ${title}
-# Click Button  Save
-# Wait until page contains  Item created
 
 a file
   [Arguments]  ${title}
@@ -59,11 +44,6 @@ a folder
   [Arguments]  ${title}
   [Return]  ${uid}
   ${uid} =  Create content  type=Folder  title=${title}
-# Go to  ${PLONE_URL}/++add++Folder
-# Wait until page contains  Add Folder
-# Input text  name=form.widgets.IDublinCore.title  ${title}
-# Click Button  Save
-# Wait until page contains  Item created
 
 a image
   [Arguments]  ${title}
@@ -78,18 +58,13 @@ a link
   [Arguments]  ${title}
   [Return]  ${uid}
   ${uid} =  Create content  type=Link  title=${title}
-# Go to  ${PLONE_URL}/++add++Link
-# Wait until page contains  Add Link
-# Input text  name=form.widgets.IDublinCore.title  ${title}
-# Click Button  Save
-# Wait until page contains  Item created
+
 
 a news item
   [Arguments]  ${title}
   Go to  ${PLONE_URL}/++add++News Item
   Wait until page contains  Add News Item
   Input text  name=form.widgets.IDublinCore.title  ${title}
-  fill in metadata
   Click Button  Save
   Wait until page contains  Item created
 
@@ -117,21 +92,6 @@ the collection should not contain
   Go to  ${PLONE_URL}/my-collection
   The content area should not contain  ${title}
 
-fill in metadata
-  Click Link  Categorization
-  Input text  name=form.widgets.IDublinCore.subjects  testcreatedrobot
-  Click Link  Dates
-  ${currentyear}=  Get Time  year
-  fill date field  form.widgets.IDublinCore.effective  2009  January  1
-  fill date field  form.widgets.IDublinCore.expires  2017  December  12
-  Click Link  Ownership
-  Input text  name=form.widgets.IDublinCore.creators  another_creator
-  Input text  name=form.widgets.IDublinCore.contributors  contributor1
-  Input text  name=form.widgets.IDublinCore.rights  Copyright\nstatement\nhere
-  Click Link  Settings
-  Select from List  name=form.widgets.IAllowDiscussion.allow_discussion:list  Yes
-  Select Checkbox  name=form.widgets.IExcludeFromNavigation.exclude_from_nav:list
-
 fill date field
   [Arguments]  ${fieldid}  ${year}=2012  ${month}=January  ${day}=10
   [Documentation]  Fill in the specified date field (such as effective/expiration date in the "dates" metadata tab) with the specified date.
@@ -145,9 +105,10 @@ I set the criteria ${type} in row ${number} to the option '${label}'
   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})
   Wait until page contains element  css=${criteria_row} .querystring-criteria-${type} .select2-choice
   Click Element  css=${criteria_row} .querystring-criteria-${type} .select2-choice
-  Wait until page contains element  css=.select2-input.select2-focused
-  Input text  css=.select2-input.select2-focused  ${label}\n
-# Click Element  xpath=//div[@class='select2-result-label']/descendant-or-self::*[contains(text(), '${label}')]
+  Wait until element is visible  css=#select2-drop input
+  Input Text  css=#select2-drop input  ${label}
+  Wait until element is visible  css=#select2-drop .select2-match
+  Click Element  css=#select2-drop .select2-match
 
 I set the criteria ${type} in row ${number} to the options '${label}'
   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})
diff --git a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
index 6135aca..e2dac77 100644
--- a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
+++ b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
@@ -1,3 +1,13 @@
+# ============================================================================
+# Tests for the Collection Creator Criterion
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING
+#
+# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
+#
+# ============================================================================
+
 *** Settings *****************************************************************
 
 Resource  plone/app/robotframework/keywords.robot
@@ -38,9 +48,9 @@ a test user document
 
 I set the collection's creator criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
     Wait until page contains  Edit Collection
+
     I set the criteria index in row 1 to the option 'Creator'
     I set the criteria operator in row 1 to the option 'Is'
     I set the criteria value in row 1 to the text '${criterion}'
diff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
index 8259f7b..80ebfbd 100644
--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
@@ -1,4 +1,14 @@
-*** Settings ***
+# ============================================================================
+# Tests for the Collection Location Criterion
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING
+#
+# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
 
 Resource  plone/app/robotframework/keywords.robot
 Resource  plone/app/contenttypes/tests/robot/keywords.txt
@@ -8,9 +18,8 @@ Variables  plone/app/contenttypes/tests/robot/variables.py
 Test Setup  Run keywords  Open test browser
 Test Teardown  Close all browsers
 
-*** Variables ***
 
-*** Test cases ***
+*** Test cases ***************************************************************
 
 Scenario: Test Relative Location Criterion
     Given I am logged in as site owner
@@ -32,7 +41,7 @@ Scenario: Test Absolute Location Criterion
       And the collection should not contain  Document outside Folder
 
 
-*** Keywords ***
+*** Keywords *****************************************************************
 
 a folder '${folder-id}' with a document '${document-title}'
     Go to  ${PLONE_URL}/++add++Folder
@@ -47,8 +56,8 @@ a folder '${folder-id}' with a document '${document-title}'
 
 I set the collection's relative location criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
+    Wait until page contains  Edit Collection
 
     I set the criteria index in row 1 to the option 'Location'
     I set the criteria operator in row 1 to the option 'Relative path'
@@ -59,8 +68,8 @@ I set the collection's relative location criterion to
 
 I set the collection's absolute location criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
+    Wait until page contains  Edit Collection
 
     I set the criteria index in row 1 to the option 'Location'
     I set the criteria operator in row 1 to the option 'Absolute path'
diff --git a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
index 8562f50..37c91d2 100644
--- a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
+++ b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
@@ -1,4 +1,14 @@
-*** Settings ***
+# ============================================================================
+# Tests for the Collection Type Criterion
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING
+#
+# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
 
 Resource  plone/app/robotframework/keywords.robot
 Resource  plone/app/contenttypes/tests/robot/keywords.txt
@@ -6,9 +16,8 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 Test Setup  Run keywords  Open test browser
 Test Teardown  Close all browsers
 
-*** Variables ***
 
-*** Test cases ***
+*** Test cases ***************************************************************
 
 Scenario: Test Review state Criterion
     Given I am logged in as site owner
@@ -20,7 +29,7 @@ Scenario: Test Review state Criterion
       And the collection should not contain  Published Document
 
 
-*** Keywords ***
+*** Keywords *****************************************************************
 
 a published document
     [Arguments]  ${title}
@@ -33,8 +42,8 @@ a private document
 
 I set the collection's review state criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
+    Wait until page contains  Edit Collection
 
     I set the criteria index in row 1 to the option 'Review state'
     I set the criteria operator in row 1 to the option 'Is'
diff --git a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
index ab1e1b6..1c242c3 100644
--- a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
+++ b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
@@ -1,4 +1,14 @@
-*** Settings ***
+# ============================================================================
+# Tests for the Collection Short Name Criterion
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING
+#
+# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
 
 Resource  plone/app/robotframework/keywords.robot
 Resource  plone/app/contenttypes/tests/robot/keywords.txt
@@ -6,9 +16,8 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 Test Setup  Run keywords  Open test browser
 Test Teardown  Close all browsers
 
-*** Variables ***
 
-*** Test cases ***
+*** Test cases ***************************************************************
 
 Test Short name (id) Criterion
     Given I am logged in as site owner
@@ -20,12 +29,12 @@ Test Short name (id) Criterion
       And the collection should not contain  Second Document
 
 
-*** Keywords ***
+*** Keywords *****************************************************************
 
 I set the collection short name (id) criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
+    Wait until page contains  Edit Collection
 
     I set the criteria index in row 1 to the option 'Short name'
     I set the criteria operator in row 1 to the option 'Is'
diff --git a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
index 2ac2c36..328a601 100644
--- a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
+++ b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
@@ -1,4 +1,14 @@
-*** Settings ***
+# ============================================================================
+# Tests for the Collection Type Criterion
+# ============================================================================
+#
+# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING
+#
+# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
+#
+# ============================================================================
+
+*** Settings *****************************************************************
 
 Resource  plone/app/robotframework/keywords.robot
 Resource  plone/app/contenttypes/tests/robot/keywords.txt
@@ -6,9 +16,8 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 Test Setup  Run keywords  Open test browser
 Test Teardown  Close all browsers
 
-*** Variables ***
 
-*** Test cases ***
+*** Test cases ***************************************************************
 
 Test Type Criterion
     Given I am logged in as site owner
@@ -20,12 +29,12 @@ Test Type Criterion
       And the collection should not contain  Test Document
 
 
-*** Keywords ***
+*** Keywords *****************************************************************
 
 I set the collection's type criterion to
     [Arguments]  ${criterion}
-    Go to  ${PLONE_URL}/my-collection
-    Click Edit
+    Go to  ${PLONE_URL}/my-collection/edit
+    Wait until page contains  Edit Collection
 
     I set the criteria index in row 1 to the option 'Type'
     I set the criteria operator in row 1 to the option 'Is'


Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-03-25T21:36:05+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2d9023b313efb5b970b62c0161b2ba3c01749f87

Merge pull request #218 from plone/plip13091

Plip13091

Files changed:
M plone/app/contenttypes/setuphandlers.py

diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py
index 3246133..4a02168 100644
--- a/plone/app/contenttypes/setuphandlers.py
+++ b/plone/app/contenttypes/setuphandlers.py
@@ -23,17 +23,11 @@
 from zope.i18n.interfaces import ITranslationDomain
 from zope.i18n.locales import locales
 from zope.interface import implements
+from plone.registry.interfaces import IRegistry
 
 import pkg_resources
 
 try:
-    pkg_resources.get_distribution('plone.multilingualbehavior')
-except pkg_resources.DistributionNotFound:
-    HAS_MULTILINGUAL = False
-else:
-    HAS_MULTILINGUAL = True
-
-try:
     DEXTERITY_WITH_CONSTRAINS = True
     from plone.app.dexterity.behaviors import constrains
 except ImportError:
@@ -107,7 +101,8 @@ def addContentToContainer(container, object, checkConstraints=True):
 
 
 def _get_locales_info(portal):
-    language = portal.Language()
+    reg = queryUtility(IRegistry, context=portal)
+    language = reg['plone.default_language']
     parts = (language.split('-') + [None, None])[:3]
     locale = locales.getLocale(*parts)
 
@@ -118,15 +113,15 @@ def _get_locales_info(portal):
     return locale.id.language, False, locale
 
 
-def _set_language_settings(portal, uses_combined_lanagage):
-    """Set the portals language settings from the given lanage codes."""
-    language = portal.Language()
-    portal_languages = getToolByName(portal, 'portal_languages')
-    portal_languages.manage_setLanguageSettings(
-        language,
-        [language],
-        setUseCombinedLanguageCodes=uses_combined_lanagage,
-        startNeutral=False)
+# def _set_language_settings(portal, uses_combined_lanagage):
+#     """Set the portals language settings from the given lanage codes."""
+#     language = portal.Language()
+#     portal_languages = getToolByName(portal, 'portal_languages')
+#     portal_languages.manage_setLanguageSettings(
+#         language,
+#         [language],
+#         setUseCombinedLanguageCodes=uses_combined_lanagage,
+#         startNeutral=False)
 
 
 # ??? Why do we only do this calendar setup when content is created?
@@ -188,6 +183,7 @@ def create_frontpage(portal, target_language):
         content = createContent('Document', id=frontpage_id,
                                 title=title,
                                 description=description,
+                                language=target_language
                                 )
         content = addContentToContainer(portal, content)
         front_text = None
@@ -228,7 +224,8 @@ def create_news_topic(portal, target_language):
                                  u'Site News')
         container = createContent('Folder', id=news_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         _createObjectByType('Collection', container,
                             id='aggregator', title=title,
@@ -272,7 +269,8 @@ def create_events_topic(portal, target_language):
                                  u'Site Events')
         container = createContent('Folder', id=events_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         _createObjectByType('Collection', container,
                             id='aggregator', title=title,
@@ -319,7 +317,8 @@ def configure_members_folder(portal, target_language):
                                  u"Site Users")
         container = createContent('Folder', id=members_id,
                                   title=title,
-                                  description=description)
+                                  description=description,
+                                  language=target_language)
         container = addContentToContainer(portal, container)
         container.setOrdering('unordered')
         container.reindexObject()
@@ -350,7 +349,7 @@ def step_import_content(context):
     target_language, is_combined_language, locale = _get_locales_info(portal)
 
     # Set up Language specific information
-    _set_language_settings(portal, is_combined_language)
+    # _set_language_settings(portal, is_combined_language)
     _setup_calendar(locale)
     _setup_visible_ids(target_language, locale)
     _delete_at_example_content(portal)
@@ -399,19 +398,19 @@ def step_setup_various(context):
     if context.readDataFile('plone.app.contenttypes_default.txt') is None:
         return
     portal = context.getSite()
-    enable_multilingual_behavior(portal)
-
-
-def enable_multilingual_behavior(portal):
-    if not HAS_MULTILINGUAL:
-        return
-    types_tool = portal.portal_types
-    all_ftis = types_tool.listTypeInfo()
-    dx_ftis = [x for x in all_ftis if getattr(x, 'behaviors', False)]
-    for fti in dx_ftis:
-        behaviors = [i for i in fti.behaviors]
-        behaviors.extend([
-            'plone.multilingualbehavior.interfaces.IDexterityTranslatable',
-        ])
-        behaviors = tuple(set(behaviors))
-        fti._updateProperty('behaviors', behaviors)
+#     enable_multilingual_behavior(portal)
+
+
+# def enable_multilingual_behavior(portal):
+#     if not HAS_MULTILINGUAL:
+#         return
+#     types_tool = portal.portal_types
+#     all_ftis = types_tool.listTypeInfo()
+#     dx_ftis = [x for x in all_ftis if getattr(x, 'behaviors', False)]
+#     for fti in dx_ftis:
+#         behaviors = [i for i in fti.behaviors]
+#         behaviors.extend([
+#             'plone.app.multilingual.dx.interfaces.IDexterityTranslatable',
+#         ])
+#         behaviors = tuple(set(behaviors))
+#         fti._updateProperty('behaviors', behaviors)


