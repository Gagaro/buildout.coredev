Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-07T07:29:01+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/853b5eb3b6869a5e2654b432732f6b6af1c7ece5

Revert "fix jquery error with collective.js.jqueryui in Plone 5"

This reverts commit e9a964dc9f02e7c64c1dff69bc6e489bcd9c8491.

Broken build: http://jenkins.plone.org/job/plone-5.0-python-2.7/674/

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/templates/main_template.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 9d4b2ab..785757e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,11 +8,6 @@ Changelog
 5.0b2 (unreleased)
 ------------------
 
-- Move `plone.htmlhead.links` viewlet manager after `plone.scripts`,
-  because the former is sometimes used to include scripts that depend on
-  the latter.
-  [davisagli]
-
 - Upgrade mockup-core and patternslib bower dependencies to fix bower install issue
   [vangheem]
 
diff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt
index 6c953ee..fd6d4cd 100644
--- a/Products/CMFPlone/browser/templates/main_template.pt
+++ b/Products/CMFPlone/browser/templates/main_template.pt
@@ -26,6 +26,7 @@
     <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 
     <div tal:replace="structure provider:plone.htmlhead" />
+    <link tal:replace="structure provider:plone.htmlhead.links" />
 
     <tal:comment replace="nothing">
         Various slots where you can insert elements in the header from a template.
@@ -37,7 +38,6 @@
     <div tal:replace="structure provider:plone.scripts" />
     <metal:javascriptslot define-slot="javascript_head_slot" />
 
-    <link tal:replace="structure provider:plone.htmlhead.links" />
     <meta name="generator" content="Plone - http://plone.org" />
 
   </head>


Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-07T07:29:41+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/ac053824f832f20e5953fae8af999fce3f8f09e7

Revert "Upgrade mockup-core and patternslib bower dependencies to fix bower install issue"

This reverts commit 631d549d68682e88a10bcaaec180c59a707453f4.

Broken build: http://jenkins.plone.org/job/plone-5.0-python-2.7/674/

Files changed:
M CHANGES.rst
M Products/CMFPlone/static/bower.json

diff --git a/CHANGES.rst b/CHANGES.rst
index 785757e..d38d43f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,9 +8,6 @@ Changelog
 5.0b2 (unreleased)
 ------------------
 
-- Upgrade mockup-core and patternslib bower dependencies to fix bower install issue
-  [vangheem]
-
 - Implement new feed syndication using `NewsML 1 <http://iptc.org/standards/newsml-1/>`_,
   an IPTC standard that provides a media-type-independent, structural framework for multi-media news.
   [frapell, jpgimenez, tcurvelo]
diff --git a/Products/CMFPlone/static/bower.json b/Products/CMFPlone/static/bower.json
index 3f4585a..5830ae5 100644
--- a/Products/CMFPlone/static/bower.json
+++ b/Products/CMFPlone/static/bower.json
@@ -15,14 +15,14 @@
     "jquery-form": "3.46.0",
     "jquery.cookie": "1.4.1",
     "lodash": "2.4.1",
-    "mockup-core": "2.1.7",
+    "mockup-core": "2.1.3",
     "moment": "2.8.3",
     "pickadate": "3.4.0",
     "requirejs-text": "2.0.12",
     "select2": "3.5.1",
     "jquery.recurrenceinput.js": "v1.3",
     "tinymce-builded": "4.1.6",
-    "patternslib": "2.0.9",
+    "patternslib": "2.0.8",
     "requirejs": "",
     "less": "2.1.2",
     "r.js": "2.1.15"


Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-04-07T07:30:09+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/f11064986187fe20281c44049fd6cdff36d7278c

Revert "Merge pull request #408 from plone/newsml-syndication"

This reverts commit 39be99e2e2c234ddbd31c85135bc967c86c4d644, reversing
changes made to 57e9bab5d65c4992303047083a17a2d522ea0d78.

Broken build: http://jenkins.plone.org/job/plone-5.0-python-2.7/674/

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/configure.zcml
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/templates/RSS.pt
M Products/CMFPlone/browser/syndication/templates/atom.xml.pt
M Products/CMFPlone/browser/syndication/templates/rss.xml.pt
M Products/CMFPlone/browser/syndication/templates/search-rss.pt
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/views.py
M Products/CMFPlone/interfaces/syndication.py
M Products/CMFPlone/tests/testSyndication.py
D Products/CMFPlone/browser/syndication/templates/content_core.pt
D Products/CMFPlone/browser/syndication/templates/newsml.xml.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index d38d43f..11a74e5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,9 +8,7 @@ Changelog
 5.0b2 (unreleased)
 ------------------
 
-- Implement new feed syndication using `NewsML 1 <http://iptc.org/standards/newsml-1/>`_,
-  an IPTC standard that provides a media-type-independent, structural framework for multi-media news.
-  [frapell, jpgimenez, tcurvelo]
+- Nothing changed yet.
 
 
 5.0b1.post1 (2015-03-27)
@@ -19,7 +17,6 @@ Changelog
 - Packaging fix, no code changes.
   [esteele]
 
-
 5.0b1 (2015-03-26)
 ------------------
 
diff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py
index baa1661..56fbe15 100644
--- a/Products/CMFPlone/browser/syndication/adapters.py
+++ b/Products/CMFPlone/browser/syndication/adapters.py
@@ -8,7 +8,6 @@
 from OFS.interfaces import IItem
 
 from Products.CMFCore.utils import getToolByName
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 
 from Products.CMFPlone.interfaces.syndication import IFeed
 from Products.CMFPlone.interfaces.syndication import IFeedItem
@@ -199,11 +198,6 @@ def __init__(self, context, feed):
         self.feed = feed
 
     @lazy_property
-    def creator(self):
-        if hasattr(self.context, 'Creator'):
-            return self.context.Creator()
-
-    @lazy_property
     def author(self):
         if self.feed.show_about:
             creator = self.context.Creator()
@@ -236,12 +230,6 @@ def body(self):
                 value = value.output
         return value
 
-    content_core_template = ViewPageTemplateFile("templates/content_core.pt")
-
-    def render_content_core(self):
-        self.request = self.context.REQUEST
-        return self.content_core_template()
-
     @property
     def link(self):
         url = self.base_url
diff --git a/Products/CMFPlone/browser/syndication/configure.zcml b/Products/CMFPlone/browser/syndication/configure.zcml
index b715c72..424a7d4 100644
--- a/Products/CMFPlone/browser/syndication/configure.zcml
+++ b/Products/CMFPlone/browser/syndication/configure.zcml
@@ -82,14 +82,6 @@
     template="templates/search-rss.pt"
     />
 
-  <browser:page
-    for="OFS.interfaces.IItem"
-    class=".views.NewsMLFeedView"
-    name="newsml.xml"
-    permission="zope2.View"
-    template="templates/newsml.xml.pt"
-    />
-
   <utility
     factory=".tool.SyndicationTool"
     provides="Products.CMFCore.interfaces.ISyndicationTool"
diff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py
index 611da06..ca839fd 100644
--- a/Products/CMFPlone/browser/syndication/settings.py
+++ b/Products/CMFPlone/browser/syndication/settings.py
@@ -26,8 +26,7 @@ def __init__(self, context):
             self.needs_saving = True
 
         registry = getUtility(IRegistry)
-        self.site_settings = registry.forInterface(ISiteSyndicationSettings,
-                                                   check=False)
+        self.site_settings = registry.forInterface(ISiteSyndicationSettings)
 
     def _set(self):
         """
diff --git a/Products/CMFPlone/browser/syndication/templates/RSS.pt b/Products/CMFPlone/browser/syndication/templates/RSS.pt
index 268c3b9..4075093 100644
--- a/Products/CMFPlone/browser/syndication/templates/RSS.pt
+++ b/Products/CMFPlone/browser/syndication/templates/RSS.pt
@@ -34,11 +34,8 @@
     <link tal:content="item/link" />
     <description tal:content="item/description" />
     <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"
-        tal:condition="feed/settings/render_body">
-        <tal:opencdata tal:replace="structure python:'&lt;![CDATA['" />
-        <tal:block tal:replace="structure item/render_content_core"/>          
-        <tal:closecdata tal:replace="structure python:']]&gt;'" />
-    </content:encoded>
+        tal:condition="feed/settings/render_body"
+        tal:content="structure python:'&lt;![CDATA[' + item.body + ']]&gt;'">Content</content:encoded>
     <dc:publisher tal:content="item/publisher" />
     <dc:creator tal:condition="feed/show_about" tal:content="item/author_name">Creator</dc:creator>
     <dc:rights tal:content="item/rights">Rights</dc:rights>
diff --git a/Products/CMFPlone/browser/syndication/templates/atom.xml.pt b/Products/CMFPlone/browser/syndication/templates/atom.xml.pt
index 82157a2..f35abb0 100644
--- a/Products/CMFPlone/browser/syndication/templates/atom.xml.pt
+++ b/Products/CMFPlone/browser/syndication/templates/atom.xml.pt
@@ -6,32 +6,25 @@
       xml:lang="en"
       xmlns:i18n="http://xml.zope.org/namespaces/i18n"
       xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
       tal:define="feed view/feed;
                   url feed/link;"
       tal:attributes="xml:base url; xml:lang feed/language"
       i18n:domain="Products.CMFPlone">
   <link rel="self"
         href=""
-        type="application/atom+xml"
         tal:attributes="href request/ACTUAL_URL" />
   <title type="html" tal:content="feed/title" />
-  <subtitle tal:content="feed/description" 
-            tal:condition="feed/description" />
+  <subtitle tal:content="feed/description" />
   <updated tal:content="python:feed.modified.ISO8601()" />
-  <link href="atom.xml"
-        rel="alternate"
-        type="text/html"
-        tal:attributes="xml:base string:${url}/"/>
-  <id tal:content="string:urn:syndication:${feed/uid}"/>
+  <link tal:attributes="href url" rel="alternate" type="text/html" />
+  <id tal:content="string:urn:syndication:${feed/uid}" />
   <logo tal:content="feed/logo" />
   <icon tal:content="feed/icon" />
   <generator uri="http://www.plone.org" version="1.0">plone</generator>
-  <rights tal:content="feed/rights" 
-          tal:condition="feed/rights"/>
-  <author tal:condition="python:feed.show_about and feed.author_name and feed.author_email">
+  <rights tal:content="feed/rights" tal:condition="feed/rights" />
+  <author tal:condition="feed/show_about">
     <name tal:content="feed/author_name" />
-    <email tal:content="feed/author_email" />
+    <email tal:content="feed/author_email" tal:condition="feed/author_email" />
   </author>
 
   <tal:repeat repeat="item feed/items">
@@ -39,31 +32,23 @@
                        modified item/modified;">
       <title tal:content="item/title"></title>
       <link rel="alternate" type="text/html" href="" tal:attributes="href item/link" />
-      <link tal:condition="python:item.has_enclosure and item.file_length" rel="enclosure"
+      <link tal:condition="item/has_enclosure" rel="enclosure"
           tal:attributes="href item/file_url;
                           length item/file_length;
                           type item/file_type;" />
       <id tal:content="string:urn:syndication:${item/uid}">urn:syndication:12345678</id>
-      <summary tal:condition="item/description" tal:content="item/description" />
-      <content type="xhtml" xml:base="" xml:lang="en-US" xml:space="preserve"
+      <summary tal:condition="not: feed/settings/render_body" tal:content="item/description" />
+      <content type="html" xml:base="" xml:lang="en-US" xml:space="preserve"
                tal:attributes="xml:base url; xml:lang feed/language;"
                tal:condition="feed/settings/render_body">
-        <tal:block replace="structure string:&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;"
-                   on-error="nothing"/>
-        <tal:block tal:replace="structure item/render_content_core"/>
-        <tal:block replace="structure string:&lt;/div&gt;"/>
+        <tal:block tal:replace="structure string:&lt;![CDATA["/>
+        <tal:block tal:replace="structure item/body"/>
+        <tal:block tal:replace="structure string:]]&gt;"/>
       </content>
 
-      <author tal:define="creator item/creator;
-                          author_name item/author_name;
-                          author_email item/author_email"
-              tal:condition="python:creator or author_name">
-        <name tal:condition="author_name"
-              tal:content="author_name" />
-        <name tal:condition="python: not author_name"
-              tal:content="creator" />
-        <email tal:condition="author_email" 
-               tal:content="author_email" />
+      <author>
+        <name tal:content="item/author_name" />
+        <email tal:content="item/author_email" tal:condition="item/author_email" />
       </author>
 
       <published tal:content="python: published and published.ISO8601() or modified.ISO8601()"></published>
@@ -71,8 +56,7 @@
       <updated tal:content="python:modified.ISO8601()"></updated>
 
       <tal:block repeat="category item/categories">
-        <category tal:attributes="term category"
-                  tal:condition="category"/>
+        <category tal:attributes="term category"/>
       </tal:block>
 
     </entry>
diff --git a/Products/CMFPlone/browser/syndication/templates/content_core.pt b/Products/CMFPlone/browser/syndication/templates/content_core.pt
deleted file mode 100644
index 9318aae..0000000
--- a/Products/CMFPlone/browser/syndication/templates/content_core.pt
+++ /dev/null
@@ -1,4 +0,0 @@
-<tal:block tal:define="view context/defaultView;"
-           tal:on-error="nothing">
-   <div metal:use-macro="here/?view/macros/content-core"/>
-</tal:block>
diff --git a/Products/CMFPlone/browser/syndication/templates/newsml.xml.pt b/Products/CMFPlone/browser/syndication/templates/newsml.xml.pt
deleted file mode 100644
index 737f7f0..0000000
--- a/Products/CMFPlone/browser/syndication/templates/newsml.xml.pt
+++ /dev/null
@@ -1,100 +0,0 @@
-<?xml version="1.0" ?>
-<NewsML xmlns:tal="http://xml.zope.org/namespaces/tal"
-        tal:define="feed view/feed;
-                    date python:feed.published or view.current_date;
-                    published_iso python:date.asdatetime().strftime('%Y%m%dT%H%M%S%z');
-                    logo feed/logo;">
-                    
-    <tal:comment replace="nothing">
-        <!--
-        This NewsML implementation is done to be used by MSN to provide news feeds.
-        Some things are missing from the full specification because then it will
-        not validate against MSN service (http://feedverificationtool.msn.com/)
-        For more information, check the provided PDF in the docs folder.
-        -->
-    </tal:comment>
-
-  <Catalog Href="http://www.iptc.org/IPTC/catalog/catalog.IptcMasterCatalog.xml"/>
-
-  <NewsEnvelope>
-    <DateAndTime tal:content="published_iso"></DateAndTime>
-    <NewsService FormalName="Thumbnail" tal:content="logo"></NewsService>
-  </NewsEnvelope>
-
-  <tal:repeat repeat="item feed/items">
-    <NewsItem xmlns:tal="http://xml.zope.org/namespaces/tal"
-            LinkType="normal"
-            tal:define="portal context/@@plone_portal_state/portal;
-                        base_domain portal/absolute_url;
-                        date python:item.published or item.modified;
-                        date_id python:date.strftime('%Y%m%d');
-                        news_item_id item/uid;
-                        published_iso python:date.asdatetime().strftime('%Y%m%dT%H%M%S%z');
-                        date_created python:item.context.created().asdatetime().strftime('%Y%m%dT%H%M%S%z');
-                        ob_title item/title;
-                        ob_description item/description;
-                        author item/author;
-                        body item/body;">
-      <Identification>
-        <NewsIdentifier>
-        <ProviderId tal:content="base_domain"></ProviderId>
-        <DateId tal:content="date_id"></DateId>
-        <NewsItemId tal:content="news_item_id"></NewsItemId>
-        <RevisionId PreviousRevision="0" Update="N">1</RevisionId>
-        <PublicIdentifier tal:content="string:urn:newsml:${base_domain}:${date_id}:${news_item_id}:1"></PublicIdentifier>
-        </NewsIdentifier>
-      </Identification>
-
-      <NewsManagement>
-        <NewsItemType FormalName="News"/>
-        <FirstCreated tal:content="date_created"></FirstCreated>
-        <ThisRevisionCreated tal:content="date_created"></ThisRevisionCreated>
-        <Status FormalName="Usable"/>
-      </NewsManagement>
-
-      <NewsComponent tal:attributes="Duid python:view.duid(item, 1)" Essential="no" EquivalentsList="no">
-        <NewsComponent tal:attributes="Duid python:view.duid(item, 2)">
-          <NewsComponent>
-            <Role FormalName="Main" />
-            <NewsLines>
-            <HeadLine tal:content="ob_title"></HeadLine>
-            <SlugLine tal:content="ob_description"></SlugLine>
-            <tal:comment replace="nothing">
-                <!-- This is part of the standard, but apparently MSN, doesn't like it -->
-                <DateLine tal:content="date_id"></DateLine>
-                <ByLine tal:content="author"></ByLine>
-            </tal:comment>
-            </NewsLines>
-            <ContentItem>
-            <MediaType FormalName="ComplexData" />
-            <MimeType FormalName="text/vnd.IPTC.NITF" />
-            <DataContent>
-                <nitf>
-                <body>
-                    <body.head>
-                    <hedline>
-                        <hl1 tal:content="ob_title"></hl1>
-                    </hedline>
-                    </body.head>
-                    <body.content>
-                        <media media-type="image"
-                            tal:define="thumbnail python:view.get_image(item);"
-                            tal:condition="thumbnail">
-                        <media-reference tal:attributes="mime-type thumbnail/content_type;
-                                                        source string:${item/base_url}/@@images/image_large;
-                                                        alternate-text ob_title">
-                        </media-reference>
-                        <media-caption tal:content="item/context/imageCaption|nothing"></media-caption>
-                        </media>
-                        <tal:block tal:replace="structure item/render_content_core"/>          
-                    </body.content>
-                </body>
-                </nitf>
-            </DataContent>
-            </ContentItem>
-          </NewsComponent>
-        </NewsComponent>
-      </NewsComponent>
-    </NewsItem>
-  </tal:repeat>
-</NewsML>
diff --git a/Products/CMFPlone/browser/syndication/templates/rss.xml.pt b/Products/CMFPlone/browser/syndication/templates/rss.xml.pt
index d321789..d758656 100644
--- a/Products/CMFPlone/browser/syndication/templates/rss.xml.pt
+++ b/Products/CMFPlone/browser/syndication/templates/rss.xml.pt
@@ -2,29 +2,20 @@
 <rss version="2.0"
   xmlns:i18n="http://xml.zope.org/namespaces/i18n"
   xmlns:tal="http://xml.zope.org/namespaces/tal"
-  xmlns:atom="http://www.w3.org/2005/Atom"
   tal:define="feed view/feed">
   <channel>
-    <atom:link rel="self" 
-               type="application/rss+xml"
-               tal:attributes="href request/ACTUAL_URL" />
     <title tal:content="feed/title" />
     <link tal:content="feed/link" />
     <description tal:content="feed/description" />
-
+    
     <language tal:content="feed/language" />
     <copyright tal:content="feed/rights" />
     <generator>Plone</generator>
     <item tal:repeat="item feed/items">
       <title tal:content="item/title" />
+      <link tal:content="item/link" />
       <description tal:content="item/description" />
-      <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"
-          tal:condition="feed/settings/render_body">
-          <tal:opencdata tal:replace="structure python:'&lt;![CDATA['" />
-          <tal:block tal:replace="structure item/render_content_core"/>          
-          <tal:closecdata tal:replace="structure python:']]&gt;'" />
-      </content:encoded>
-      <pubDate tal:content="item/published/rfc822|item/modified/rfc822" />
+      <pubDate tal:content="item/published/HTML4|item/modified/HTML4" />
       <guid tal:content="item/guid|nothing" />
     </item>
   </channel>
diff --git a/Products/CMFPlone/browser/syndication/templates/search-rss.pt b/Products/CMFPlone/browser/syndication/templates/search-rss.pt
index 0187dad..533426b 100644
--- a/Products/CMFPlone/browser/syndication/templates/search-rss.pt
+++ b/Products/CMFPlone/browser/syndication/templates/search-rss.pt
@@ -32,12 +32,8 @@
     <title tal:content="item/title">Title</title>
     <link tal:content="item/link">Identifier</link>
     <description tal:content="item/description">Description</description>
-    <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"
-        tal:condition="feed/settings/render_body">
-        <tal:opencdata tal:replace="structure python:'&lt;![CDATA['" />
-        <tal:block tal:replace="structure item/render_content_core"/>          
-        <tal:closecdata tal:replace="structure python:']]&gt;'" />
-    </content:encoded>
+    <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/" tal:define="body item/body"
+        tal:content="structure python:'&lt;![CDATA[' + body + ']]&gt;'">Content</content:encoded>
     <tal:about tal:condition="syn/show_author_info">
       <dc:publisher tal:content="item/publisher" />
       <dc:creator tal:content="item/author_name">Creator</dc:creator>
diff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py
index 92c1524..6f870e0 100644
--- a/Products/CMFPlone/browser/syndication/tool.py
+++ b/Products/CMFPlone/browser/syndication/tool.py
@@ -1,4 +1,5 @@
 from Acquisition import aq_parent
+from DateTime import DateTime
 from AccessControl import Unauthorized
 
 from zope.component import getAdapter
diff --git a/Products/CMFPlone/browser/syndication/views.py b/Products/CMFPlone/browser/syndication/views.py
index 07c292c..86a696c 100644
--- a/Products/CMFPlone/browser/syndication/views.py
+++ b/Products/CMFPlone/browser/syndication/views.py
@@ -1,16 +1,11 @@
-from DateTime import DateTime
-from uuid import uuid3
-from uuid import NAMESPACE_OID
 from zope.component import queryAdapter
 from zope.component import getMultiAdapter
-from zope.cachedescriptors.property import Lazy as lazy_property
 from Products.Five import BrowserView
 from zExceptions import NotFound
 
 from Products.CMFPlone.interfaces.syndication import ISearchFeed
 from Products.CMFPlone.interfaces.syndication import IFeed
 from Products.CMFPlone.interfaces.syndication import IFeedSettings
-from Products.CMFPlone.interfaces.syndication import ISyndicatable
 from Products.CMFPlone import PloneMessageFactory as _
 
 from z3c.form import form, button, field
@@ -53,62 +48,6 @@ def __call__(self):
             return self.index()
 
 
-class NewsMLFeedView(FeedView):
-
-    def context_enabled(self):
-        settings = IFeedSettings(self.context, None)
-        if settings and not settings.enabled:
-            raise NotFound
-        else:
-            return True
-
-    @lazy_property
-    def current_date(self):
-        return DateTime()
-
-    def duid(self, item, value):
-        uid = uuid3(NAMESPACE_OID, item.uid + str(value))
-        return uid.hex
-
-    def get_image(self, item):
-        scales = item.context.restrictedTraverse('@@images')
-        if scales:
-            try:
-                return scales.scale('image')
-            except AttributeError:
-                pass
-        return None
-
-    def newsml_allowed(self):
-        util = getMultiAdapter((self.context, self.request),
-                               name='syndication-util')
-        if not util.site_enabled():
-            return False
-        elif ISyndicatable.providedBy(self.context):
-            settings = IFeedSettings(self.context, None)
-            if settings.enabled:
-                return True
-        return False
-
-    def newsml_enabled(self, raise404=False):
-        if not self.newsml_allowed():
-            if raise404:
-                raise NotFound
-            else:
-                return False
-        else:
-            return True
-
-    def __call__(self):
-        if self.newsml_enabled(raise404=True):
-            settings = IFeedSettings(self.context, None)
-            if settings and self.__name__ not in settings.feed_types:
-                raise NotFound
-            self.request.response.setHeader('Content-Type',
-                                            'application/vnd.iptc.g2.newsitem+xml')
-            return self.index()
-
-
 class SettingsForm(form.EditForm):
     label = _(u'heading_syndication_properties',
         default=u'Syndication Properties')
diff --git a/Products/CMFPlone/interfaces/syndication.py b/Products/CMFPlone/interfaces/syndication.py
index 897c18d..7e6086d 100644
--- a/Products/CMFPlone/interfaces/syndication.py
+++ b/Products/CMFPlone/interfaces/syndication.py
@@ -170,13 +170,6 @@ class ISiteSyndicationSettings(Interface):
         description=_(u'Should feeds include author information'),
         default=True)
 
-    render_body = schema.Bool(
-        title=_(u'Render Body'),
-        description=_(u'help_render_body',
-                      default=u'If body text available for item, '
-                      u'render it, otherwise use description.'),
-        default=False)
-
     max_items = schema.Int(
         title=_(u'label_syndication_max_items',
                 default=u'Maximum Items'),
diff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py
index 406ce5f..243909b 100644
--- a/Products/CMFPlone/tests/testSyndication.py
+++ b/Products/CMFPlone/tests/testSyndication.py
@@ -1,4 +1,3 @@
-import re
 from Products.CMFCore.utils import getToolByName
 from AccessControl import Unauthorized
 from Products.CMFPlone.tests import PloneTestCase
@@ -178,158 +177,3 @@ def test_max_items(self):
     def test_has_enclosure(self):
         self.assertEqual(self.feeddatadoc.has_enclosure, False)
         self.assertEqual(self.feeddatafile.has_enclosure, True)
-
-
-BODY_TEXT = """<p>Test text</p>
-<h2>Header</h2>
-<p class="one" id="test">New <span>Line</span></p>
-<a href="http://www.google.com" class="new">Google</a>
-<ol><li>one</li><li>two</li></ol>
-<ul><li>one</li><li>two</li></ul>
-"""
-ROOTED_BODY_TEXT = """<body>
-<p>Test text</p>
-<h2>Header rooted</h2>
-<p class="one" id="test">New <span>Line</span></p>
-<a href="http://www.google.com" class="new">Google</a>
-<ol><li>one</li><li>two</li></ol>
-<ul><li>one</li><li>two</li></ul>
-</body>
-"""
-
-
-class TestRenderBody(BaseSyndicationTest):
-
-    def afterSetUp(self):
-        super(TestRenderBody, self).afterSetUp()
-        self.folder.invokeFactory('News Item', 'news1')
-        self.folder.invokeFactory('News Item', 'news2')
-        self.news1 = self.folder.news1
-        self.news1.setTitle('News 1')
-        self.news1.setDescription('The news item #1')
-        self.news1.setText(BODY_TEXT)
-        self.news2 = self.folder.news2
-        self.news2.setTitle('News 2')
-        self.news2.setText(ROOTED_BODY_TEXT)
-        #Enable syndication on folder
-        registry = getUtility(IRegistry)
-        self.site_settings = registry.forInterface(ISiteSyndicationSettings)
-        settings = IFeedSettings(self.folder)
-        settings.enabled = True
-        settings.render_body = True
-        self.folder_settings = settings
-
-    def test_atom(self):
-        xml = self.folder.restrictedTraverse("@@atom.xml")()
-        self.assertTrue(len(re.findall('<entry>', xml)) == 5)
-        news1_feed = '<entry>\s*<title>News 1</title>\s*' \
-                     '<link rel="alternate" type="text/html" href="{0}"/>\s*' \
-                     '<id>urn:syndication:{1}</id>\s*' \
-                     '<summary>The news item #1</summary>\s*' \
-                     '<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">'.format(self.news1.absolute_url(),
-                                                                                                       self.news1.UID(),
-                                                                                                       self.folder.absolute_url())
-        self.assertTrue(re.search(news1_feed, xml) is not None)
-        self.assertTrue(re.search(BODY_TEXT, xml) is not None)
-        news2_feed = '<entry>\s*<title>News 2</title>\s*' \
-                     '<link rel="alternate" type="text/html" href="{0}"/>\s*' \
-                     '<id>urn:syndication:{1}</id>\s*' \
-                     '<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">'.format(self.news2.absolute_url(),
-                                                                                                       self.news2.UID(),
-                                                                                                       self.folder.absolute_url())
-        self.assertTrue(re.search(news2_feed, xml) is not None)
-        self.assertFalse(re.search(ROOTED_BODY_TEXT, xml) is not None)
-        self.assertTrue(re.search('<h2>Header rooted</h2>', xml) is not None)
-
-    def test_rss1(self):
-        xml = self.folder.restrictedTraverse("@@RSS")()
-        self.assertTrue(len(re.findall('<item ', xml)) == 5)
-        news_feed = '<item rdf:about="{0}">\s*<title>News 1</title>\s*' \
-                    '<link>{0}</link>\s*' \
-                    '<description>The news item #1</description>\s*' \
-                    '<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"'.format(self.news1.absolute_url())
-        self.assertTrue(re.search(news_feed, xml) is not None)
-        news_feed = '<item rdf:about="{0}">\s*<title>News 2</title>\s*' \
-                    '<link>{0}</link>\s*' \
-                    '<description></description>\s*' \
-                    '<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"'.format(self.news2.absolute_url())
-        self.assertTrue(re.search(news_feed, xml) is not None)
-
-    def test_rss2(self):
-        xml = self.folder.restrictedTraverse("@@rss.xml")()
-        self.assertTrue(len(re.findall('<item>', xml)) == 5)
-        news_feed = '<item>\s*<title>News 1</title>\s*' \
-                    '<description>The news item #1</description>\s*' \
-                    '<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"'
-        self.assertTrue(re.search(news_feed, xml) is not None)
-        news_feed = '<item>\s*<title>News 2</title>\s*' \
-                    '<description></description>\s*' \
-                    '<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"'
-        self.assertTrue(re.search(news_feed, xml) is not None)
-
-
-class TestNewsML(BaseSyndicationTest):
-
-    def afterSetUp(self):
-        self.syndication = getToolByName(self.portal, 'portal_syndication')
-        self.folder.invokeFactory('Document', 'doc')
-        self.folder.invokeFactory('Document', 'doc1')
-        self.folder.invokeFactory('News Item', 'news1')
-        self.folder.invokeFactory('News Item', 'news2')
-        self.folder.invokeFactory('File', 'file')
-        self.doc1 = self.folder.doc1
-        self.news1 = self.folder.news1
-        self.news1.setText(BODY_TEXT)
-        self.news2 = self.folder.news2
-        self.news2.setText(ROOTED_BODY_TEXT)
-        self.file = self.folder.file
-        #Enable syndication on folder
-        registry = getUtility(IRegistry)
-        self.site_settings = registry.forInterface(ISiteSyndicationSettings)
-        settings = IFeedSettings(self.folder)
-        settings.enabled = True
-        self.folder_settings = settings
-
-    def test_newsml_allowed_not_syndicatable(self):
-        view = self.folder.file.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_allowed(), False)
-
-    def test_newsml_allowed(self):
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_allowed(), True)
-
-    def test_newsml_allowed_site_disabled(self):
-        self.site_settings.allowed = False
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_allowed(), False)
-        view = self.news1.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_allowed(), False)
-
-    def test_newsml_enabled(self):
-        self.folder_settings.enabled = True
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_enabled(), True)
-
-    def test_not_newsml_enabled(self):
-        self.folder_settings.enabled = False
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_enabled(), False)
-
-    def test_newsml_enabled_site_disabled(self):
-        self.site_settings.allowed = False
-        self.folder_settings.enabled = True
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_enabled(), False)
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertEqual(view.newsml_enabled(), False)
-
-    def test_newsml_enabled_raises_404(self):
-        self.site_settings.allowed = False
-        view = self.folder.restrictedTraverse('@@newsml.xml')
-        self.assertRaises(NotFound, view.newsml_enabled, True)
-
-    def test_proper_response_headers(self):
-        self.folder_settings.feed_types = ('newsml.xml',)
-        self.folder.restrictedTraverse("@@newsml.xml")()
-        header = self.folder.REQUEST.response.getHeader("Content-Type")
-        self.assertEqual(header, "application/vnd.iptc.g2.newsitem+xml")


