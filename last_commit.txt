Repository: plone.namedfile
Branch: refs/heads/master
Date: 2015-01-08T02:23:35+01:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.namedfile/commit/aa41a85530fedef879e75800ea5c89f002bb634f

cache UID-based image URLs using the plone.stableResource ruleset

Files changed:
M docs/HISTORY.txt
M plone/namedfile/interfaces.py
M plone/namedfile/scaling.py

diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index 7f66b5d..715d448 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -4,7 +4,10 @@ Changelog
 3.0.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Cache image scales using the plone.stableResource ruleset
+  when they are accessed via UID-based URLs.
+  (Requires plone.app.imaging >= 1.1.0)
+  [davisagli]
 
 
 3.0.1 (2014-10-23)
diff --git a/plone/namedfile/interfaces.py b/plone/namedfile/interfaces.py
index ed4517c..cea5a5c 100644
--- a/plone/namedfile/interfaces.py
+++ b/plone/namedfile/interfaces.py
@@ -47,6 +47,17 @@ class IAvailableSizes(Interface):
     """A callable returning a dictionary of scale name => (width, height)
     """
 
+
+try:
+    from plone.app.imaging.interfaces import IStableImageScale
+except ImportError:
+    class IStableImageScale(Interface):
+        """ Marker for image scales when accessed with a UID-based URL.
+
+        These can be cached forever using the plone.stableResource ruleset.
+        """
+
+
 # Values
 
 class INamed(Interface):
diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index 5b8a126..bcf55f2 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -2,6 +2,7 @@
 from AccessControl.ZopeGuards import guarded_getattr
 from logging import exception
 from plone.namedfile.interfaces import IAvailableSizes
+from plone.namedfile.interfaces import IStableImageScale
 from plone.namedfile.utils import set_headers, stream_data
 from plone.rfc822.interfaces import IPrimaryFieldInfo
 from plone.scale.storage import AnnotationStorage
@@ -10,6 +11,7 @@
 from xml.sax.saxutils import quoteattr
 from ZODB.POSException import ConflictError
 from zope.component import queryUtility
+from zope.interface import alsoProvides
 from zope.interface import implements
 from zope.traversing.interfaces import ITraversable, TraversalError
 from zope.publisher.interfaces import IPublishTraverse, NotFound
@@ -148,6 +150,7 @@ def publishTraverse(self, request, name):
             info = storage.get(name)
             if info is not None:
                 scale_view = ImageScale(self.context, self.request, **info)
+                alsoProvides(scale_view, IStableImageScale)
                 return scale_view.__of__(self.context)
         else:
             # otherwise `name` must refer to a field...


