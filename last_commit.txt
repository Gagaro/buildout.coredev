Repository: plone.themepreview


Branch: refs/heads/master
Date: 2015-08-16T21:09:13+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.themepreview/commit/d2cf284584ef2723556deb5cddb48f0bd13ff21d

Upgrade bootstrap.py

Files changed:
M bootstrap.py

diff --git a/bootstrap.py b/bootstrap.py
index a629566..a459921 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -25,7 +25,10 @@
 
 from optparse import OptionParser
 
-tmpeggs = tempfile.mkdtemp()
+__version__ = '2015-07-01'
+# See zc.buildout's changelog if this version is up to date.
+
+tmpeggs = tempfile.mkdtemp(prefix='bootstrap-')
 
 usage = '''\
 [DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
@@ -40,8 +43,9 @@
 '''
 
 parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
+parser.add_option("--version",
+                  action="store_true", default=False,
+                  help=("Return bootstrap.py version."))
 parser.add_option("-t", "--accept-buildout-test-releases",
                   dest='accept_buildout_test_releases',
                   action="store_true", default=False,
@@ -59,25 +63,33 @@
 parser.add_option("--allow-site-packages",
                   action="store_true", default=False,
                   help=("Let bootstrap.py use existing site packages"))
+parser.add_option("--buildout-version",
+                  help="Use a specific zc.buildout version")
 parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
-
+                  help="Use a specific setuptools version")
+parser.add_option("--setuptools-to-dir",
+                  help=("Allow for re-use of existing directory of "
+                        "setuptools versions"))
 
 options, args = parser.parse_args()
+if options.version:
+    print("bootstrap.py version %s" % __version__)
+    sys.exit(0)
+
 
 ######################################################################
 # load/install setuptools
 
 try:
-    if options.allow_site_packages:
-        import setuptools
-        import pkg_resources
     from urllib.request import urlopen
 except ImportError:
     from urllib2 import urlopen
 
 ez = {}
-exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
+if os.path.exists('ez_setup.py'):
+    exec(open('ez_setup.py').read(), ez)
+else:
+    exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
 
 if not options.allow_site_packages:
     # ez_setup imports site, which adds site packages
@@ -88,12 +100,19 @@
     # We can't remove these reliably
     if hasattr(site, 'getsitepackages'):
         for sitepackage_path in site.getsitepackages():
-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
+            # Strip all site-packages directories from sys.path that
+            # are not sys.prefix; this is because on Windows
+            # sys.prefix is a site-package directory.
+            if sitepackage_path != sys.prefix:
+                sys.path[:] = [x for x in sys.path
+                               if sitepackage_path not in x]
 
 setup_args = dict(to_dir=tmpeggs, download_delay=0)
 
 if options.setuptools_version is not None:
     setup_args['version'] = options.setuptools_version
+if options.setuptools_to_dir is not None:
+    setup_args['to_dir'] = options.setuptools_to_dir
 
 ez['use_setuptools'](**setup_args)
 import setuptools
@@ -110,7 +129,12 @@
 
 ws = pkg_resources.working_set
 
+setuptools_path = ws.find(
+    pkg_resources.Requirement.parse('setuptools')).location
+
+# Fix sys.path here as easy_install.pth added before PYTHONPATH
 cmd = [sys.executable, '-c',
+       'import sys; sys.path[0:0] = [%r]; ' % setuptools_path +
        'from setuptools.command.easy_install import main; main()',
        '-mZqNxd', tmpeggs]
 
@@ -123,11 +147,8 @@
 if find_links:
     cmd.extend(['-f', find_links])
 
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
 requirement = 'zc.buildout'
-version = options.version
+version = options.buildout_version
 if version is None and not options.accept_buildout_test_releases:
     # Figure out the most recent final version of zc.buildout.
     import setuptools.package_index
@@ -167,7 +188,7 @@ def _final_version(parsed_version):
 cmd.append(requirement)
 
 import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
+if subprocess.call(cmd) != 0:
     raise Exception(
         "Failed to execute command:\n%s" % repr(cmd)[1:-1])
 


Repository: plone.themepreview


Branch: refs/heads/master
Date: 2015-08-16T21:43:34+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.themepreview/commit/5c932de3c4d3f06ff21e8e2dde4130af77e160db

Add Plone-version specific example buildouts

Files changed:
A base.cfg
A plone-4.x.cfg
A plone-5.x.cfg
M .travis.yml
M buildout.cfg
D travis.cfg

diff --git a/.travis.yml b/.travis.yml
index c3dfdf2..9d0b2f6 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,8 +9,8 @@ before_install:
 - sh -e /etc/init.d/xvfb start
 install:
 - mkdir -p build/html
-- ython bootstrap.py -c travis.cfg
-- bin/buildout -N -t 3 -c travis.cfg
+- python bootstrap.py -c plone-$PLONE_VERSION.cfg
+- bin/buildout -N -t 3 -c plone-$PLONE_VERSION.cfg
 before_script:
 - gem install --version 0.8.9 faraday
 - gem install travis-artifacts
@@ -21,6 +21,8 @@ after_script:
 - travis-artifacts upload --path build/html
 - travis-artifacts upload --target-path latest --path build/html
 env:
+  - PLONE_VERSION=5.x
+  - PLONE_VERSION=4.x
   global:
   - ARTIFACTS_S3_BUCKET=plone.themepreview
   - secure: i7LN43fLQvERhIHSPaz8xp4KUX0bAslkq7rp3khlCZbAN7QD/W9FfNwu4EkmgvXrU87/rQlWknRQC8BhBhHlPuzZU2gdO9jNq6e0z7RD+Gx37z5l5gDDxTRaxKpkPeE/z/wcP5MG4021oGWkPC0Y9qYl0nM9R9umbckGqrAQ/vg=
diff --git a/base.cfg b/base.cfg
new file mode 100644
index 0000000..f213eed
--- /dev/null
+++ b/base.cfg
@@ -0,0 +1,39 @@
+[buildout]
+extends = https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg
+parts = sphinx-build pybot
+allow-picked-versions = true
+
+extensions = mr.developer
+sources = sources
+auto-checkout =
+
+eggs =
+
+[sources]
+
+[versions]
+zc.buildout =
+setuptools =
+Sphinx =
+docutils =
+
+[sphinx-build]
+recipe = zc.recipe.egg
+eggs =
+    Plone
+    plone.app.robotframework [debug]
+    Sphinx
+    sphinx-rtd-theme
+    sphinxcontrib-robotframework [docs]
+    ${buildout:eggs}
+scripts =
+    sphinx-build
+    robot-server
+    pybot=robot
+
+[pybot]
+recipe = zc.recipe.egg
+eggs =
+    plone.app.robotframework
+    robotframework-selenium2screenshots
+scripts = pybot
diff --git a/buildout.cfg b/buildout.cfg
index ed58d48..5e29614 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,40 +1,2 @@
 [buildout]
-extends =
-    http://dist.plone.org/release/4-latest/versions.cfg
-    https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg
-parts = sphinx-build pybot
-allow-picked-versions = true
-
-extensions = mr.developer
-sources = sources
-auto-checkout =
-
-eggs =
-
-[sources]
-
-[versions]
-zc.buildout =
-setuptools =
-Sphinx = 1.2.1
-
-[sphinx-build]
-recipe = zc.recipe.egg
-eggs =
-    Plone
-    plone.app.robotframework [debug]
-    Sphinx
-    sphinx-rtd-theme
-    sphinxcontrib-robotframework [docs]
-    ${buildout:eggs}
-scripts =
-    sphinx-build
-    robot-server
-    pybot=robot
-
-[pybot]
-recipe = zc.recipe.egg
-eggs =
-    plone.app.robotframework
-    robotframework-selenium2screenshots
-scripts = pybot
+extends = plone-5.x.cfg
diff --git a/plone-4.x.cfg b/plone-4.x.cfg
new file mode 100644
index 0000000..485b83e
--- /dev/null
+++ b/plone-4.x.cfg
@@ -0,0 +1,4 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/4-latest/versions.cfg
+    base.cfg
diff --git a/plone-5.x.cfg b/plone-5.x.cfg
new file mode 100644
index 0000000..7aaacc1
--- /dev/null
+++ b/plone-5.x.cfg
@@ -0,0 +1,4 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/5-latest/versions.cfg
+    base.cfg
diff --git a/travis.cfg b/travis.cfg
deleted file mode 100644
index e2b2b94..0000000
--- a/travis.cfg
+++ /dev/null
@@ -1,10 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/buildout-cache.cfg
-    buildout.cfg
-parts =
-    download
-    install
-    sphinx-build
-    pybot
-plone-series = 4.3


Repository: plone.themepreview


Branch: refs/heads/master
Date: 2015-08-16T21:47:10+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.themepreview/commit/398aa1c0c937e25162aa96f2da75454494e34a4b

Merge pull request #2 from plone/datakurre-travis-matrix

Update Travis-CI -build

Files changed:
A base.cfg
A plone-4.x.cfg
A plone-5.x.cfg
M .travis.yml
M bootstrap.py
M buildout.cfg
D travis.cfg

diff --git a/.travis.yml b/.travis.yml
index c3dfdf2..9d0b2f6 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,8 +9,8 @@ before_install:
 - sh -e /etc/init.d/xvfb start
 install:
 - mkdir -p build/html
-- ython bootstrap.py -c travis.cfg
-- bin/buildout -N -t 3 -c travis.cfg
+- python bootstrap.py -c plone-$PLONE_VERSION.cfg
+- bin/buildout -N -t 3 -c plone-$PLONE_VERSION.cfg
 before_script:
 - gem install --version 0.8.9 faraday
 - gem install travis-artifacts
@@ -21,6 +21,8 @@ after_script:
 - travis-artifacts upload --path build/html
 - travis-artifacts upload --target-path latest --path build/html
 env:
+  - PLONE_VERSION=5.x
+  - PLONE_VERSION=4.x
   global:
   - ARTIFACTS_S3_BUCKET=plone.themepreview
   - secure: i7LN43fLQvERhIHSPaz8xp4KUX0bAslkq7rp3khlCZbAN7QD/W9FfNwu4EkmgvXrU87/rQlWknRQC8BhBhHlPuzZU2gdO9jNq6e0z7RD+Gx37z5l5gDDxTRaxKpkPeE/z/wcP5MG4021oGWkPC0Y9qYl0nM9R9umbckGqrAQ/vg=
diff --git a/base.cfg b/base.cfg
new file mode 100644
index 0000000..f213eed
--- /dev/null
+++ b/base.cfg
@@ -0,0 +1,39 @@
+[buildout]
+extends = https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg
+parts = sphinx-build pybot
+allow-picked-versions = true
+
+extensions = mr.developer
+sources = sources
+auto-checkout =
+
+eggs =
+
+[sources]
+
+[versions]
+zc.buildout =
+setuptools =
+Sphinx =
+docutils =
+
+[sphinx-build]
+recipe = zc.recipe.egg
+eggs =
+    Plone
+    plone.app.robotframework [debug]
+    Sphinx
+    sphinx-rtd-theme
+    sphinxcontrib-robotframework [docs]
+    ${buildout:eggs}
+scripts =
+    sphinx-build
+    robot-server
+    pybot=robot
+
+[pybot]
+recipe = zc.recipe.egg
+eggs =
+    plone.app.robotframework
+    robotframework-selenium2screenshots
+scripts = pybot
diff --git a/bootstrap.py b/bootstrap.py
index a629566..a459921 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -25,7 +25,10 @@
 
 from optparse import OptionParser
 
-tmpeggs = tempfile.mkdtemp()
+__version__ = '2015-07-01'
+# See zc.buildout's changelog if this version is up to date.
+
+tmpeggs = tempfile.mkdtemp(prefix='bootstrap-')
 
 usage = '''\
 [DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
@@ -40,8 +43,9 @@
 '''
 
 parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
+parser.add_option("--version",
+                  action="store_true", default=False,
+                  help=("Return bootstrap.py version."))
 parser.add_option("-t", "--accept-buildout-test-releases",
                   dest='accept_buildout_test_releases',
                   action="store_true", default=False,
@@ -59,25 +63,33 @@
 parser.add_option("--allow-site-packages",
                   action="store_true", default=False,
                   help=("Let bootstrap.py use existing site packages"))
+parser.add_option("--buildout-version",
+                  help="Use a specific zc.buildout version")
 parser.add_option("--setuptools-version",
-                  help="use a specific setuptools version")
-
+                  help="Use a specific setuptools version")
+parser.add_option("--setuptools-to-dir",
+                  help=("Allow for re-use of existing directory of "
+                        "setuptools versions"))
 
 options, args = parser.parse_args()
+if options.version:
+    print("bootstrap.py version %s" % __version__)
+    sys.exit(0)
+
 
 ######################################################################
 # load/install setuptools
 
 try:
-    if options.allow_site_packages:
-        import setuptools
-        import pkg_resources
     from urllib.request import urlopen
 except ImportError:
     from urllib2 import urlopen
 
 ez = {}
-exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
+if os.path.exists('ez_setup.py'):
+    exec(open('ez_setup.py').read(), ez)
+else:
+    exec(urlopen('https://bootstrap.pypa.io/ez_setup.py').read(), ez)
 
 if not options.allow_site_packages:
     # ez_setup imports site, which adds site packages
@@ -88,12 +100,19 @@
     # We can't remove these reliably
     if hasattr(site, 'getsitepackages'):
         for sitepackage_path in site.getsitepackages():
-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]
+            # Strip all site-packages directories from sys.path that
+            # are not sys.prefix; this is because on Windows
+            # sys.prefix is a site-package directory.
+            if sitepackage_path != sys.prefix:
+                sys.path[:] = [x for x in sys.path
+                               if sitepackage_path not in x]
 
 setup_args = dict(to_dir=tmpeggs, download_delay=0)
 
 if options.setuptools_version is not None:
     setup_args['version'] = options.setuptools_version
+if options.setuptools_to_dir is not None:
+    setup_args['to_dir'] = options.setuptools_to_dir
 
 ez['use_setuptools'](**setup_args)
 import setuptools
@@ -110,7 +129,12 @@
 
 ws = pkg_resources.working_set
 
+setuptools_path = ws.find(
+    pkg_resources.Requirement.parse('setuptools')).location
+
+# Fix sys.path here as easy_install.pth added before PYTHONPATH
 cmd = [sys.executable, '-c',
+       'import sys; sys.path[0:0] = [%r]; ' % setuptools_path +
        'from setuptools.command.easy_install import main; main()',
        '-mZqNxd', tmpeggs]
 
@@ -123,11 +147,8 @@
 if find_links:
     cmd.extend(['-f', find_links])
 
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
 requirement = 'zc.buildout'
-version = options.version
+version = options.buildout_version
 if version is None and not options.accept_buildout_test_releases:
     # Figure out the most recent final version of zc.buildout.
     import setuptools.package_index
@@ -167,7 +188,7 @@ def _final_version(parsed_version):
 cmd.append(requirement)
 
 import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
+if subprocess.call(cmd) != 0:
     raise Exception(
         "Failed to execute command:\n%s" % repr(cmd)[1:-1])
 
diff --git a/buildout.cfg b/buildout.cfg
index ed58d48..5e29614 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,40 +1,2 @@
 [buildout]
-extends =
-    http://dist.plone.org/release/4-latest/versions.cfg
-    https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg
-parts = sphinx-build pybot
-allow-picked-versions = true
-
-extensions = mr.developer
-sources = sources
-auto-checkout =
-
-eggs =
-
-[sources]
-
-[versions]
-zc.buildout =
-setuptools =
-Sphinx = 1.2.1
-
-[sphinx-build]
-recipe = zc.recipe.egg
-eggs =
-    Plone
-    plone.app.robotframework [debug]
-    Sphinx
-    sphinx-rtd-theme
-    sphinxcontrib-robotframework [docs]
-    ${buildout:eggs}
-scripts =
-    sphinx-build
-    robot-server
-    pybot=robot
-
-[pybot]
-recipe = zc.recipe.egg
-eggs =
-    plone.app.robotframework
-    robotframework-selenium2screenshots
-scripts = pybot
+extends = plone-5.x.cfg
diff --git a/plone-4.x.cfg b/plone-4.x.cfg
new file mode 100644
index 0000000..485b83e
--- /dev/null
+++ b/plone-4.x.cfg
@@ -0,0 +1,4 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/4-latest/versions.cfg
+    base.cfg
diff --git a/plone-5.x.cfg b/plone-5.x.cfg
new file mode 100644
index 0000000..7aaacc1
--- /dev/null
+++ b/plone-5.x.cfg
@@ -0,0 +1,4 @@
+[buildout]
+extends =
+    http://dist.plone.org/release/5-latest/versions.cfg
+    base.cfg
diff --git a/travis.cfg b/travis.cfg
deleted file mode 100644
index e2b2b94..0000000
--- a/travis.cfg
+++ /dev/null
@@ -1,10 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/buildout-cache.cfg
-    buildout.cfg
-parts =
-    download
-    install
-    sphinx-build
-    pybot
-plone-series = 4.3


