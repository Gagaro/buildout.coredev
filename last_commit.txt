Repository: Products.CMFPlone
Branch: refs/heads/master
Date: 2015-02-21T21:34:46-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/35bba15124f19e4fbf583f3c9af2b341301df820

make sure always-installed profiles don't show up in addons control panel

Files changed:
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/factory.py

diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
index 7a6ee1c..83414c5 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
@@ -1,10 +1,12 @@
-from Products.CMFPlone import PloneMessageFactory as _
 from Products.CMFCore.utils import getToolByName
-import logging
+from Products.CMFPlone import PloneMessageFactory as _
+from Products.CMFPlone.interfaces import INonInstallable
 from Products.Five.browser import BrowserView
-from Products.statusmessages.interfaces import IStatusMessage
 from Products.GenericSetup import EXTENSION
+from Products.statusmessages.interfaces import IStatusMessage
 from plone.memoize import view
+from zope.component import getAllUtilitiesRegisteredFor
+import logging
 
 
 class ManageProductsView(BrowserView):
@@ -25,12 +27,19 @@ def __call__(self):
     def marshall_addons(self):
         addons = {}
 
+        ignore_profiles = []
+        utils = getAllUtilitiesRegisteredFor(INonInstallable)
+        for util in utils:
+            ignore_profiles.extend(util.getNonInstallableProfiles())
+
         profiles = self.ps.listProfileInfo()
         for profile in profiles:
             if profile['type'] != EXTENSION:
                 continue
 
             pid = profile['id']
+            if pid in ignore_profiles:
+                continue
             pid_parts = pid.split(':')
             if len(pid_parts) != 2:
                 logging.error("Profile with id '%s' is invalid." % pid)
@@ -153,12 +162,12 @@ def upgrade_product(self, product):
         try:
             qi.upgradeProduct(product)
             messages.addStatusMessage(
-                _(u'Upgraded ${product}!', mapping={'addon', product}), type="info")
+                _(u'Upgraded ${product}!', mapping={'product', product}), type="info")
             return True
         except Exception, e:
             logging.error("Could not upgrade %s: %s" % (product, e))
             messages.addStatusMessage(
-                _(u'Error upgrading %{addon}.', mapping={'addon': product}), type="error")
+                _(u'Error upgrading ${product}.', mapping={'product': product}), type="error")
 
         return False
 
@@ -194,7 +203,7 @@ def __call__(self):
                 # TODO: find out where this is and don't run already
                 # activated profiles
                 setupTool.runAllImportStepsFromProfile(profile)
-                msg = _(u'Installed ${product}!', mapping={'addon': profile})
+                msg = _(u'Installed ${product}!', mapping={'product': profile})
                 messages.addStatusMessage(msg, type=msg_type)
 
         purl = getToolByName(self.context, 'portal_url')()
@@ -213,11 +222,11 @@ def __call__(self):
             for product in products:
                 try:
                     qi.uninstallProducts(products=[product, ])
-                    msg = _(u'Uninstalled ${product}.', mapping={'addon': product})
+                    msg = _(u'Uninstalled ${product}.', mapping={'product': product})
                 except Exception, e:
                     logging.error("Could not uninstall %s: %s" % (product, e))
                     msg_type = 'error'
-                    msg = _(u'Error uninstalling ${product}.', mapping={'addon': product})
+                    msg = _(u'Error uninstalling ${product}.', mapping={'product': product})
                 messages.addStatusMessage(msg, type=msg_type)
 
         purl = getToolByName(self.context, 'portal_url')()
diff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py
index 594e9f0..ee8d0cb 100644
--- a/Products/CMFPlone/factory.py
+++ b/Products/CMFPlone/factory.py
@@ -51,14 +51,18 @@ def getNonInstallableProfiles(self):
                 u'plone.app.contenttypes:default',
                 u'plone.app.dexterity:default',
                 u'plone.app.discussion:default',
-                u'plone.app.event.at:default',
-                u'plone.app.event.dx:default',
+                u'plone.app.event:default',
                 u'plone.app.folder:default',
                 u'plone.app.imaging:default',
                 u'plone.app.jquery:initial-upgrade',
+                u'plone.app.jquery:default',
+                u'plone.app.jquerytools:default',
                 u'plone.app.registry:default',
+                u'plone.app.theming:default',
+                u'plone.app.versioningbehavior:default',
                 u'plone.formwidget.recurrence:default',
                 u'plone.resource:default',
+                u'plonetheme.barceloneta:default',
                 ]
 
 


