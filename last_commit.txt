Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-18T17:05:23+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/65851d40c537ec4b77324d3cf49d8b0131522cbe

Adding widget.use_wild_card_search parameter, see issue #23

Files changed:
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/config.py
M src/archetypes/referencebrowserwidget/tests/test_product.py
M src/archetypes/referencebrowserwidget/widget.py

diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index faf8e2e..cd855a2 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -36,6 +36,7 @@
 from Products.CMFPlone.PloneBatch import Batch
 
 from archetypes.referencebrowserwidget import utils
+from archetypes.referencebrowserwidget.config import WILDCARDABLE_INDEXES
 from archetypes.referencebrowserwidget.interfaces import IFieldRelation
 from archetypes.referencebrowserwidget.interfaces import \
         IReferenceBrowserHelperView
@@ -266,6 +267,17 @@ def filtered_indexes(self):
     def getResult(self):
         assert self._updated
         result = []
+
+        # turn search string into a wildcard search if relevant, so if
+        # wild_card_search is True and if current index is a ZCTextIndex
+        index = self.search_catalog.Indexes[self.search_index]
+        if self.search_text and self.widget.use_wildcard_search and index.getTagName() in WILDCARDABLE_INDEXES:
+            # only append a '*' if not already ending with a '*' and not surrounded
+            # by " ", this is the case if user want to search exact match
+            if not self.search_text.endswith('*') and \
+               not (self.search_text.startswith('"') and self.search_text.endswith('"')):
+                self.request[self.search_index] = "{0}*".format(self.search_text)
+
         qc = getMultiAdapter((self.context, self.request),
                              name='refbrowser_querycatalog')
         if self.widget.show_results_without_query or self.search_text:
diff --git a/src/archetypes/referencebrowserwidget/config.py b/src/archetypes/referencebrowserwidget/config.py
index fe755b2..864068e 100644
--- a/src/archetypes/referencebrowserwidget/config.py
+++ b/src/archetypes/referencebrowserwidget/config.py
@@ -1,3 +1,5 @@
 PROJECTNAME = "referencebrowserwidget"
 
 WITH_SAMPLE_TYPES = False
+
+WILDCARDABLE_INDEXES = ('ZCTextIndex', )
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index ff28f75..5c6f9fc 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -345,6 +345,59 @@ def test_subsite_query(self):
         # content outside subsite should also be returned
         self.assertTrue(len(results) > 1)
 
+    def test_use_wildcard_search(self):
+        """Test while widget.use_wildcard_search is True or False."""
+        fieldname = 'singleRef'
+        self.request.set('at_url', '/plone/layer1/layer2/ref')
+        self.request.set('fieldName', fieldname)
+        self.request.set('fieldRealName', fieldname)
+        field = self.obj.getField(fieldname)
+        # create 2 documents we will query
+        wc1 = makeContent(self.folder, portal_type='Document', id='wildcard1', title='WildCard1')
+        wc2 = makeContent(self.folder, portal_type='Document', id='wildcard2', title='WildCard2')
+        # we will search on term 'wildcard'
+        self.request.set('search_index', 'SearchableText')
+        self.request.set('searchValue', 'wildcard')
+        self.request.set('sort_on', 'created')
+
+        # enable use_wildcard_search
+        field.widget.use_wildcard_search = True
+        # as wild card is activated, it will find folders 'layer1' and 'layer2'
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 2)
+        self.assertTrue(result[0]['item'].UID == wc1.UID())
+        self.assertTrue(result[1]['item'].UID == wc2.UID())
+        # we can force exact match by surrounding searchValue with ""
+        self.request.set('searchValue', '"wildcard"')
+        popup = self._getPopup()
+        self.assertTrue(not popup.getResult())
+        # exact match to something that exists...
+        self.request.set('searchValue', '"wildcard1"')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc1.UID())
+
+        # disable use_wildcard_search
+        field.widget.use_wildcard_search = False
+        self.request.set('searchValue', 'wildcard')
+        # this will find nothing...
+        popup = self._getPopup()
+        self.assertTrue(not popup.getResult())
+        # querying exact match will find it
+        self.request.set('searchValue', 'wildcard2')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc2.UID())
+        # using "" works too
+        self.request.set('searchValue', '"wildcard2"')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc2.UID())
+
 
 class PopupBreadcrumbTestCase(PopupBaseTestCase):
     """ Test the popup breadcrumbs """
diff --git a/src/archetypes/referencebrowserwidget/widget.py b/src/archetypes/referencebrowserwidget/widget.py
index 8907231..88ca8fb 100644
--- a/src/archetypes/referencebrowserwidget/widget.py
+++ b/src/archetypes/referencebrowserwidget/widget.py
@@ -40,6 +40,7 @@ class ReferenceBrowserWidget(ReferenceWidget):
         'browsable_types': (),
         'top_popup_helper': None,
         'bottom_popup_helper': None,
+        'use_wildcard_search': 1,
         })
 
     # for documentation of properties see: README.txt


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-19T11:03:46+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/02537c959bf47c9db7d59664b1d8c5c3b2751d46

Display a help message if wildcard search is available for currently selected index

Files changed:
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js

diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index 5f20cd8..4bd541f 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -16,6 +16,7 @@
                   title python:widget.Label(at_obj);
                   search_index view/search_index;
                   search_text view/search_text;
+                  wildcardable_indexes view/wildcardable_indexes;
                   available_indexes widget/available_indexes;
                   allow_browse widget/allow_browse;
                   image_portal_types widget/image_portal_types;
@@ -97,6 +98,14 @@
                i18n:domain="plone"
                i18n:attributes="value label_search;"
                />
+  &nbsp;<span style="font-weight: bold; color: grey; border-bottom: 1px dotted; cursor: help;"
+              title="#"
+              id="searchWildcardHelp"
+              tal:condition="python: search_index in wildcardable_indexes"
+              i18n:attributes="title"
+              data-wildcardableIndexes="#"
+              tal:attributes='title python: widget.use_wildcard_search and "wild_card_search_enabled_help" or "wild_card_search_disabled_help";
+                              data-wildcardableIndexes wildcardable_indexes'>?</span>
       </div>
      </tal:formactions>
 
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index cd855a2..4de9342 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -264,6 +264,12 @@ def filtered_indexes(self):
         avail = self.widget.available_indexes
         return [index for index in indexes if not avail or index in avail]
 
+    @property
+    def wildcardable_indexes(self):
+        assert self._updated
+        indexes = self.search_catalog.Indexes.values()
+        return [index.getId() for index in indexes if index.getTagName() in WILDCARDABLE_INDEXES]
+
     def getResult(self):
         assert self._updated
         result = []
@@ -271,7 +277,7 @@ def getResult(self):
         # turn search string into a wildcard search if relevant, so if
         # wild_card_search is True and if current index is a ZCTextIndex
         index = self.search_catalog.Indexes[self.search_index]
-        if self.search_text and self.widget.use_wildcard_search and index.getTagName() in WILDCARDABLE_INDEXES:
+        if self.search_text and self.widget.use_wildcard_search and index.getId() in self.wildcardable_indexes:
             # only append a '*' if not already ending with a '*' and not surrounded
             # by " ", this is the case if user want to search exact match
             if not self.search_text.endswith('*') and \
diff --git a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
index 54396d5..bf1b5ef 100644
--- a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
+++ b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
@@ -447,6 +447,17 @@ jQuery(function ($) {
         });
     }
 
+    $(document).on('change', '#indexSelector', function (event) {
+        if ($.inArray(this.value, eval($('#searchWildcardHelp').data()['wildcardableindexes'])) === -1) {
+            // make sure searchWildcardHelp is hidden
+            $('#searchWildcardHelp').css("display", "none");
+        }
+        else {
+            // make sure searchWildcardHelp is shown
+            $('#searchWildcardHelp').css("display", "");
+        }
+    });
+
     $(document).ready(function () {
         $('input.removereference').click(function (event) {
             event.preventDefault();


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-19T11:06:53+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/7f37f30bd8155b2cd77b37988beacceb7a3b10f9

Updated changelog

Files changed:
M docs/CHANGES.txt

diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 407d296..8f81deb 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -13,11 +13,14 @@ Changelog
 
 - #16 fix browsing for widgets in case field has set ``allowed_types``
 
-  (Warning: changed return value of view/getResult from 
+  (Warning: changed return value of view/getResult from
   `[`brain1, brain2,..]``  to ``[dict(item=brain1,browsable=True,
-  referenceable=False),...]`` in case you customized popup.pt) 
+  referenceable=False),...]`` in case you customized popup.pt)
   [fRiSi]
 
+- #23 added parameter 'use_wildcard_search' to widget, True by default
+  [gbastien]
+
 
 2.5.2 (2014-09-11)
 ------------------
@@ -25,7 +28,7 @@ Changelog
 - Fix the "Clear Reference" button, which was not working due to the
   refbrowser_removeReference function hidden in a anonymous function.
   [thet]
-  
+
 - fixed allowed_types
   [agitator]
 
@@ -375,4 +378,3 @@ Changelog
 
 - Merged javascript files to one, which is included only with the widget
   [tom_gross]
-


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-19T11:13:18+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/d24676193c2ce7e28c4229cd18df352caa74f11a

Updated demo to be able to test disabled wildcard search easily, see issue #23

Files changed:
M src/archetypes/referencebrowserwidget/demo.py

diff --git a/src/archetypes/referencebrowserwidget/demo.py b/src/archetypes/referencebrowserwidget/demo.py
index 801223e..e40006d 100644
--- a/src/archetypes/referencebrowserwidget/demo.py
+++ b/src/archetypes/referencebrowserwidget/demo.py
@@ -51,7 +51,8 @@
         widget=ReferenceBrowserWidget(
             show_indexes=1,
             history_length=5,
-            description='And here is another field.  Startup directory is /Members.',
+            use_wildcard_search=False,
+            description='And here is another field.  Startup directory is /Members.  Wildcard search is disabled.',
             startup_directory='/Members')),
 
     ReferenceField('multiRef4',


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-20T09:48:16+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/16b0051adf88cb88b2613185661b5de90ba3aa6e

Avoid to use jQuery eval() method, make sure data is valid JSON so it can be extracted automatically by jQuery.data

Files changed:
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js

diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index 4bd541f..b6bbdd6 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -17,6 +17,7 @@
                   search_index view/search_index;
                   search_text view/search_text;
                   wildcardable_indexes view/wildcardable_indexes;
+                  wildcardable_indexes_as_json view/wildcardable_indexes_as_json;
                   available_indexes widget/available_indexes;
                   allow_browse widget/allow_browse;
                   image_portal_types widget/image_portal_types;
@@ -105,7 +106,7 @@
               i18n:attributes="title"
               data-wildcardableIndexes="#"
               tal:attributes='title python: widget.use_wildcard_search and "wild_card_search_enabled_help" or "wild_card_search_disabled_help";
-                              data-wildcardableIndexes wildcardable_indexes'>?</span>
+                              data-wildcardableIndexes wildcardable_indexes_as_json'>?</span>
       </div>
      </tal:formactions>
 
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index 4de9342..e80d70a 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -1,4 +1,5 @@
 from types import ListType, TupleType
+import json
 import urllib
 import re
 
@@ -39,7 +40,7 @@
 from archetypes.referencebrowserwidget.config import WILDCARDABLE_INDEXES
 from archetypes.referencebrowserwidget.interfaces import IFieldRelation
 from archetypes.referencebrowserwidget.interfaces import \
-        IReferenceBrowserHelperView
+    IReferenceBrowserHelperView
 
 default_popup_template = named_template_adapter(
     ViewPageTemplateFile('popup.pt'))
@@ -270,6 +271,10 @@ def wildcardable_indexes(self):
         indexes = self.search_catalog.Indexes.values()
         return [index.getId() for index in indexes if index.getTagName() in WILDCARDABLE_INDEXES]
 
+    @property
+    def wildcardable_indexes_as_json(self):
+        return json.dumps(self.wildcardable_indexes)
+
     def getResult(self):
         assert self._updated
         result = []
diff --git a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
index bf1b5ef..5c97113 100644
--- a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
+++ b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
@@ -448,7 +448,7 @@ jQuery(function ($) {
     }
 
     $(document).on('change', '#indexSelector', function (event) {
-        if ($.inArray(this.value, eval($('#searchWildcardHelp').data()['wildcardableindexes'])) === -1) {
+        if ($.inArray(this.value, $('#searchWildcardHelp').data()['wildcardableindexes']) === -1) {
             // make sure searchWildcardHelp is hidden
             $('#searchWildcardHelp').css("display", "none");
         }


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-23T10:29:12+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/cf40286a415359c574d1d9ac0393d5dfdd137ceb

Moved help message translation to a method on the popup view, see issue #23

Files changed:
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py

diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index b6bbdd6..0e2dabd 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -105,8 +105,8 @@
               tal:condition="python: search_index in wildcardable_indexes"
               i18n:attributes="title"
               data-wildcardableIndexes="#"
-              tal:attributes='title python: widget.use_wildcard_search and "wild_card_search_enabled_help" or "wild_card_search_disabled_help";
-                              data-wildcardableIndexes wildcardable_indexes_as_json'>?</span>
+              tal:attributes="title view/wildcard_help_message;
+                              data-wildcardableIndexes wildcardable_indexes_as_json">?</span>
       </div>
      </tal:formactions>
 
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index e80d70a..5bc62fe 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -46,6 +46,7 @@
     ViewPageTemplateFile('popup.pt'))
 
 PMF = MessageFactory('plone')
+RBWMF = MessageFactory('archetypes.referencebrowserwidget')
 
 
 class ReferenceBrowserHelperView(BrowserView):
@@ -275,6 +276,20 @@ def wildcardable_indexes(self):
     def wildcardable_indexes_as_json(self):
         return json.dumps(self.wildcardable_indexes)
 
+    @property
+    def wildcard_help_message(self):
+        if self.widget.use_wildcard_search:
+            return RBWMF("wild_card_search_enabled_help",
+                         default="Full-text search is enabled: searching for 'budget' will also "
+                         "return elements containing 'budgetary'. If you want to search exact "
+                         "macth, add quotation marks around the word: \"budget\".")
+        else:
+            return RBWMF("wild_card_search_disabled_help",
+                         default="Full-text search is disabled: searching for 'budget' will only "
+                         "return elements containing exact term 'budget'. You can enable full-text search "
+                         "by appending a '*' at the end of a word. For example, searching for 'budget*' "
+                         "will also return elements containing 'budgetary'.")
+
     def getResult(self):
         assert self._updated
         result = []


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-23T13:18:39+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/051bd8e88719c262274947c465b4502611836a50

Typo + use _ to translate so i18ndude can find the msgid

Files changed:
M src/archetypes/referencebrowserwidget/browser/view.py

diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index 5bc62fe..dd64c59 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -46,7 +46,7 @@
     ViewPageTemplateFile('popup.pt'))
 
 PMF = MessageFactory('plone')
-RBWMF = MessageFactory('archetypes.referencebrowserwidget')
+_ = MessageFactory('archetypes.referencebrowserwidget')
 
 
 class ReferenceBrowserHelperView(BrowserView):
@@ -279,16 +279,16 @@ def wildcardable_indexes_as_json(self):
     @property
     def wildcard_help_message(self):
         if self.widget.use_wildcard_search:
-            return RBWMF("wild_card_search_enabled_help",
-                         default="Full-text search is enabled: searching for 'budget' will also "
-                         "return elements containing 'budgetary'. If you want to search exact "
-                         "macth, add quotation marks around the word: \"budget\".")
+            return _("wild_card_search_enabled_help",
+                     default="Full-text search is enabled: searching for 'budget' will also "
+                     "return elements containing 'budgetary'. If you want to search exact "
+                     "match, add quotation marks around the word: \"budget\".")
         else:
-            return RBWMF("wild_card_search_disabled_help",
-                         default="Full-text search is disabled: searching for 'budget' will only "
-                         "return elements containing exact term 'budget'. You can enable full-text search "
-                         "by appending a '*' at the end of a word. For example, searching for 'budget*' "
-                         "will also return elements containing 'budgetary'.")
+            return _("wild_card_search_disabled_help",
+                     default="Full-text search is disabled: searching for 'budget' will only "
+                     "return elements containing exact term 'budget'. You can enable full-text search "
+                     "by appending a '*' at the end of a word. For example, searching for 'budget*' "
+                     "will also return elements containing 'budgetary'.")
 
     def getResult(self):
         assert self._updated


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-23T19:01:55+01:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/65394a20f0ed41e07b33effa1a653faa3e17f8f8

Merge pull request #24 from gbastien/master

New feature widget.use_wildcard_search

Files changed:
M docs/CHANGES.txt
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/config.py
M src/archetypes/referencebrowserwidget/demo.py
M src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
M src/archetypes/referencebrowserwidget/tests/test_product.py
M src/archetypes/referencebrowserwidget/widget.py

diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 407d296..8f81deb 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -13,11 +13,14 @@ Changelog
 
 - #16 fix browsing for widgets in case field has set ``allowed_types``
 
-  (Warning: changed return value of view/getResult from 
+  (Warning: changed return value of view/getResult from
   `[`brain1, brain2,..]``  to ``[dict(item=brain1,browsable=True,
-  referenceable=False),...]`` in case you customized popup.pt) 
+  referenceable=False),...]`` in case you customized popup.pt)
   [fRiSi]
 
+- #23 added parameter 'use_wildcard_search' to widget, True by default
+  [gbastien]
+
 
 2.5.2 (2014-09-11)
 ------------------
@@ -25,7 +28,7 @@ Changelog
 - Fix the "Clear Reference" button, which was not working due to the
   refbrowser_removeReference function hidden in a anonymous function.
   [thet]
-  
+
 - fixed allowed_types
   [agitator]
 
@@ -375,4 +378,3 @@ Changelog
 
 - Merged javascript files to one, which is included only with the widget
   [tom_gross]
-
diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index 5f20cd8..0e2dabd 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -16,6 +16,8 @@
                   title python:widget.Label(at_obj);
                   search_index view/search_index;
                   search_text view/search_text;
+                  wildcardable_indexes view/wildcardable_indexes;
+                  wildcardable_indexes_as_json view/wildcardable_indexes_as_json;
                   available_indexes widget/available_indexes;
                   allow_browse widget/allow_browse;
                   image_portal_types widget/image_portal_types;
@@ -97,6 +99,14 @@
                i18n:domain="plone"
                i18n:attributes="value label_search;"
                />
+  &nbsp;<span style="font-weight: bold; color: grey; border-bottom: 1px dotted; cursor: help;"
+              title="#"
+              id="searchWildcardHelp"
+              tal:condition="python: search_index in wildcardable_indexes"
+              i18n:attributes="title"
+              data-wildcardableIndexes="#"
+              tal:attributes="title view/wildcard_help_message;
+                              data-wildcardableIndexes wildcardable_indexes_as_json">?</span>
       </div>
      </tal:formactions>
 
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index faf8e2e..dd64c59 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -1,4 +1,5 @@
 from types import ListType, TupleType
+import json
 import urllib
 import re
 
@@ -36,14 +37,16 @@
 from Products.CMFPlone.PloneBatch import Batch
 
 from archetypes.referencebrowserwidget import utils
+from archetypes.referencebrowserwidget.config import WILDCARDABLE_INDEXES
 from archetypes.referencebrowserwidget.interfaces import IFieldRelation
 from archetypes.referencebrowserwidget.interfaces import \
-        IReferenceBrowserHelperView
+    IReferenceBrowserHelperView
 
 default_popup_template = named_template_adapter(
     ViewPageTemplateFile('popup.pt'))
 
 PMF = MessageFactory('plone')
+_ = MessageFactory('archetypes.referencebrowserwidget')
 
 
 class ReferenceBrowserHelperView(BrowserView):
@@ -263,9 +266,44 @@ def filtered_indexes(self):
         avail = self.widget.available_indexes
         return [index for index in indexes if not avail or index in avail]
 
+    @property
+    def wildcardable_indexes(self):
+        assert self._updated
+        indexes = self.search_catalog.Indexes.values()
+        return [index.getId() for index in indexes if index.getTagName() in WILDCARDABLE_INDEXES]
+
+    @property
+    def wildcardable_indexes_as_json(self):
+        return json.dumps(self.wildcardable_indexes)
+
+    @property
+    def wildcard_help_message(self):
+        if self.widget.use_wildcard_search:
+            return _("wild_card_search_enabled_help",
+                     default="Full-text search is enabled: searching for 'budget' will also "
+                     "return elements containing 'budgetary'. If you want to search exact "
+                     "match, add quotation marks around the word: \"budget\".")
+        else:
+            return _("wild_card_search_disabled_help",
+                     default="Full-text search is disabled: searching for 'budget' will only "
+                     "return elements containing exact term 'budget'. You can enable full-text search "
+                     "by appending a '*' at the end of a word. For example, searching for 'budget*' "
+                     "will also return elements containing 'budgetary'.")
+
     def getResult(self):
         assert self._updated
         result = []
+
+        # turn search string into a wildcard search if relevant, so if
+        # wild_card_search is True and if current index is a ZCTextIndex
+        index = self.search_catalog.Indexes[self.search_index]
+        if self.search_text and self.widget.use_wildcard_search and index.getId() in self.wildcardable_indexes:
+            # only append a '*' if not already ending with a '*' and not surrounded
+            # by " ", this is the case if user want to search exact match
+            if not self.search_text.endswith('*') and \
+               not (self.search_text.startswith('"') and self.search_text.endswith('"')):
+                self.request[self.search_index] = "{0}*".format(self.search_text)
+
         qc = getMultiAdapter((self.context, self.request),
                              name='refbrowser_querycatalog')
         if self.widget.show_results_without_query or self.search_text:
diff --git a/src/archetypes/referencebrowserwidget/config.py b/src/archetypes/referencebrowserwidget/config.py
index fe755b2..864068e 100644
--- a/src/archetypes/referencebrowserwidget/config.py
+++ b/src/archetypes/referencebrowserwidget/config.py
@@ -1,3 +1,5 @@
 PROJECTNAME = "referencebrowserwidget"
 
 WITH_SAMPLE_TYPES = False
+
+WILDCARDABLE_INDEXES = ('ZCTextIndex', )
diff --git a/src/archetypes/referencebrowserwidget/demo.py b/src/archetypes/referencebrowserwidget/demo.py
index 801223e..e40006d 100644
--- a/src/archetypes/referencebrowserwidget/demo.py
+++ b/src/archetypes/referencebrowserwidget/demo.py
@@ -51,7 +51,8 @@
         widget=ReferenceBrowserWidget(
             show_indexes=1,
             history_length=5,
-            description='And here is another field.  Startup directory is /Members.',
+            use_wildcard_search=False,
+            description='And here is another field.  Startup directory is /Members.  Wildcard search is disabled.',
             startup_directory='/Members')),
 
     ReferenceField('multiRef4',
diff --git a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
index 54396d5..5c97113 100644
--- a/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
+++ b/src/archetypes/referencebrowserwidget/skins/referencebrowser/referencebrowser.js
@@ -447,6 +447,17 @@ jQuery(function ($) {
         });
     }
 
+    $(document).on('change', '#indexSelector', function (event) {
+        if ($.inArray(this.value, $('#searchWildcardHelp').data()['wildcardableindexes']) === -1) {
+            // make sure searchWildcardHelp is hidden
+            $('#searchWildcardHelp').css("display", "none");
+        }
+        else {
+            // make sure searchWildcardHelp is shown
+            $('#searchWildcardHelp').css("display", "");
+        }
+    });
+
     $(document).ready(function () {
         $('input.removereference').click(function (event) {
             event.preventDefault();
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index ff28f75..5c6f9fc 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -345,6 +345,59 @@ def test_subsite_query(self):
         # content outside subsite should also be returned
         self.assertTrue(len(results) > 1)
 
+    def test_use_wildcard_search(self):
+        """Test while widget.use_wildcard_search is True or False."""
+        fieldname = 'singleRef'
+        self.request.set('at_url', '/plone/layer1/layer2/ref')
+        self.request.set('fieldName', fieldname)
+        self.request.set('fieldRealName', fieldname)
+        field = self.obj.getField(fieldname)
+        # create 2 documents we will query
+        wc1 = makeContent(self.folder, portal_type='Document', id='wildcard1', title='WildCard1')
+        wc2 = makeContent(self.folder, portal_type='Document', id='wildcard2', title='WildCard2')
+        # we will search on term 'wildcard'
+        self.request.set('search_index', 'SearchableText')
+        self.request.set('searchValue', 'wildcard')
+        self.request.set('sort_on', 'created')
+
+        # enable use_wildcard_search
+        field.widget.use_wildcard_search = True
+        # as wild card is activated, it will find folders 'layer1' and 'layer2'
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 2)
+        self.assertTrue(result[0]['item'].UID == wc1.UID())
+        self.assertTrue(result[1]['item'].UID == wc2.UID())
+        # we can force exact match by surrounding searchValue with ""
+        self.request.set('searchValue', '"wildcard"')
+        popup = self._getPopup()
+        self.assertTrue(not popup.getResult())
+        # exact match to something that exists...
+        self.request.set('searchValue', '"wildcard1"')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc1.UID())
+
+        # disable use_wildcard_search
+        field.widget.use_wildcard_search = False
+        self.request.set('searchValue', 'wildcard')
+        # this will find nothing...
+        popup = self._getPopup()
+        self.assertTrue(not popup.getResult())
+        # querying exact match will find it
+        self.request.set('searchValue', 'wildcard2')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc2.UID())
+        # using "" works too
+        self.request.set('searchValue', '"wildcard2"')
+        popup = self._getPopup()
+        result = popup.getResult()
+        self.assertTrue(result.length == 1)
+        self.assertTrue(result[0]['item'].UID == wc2.UID())
+
 
 class PopupBreadcrumbTestCase(PopupBaseTestCase):
     """ Test the popup breadcrumbs """
diff --git a/src/archetypes/referencebrowserwidget/widget.py b/src/archetypes/referencebrowserwidget/widget.py
index 8907231..88ca8fb 100644
--- a/src/archetypes/referencebrowserwidget/widget.py
+++ b/src/archetypes/referencebrowserwidget/widget.py
@@ -40,6 +40,7 @@ class ReferenceBrowserWidget(ReferenceWidget):
         'browsable_types': (),
         'top_popup_helper': None,
         'bottom_popup_helper': None,
+        'use_wildcard_search': 1,
         })
 
     # for documentation of properties see: README.txt


