Repository: Products.PasswordResetTool


Branch: refs/heads/master
Date: 2015-07-02T07:28:46-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.PasswordResetTool/commit/c6959d0010fe356faf9508074d191e9ab1d6a067

fix getting mail password

Files changed:
M CHANGES.txt
M Products/PasswordResetTool/browser.py
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index e74ff45..ccba3dc 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,10 +1,11 @@
 Changelog
 =========
 
-2.1.3 (unreleased)
+2.2.0 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- fix getting email from address
+  [vangheem]
 
 
 2.1.2 (2015-03-26)
diff --git a/Products/PasswordResetTool/browser.py b/Products/PasswordResetTool/browser.py
index cea6f83..9ac74bb 100644
--- a/Products/PasswordResetTool/browser.py
+++ b/Products/PasswordResetTool/browser.py
@@ -9,19 +9,20 @@
 from Products.PasswordResetTool import passwordresetMessageFactory as _
 from email.Header import Header
 
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+try:
+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema
+    HAS_REGISTRY_MAIL_SETTINGS = True
+    # work with plone 4 yet...
+except ImportError:
+    HAS_REGISTRY_MAIL_SETTINGS = False
+
 
 class PasswordResetToolView(BrowserView):
     implements(IPasswordResetToolView)
 
     @view.memoize_contextless
-    def tools(self):
-        """ returns tools view. Available items are all portal_xxxxx
-            For example: catalog, membership, url
-            http://dev.plone.org/plone/browser/plone.app.layout/trunk/plone/app/layout/globals/tools.py
-        """
-        return getMultiAdapter((self.context, self.request), name=u"plone_tools")
-
-    @view.memoize_contextless
     def portal_state(self):
         """ returns
             http://dev.plone.org/plone/browser/plone.app.layout/trunk/plone/app/layout/globals/portal.py
@@ -34,9 +35,15 @@ def encode_mail_header(self, text):
 
     def encoded_mail_sender(self):
         """ returns encoded version of Portal name <portal_email> """
-        portal = self.portal_state().portal()
-        from_ = portal.getProperty('email_from_name')
-        mail = portal.getProperty('email_from_address')
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            from_ = mail_settings.email_from_name
+            mail = mail_settings.email_from_address
+        else:
+            portal = self.portal_state().portal()
+            from_ = portal.getProperty('email_from_name')
+            mail = portal.getProperty('email_from_address')
         return '"%s" <%s>' % (self.encode_mail_header(from_), mail)
 
     def registered_notify_subject(self):
diff --git a/setup.py b/setup.py
index c713087..74fba3e 100644
--- a/setup.py
+++ b/setup.py
@@ -1,20 +1,19 @@
 from setuptools import setup, find_packages
 
-version = '2.1.3.dev0'
+version = '2.2.0.dev0'
 
 setup(name='Products.PasswordResetTool',
       version=version,
       description="Password reset tool for Plone",
-      long_description=open("README.txt").read() + "\n" + \
-              open("CHANGES.txt").read(),
+      long_description=open("README.txt").read() + "\n" + open("CHANGES.txt").read(),
       classifiers=[
-        "Framework :: Plone",
-        "Framework :: Plone :: 5.0",
-        "Framework :: Zope2",
-        "License :: OSI Approved :: GNU General Public License (GPL)",
-        "Programming Language :: Python",
-        "Programming Language :: Python :: 2.7",
-        ],
+          "Framework :: Plone",
+          "Framework :: Plone :: 5.0",
+          "Framework :: Zope2",
+          "License :: OSI Approved :: GNU General Public License (GPL)",
+          "Programming Language :: Python",
+          "Programming Language :: Python :: 2.7",
+      ],
       keywords='password reset plone',
       author='J. Cameron Cooper',
       author_email='prt@jcameroncooper.com',
@@ -25,9 +24,9 @@
       include_package_data=True,
       zip_safe=False,
       extras_require=dict(
-        test=[
-            'plone.app.testing',
-        ]
+          test=[
+              'plone.app.testing',
+          ]
       ),
       install_requires=[
           'setuptools',
@@ -41,5 +40,6 @@
           'Acquisition',
           'DateTime',
           'Zope2',
+          'plone.app.registry'
       ],
       )


Repository: Products.PasswordResetTool


Branch: refs/heads/master
Date: 2015-07-02T08:11:14-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.PasswordResetTool/commit/9e5a0a2b1e745f2f6b6ce9a92384945f7850de0d

fix tests

Files changed:
M Products/PasswordResetTool/tests/test_doctests.py
M Products/PasswordResetTool/tests/view.txt

diff --git a/Products/PasswordResetTool/tests/test_doctests.py b/Products/PasswordResetTool/tests/test_doctests.py
index 31647b9..9ee3ba5 100644
--- a/Products/PasswordResetTool/tests/test_doctests.py
+++ b/Products/PasswordResetTool/tests/test_doctests.py
@@ -1,20 +1,27 @@
-from Products.CMFPlone.interfaces import IMailSchema
-from zope.component import getUtility
-from plone.registry.interfaces import IRegistry
 """
 PasswordResetTool doctests
 """
 
 import doctest
 import unittest
-from Products.MailHost.interfaces import IMailHost
-from zope.component import getSiteManager
-from Acquisition import aq_base
 
+from Acquisition import aq_base
 from Products.CMFPlone.tests.utils import MockMailHost
+from Products.MailHost.interfaces import IMailHost
 from plone.app import testing
+from plone.registry.interfaces import IRegistry
 from plone.testing import layered
 from transaction import commit
+from zope.component import getSiteManager
+from zope.component import getUtility
+
+try:
+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema
+    HAS_REGISTRY_MAIL_SETTINGS = True
+    # work with plone 4 yet...
+except ImportError:
+    HAS_REGISTRY_MAIL_SETTINGS = False
+
 
 OPTIONFLAGS = (doctest.ELLIPSIS |
                doctest.NORMALIZE_WHITESPACE |
@@ -47,8 +54,27 @@ def tearDownPloneSite(self, portal):
             provided=IMailHost
         )
 
+
+class Layer(testing.FunctionalTesting):
+
+    def set_email_from_name(self, name):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            mail_settings.email_from_name = name
+        else:
+            self['portal'].email_from_name = name
+
+    def set_email_from_address(self, address):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            mail_settings.email_from_address = address
+        else:
+            self['portal'].email_from_address = address
+
 MOCK_MAIL_FIXTURE = MockMailFixture()
-MM_FUNCTIONAL_TESTING = testing.FunctionalTesting(
+MM_FUNCTIONAL_TESTING = Layer(
     bases=(MOCK_MAIL_FIXTURE, ),
     name='PloneTestCase:Functional'
 )
diff --git a/Products/PasswordResetTool/tests/view.txt b/Products/PasswordResetTool/tests/view.txt
index 0616084..58f16c8 100644
--- a/Products/PasswordResetTool/tests/view.txt
+++ b/Products/PasswordResetTool/tests/view.txt
@@ -3,8 +3,8 @@ Test passwordreset BrowserView
     Setup Plone email sender
 
     >>> portal = layer['portal']
-    >>> portal.email_from_name=u'Old\u0159ich a Bo\u017eena'
-    >>> portal.email_from_address='smith@example.com'
+    >>> layer.set_email_from_name(u'Old\u0159ich a Bo\u017eena')
+    >>> layer.set_email_from_address('smith@example.com')
     >>> portal.title=u'Koko\u0159\xedn Portal'
     
     Check view methods


Repository: Products.PasswordResetTool


Branch: refs/heads/master
Date: 2015-07-02T10:11:09-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.PasswordResetTool/commit/20382c3ba7fac6b24a51c5ff6b8825839389699c

use correct portal title

Files changed:
M Products/PasswordResetTool/browser.py
M Products/PasswordResetTool/tests/test_doctests.py
M Products/PasswordResetTool/tests/view.txt

diff --git a/Products/PasswordResetTool/browser.py b/Products/PasswordResetTool/browser.py
index 9ac74bb..910c1aa 100644
--- a/Products/PasswordResetTool/browser.py
+++ b/Products/PasswordResetTool/browser.py
@@ -47,8 +47,7 @@ def encoded_mail_sender(self):
         return '"%s" <%s>' % (self.encode_mail_header(from_), mail)
 
     def registered_notify_subject(self):
-        portal = self.portal_state().portal()
-        portal_name = portal.Title()
+        portal_name = self.portal_state().portal_title()
         return translate(_(u"mailtemplate_user_account_info",
                            default=u"User Account Information for ${portal_name}",
                            mapping={'portal_name': safe_unicode(portal_name)}),
diff --git a/Products/PasswordResetTool/tests/test_doctests.py b/Products/PasswordResetTool/tests/test_doctests.py
index 9ee3ba5..c55ac2a 100644
--- a/Products/PasswordResetTool/tests/test_doctests.py
+++ b/Products/PasswordResetTool/tests/test_doctests.py
@@ -16,7 +16,7 @@
 from zope.component import getUtility
 
 try:
-    from Products.CMFPlone.interfaces.controlpanel import IMailSchema
+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema, ISiteSchema
     HAS_REGISTRY_MAIL_SETTINGS = True
     # work with plone 4 yet...
 except ImportError:
@@ -73,6 +73,14 @@ def set_email_from_address(self, address):
         else:
             self['portal'].email_from_address = address
 
+    def set_portal_title(self, name):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            site_settings = registry.forInterface(ISiteSchema, prefix='plone')
+            site_settings.site_title = name
+        else:
+            self['portal'].title = name
+
 MOCK_MAIL_FIXTURE = MockMailFixture()
 MM_FUNCTIONAL_TESTING = Layer(
     bases=(MOCK_MAIL_FIXTURE, ),
diff --git a/Products/PasswordResetTool/tests/view.txt b/Products/PasswordResetTool/tests/view.txt
index 58f16c8..84ce433 100644
--- a/Products/PasswordResetTool/tests/view.txt
+++ b/Products/PasswordResetTool/tests/view.txt
@@ -5,7 +5,7 @@ Test passwordreset BrowserView
     >>> portal = layer['portal']
     >>> layer.set_email_from_name(u'Old\u0159ich a Bo\u017eena')
     >>> layer.set_email_from_address('smith@example.com')
-    >>> portal.title=u'Koko\u0159\xedn Portal'
+    >>> layer.set_portal_title(u'Koko\u0159\xedn Portal')
     
     Check view methods
     


Repository: Products.PasswordResetTool


Branch: refs/heads/master
Date: 2015-07-02T10:12:19-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.PasswordResetTool/commit/6f7f27fe31c7af1d5ec2bcc496338f87fcfdf9f7

Merge pull request #9 from plone/fix-mail-password

fix getting email from for mail password

Files changed:
M CHANGES.txt
M Products/PasswordResetTool/browser.py
M Products/PasswordResetTool/tests/test_doctests.py
M Products/PasswordResetTool/tests/view.txt
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index e74ff45..ccba3dc 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,10 +1,11 @@
 Changelog
 =========
 
-2.1.3 (unreleased)
+2.2.0 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- fix getting email from address
+  [vangheem]
 
 
 2.1.2 (2015-03-26)
diff --git a/Products/PasswordResetTool/browser.py b/Products/PasswordResetTool/browser.py
index cea6f83..910c1aa 100644
--- a/Products/PasswordResetTool/browser.py
+++ b/Products/PasswordResetTool/browser.py
@@ -9,19 +9,20 @@
 from Products.PasswordResetTool import passwordresetMessageFactory as _
 from email.Header import Header
 
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+try:
+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema
+    HAS_REGISTRY_MAIL_SETTINGS = True
+    # work with plone 4 yet...
+except ImportError:
+    HAS_REGISTRY_MAIL_SETTINGS = False
+
 
 class PasswordResetToolView(BrowserView):
     implements(IPasswordResetToolView)
 
     @view.memoize_contextless
-    def tools(self):
-        """ returns tools view. Available items are all portal_xxxxx
-            For example: catalog, membership, url
-            http://dev.plone.org/plone/browser/plone.app.layout/trunk/plone/app/layout/globals/tools.py
-        """
-        return getMultiAdapter((self.context, self.request), name=u"plone_tools")
-
-    @view.memoize_contextless
     def portal_state(self):
         """ returns
             http://dev.plone.org/plone/browser/plone.app.layout/trunk/plone/app/layout/globals/portal.py
@@ -34,14 +35,19 @@ def encode_mail_header(self, text):
 
     def encoded_mail_sender(self):
         """ returns encoded version of Portal name <portal_email> """
-        portal = self.portal_state().portal()
-        from_ = portal.getProperty('email_from_name')
-        mail = portal.getProperty('email_from_address')
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            from_ = mail_settings.email_from_name
+            mail = mail_settings.email_from_address
+        else:
+            portal = self.portal_state().portal()
+            from_ = portal.getProperty('email_from_name')
+            mail = portal.getProperty('email_from_address')
         return '"%s" <%s>' % (self.encode_mail_header(from_), mail)
 
     def registered_notify_subject(self):
-        portal = self.portal_state().portal()
-        portal_name = portal.Title()
+        portal_name = self.portal_state().portal_title()
         return translate(_(u"mailtemplate_user_account_info",
                            default=u"User Account Information for ${portal_name}",
                            mapping={'portal_name': safe_unicode(portal_name)}),
diff --git a/Products/PasswordResetTool/tests/test_doctests.py b/Products/PasswordResetTool/tests/test_doctests.py
index 31647b9..c55ac2a 100644
--- a/Products/PasswordResetTool/tests/test_doctests.py
+++ b/Products/PasswordResetTool/tests/test_doctests.py
@@ -1,20 +1,27 @@
-from Products.CMFPlone.interfaces import IMailSchema
-from zope.component import getUtility
-from plone.registry.interfaces import IRegistry
 """
 PasswordResetTool doctests
 """
 
 import doctest
 import unittest
-from Products.MailHost.interfaces import IMailHost
-from zope.component import getSiteManager
-from Acquisition import aq_base
 
+from Acquisition import aq_base
 from Products.CMFPlone.tests.utils import MockMailHost
+from Products.MailHost.interfaces import IMailHost
 from plone.app import testing
+from plone.registry.interfaces import IRegistry
 from plone.testing import layered
 from transaction import commit
+from zope.component import getSiteManager
+from zope.component import getUtility
+
+try:
+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema, ISiteSchema
+    HAS_REGISTRY_MAIL_SETTINGS = True
+    # work with plone 4 yet...
+except ImportError:
+    HAS_REGISTRY_MAIL_SETTINGS = False
+
 
 OPTIONFLAGS = (doctest.ELLIPSIS |
                doctest.NORMALIZE_WHITESPACE |
@@ -47,8 +54,35 @@ def tearDownPloneSite(self, portal):
             provided=IMailHost
         )
 
+
+class Layer(testing.FunctionalTesting):
+
+    def set_email_from_name(self, name):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            mail_settings.email_from_name = name
+        else:
+            self['portal'].email_from_name = name
+
+    def set_email_from_address(self, address):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            mail_settings = registry.forInterface(IMailSchema, prefix="plone")
+            mail_settings.email_from_address = address
+        else:
+            self['portal'].email_from_address = address
+
+    def set_portal_title(self, name):
+        if HAS_REGISTRY_MAIL_SETTINGS:
+            registry = getUtility(IRegistry)
+            site_settings = registry.forInterface(ISiteSchema, prefix='plone')
+            site_settings.site_title = name
+        else:
+            self['portal'].title = name
+
 MOCK_MAIL_FIXTURE = MockMailFixture()
-MM_FUNCTIONAL_TESTING = testing.FunctionalTesting(
+MM_FUNCTIONAL_TESTING = Layer(
     bases=(MOCK_MAIL_FIXTURE, ),
     name='PloneTestCase:Functional'
 )
diff --git a/Products/PasswordResetTool/tests/view.txt b/Products/PasswordResetTool/tests/view.txt
index 0616084..84ce433 100644
--- a/Products/PasswordResetTool/tests/view.txt
+++ b/Products/PasswordResetTool/tests/view.txt
@@ -3,9 +3,9 @@ Test passwordreset BrowserView
     Setup Plone email sender
 
     >>> portal = layer['portal']
-    >>> portal.email_from_name=u'Old\u0159ich a Bo\u017eena'
-    >>> portal.email_from_address='smith@example.com'
-    >>> portal.title=u'Koko\u0159\xedn Portal'
+    >>> layer.set_email_from_name(u'Old\u0159ich a Bo\u017eena')
+    >>> layer.set_email_from_address('smith@example.com')
+    >>> layer.set_portal_title(u'Koko\u0159\xedn Portal')
     
     Check view methods
     
diff --git a/setup.py b/setup.py
index c713087..74fba3e 100644
--- a/setup.py
+++ b/setup.py
@@ -1,20 +1,19 @@
 from setuptools import setup, find_packages
 
-version = '2.1.3.dev0'
+version = '2.2.0.dev0'
 
 setup(name='Products.PasswordResetTool',
       version=version,
       description="Password reset tool for Plone",
-      long_description=open("README.txt").read() + "\n" + \
-              open("CHANGES.txt").read(),
+      long_description=open("README.txt").read() + "\n" + open("CHANGES.txt").read(),
       classifiers=[
-        "Framework :: Plone",
-        "Framework :: Plone :: 5.0",
-        "Framework :: Zope2",
-        "License :: OSI Approved :: GNU General Public License (GPL)",
-        "Programming Language :: Python",
-        "Programming Language :: Python :: 2.7",
-        ],
+          "Framework :: Plone",
+          "Framework :: Plone :: 5.0",
+          "Framework :: Zope2",
+          "License :: OSI Approved :: GNU General Public License (GPL)",
+          "Programming Language :: Python",
+          "Programming Language :: Python :: 2.7",
+      ],
       keywords='password reset plone',
       author='J. Cameron Cooper',
       author_email='prt@jcameroncooper.com',
@@ -25,9 +24,9 @@
       include_package_data=True,
       zip_safe=False,
       extras_require=dict(
-        test=[
-            'plone.app.testing',
-        ]
+          test=[
+              'plone.app.testing',
+          ]
       ),
       install_requires=[
           'setuptools',
@@ -41,5 +40,6 @@
           'Acquisition',
           'DateTime',
           'Zope2',
+          'plone.app.registry'
       ],
       )


