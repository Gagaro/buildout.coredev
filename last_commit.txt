Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2015-09-07T09:28:03+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.vocabularies/commit/4d2b86fa32898bac19237bd47da6f63fb8c07433

Fix available_editors test. Refactor the available_editor doctest into a proper integration test.

Files changed:
A plone/app/vocabularies/tests/test_editors.py
M plone/app/vocabularies/editors.py
M plone/app/vocabularies/tests/test_vocabularies.py

diff --git a/plone/app/vocabularies/editors.py b/plone/app/vocabularies/editors.py
index 7da92e9..535d17d 100644
--- a/plone/app/vocabularies/editors.py
+++ b/plone/app/vocabularies/editors.py
@@ -14,35 +14,6 @@
 
 @implementer(IVocabularyFactory)
 class AvailableEditorsVocabulary(object):
-    """Vocabulary factory for available editors in the portal.
-
-      >>> from zope.component import queryUtility
-      >>> from plone.app.vocabularies.tests.base import create_context
-      >>> from plone.app.vocabularies.tests.base import DummyContext
-      >>> from plone.app.vocabularies.tests.base import DummyTool
-
-      >>> name = 'plone.app.vocabularies.AvailableEditors'
-      >>> util = queryUtility(IVocabularyFactory, name)
-      >>> context = create_context()
-
-      >>> tool = DummyTool('portal_properties')
-      >>> site_properties = DummyContext()
-      >>> available_editors = ['Kupu', 'TinyMCE']
-      >>> site_properties.available_editors = available_editors
-      >>> tool.site_properties = site_properties
-      >>> context.portal_properties = tool
-
-      >>> editors = util(context)
-      >>> editors
-      <zope.schema.vocabulary.SimpleVocabulary object at ...>
-
-      >>> len(editors.by_token)
-      2
-
-      >>> TinyMCE = editors.by_token['TinyMCE']
-      >>> TinyMCE.title, TinyMCE.token, TinyMCE.value
-      (u'TinyMCE', 'TinyMCE', 'TinyMCE')
-    """
 
     def __call__(self, context):
         items = []
@@ -50,8 +21,9 @@ def __call__(self, context):
         registry = getUtility(IRegistry)
         settings = registry.forInterface(IEditingSchema, prefix="plone")
 
-        editors = settings.available_editors
-        items = [SimpleTerm(e, e, _(e)) for e in editors]
+        if settings:
+            editors = settings.available_editors
+            items = [SimpleTerm(e, e, _(e)) for e in editors]
         return SimpleVocabulary(items)
 
 AvailableEditorsVocabularyFactory = AvailableEditorsVocabulary()
diff --git a/plone/app/vocabularies/tests/test_editors.py b/plone/app/vocabularies/tests/test_editors.py
new file mode 100644
index 0000000..c5be801
--- /dev/null
+++ b/plone/app/vocabularies/tests/test_editors.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+from plone.app.vocabularies.testing import PAVocabularies_INTEGRATION_TESTING
+from zope.component import getUtility
+from zope.schema.interfaces import IVocabularyFactory
+import unittest2 as unittest
+
+
+class AvailableEditorsTest(unittest.TestCase):
+
+    layer = PAVocabularies_INTEGRATION_TESTING
+
+    def setUp(self):
+        self.portal = self.layer['portal']
+
+    def test_editors(self):
+        from plone.registry import Registry
+        registry = Registry()
+        from Products.CMFPlone.interfaces import IEditingSchema
+        registry.registerInterface(IEditingSchema, prefix="plone")
+        registry.records['plone.available_editors']
+        vocab_util = getUtility(
+            IVocabularyFactory,
+            'plone.app.vocabularies.AvailableEditors'
+        )
+        editors = vocab_util(self.portal)
+        self.assertEqual(2, len(editors.by_token))
+        self.assertTrue('None' in [x for x in editors.by_token])
+        self.assertTrue('TinyMCE' in [x for x in editors.by_token])
diff --git a/plone/app/vocabularies/tests/test_vocabularies.py b/plone/app/vocabularies/tests/test_vocabularies.py
index a278cf8..2613133 100644
--- a/plone/app/vocabularies/tests/test_vocabularies.py
+++ b/plone/app/vocabularies/tests/test_vocabularies.py
@@ -44,12 +44,6 @@ def test_suite():
                 optionflags=optionflags
             ),
             DocTestSuite(
-                'plone.app.vocabularies.editors',
-                setUp=vocabSetUp,
-                tearDown=vocabTearDown,
-                optionflags=optionflags
-            ),
-            DocTestSuite(
                 'plone.app.vocabularies.groups',
                 setUp=vocabSetUp,
                 tearDown=vocabTearDown,


