Repository: Products.PortalTransforms
Branch: refs/heads/master
Date: 2015-03-09T20:10:39+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/Products.PortalTransforms/commit/9012c0791e5c519cdb17d43f732b20be2e9cf3ea

Revert "Revert "Remove any policies that might be present in the test setup.""

This reverts commit 9e3cec4422a6d3fac985cf4e4acd019746537ba0.

Files changed:
M Products/PortalTransforms/tests/test_engine.py

diff --git a/Products/PortalTransforms/tests/test_engine.py b/Products/PortalTransforms/tests/test_engine.py
index f3e232d..0f6ba72 100644
--- a/Products/PortalTransforms/tests/test_engine.py
+++ b/Products/PortalTransforms/tests/test_engine.py
@@ -118,6 +118,8 @@ def afterSetUp(self):
         ATSiteTestCase.afterSetUp(self)
         self.engine = self.portal.portal_transforms
         self.data = '<b>foo</b>'
+        for mt in self.engine._policies.keys():
+            self.engine.manage_delPolicies([mt])
 
     def register(self):
         #A default set of transforms to prove the interfaces work
@@ -209,8 +211,7 @@ def testPolicy(self):
         self.engine.registerTransform(DummyHtmlFilter2())
         required = ['dummy_html_filter1', 'dummy_html_filter2']
 
-        if mt not in [x for x in self.engine._policies.keys()]:
-            self.engine.manage_addPolicy(mt, required)
+        self.engine.manage_addPolicy(mt, required)
         expected_policy = [('text/x-html-safe',
                             ('dummy_html_filter1', 'dummy_html_filter2'))]
         self.assertEqual(self.engine.listPolicies(), expected_policy)
@@ -260,17 +261,18 @@ def testCacheWithVHost(self):
         mt = 'text/x-html-safe'
         self.engine.registerTransform(QuxToVHost())
         required = ['qux_to_vhost']
-        if mt not in [x for x in self.engine._policies.keys()]:
-            self.engine.manage_addPolicy(mt, required)
+        self.engine.manage_addPolicy(mt, required)
 
         data = '<a href="qux">vhost link</a>'
 
         out = self.engine.convertTo(
             mt, data, mimetype='text/html', object=self.folder,
             context=self.folder)
+
         self.assertEqual(
             out.getData(), '<a href="http://nohost">vhost link</a>',
-            out.getData())
+            out.getData()
+        )
 
         # Test when object is not a context
         out = self.engine.convertTo(


