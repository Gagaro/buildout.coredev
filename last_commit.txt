Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-06T23:58:26-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.layout/commit/7f0bba328e0baa56e5dbadb01c5669731cba3814

Pull display_publication_date_in_byline value from the configuration registry

Files changed:
M CHANGES.rst
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3a096e6..e47be8b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -8,6 +8,9 @@ Changelog
   schema does not cause errors
   [vangheem]
 
+- Pull value for display_publication_date_in_byline from the configuration
+  registry.
+  [esteele]
 
 2.5.10 (2015-08-20)
 -------------------
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index 718b29f..a458a92 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -16,6 +16,7 @@
 from Products.CMFEditions.Permissions import AccessPreviousVersions
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.CMFPlone.interfaces import ISecuritySchema
+from Products.CMFPlone.interfaces import ISiteSchema
 from Products.CMFPlone.utils import base_hasattr
 from Products.CMFPlone.utils import log
 from zope.component import getUtility
@@ -150,10 +151,12 @@ def pub_date(self):
         or if Effective Date is not set on object.
         """
         # check if we are allowed to display publication date
-        properties = getToolByName(self.context, 'portal_properties')
-        site_properties = getattr(properties, 'site_properties')
-        if not site_properties.getProperty('displayPublicationDateInByline',
-           False):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        if not settings.display_publication_date_in_byline:
             return None
 
         # check if we have Effective Date set
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index e2a53cc..0a766c6 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -4,8 +4,8 @@
 from plone.app.layout.viewlets.content import ContentRelatedItems
 from plone.locking.interfaces import ILockable
 from plone.registry.interfaces import IRegistry
-from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.interfaces import ISecuritySchema
+from Products.CMFPlone.interfaces import ISiteSchema
 from z3c.relationfield import RelationValue
 from zope.component import getUtility
 from zope.interface import Interface
@@ -93,9 +93,12 @@ def test_logged_in_locked_icon_is_locked(self):
     def test_pub_date(self):
         # configure our portal to enable publication date on pages globally on
         # the site
-        properties = getToolByName(self.portal, 'portal_properties')
-        site_properties = getattr(properties, 'site_properties')
-        site_properties.displayPublicationDateInByline = True
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ISiteSchema,
+            prefix='plone')
+
+        settings.display_publication_date_in_byline = True
 
         self.logout()
         viewlet = self._get_viewlet()
@@ -111,7 +114,7 @@ def test_pub_date(self):
 
         # now switch off publication date globally on the site and see if
         # viewlet returns None for publication date
-        site_properties.displayPublicationDateInByline = False
+        settings.display_publication_date_in_byline = False
         self.assertEqual(viewlet.pub_date(), None)
 
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-06T23:58:26-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.layout/commit/7941abfcc24825383482debfd86256b54d4bb93b

Get types_not_searched value from the registry

Files changed:
M plone/app/layout/globals/portal.py
M plone/app/layout/globals/tests/test_portal.py

diff --git a/plone/app/layout/globals/portal.py b/plone/app/layout/globals/portal.py
index aecf393..77be5f3 100644
--- a/plone/app/layout/globals/portal.py
+++ b/plone/app/layout/globals/portal.py
@@ -7,7 +7,7 @@
 
 from Acquisition import aq_inner
 from Products.CMFCore.utils import getToolByName
-from Products.CMFPlone.interfaces import IPloneSiteRoot
+from Products.CMFPlone.interfaces import ISearchSchema
 from Products.Five.browser import BrowserView
 
 from plone.app.layout.navigation.root import getNavigationRoot
@@ -99,9 +99,9 @@ def anonymous(self):
     @memoize_contextless
     def friendly_types(self):
         context = aq_inner(self.context)
-        site_properties = getToolByName(
-            context, "portal_properties").site_properties
-        not_searched = site_properties.getProperty('types_not_searched', [])
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISearchSchema, prefix="plone")
+        not_searched = settings.types_not_searched
 
         types = getToolByName(context, "portal_types").listContentTypes()
         return [t for t in types if t not in not_searched]
diff --git a/plone/app/layout/globals/tests/test_portal.py b/plone/app/layout/globals/tests/test_portal.py
index f7cc632..4485fbf 100644
--- a/plone/app/layout/globals/tests/test_portal.py
+++ b/plone/app/layout/globals/tests/test_portal.py
@@ -1,4 +1,5 @@
 from Products.CMFPlone.interfaces import ILanguageSchema
+from Products.CMFPlone.interfaces import ISearchSchema
 from Products.CMFPlone.interfaces import ISiteSchema
 from plone.app.layout.globals.tests.base import GlobalsTestCase
 from plone.app.layout.navigation.interfaces import INavigationRoot
@@ -134,6 +135,7 @@ def test_anonymous(self):
         self.assertEqual(self.view.anonymous(), True)
 
     def test_friendly_types(self):
-        self.portal.portal_properties.site_properties.types_not_searched = (
-            'Document', )
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISearchSchema, prefix="plone")
+        settings.types_not_searched = ('Document',)
         self.assertFalse('Document' in self.view.friendly_types())


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-06T23:58:27-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.layout/commit/5e86131b227a30c3a5c79576294b9e3c58547984

default_language has been moved to the registry

Files changed:
M plone/app/layout/globals/portal.py
M plone/app/layout/globals/tests/test_portal.py

diff --git a/plone/app/layout/globals/portal.py b/plone/app/layout/globals/portal.py
index 77be5f3..7d3066a 100644
--- a/plone/app/layout/globals/portal.py
+++ b/plone/app/layout/globals/portal.py
@@ -7,6 +7,7 @@
 
 from Acquisition import aq_inner
 from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import ILanguageSchema
 from Products.CMFPlone.interfaces import ISearchSchema
 from Products.Five.browser import BrowserView
 
@@ -64,10 +65,9 @@ def navigation_root_url(self):
 
     @memoize_contextless
     def default_language(self):
-        context = aq_inner(self.context)
-        site_properties = getToolByName(
-            context, "portal_properties").site_properties
-        return site_properties.getProperty('default_language', None)
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ILanguageSchema, prefix="plone")
+        return settings.default_language
 
     def language(self):
         return self.request.get('LANGUAGE', None) or \
diff --git a/plone/app/layout/globals/tests/test_portal.py b/plone/app/layout/globals/tests/test_portal.py
index 4485fbf..9d6c7fc 100644
--- a/plone/app/layout/globals/tests/test_portal.py
+++ b/plone/app/layout/globals/tests/test_portal.py
@@ -89,7 +89,9 @@ def test_navigation_root_url(self):
         self.assertEqual(view.navigation_root_url(), url)
 
     def test_default_language(self):
-        self.portal.portal_properties.site_properties.default_language = 'no'
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ILanguageSchema, prefix="plone")
+        settings.default_language = 'no'
         self.assertEqual(self.view.default_language(), 'no')
 
     def test_language(self):


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-06T23:58:27-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.layout/commit/0f7398c80afacff4de7c8ee4303406745059d586

Use icon_visibility setting from the registry

Files changed:
M plone/app/layout/globals/layout.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index ee4e30d..b4c451f 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -84,12 +84,11 @@ def icons_visible(self):
         """
         context = self.context
         membership = getToolByName(context, "portal_membership")
-        properties = getToolByName(context, "portal_properties")
-
-        site_properties = getattr(properties, 'site_properties')
         anon = membership.isAnonymousUser()
-        icon_visibility = site_properties.getProperty(
-            'icon_visibility', 'enabled')
+
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(ISiteSchema, prefix="plone")
+        icon_visibility = settings.icon_visibility
 
         if icon_visibility == 'enabled':
             return True


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-09-06T23:59:15-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.layout/commit/d8a9c4a6fee6d9a343cebb11372d341ec248eccf

Avoid registry check on ISiteSchema to avoid unusable site prior to upgrade

Files changed:
M plone/app/layout/globals/layout.py
M plone/app/layout/viewlets/common.py

diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index b4c451f..4f564f8 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -87,7 +87,7 @@ def icons_visible(self):
         anon = membership.isAnonymousUser()
 
         registry = getUtility(IRegistry)
-        settings = registry.forInterface(ISiteSchema, prefix="plone")
+        settings = registry.forInterface(ISiteSchema, prefix="plone", check=False)
         icon_visibility = settings.icon_visibility
 
         if icon_visibility == 'enabled':
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index 0693fc7..67d1e7c 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -70,7 +70,9 @@ class TitleViewlet(ViewletBase):
     @memoize
     def site_title_setting(self):
         registry = getUtility(IRegistry)
-        site_settings = registry.forInterface(ISiteSchema, prefix="plone", check=False)
+        site_settings = registry.forInterface(ISiteSchema,
+                                              prefix="plone",
+                                              check=False)
         return site_settings.site_title
 
     @property
@@ -184,7 +186,9 @@ def update(self):
         self.navigation_root_title = self.portal_state.navigation_root_title()
 
         registry = getUtility(IRegistry)
-        settings = registry.forInterface(ISiteSchema, prefix="plone", check=False)
+        settings = registry.forInterface(ISiteSchema,
+                                         prefix="plone",
+                                         check=False)
         self.logo_title = settings.site_title
         self.img_src = getSiteLogo(self.portal_state.portal())
 


