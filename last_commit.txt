Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-17T01:20:06-05:00
Author: Carlos de la Guardia (cguardia) <cguardia@yahoo.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/090b5ade2b61c6433c038b3fa4f06b03172e263c

wrap context to allow tools to be found in text widget

Files changed:
M plone/app/z3cform/widget.py

diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 6c240d9..df5e9cd 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -1,4 +1,6 @@
 # -*- coding: utf-8 -*-
+from Acquisition import ImplicitAcquisitionWrapper
+from UserDict import UserDict
 from Products.CMFCore.utils import getToolByName
 from lxml import etree
 from plone.app.textfield.value import RichTextValue
@@ -15,6 +17,7 @@
 from plone.app.widgets.utils import get_relateditems_options
 from plone.app.widgets.utils import get_tinymce_options
 from plone.registry.interfaces import IRegistry
+from plone.app.z3cform.utils import closest_content
 from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget
 from z3c.form.browser.text import TextWidget as z3cform_TextWidget
 from z3c.form.browser.widget import HTMLInputWidget
@@ -449,6 +452,15 @@ def __init__(self, *args, **kwargs):
         super(RichTextWidget, self).__init__(*args, **kwargs)
         self._pattern = None
 
+    def wrapped_context(self):
+        """"We need to wrap the context to be able to acquire the root
+            of the site to get tools, as done in plone.app.textfield"""
+        context = self.context
+        content = closest_content(context)
+        if context.__class__ == dict:
+            context = UserDict(self.context)
+        return ImplicitAcquisitionWrapper(context, content)
+
     @property
     def pattern(self):
         """dynamically grab the actual pattern name so it will
@@ -463,7 +475,7 @@ def pattern(self):
             except AttributeError:
                 default = 'tinymce'
                 available = ['TinyMCE']
-            tool = getToolByName(self.context, "portal_membership")
+            tool = getToolByName(self.wrapped_context(), "portal_membership")
             member = tool.getAuthenticatedMember()
             editor = member.getProperty('wysiwyg_editor')
             if editor in available:
@@ -476,7 +488,7 @@ def pattern(self):
     def _base_args(self):
         args = super(RichTextWidget, self)._base_args()
         args['name'] = self.name
-        properties = getToolByName(self.context, 'portal_properties')
+        properties = getToolByName(self.wrapped_context(), 'portal_properties')
         charset = properties.site_properties.getProperty('default_charset',
                                                          'utf-8')
         value = self.value and self.value.raw_encoded or ''


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-17T13:19:29-05:00
Author: Carlos de la Guardia (cguardia) <cguardia@yahoo.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/181d7e705f4f1e03becaf885e85770657745204d

add change log entry

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 3317cde..96f3b99 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Wrap context to allow tools to be found in text widget.
+  [cguardia]
 
 
 1.1.4 (2015-09-16)


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-17T13:26:54-05:00
Author: Carlos de la Guardia (cguardia) <cguardia@yahoo.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/fc585c43613204c6b2231b0e27a34e09cfd9d6f3

fix merge conflict

Files changed:
M CHANGES.rst
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 96f3b99..2cad99a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
+- Allow time options to be customized for DatetimeWidget.
+  [thet]
+
 - Wrap context to allow tools to be found in text widget.
   [cguardia]
 
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 18b4e68..223ded4 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -178,7 +178,10 @@ def setUp(self):
         self.request = TestRequest(environ={'HTTP_ACCEPT_LANGUAGE': 'en'})
         self.field = Datetime(__name__='datetimefield')
         self.widget = DatetimeWidget(self.request)
-        self.widget.pattern_options = {'date': {'firstDay': 0}}
+        self.widget.pattern_options = {
+            'date': {'firstDay': 0},
+            'time': {'interval': 15}
+        }
 
     def test_widget(self):
         current_year = datetime.today().year
@@ -213,7 +216,8 @@ def test_widget(self):
                     'time': {
                         'placeholder': u'Enter time...',
                         'today': u'Today',
-                        'format': 'h:i a'
+                        'format': 'h:i a',
+                        'interval': 15
                     }
                 }
             },
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index df5e9cd..8655010 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -186,7 +186,11 @@ def _base_args(self):
 
         args.setdefault('pattern_options', {})
         if 'time' in args['pattern_options']:
+            # Time gets set in parent class to false. Remove.
             del args['pattern_options']['time']
+        if 'time' in self.pattern_options:
+            # Re-apply custom set time options.
+            args['pattern_options']['time'] = self.pattern_options['time']
         args['pattern_options'] = dict_merge(
             get_datetime_options(self.request),
             args['pattern_options'])


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2015-09-17T11:28:16-07:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/plone.app.z3cform/commit/893d971522ff3fb8406845ad9ea0350d7e46c5ac

Merge pull request #25 from cguardia/master

wrap context to allow tools to be found in text widget

Files changed:
M CHANGES.rst
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f97ec80..2cad99a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,6 +7,9 @@ Changelog
 - Allow time options to be customized for DatetimeWidget.
   [thet]
 
+- Wrap context to allow tools to be found in text widget.
+  [cguardia]
+
 
 1.1.4 (2015-09-16)
 ------------------
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index cc4c8af..8655010 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -1,4 +1,6 @@
 # -*- coding: utf-8 -*-
+from Acquisition import ImplicitAcquisitionWrapper
+from UserDict import UserDict
 from Products.CMFCore.utils import getToolByName
 from lxml import etree
 from plone.app.textfield.value import RichTextValue
@@ -15,6 +17,7 @@
 from plone.app.widgets.utils import get_relateditems_options
 from plone.app.widgets.utils import get_tinymce_options
 from plone.registry.interfaces import IRegistry
+from plone.app.z3cform.utils import closest_content
 from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget
 from z3c.form.browser.text import TextWidget as z3cform_TextWidget
 from z3c.form.browser.widget import HTMLInputWidget
@@ -453,6 +456,15 @@ def __init__(self, *args, **kwargs):
         super(RichTextWidget, self).__init__(*args, **kwargs)
         self._pattern = None
 
+    def wrapped_context(self):
+        """"We need to wrap the context to be able to acquire the root
+            of the site to get tools, as done in plone.app.textfield"""
+        context = self.context
+        content = closest_content(context)
+        if context.__class__ == dict:
+            context = UserDict(self.context)
+        return ImplicitAcquisitionWrapper(context, content)
+
     @property
     def pattern(self):
         """dynamically grab the actual pattern name so it will
@@ -467,7 +479,7 @@ def pattern(self):
             except AttributeError:
                 default = 'tinymce'
                 available = ['TinyMCE']
-            tool = getToolByName(self.context, "portal_membership")
+            tool = getToolByName(self.wrapped_context(), "portal_membership")
             member = tool.getAuthenticatedMember()
             editor = member.getProperty('wysiwyg_editor')
             if editor in available:
@@ -480,7 +492,7 @@ def pattern(self):
     def _base_args(self):
         args = super(RichTextWidget, self)._base_args()
         args['name'] = self.name
-        properties = getToolByName(self.context, 'portal_properties')
+        properties = getToolByName(self.wrapped_context(), 'portal_properties')
         charset = properties.site_properties.getProperty('default_charset',
                                                          'utf-8')
         value = self.value and self.value.raw_encoded or ''


