Repository: mockup
Branch: refs/heads/master
Date: 2015-04-16T13:07:49+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/4558bccd01ce40e049ca96b55cc3d4d70ec23a06

change the translate singleton to just lazy load mockup-i18n

Files changed:
M CHANGES.rst
M mockup/js/i18n-wrapper.js
M mockup/js/i18n.js
M mockup/js/ui/views/base.js
M mockup/patterns/filemanager/js/customize.js
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/livesearch/pattern.js
M mockup/patterns/querystring/pattern.js
M mockup/patterns/resourceregistry/js/builder.js
M mockup/patterns/resourceregistry/js/fields.js
M mockup/patterns/resourceregistry/js/overrides.js
M mockup/patterns/resourceregistry/pattern.js
M mockup/patterns/structure/js/views/actionmenu.js
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/paging.js
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/textfilter.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/upload/pattern.js
M mockup/tests/i18n-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 3473265..af1ef6b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0.3 (unreleased)
 ------------------
 
+- lazy load translations so we can potential hold off detecting language until
+  the DOM is loaded
+  [vangheem]
+
 - Change all index references from ``Type`` to ``portal_type``. E.g. the
   TinyMCE configuration option ``containsobjects`` expects portal_type values,
   not Type.
diff --git a/mockup/js/i18n-wrapper.js b/mockup/js/i18n-wrapper.js
index f9cb00b..b0cdf84 100644
--- a/mockup/js/i18n-wrapper.js
+++ b/mockup/js/i18n-wrapper.js
@@ -9,8 +9,19 @@
 
 define([
   'mockup-i18n'
-], function(i18n) {
+], function(I18N) {
   'use strict';
-  i18n.loadCatalog('widgets');
-  return i18n.MessageFactory('widgets');
+
+  // we're creating a singleton here so we can potentially
+  // delay the initialization of the translate catalog
+  // until after the dom is available
+  var _t = null;
+  return function(msgid, keywords){
+    if(_t === null){
+      var i18n = new I18N();
+      i18n.loadCatalog('widgets');
+      _t = i18n.MessageFactory('widgets');
+    }
+    return _t(msgid, keywords);
+  };
 });
diff --git a/mockup/js/i18n.js b/mockup/js/i18n.js
index 1ecd200..1321cc6 100644
--- a/mockup/js/i18n.js
+++ b/mockup/js/i18n.js
@@ -114,5 +114,5 @@ define([
     };
   };
 
-  return new I18N();
+  return I18N;
 });
diff --git a/mockup/js/ui/views/base.js b/mockup/js/ui/views/base.js
index 96b2933..49dc6ac 100644
--- a/mockup/js/ui/views/base.js
+++ b/mockup/js/ui/views/base.js
@@ -2,8 +2,8 @@ define([
   'jquery',
   'underscore',
   'backbone',
-  'mockup-i18n'
-], function($, _, Backbone, i18n) {
+  'translate'
+], function($, _, Backbone, _t) {
   'use strict';
 
   var BaseView = Backbone.View.extend({
@@ -16,8 +16,7 @@ define([
       for (var key in this.options) {
         this[key] = this.options[key];
       }
-      i18n.loadCatalog('widgets');
-      this._t = this.options._t = i18n.MessageFactory('widgets');
+      this.options._t = _t;
     },
     render: function() {
       this.applyTemplate();
@@ -39,7 +38,7 @@ define([
     },
     applyTemplate: function() {
       if (this.template !== null) {
-        var data = $.extend({}, this.options, this.serializedModel());
+        var data = $.extend({_t: _t}, this.options, this.serializedModel());
         var template = this.template;
         if(typeof(template) === 'string'){
           template = _.template(template);
diff --git a/mockup/patterns/filemanager/js/customize.js b/mockup/patterns/filemanager/js/customize.js
index 8d28615..15a8f9c 100644
--- a/mockup/patterns/filemanager/js/customize.js
+++ b/mockup/patterns/filemanager/js/customize.js
@@ -2,8 +2,9 @@ define([
   'jquery',
   'underscore',
   'backbone',
-  'mockup-patterns-filemanager-url/js/basepopover'
-], function($, _, Backbone, PopoverView) {
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, Backbone, PopoverView, _t) {
   'use strict';
 
   var CustomizeView = PopoverView.extend({
@@ -37,7 +38,7 @@ define([
             _.each(data, function(item){
               var $item = $(
                 '<li class="list-group-item" data-id="' + item.id + '">' +
-                  '<span class="badge"><a href=#">' + self.app._t('Customize') + '</a></span>' +
+                  '<span class="badge"><a href=#">' + _t('Customize') + '</a></span>' +
                   item.id +
                 '</li>');
               $('a', $item).click(function(e){
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 4f7d9f1..8389be5 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -49,12 +49,12 @@ define([
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
   'mockup-patterns-filemanager-url/js/upload',
-  'mockup-i18n',
+  'translate',
   'mockup-utils',
   'text!mockup-ui-url/templates/popover.xml'
 ], function($, Base, _, Backbone, BaseView, Tree, TextEditor, AppTemplate, Toolbar,
             ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
-            CustomizeView, RenameView, UploadView, i18n, utils) {
+            CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
   var FileManager = Base.extend({
@@ -82,10 +82,6 @@ define([
     init: function() {
       var self = this;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-      var _t = self._t;
-
       if (self.options.actionUrl === null) {
         self.$el.html('Must specify actionUrl setting for pattern');
         return;
diff --git a/mockup/patterns/livesearch/pattern.js b/mockup/patterns/livesearch/pattern.js
index d32f966..36f66fc 100644
--- a/mockup/patterns/livesearch/pattern.js
+++ b/mockup/patterns/livesearch/pattern.js
@@ -26,8 +26,8 @@ define([
   'jquery',
   'mockup-patterns-base',
   'underscore',
-  'mockup-i18n'
-], function ($, Base, _, i18n){
+  'translate'
+], function ($, Base, _, _t){
   'use strict';
 
   var Livesearch = Base.extend({
@@ -75,8 +75,8 @@ define([
         self.results = {
           items: [{
             url: '',
-            title: self._t('Error'),
-            description: self._t('There was an error searching…'),
+            title: _t('Error'),
+            description: _t('There was an error searching…'),
             state: 'error',
             error: false
           }],
@@ -97,21 +97,21 @@ define([
       /* find a status message */
 
       if(self.active){
-        self.$results.append($('<li class="searching">' + self._t('searching…') + '</li>'));
+        self.$results.append($('<li class="searching">' + _t('searching…') + '</li>'));
       }else if(self.results === null){
         // no results gathered yet
-        self.$results.append($('<li class="no-results no-search">' + self._t('enter search phrase') + '</li>'));
+        self.$results.append($('<li class="no-results no-search">' + _t('enter search phrase') + '</li>'));
       } else if(self.results.total === 0){
-        self.$results.append($('<li class="no-results">' + self._t('no results found') + '</li>'));
+        self.$results.append($('<li class="no-results">' + _t('no results found') + '</li>'));
       } else{
-        self.$results.append($('<li class="results-summary">' + self._t('found') +
-                               ' ' + self.results.total + ' ' + self._t('results') + '</li>'));
+        self.$results.append($('<li class="results-summary">' + _t('found') +
+                               ' ' + self.results.total + ' ' + _t('results') + '</li>'));
       }
 
       if(self.results !== null){
         var template = _.template(self.options.itemTemplate);
         _.each(self.results.items, function(item, index){
-          var $el = $(template($.extend({_t: self._t}, item)));
+          var $el = $(template($.extend({_t: _t}, item)));
           $el.attr('data-url', item.url).on('click', function(){
             if(!item.error){
               window.location = item.url;
@@ -124,7 +124,7 @@ define([
         });
         var nav = [];
         if(self.page > 1){
-          var $prev = $('<a href="#" class="prev">' + self._t('Previous') + '</a>');
+          var $prev = $('<a href="#" class="prev">' + _t('Previous') + '</a>');
           $prev.click(function(e){
             self.disableHiding = true;
             e.preventDefault();
@@ -133,7 +133,7 @@ define([
           nav.push($prev);
         }
         if((self.page * self.options.perPage) < self.results.total){
-          var $next = $('<a href="#" class="next">' + self._t('Next') + '</a>');
+          var $next = $('<a href="#" class="next">' + _t('Next') + '</a>');
           $next.click(function(e){
             self.disableHiding = true;
             e.preventDefault();
@@ -170,9 +170,6 @@ define([
     init: function(){
       var self = this;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-
       self.$input = self.$el.find(self.options.inputSelector);
       self.$input.off('focusout').on('focusout', function(){
         /* we put this in a timer so click events still
diff --git a/mockup/patterns/querystring/pattern.js b/mockup/patterns/querystring/pattern.js
index b4f321b..67733e5 100644
--- a/mockup/patterns/querystring/pattern.js
+++ b/mockup/patterns/querystring/pattern.js
@@ -45,8 +45,8 @@ define([
   'mockup-patterns-select2',
   'mockup-patterns-pickadate',
   'select2',
-  'mockup-i18n'
-], function($, Base, Select2, PickADate, undefined, i18n) {
+  'translate'
+], function($, Base, Select2, PickADate, undefined, _t) {
   'use strict';
 
   var Criteria = function() { this.init.apply(this, arguments); };
@@ -66,9 +66,6 @@ define([
     init: function($el, options, indexes, index, operator, value) {
       var self = this;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-
       self.options = $.extend(true, {}, self.defaults, options);
       self.indexes = indexes;
       self.indexGroups = {};
@@ -88,7 +85,7 @@ define([
 
       // Index selection
       self.$index = $('<select><option></option></select>')
-          .attr('placeholder', self._t('Select criteria'));
+          .attr('placeholder', _t('Select criteria'));
 
       // list of indexes
       $.each(self.indexes, function(value, options) {
@@ -117,7 +114,7 @@ define([
       self.$index
         .patternSelect2({
           width: self.options.indexWidth,
-          placeholder: self._t('Select criteria')
+          placeholder: _t('Select criteria')
         })
         .on('change', function(e) {
           self.removeValue();
@@ -216,7 +213,7 @@ define([
           });
         $wrapper.append(
           $('<span/>')
-            .html(self._t('to'))
+            .html(_t('to'))
             .addClass(self.options.classBetweenDtName)
         );
         var endwrap = $('<span/>').appendTo($wrapper);
@@ -235,7 +232,7 @@ define([
 
       } else if (widget === 'RelativeDateWidget') {
         self.$value = $('<input type="text"/>')
-                .after($('<span/>').html(self._t('days')))
+                .after($('<span/>').html(_t('days')))
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
@@ -435,9 +432,6 @@ define([
     init: function() {
       var self = this;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-
       // hide input element
       self.$el.hide();
 
@@ -485,11 +479,11 @@ define([
         // preview title and description
         $('<div/>')
           .addClass(self.options.classPreviewTitleName)
-          .html(self._t('Preview'))
+          .html(_t('Preview'))
           .appendTo(self.$previewWrapper);
         $('<div/>')
           .addClass(self.options.classPreviewDescriptionName)
-          .html(self._t('Preview of at most 10 items'))
+          .html(_t('Preview of at most 10 items'))
           .appendTo(self.$previewWrapper);
       }
 
@@ -566,7 +560,7 @@ define([
 
       $('<span/>')
         .addClass(self.options.classSortLabelName)
-        .html(self._t('Sort on'))
+        .html(_t('Sort on'))
         .appendTo(self.$sortWrapper);
       self.$sortOn = $('<select/>')
         .attr('name', 'sort_on')
@@ -603,7 +597,7 @@ define([
         .append(self.$sortOrder)
         .append(
           $('<span/>')
-            .html(self._t('Reserved Order'))
+            .html(_t('Reserved Order'))
             .addClass(self.options.classSortReverseLabelName)
         );
 
diff --git a/mockup/patterns/resourceregistry/js/builder.js b/mockup/patterns/resourceregistry/js/builder.js
index b6aaec3..28f1ccd 100644
--- a/mockup/patterns/resourceregistry/js/builder.js
+++ b/mockup/patterns/resourceregistry/js/builder.js
@@ -5,8 +5,8 @@ define([
   'underscore',
   'mockup-utils',
   'mockup-patterns-resourceregistry-url/js/iframe',
-  'mockup-i18n'
-], function($, Modal, _, utils, IFrame, i18n){
+  'translate'
+], function($, Modal, _, utils, IFrame, _t){
   'use strict';
 
   var Builder = function(bundleName, bundleListItem){
@@ -17,9 +17,6 @@ define([
     self.$results = null;
     self.$btnClose = null;
 
-    i18n.loadCatalog('widgets');
-    var _t = i18n.MessageFactory('widgets');
-
     self.rview.loading.show();
     self.modal = new Modal($('<div/>').appendTo(self.rview.$el), {
       html: _.template('<div id="content">' +
diff --git a/mockup/patterns/resourceregistry/js/fields.js b/mockup/patterns/resourceregistry/js/fields.js
index 208ea3f..6d9ec6f 100644
--- a/mockup/patterns/resourceregistry/js/fields.js
+++ b/mockup/patterns/resourceregistry/js/fields.js
@@ -4,8 +4,8 @@ define([
   'mockup-ui-url/views/base',
   'mockup-patterns-sortable',
   'mockup-patterns-select2',
-  'mockup-i18n'
-], function($, _, BaseView, Sortable, Select2, i18n) {
+  'translate'
+], function($, _, BaseView, Sortable, Select2, _t) {
   'use strict';
 
 
@@ -203,7 +203,7 @@ define([
         $container.append('<li class="list-group-item"><div class="input-group">' +
           '<input class="form-control input-sm" value="' + value + '" />' +
           '<span class="input-group-btn">' +
-            '<button class="plone-btn plone-btn-default remove plone-btn-sm">' + self._t('Remove') + '</button></div></li>');
+            '<button class="plone-btn plone-btn-default remove plone-btn-sm">' + _t('Remove') + '</button></div></li>');
       });
 
       if(self.sortable){
diff --git a/mockup/patterns/resourceregistry/js/overrides.js b/mockup/patterns/resourceregistry/js/overrides.js
index aba68b2..d9dcd05 100644
--- a/mockup/patterns/resourceregistry/js/overrides.js
+++ b/mockup/patterns/resourceregistry/js/overrides.js
@@ -7,8 +7,8 @@ define([
   'mockup-patterns-texteditor',
   'mockup-utils',
   'mockup-patterns-select2',
-  'mockup-i18n'
-], function($, _, BaseView, TextEditor, utils, Select2, i18n) {
+  'translate'
+], function($, _, BaseView, TextEditor, utils, Select2, _t) {
   'use strict';
 
   var OverridesView = BaseView.extend({
@@ -46,9 +46,6 @@ define([
     initialize: function(options){
       BaseView.prototype.initialize.apply(this, [options]);
       this.tabView = options.tabView;
-
-      i18n.loadCatalog('widgets');
-      this._t = i18n.MessageFactory('widgets');
     },
 
     serializedModel: function(){
@@ -129,7 +126,7 @@ define([
 
       var format = function(data){
         if(data.override){
-          return '<span class="customized">' + data.text + ' - ' + this._t('customized') + '</span>';
+          return '<span class="customized">' + data.text + ' - ' + _t('customized') + '</span>';
         }
         return data.text;
       };
@@ -168,7 +165,7 @@ define([
             that.$el.find('.plone-btn-primary,.plone-btn-default').removeClass('disabled');
           });
         }).fail(function(){
-          alert(that._t('error loading resource for editing'));
+          alert(_t('error loading resource for editing'));
           that.tabView.loading.hide();
         });
       }
diff --git a/mockup/patterns/resourceregistry/pattern.js b/mockup/patterns/resourceregistry/pattern.js
index 725f72a..54ea8d7 100644
--- a/mockup/patterns/resourceregistry/pattern.js
+++ b/mockup/patterns/resourceregistry/pattern.js
@@ -99,9 +99,9 @@ define([
   'mockup-patterns-resourceregistry-url/js/overrides',
   'mockup-patterns-resourceregistry-url/js/registry',
   'mockup-patterns-resourceregistry-url/js/patternoptions',
-  'mockup-i18n'
+  'translate'
 ], function($, Base, _, BaseView, utils, LessVariablesView,
-            OverridesView,RegistryView, PatternOptionsView, i18n) {
+            OverridesView,RegistryView, PatternOptionsView, _t) {
   'use strict';
 
 
@@ -137,9 +137,6 @@ define([
     initialize: function(options) {
       var self = this;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-
       BaseView.prototype.initialize.apply(self, [options]);
       self.registryView = new RegistryView({
         data: options,
@@ -158,7 +155,7 @@ define([
 
     render: function(){
       var self = this;
-      self.$el.append(self.template({_t: self._t}));
+      self.$el.append(self.template({_t: _t}));
       self.loading = new utils.Loading();
       self.$tabs = self.$('ul.main-tabs');
       self.$content = self.$('.tab-content');
diff --git a/mockup/patterns/structure/js/views/actionmenu.js b/mockup/patterns/structure/js/views/actionmenu.js
index ac6070e..5d5cfca 100644
--- a/mockup/patterns/structure/js/views/actionmenu.js
+++ b/mockup/patterns/structure/js/views/actionmenu.js
@@ -7,9 +7,9 @@ define([
   'mockup-ui-url/views/base',
   'mockup-utils',
   'text!mockup-patterns-structure-url/templates/actionmenu.xml',
-  'mockup-i18n',
+  'translate',
   'bootstrap-dropdown'
-], function($, _, Backbone, BaseView, utils, ActionMenuTemplate, i18n) {
+], function($, _, Backbone, BaseView, utils, ActionMenuTemplate, _t) {
   'use strict';
 
   var ActionMenu = BaseView.extend({
@@ -35,8 +35,6 @@ define([
       }else {
         this.canMove = true;
       }
-      i18n.loadCatalog('widgets');
-      this._t = i18n.MessageFactory('widgets');
     },
     cutClicked: function(e) {
       e.preventDefault();
@@ -134,7 +132,7 @@ define([
       data.header = self.options.header || null;
       data.canMove = self.canMove;
 
-      self.$el.html(self.template($.extend({ _t: self._t }, data)));
+      self.$el.html(self.template($.extend({ _t: _t }, data)));
 
       self.$dropdown = self.$('.dropdown-toggle');
       self.$dropdown.dropdown();
diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js
index ecb2035..6dda8e4 100644
--- a/mockup/patterns/structure/js/views/app.js
+++ b/mockup/patterns/structure/js/views/app.js
@@ -23,12 +23,13 @@ define([
   'mockup-patterns-structure-url/js/collections/result',
   'mockup-patterns-structure-url/js/collections/selected',
   'mockup-utils',
+  'translate',
   'jquery.cookie'
 ], function($, _, Backbone, Toolbar, ButtonGroup, ButtonView, BaseView,
             TableView, SelectionWellView, TagsView, PropertiesView,
             WorkflowView, DeleteView, RenameView, RearrangeView, SelectionButtonView,
             PagingView, AddMenu, ColumnsView, TextFilterView, UploadView,
-            ResultCollection, SelectedCollection, utils) {
+            ResultCollection, SelectedCollection, utils, _t) {
   'use strict';
 
   var DISABLE_EVENT = 'DISABLE';
@@ -110,7 +111,7 @@ define([
       });
 
       self.buttonViews = {};
-      _.map(self.buttonViewMapping, function(ViewClass, key, list) {
+      _.map(self.buttonViewMapping, function(ViewClass, key) {
         var name = key.split('.');
         var group = name[0];
         var buttonName = name[1];
@@ -319,9 +320,9 @@ define([
     },
     ajaxErrorResponse: function(response, url) {
       if (response.status === 404) {
-        window.alert(this._t('operation url ${url} is not valid', {url: url}));
+        window.alert(_t('operation url ${url} is not valid', {url: url}));
       } else {
-        window.alert(this._t('there was an error performing action'));
+        window.alert(_t('there was an error performing action'));
       }
     },
     pasteEvent: function(button, e, data) {
@@ -339,10 +340,10 @@ define([
       var self = this;
       var txt;
       if (button.id === 'cut') {
-        txt = self._t('cut ');
+        txt = _t('cut ');
         self.pasteOperation = 'cut';
       } else {
-        txt = self._t('copied ');
+        txt = _t('copied ');
         self.pasteOperation = 'copy';
       }
 
diff --git a/mockup/patterns/structure/js/views/paging.js b/mockup/patterns/structure/js/views/paging.js
index 0f74d20..d5941ad 100644
--- a/mockup/patterns/structure/js/views/paging.js
+++ b/mockup/patterns/structure/js/views/paging.js
@@ -3,8 +3,8 @@ define([
   'underscore',
   'backbone',
   'text!mockup-patterns-structure-url/templates/paging.xml',
-  'mockup-i18n'
-], function($, _, Backbone, PagingTemplate, i18n) {
+  'translate'
+], function($, _, Backbone, PagingTemplate, _t) {
   'use strict';
 
 
@@ -30,15 +30,12 @@ define([
       this.collection.on('sync', this.render, this);
 
       this.$el.appendTo('#pagination');
-
-      i18n.loadCatalog('widgets');
-      this._t = i18n.MessageFactory('widgets');
     },
 
     render: function () {
       var data = this.collection.info();
       data.pages = this.getPages(data);
-      var html = this.template($.extend({ _t: this._t}, data));
+      var html = this.template($.extend({ _t: _t}, data));
       this.$el.html(html);
       return this;
     },
diff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js
index 101a535..c277c02 100644
--- a/mockup/patterns/structure/js/views/table.js
+++ b/mockup/patterns/structure/js/views/table.js
@@ -8,9 +8,10 @@ define([
   'mockup-patterns-sortable',
   'mockup-patterns-moment',
   'mockup-patterns-structure-url/js/models/result',
-  'mockup-patterns-structure-url/js/views/actionmenu'
+  'mockup-patterns-structure-url/js/views/actionmenu',
+  'translate'
 ], function($, _, Backbone, TableRowView, TableTemplate, BaseView, Sortable,
-            Moment, Result, ActionMenu) {
+            Moment, Result, ActionMenu, _t) {
   'use strict';
 
   var TableView = BaseView.extend({
@@ -64,7 +65,7 @@ define([
         self.folderMenu = new ActionMenu({
           app: self.app,
           model: self.folderModel,
-          header: self._t('Actions on current folder'),
+          header: _t('Actions on current folder'),
           canMove: false
         });
         $('.input-group-btn', self.$breadcrumbs).empty().append(self.folderMenu.render().el);
@@ -75,7 +76,7 @@ define([
     render: function() {
       var self = this;
       self.$el.html(self.template({
-        _t: self._t,
+        _t: _t,
         pathParts: _.filter(
           self.app.queryHelper.getCurrentPath().split('/').slice(1),
           function(val) {
@@ -156,7 +157,7 @@ define([
       var self = this;
       // if we have a custom query going on, we do not allow sorting.
       if (self.app.inQueryMode()) {
-        self.app.setStatus(self._t('Can not order items while querying'));
+        self.app.setStatus(_t('Can not order items while querying'));
         self.$el.removeClass('order-support');
         return;
       }
diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js
index fdcefbe..b3768f9 100644
--- a/mockup/patterns/structure/js/views/textfilter.js
+++ b/mockup/patterns/structure/js/views/textfilter.js
@@ -5,8 +5,9 @@ define([
   'mockup-ui-url/views/base',
   'mockup-ui-url/views/button',
   'mockup-ui-url/views/popover',
-  'mockup-patterns-querystring'
-], function($, Backbone, _, BaseView, ButtonView, PopoverView, QueryString) {
+  'mockup-patterns-querystring',
+  'translate'
+], function($, Backbone, _, BaseView, ButtonView, PopoverView, QueryString, _t) {
   'use strict';
 
   var TextFilterView = BaseView.extend({
@@ -35,7 +36,7 @@ define([
     },
 
     render: function() {
-      this.$el.html(this.template({_t: this._t}));
+      this.$el.html(this.template({_t: _t}));
       this.button = new ButtonView({
         title: 'Query'
       });
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 2dc563a..f8356c0 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -104,7 +104,7 @@ define([
 ], function($, _,
             Base, RelatedItems, Modal, tinymce,
             AutoTOC, ResultTemplate, SelectionTemplate,
-            utils, LinkModal, i18n, _t) {
+            utils, LinkModal, I18n, _t) {
   'use strict';
 
   var TinyMCE = Base.extend({
@@ -288,12 +288,13 @@ define([
     },
     initLanguage: function(call_back){
       var self = this;
+      var i18n = new I18n();
       var lang = i18n.currentLanguage;
-      if (lang != 'en' && self.options.tiny.language !== 'en') {
+      if (lang !== 'en' && self.options.tiny.language !== 'en') {
         tinymce.baseURL = self.options.loadingBaseUrl;
         // does the expected language exist?
         $.ajax({
-          url: tinymce.baseURL + "/langs/" + lang + ".js",
+          url: tinymce.baseURL + '/langs/' + lang + '.js',
           type:'HEAD',
           success: function() {
             self.options.tiny.language = lang;
@@ -301,13 +302,13 @@ define([
           },
           error: function() {
             // expected lang not available, let's fallback to closest one
-            if (lang.split("_") > 1){
-              lang = lang.split("_")[0];
+            if (lang.split('_') > 1){
+              lang = lang.split('_')[0];
             } else {
-              lang = lang + "_" + lang.toUpperCase();
+              lang = lang + '_' + lang.toUpperCase();
             }
             $.ajax({
-              url: tinymce.baseURL + "/langs/" + lang + ".js",
+              url: tinymce.baseURL + '/langs/' + lang + '.js',
               type:'HEAD',
               success: function() {
                 self.options.tiny.language = lang;
@@ -359,7 +360,7 @@ define([
               part: scale[1],
               name: scale[1],
               label: scale[0]
-            }
+            };
           });
         }
         if(typeof(self.options.folderTypes) === 'string'){
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index 6699641..99f5006 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -48,9 +48,9 @@ define([
   'dropzone',
   'text!mockup-patterns-upload-url/templates/upload.xml',
   'text!mockup-patterns-upload-url/templates/preview.xml',
-  'mockup-i18n'
+  'translate'
 ], function($, _, Base, RelatedItems, Dropzone,
-            UploadTemplate, PreviewTemplate, i18n) {
+            UploadTemplate, PreviewTemplate, _t) {
   'use strict';
 
   /* we do not want this plugin to auto discover */
@@ -94,15 +94,12 @@ define([
       var self = this,
           template = UploadTemplate;
 
-      i18n.loadCatalog('widgets');
-      self._t = i18n.MessageFactory('widgets');
-
       // values that will change current processing
       self.currentPath = self.options.currentPath;
       self.numFiles = 0;
       self.currentFile = 0;
 
-      template = _.template(template, {_t: self._t});
+      template = _.template(template, {_t: _t});
       self.$el.addClass(self.options.className);
       self.$el.append(template);
 
@@ -365,13 +362,13 @@ define([
         chunkSize: chunkSize
       }).fail(function() {
         if(window.DEBUG){
-          console.alert(self._t('Error uploading with TUS resumable uploads'));
+          console.alert(_t('Error uploading with TUS resumable uploads'));
         }
         file.status = Dropzone.ERROR;
       }).progress(function(e, bytesUploaded, bytesTotal) {
         var percentage = (bytesUploaded / bytesTotal * 100);
         self.$progress.attr('aria-valuenow', percentage).css('width', percentage + '%');
-        self.$progress.html(self._t('uploading...') + '<br />' +
+        self.$progress.html(_t('uploading...') + '<br />' +
                             self.formatBytes(bytesUploaded) +
                             ' / ' + self.formatBytes(bytesTotal));
       }).done(function(url, file) {
diff --git a/mockup/tests/i18n-test.js b/mockup/tests/i18n-test.js
index d2b9259..e50eb99 100644
--- a/mockup/tests/i18n-test.js
+++ b/mockup/tests/i18n-test.js
@@ -3,7 +3,7 @@ define([
   'jquery',
   'mockup-i18n',
   'sinon'
-], function(expect, $, i18n, sinon) {
+], function(expect, $, I18n, sinon) {
   'use strict';
 
   window.mocha.setup('bdd');
@@ -13,6 +13,7 @@ define([
 
     describe('configure', function() {
 
+      var i18n = new I18n();
       it('ttl', function() {
         i18n.configure({ ttl: 10 });
         expect(i18n.ttl).to.be(10);
@@ -27,6 +28,7 @@ define([
     describe('getUrl', function() {
 
       it('correct params', function() {
+        var i18n = new I18n();
         i18n.configure({ baseUrl: '/foobar' });
         expect(i18n.getUrl('foobar', 'es')).to.be('/foobar?domain=foobar&language=es');
         i18n.configure({ baseUrl: '/plonejsi18n' });
@@ -35,11 +37,13 @@ define([
 
     describe('MessageFactory', function() {
       it('loads default message if no catalog', function() {
+        var i18n = new I18n();
         var _ = i18n.MessageFactory('foobar');
         expect(_('foobar')).to.be('foobar');
       });
 
       it('loads from stored catalog', function() {
+        var i18n = new I18n();
         i18n.configure({
           currentLanguage: 'en',
           catalogs: {
@@ -60,6 +64,7 @@ define([
       });
 
       it('loads from server', function() {
+        var i18n = new I18n();
         var server = sinon.fakeServer.create();
         server.autoRespond = true;
         var clock = sinon.useFakeTimers();


