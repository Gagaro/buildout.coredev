Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2015-09-20T17:27:49+02:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.dexterity/commit/52adc5e0747d069e57fc2d51bf5e63c601519305

Move portal_properties settings to configuration registry

commit 9041429200a114f59eafa3a961cc5b45fef826e6
Author: esteele &lt;eric@esteele.net&gt;
Date:   Fri Sep 18 09:49:57 2015 +0200

    Fix registry id

commit 951e3e00eb8b625611c98f8681255491c01e0b53
Author: esteele &lt;eric@esteele.net&gt;
Date:   Thu Sep 17 18:32:47 2015 +0200

    Use registry lookup for types_use_view_action_in_listings

Files changed:
M plone/app/dexterity/behaviors/nextprevious.py

diff --git a/plone/app/dexterity/behaviors/nextprevious.py b/plone/app/dexterity/behaviors/nextprevious.py
index cfba27e..d593f3a 100644
--- a/plone/app/dexterity/behaviors/nextprevious.py
+++ b/plone/app/dexterity/behaviors/nextprevious.py
@@ -1,13 +1,14 @@
 # -*- coding: utf-8 -*-
 from AccessControl import getSecurityManager
 from Acquisition import aq_base
+from zope.component import getUtility
 from Products.CMFCore.interfaces import IContentish
-from Products.CMFCore.utils import getToolByName
 from plone.app.dexterity import MessageFactory as _
 from plone.app.layout.nextprevious.interfaces import INextPreviousProvider
 from plone.autoform import directives
 from plone.autoform.interfaces import IFormFieldProvider
 from plone.supermodel import model
+from plone.registry.interfaces import IRegistry
 from z3c.form import widget
 from z3c.form.interfaces import IAddForm
 from z3c.form.interfaces import IEditForm
@@ -69,8 +70,8 @@ class NextPreviousBase(object):
 
     def __init__(self, context):
         self.context = context
-        props = getToolByName(context, 'portal_properties').site_properties
-        self.vat = props.getProperty('typesUseViewActionInListings', ())
+        registry = getUtility(IRegistry)
+        self.vat = registry.get('plone.types_use_view_action_in_listings', [])
         self.security = getSecurityManager()
         order = context.getOrdering()
         if not isinstance(order, list):


