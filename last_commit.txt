Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-16T12:48:10+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/archetypes.multilingual/commit/3fad524a00fe7a1cc1fee673d4ed35af712f0ae4

Remove PloneLanguageTool dependency.

Files changed:
M archetypes/multilingual/configure.zcml
M docs/HISTORY.txt

diff --git a/archetypes/multilingual/configure.zcml b/archetypes/multilingual/configure.zcml
index a305770..932d0be 100644
--- a/archetypes/multilingual/configure.zcml
+++ b/archetypes/multilingual/configure.zcml
@@ -7,7 +7,6 @@
     xmlns:cmf="http://namespaces.zope.org/cmf">
 
     <include package="Products.ATContentTypes" />
-    <include package="Products.PloneLanguageTool" />
     <include package="plone.app.multilingual" />
     <include package="plone.app.dexterity" />
     <include package="collective.monkeypatcher" />
diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index 125a178..bc1b239 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -4,6 +4,10 @@ Changelog
 1.3dev - Unreleased
 -------------------
 
+- Remove PloneLanguageTool dependency.
+  [timo]
+
+
 1.2 - 2013-09-24
 ----------------
 


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-17T13:16:16+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/15bca65252d3cbca73b7479e91f56d3ef841769c

ILanguage Interface in CMFPlone

Files changed:
M archetypes/multilingual/browser/translate.py
M archetypes/multilingual/browser/viewlets.py
M archetypes/multilingual/configure.zcml
M archetypes/multilingual/language.py
M archetypes/multilingual/subscriber.py
M archetypes/multilingual/tests/languageindependentfields.txt
M archetypes/multilingual/tests/multilingual.txt
M archetypes/multilingual/tests/test_language_inheritance.py
M archetypes/multilingual/tests/test_monkey.py

diff --git a/archetypes/multilingual/browser/translate.py b/archetypes/multilingual/browser/translate.py
index 9841099..03cee5f 100644
--- a/archetypes/multilingual/browser/translate.py
+++ b/archetypes/multilingual/browser/translate.py
@@ -2,7 +2,7 @@
 from Products.Five import BrowserView
 from plone.app.multilingual import _
 from plone.app.multilingual.browser.translate import google_translate
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.registry.interfaces import IRegistry
diff --git a/archetypes/multilingual/browser/viewlets.py b/archetypes/multilingual/browser/viewlets.py
index 13e9550..aa8c003 100644
--- a/archetypes/multilingual/browser/viewlets.py
+++ b/archetypes/multilingual/browser/viewlets.py
@@ -2,7 +2,7 @@
 from Products.CMFCore.utils import getToolByName
 
 from plone.app.layout.viewlets.common import ViewletBase
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ITranslatable
 
 
diff --git a/archetypes/multilingual/configure.zcml b/archetypes/multilingual/configure.zcml
index 932d0be..b18d28c 100644
--- a/archetypes/multilingual/configure.zcml
+++ b/archetypes/multilingual/configure.zcml
@@ -22,7 +22,7 @@
 
     <adapter
         for=".interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ILanguage"
+        provides="Products.CMFPlone.interfaces.ILanguage"
         factory=".language.ATLanguage" />
 
     <monkey:patch
diff --git a/archetypes/multilingual/language.py b/archetypes/multilingual/language.py
index 0e8e398..ada603d 100644
--- a/archetypes/multilingual/language.py
+++ b/archetypes/multilingual/language.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
 from plone.app.layout.navigation.root import getNavigationRootObject
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT
 from zope import interface
 from zope.component.hooks import getSite
diff --git a/archetypes/multilingual/subscriber.py b/archetypes/multilingual/subscriber.py
index 1306072..9b30304 100644
--- a/archetypes/multilingual/subscriber.py
+++ b/archetypes/multilingual/subscriber.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 from archetypes.multilingual.interfaces import IArchetypesTranslatable
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager
 from plone.app.multilingual.interfaces import ITranslationManager
 from zope.component import queryAdapter
diff --git a/archetypes/multilingual/tests/languageindependentfields.txt b/archetypes/multilingual/tests/languageindependentfields.txt
index 4aa1a13..674ffd0 100644
--- a/archetypes/multilingual/tests/languageindependentfields.txt
+++ b/archetypes/multilingual/tests/languageindependentfields.txt
@@ -44,7 +44,7 @@ interface ``plone.app.multilingual.interfaces.ITranslatable`` and
 
 We should also be able to access the adapter for ``plone.app.multilingual.interfaces.ILanguage``::
 
-    >>> from plone.app.multilingual.interfaces import ILanguage
+    >>> from Products.CMFPlone.interfaces import ILanguage
     >>> from zope.component import queryAdapter
     >>> adapter = queryAdapter(obj, ILanguage)
     >>> adapter == None
diff --git a/archetypes/multilingual/tests/multilingual.txt b/archetypes/multilingual/tests/multilingual.txt
index eb6225a..f441632 100644
--- a/archetypes/multilingual/tests/multilingual.txt
+++ b/archetypes/multilingual/tests/multilingual.txt
@@ -19,7 +19,7 @@ ITranslatable should be provided::
 
 language-adapter::
 
-    >>> from plone.app.multilingual.interfaces import ILanguage
+    >>> from Products.CMFPlone.interfaces import ILanguage
     >>> from zope import component
     >>> adapter = component.queryAdapter(content, ILanguage)
     >>> adapter is not None
diff --git a/archetypes/multilingual/tests/test_language_inheritance.py b/archetypes/multilingual/tests/test_language_inheritance.py
index 6d70930..1f242f5 100644
--- a/archetypes/multilingual/tests/test_language_inheritance.py
+++ b/archetypes/multilingual/tests/test_language_inheritance.py
@@ -3,7 +3,7 @@
 from Products.CMFPlone.utils import _createObjectByType
 from archetypes.multilingual.testing import \
     ARCHETYPESMULTILINGUAL_INTEGRATION_TESTING
-from plone.app.multilingual.interfaces import ILanguage
+from Prodcuts.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
diff --git a/archetypes/multilingual/tests/test_monkey.py b/archetypes/multilingual/tests/test_monkey.py
index 0a215da..d2c2406 100644
--- a/archetypes/multilingual/tests/test_monkey.py
+++ b/archetypes/multilingual/tests/test_monkey.py
@@ -3,7 +3,7 @@
 from archetypes.multilingual.testing import \
     ARCHETYPESMULTILINGUAL_FUNCTIONAL_TESTING
 from archetypes.multilingual.tests.utils import makeContent
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import TEST_USER_PASSWORD


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-20T19:03:58+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/archetypes.multilingual/commit/38ce4631adb798af345ba294ade66545a21d36fe

Fix typo

Files changed:
M archetypes/multilingual/tests/test_language_inheritance.py

diff --git a/archetypes/multilingual/tests/test_language_inheritance.py b/archetypes/multilingual/tests/test_language_inheritance.py
index 1f242f5..cc844df 100644
--- a/archetypes/multilingual/tests/test_language_inheritance.py
+++ b/archetypes/multilingual/tests/test_language_inheritance.py
@@ -3,7 +3,7 @@
 from Products.CMFPlone.utils import _createObjectByType
 from archetypes.multilingual.testing import \
     ARCHETYPESMULTILINGUAL_INTEGRATION_TESTING
-from Prodcuts.CMFPlone.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-20T21:05:00+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/archetypes.multilingual/commit/3bd789cd70912bcdb0d5bf380f04c20886715918

Remove archetypes.testcase test dependency.

Files changed:
M archetypes/multilingual/testing.py
M archetypes/multilingual/tests/multilingual.txt
M docs/HISTORY.txt
M setup.py

diff --git a/archetypes/multilingual/testing.py b/archetypes/multilingual/testing.py
index 9e94f0a..958dead 100644
--- a/archetypes/multilingual/testing.py
+++ b/archetypes/multilingual/testing.py
@@ -21,16 +21,16 @@ def set(self, key, value):
             self[key] = value
 
     def setUpZope(self, app, configurationContext):
-        # load ZCML
+        import Products.ATContentTypes
+        self.loadZCML(package=Products.ATContentTypes)
+
+        z2.installProduct(app, 'Products.Archetypes')
+        z2.installProduct(app, 'Products.ATContentTypes')
+
         import archetypes.multilingual
-        import archetypes.testcase
 
         xmlconfig.file('testing.zcml', archetypes.multilingual,
                        context=configurationContext)
-        xmlconfig.file('configure.zcml', archetypes.testcase,
-                       context=configurationContext)
-
-        z2.installProduct(app, 'archetypes.testcase')
 
         # Support sessionstorage in tests
         app.REQUEST['SESSION'] = self.Session()
@@ -42,9 +42,12 @@ def setUpZope(self, app, configurationContext):
         ztc.utils.setupCoreSessions(app)
 
     def setUpPloneSite(self, portal):
-        # install into the Plone site
+        # install Products.ATContentTypes manually if profile is available
+        # (this is only needed for Plone >= 5)
+        profiles = [x['id'] for x in portal.portal_setup.listProfileInfo()]
+        if 'Products.ATContentTypes:default' in profiles:
+            applyProfile(portal, 'Products.ATContentTypes:default')
         applyProfile(portal, 'archetypes.multilingual:default')
-        applyProfile(portal, 'archetypes.testcase:default')
 
 ARCHETYPESMULTILINGUAL_FIXTURE = ArchetypesMultilingualLayer()
 
diff --git a/archetypes/multilingual/tests/multilingual.txt b/archetypes/multilingual/tests/multilingual.txt
index f441632..bda0704 100644
--- a/archetypes/multilingual/tests/multilingual.txt
+++ b/archetypes/multilingual/tests/multilingual.txt
@@ -4,8 +4,6 @@ testing the multilingualsupport
 creating some sample-content::
 
     >>> portal = layer['portal']
-    >>> language_tool = portal.portal_languages
-    >>> language_tool.start_neutral = 0
     >>> from plone.app.testing import TEST_USER_ID, setRoles
     >>> setRoles(portal, TEST_USER_ID, ['Manager'])
     >>> content_id = portal.invokeFactory(type_name="Document", id='monkey_sample')
diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index bc1b239..7a305e0 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -4,6 +4,9 @@ Changelog
 1.3dev - Unreleased
 -------------------
 
+- Remove archetypes.testcase test dependency.
+  [timo]
+
 - Remove PloneLanguageTool dependency.
   [timo]
 
diff --git a/setup.py b/setup.py
index e5b669b..b670048 100644
--- a/setup.py
+++ b/setup.py
@@ -39,7 +39,6 @@
         'test': [
             'plone.app.testing',
             'plone.app.multilingual[test]',
-            'archetypes.testcase'
         ]
     },
     entry_points="""


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-22T11:02:55+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/e67a2921496211fd2aa5effc48e3fe370da6e40c

Browser layer and uninstall profile

Files changed:
A archetypes/multilingual/profiles/default/browserlayer.xml
A archetypes/multilingual/profiles/uninstall/componentregistry.xml
M archetypes/multilingual/browser/configure.zcml
M archetypes/multilingual/configure.zcml
M archetypes/multilingual/interfaces.py
M archetypes/multilingual/profile.zcml
M archetypes/multilingual/profiles/default/componentregistry.xml

diff --git a/archetypes/multilingual/browser/configure.zcml b/archetypes/multilingual/browser/configure.zcml
index 86679f4..d1f3071 100644
--- a/archetypes/multilingual/browser/configure.zcml
+++ b/archetypes/multilingual/browser/configure.zcml
@@ -14,7 +14,7 @@
           manager="plone.app.layout.viewlets.interfaces.IAboveContent"
           class=".viewlets.addFormATIsATranslationViewlet"
           template="templates/add-form-is-translation.pt"
-          layer="plone.app.multilingual.interfaces.IPloneAppMultilingualInstalled"
+          layer="archetypes.multilingual.interfaces.IArchetypesMultilingualInstalled"
           permission="zope.Public"
           />
 
diff --git a/archetypes/multilingual/configure.zcml b/archetypes/multilingual/configure.zcml
index b18d28c..3c30057 100644
--- a/archetypes/multilingual/configure.zcml
+++ b/archetypes/multilingual/configure.zcml
@@ -21,7 +21,7 @@
     </class>
 
     <adapter
-        for=".interfaces.IArchetypesTranslatable"
+        for="Products.ATContentTypes.interfaces.IATContentType"
         provides="Products.CMFPlone.interfaces.ILanguage"
         factory=".language.ATLanguage" />
 
@@ -35,45 +35,4 @@
         directory="skins"
         recursive="True" />
 
-    <subscriber
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable
-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
-        handler=".subscriber.handler" />
-
-    <adapter
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ITranslationCloner"
-        factory=".cloner.Cloner"/>
-
-    <adapter
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
-        factory=".utils.LanguageIndependentFieldsManager"/>
-
-    <!-- Language independent folder content indexers -->
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             zope.lifecycleevent.interfaces.IObjectAddedEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-     <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             Products.CMFCore.interfaces.IActionSucceededEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             OFS.interfaces.IObjectWillBeMovedEvent"
-         handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             OFS.interfaces.IObjectWillBeRemovedEvent"
-        handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
-
 </configure>
diff --git a/archetypes/multilingual/interfaces.py b/archetypes/multilingual/interfaces.py
index 866c382..a5d4ed7 100644
--- a/archetypes/multilingual/interfaces.py
+++ b/archetypes/multilingual/interfaces.py
@@ -1,5 +1,10 @@
 # -*- coding: utf-8 -*-
 from plone.app.multilingual.interfaces import ITranslatable
+from zope.interface import Interface
+
+
+class IArchetypesMultilingualInstalled(Interface):
+    """ Marker interface """
 
 
 class IArchetypesTranslatable(ITranslatable):
diff --git a/archetypes/multilingual/profile.zcml b/archetypes/multilingual/profile.zcml
index 9060ef4..ab860c4 100644
--- a/archetypes/multilingual/profile.zcml
+++ b/archetypes/multilingual/profile.zcml
@@ -11,4 +11,13 @@
       provides="Products.GenericSetup.interfaces.EXTENSION"
       />
 
+
+  <genericsetup:registerProfile
+      name="uninstall"
+      title="Remove Archetypes Multilingual Support"
+      directory="profiles/uninstall"
+      description="Removes the components of Archetypes Multilingual."
+      provides="Products.GenericSetup.interfaces.EXTENSION"
+      />
+
 </configure>
diff --git a/archetypes/multilingual/profiles/default/browserlayer.xml b/archetypes/multilingual/profiles/default/browserlayer.xml
new file mode 100644
index 0000000..df012ff
--- /dev/null
+++ b/archetypes/multilingual/profiles/default/browserlayer.xml
@@ -0,0 +1,5 @@
+<layers>
+  <layer
+      name="archetypes.multilingual"
+      interface="archetypes.multilingual.interfaces.IArchetypesMultilingualInstalled"/>
+</layers>
diff --git a/archetypes/multilingual/profiles/default/componentregistry.xml b/archetypes/multilingual/profiles/default/componentregistry.xml
index ad135fc..76f7f99 100644
--- a/archetypes/multilingual/profiles/default/componentregistry.xml
+++ b/archetypes/multilingual/profiles/default/componentregistry.xml
@@ -11,6 +11,15 @@
       provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
       factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"
     />
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ITranslationCloner"
+        factory=".cloner.Cloner"/>
+
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+        factory=".utils.LanguageIndependentFieldsManager"/>
   </adapters>
   <subscribers>
     <subscriber
@@ -18,5 +27,34 @@
            zope.lifecycleevent.interfaces.IObjectModifiedEvent"
       handler="archetypes.multilingual.subscriber.handler"
       />
+    <!-- Language independent folder content indexers -->
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectAddedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+     <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             Products.CMFCore.interfaces.IActionSucceededEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeMovedEvent"
+         handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeRemovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
   </subscribers>
 </componentregistry>
+
+
+
+
diff --git a/archetypes/multilingual/profiles/uninstall/componentregistry.xml b/archetypes/multilingual/profiles/uninstall/componentregistry.xml
new file mode 100644
index 0000000..b5f6d47
--- /dev/null
+++ b/archetypes/multilingual/profiles/uninstall/componentregistry.xml
@@ -0,0 +1,77 @@
+<?xml version="1.0"?>
+<componentregistry>
+  <adapters>
+    <adapter
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+      provides="plone.app.multilingual.interfaces.ITranslationCloner"
+      factory="archetypes.multilingual.cloner.Cloner"
+      remove="True"
+    />
+    <adapter
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+      provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+      factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"
+      remove="True"
+    />
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ITranslationCloner"
+        factory=".cloner.Cloner"
+        remove="True"
+    />
+
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+        factory=".utils.LanguageIndependentFieldsManager"
+        remove="True"
+    />
+  </adapters>
+  <subscribers>
+    <subscriber
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable
+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+      handler="archetypes.multilingual.subscriber.handler"
+      remove="True"
+      />
+    <!-- Language independent folder content indexers -->
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectAddedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+     <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             Products.CMFCore.interfaces.IActionSucceededEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeMovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeRemovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"
+        remove="True"
+    />
+  </subscribers>
+</componentregistry>
+
+
+
+


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-23T17:17:41+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/fca5c1a0f39eb5581c956f7412cd7f2da09c3c2a

Removing session support, no babel view implementation on archetypes.multilingual, cleaning package

Files changed:
M archetypes/multilingual/browser/viewlets.py
M archetypes/multilingual/profiles/default/componentregistry.xml
M archetypes/multilingual/testing.py
M setup.py

diff --git a/archetypes/multilingual/browser/viewlets.py b/archetypes/multilingual/browser/viewlets.py
index aa8c003..d4440ff 100644
--- a/archetypes/multilingual/browser/viewlets.py
+++ b/archetypes/multilingual/browser/viewlets.py
@@ -25,16 +25,17 @@ def render(self):
     def update(self):
         """ It's only for AT on factory so we check """
         if self.context.portal_factory.isTemporary(self.context):
-            sdm = self.context.session_data_manager
-            session = sdm.getSessionData(create=True)
             if ITranslatable.providedBy(self.context):
                 self.lang = ILanguage(self.context).get_language()
             else:
                 self.lang = 'NaN'
-            if 'tg' in session.keys():
-                tg = session['tg']
-                self.available = True
-                ptool = getToolByName(self.context, 'portal_catalog')
-                query = {'TranslationGroup': tg, 'Language': 'all'}
-                results = ptool.searchResults(query)
-                self.origin = results
+            # No support for sessions on PAM
+            # Its needed to be done an implementation to pass the tg to
+            # to the factory
+            # if 'tg' in session.keys():
+            #     tg = session['tg']
+            #     self.available = True
+            #     ptool = getToolByName(self.context, 'portal_catalog')
+            #     query = {'TranslationGroup': tg, 'Language': 'all'}
+            #     results = ptool.searchResults(query)
+            #     self.origin = results
diff --git a/archetypes/multilingual/profiles/default/componentregistry.xml b/archetypes/multilingual/profiles/default/componentregistry.xml
index 76f7f99..af1ff89 100644
--- a/archetypes/multilingual/profiles/default/componentregistry.xml
+++ b/archetypes/multilingual/profiles/default/componentregistry.xml
@@ -14,12 +14,12 @@
     <adapter
         for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
         provides="plone.app.multilingual.interfaces.ITranslationCloner"
-        factory=".cloner.Cloner"/>
+        factory="archetypes.multilingual.cloner.Cloner"/>
 
     <adapter
         for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
         provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
-        factory=".utils.LanguageIndependentFieldsManager"/>
+        factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"/>
   </adapters>
   <subscribers>
     <subscriber
diff --git a/archetypes/multilingual/testing.py b/archetypes/multilingual/testing.py
index 958dead..4ecd219 100644
--- a/archetypes/multilingual/testing.py
+++ b/archetypes/multilingual/testing.py
@@ -3,8 +3,12 @@
 from Testing import ZopeTestCase as ztc
 from plone.app.testing import FunctionalTesting
 from plone.app.testing import IntegrationTesting
-from plone.app.testing import PLONE_FIXTURE
 from plone.app.testing import PloneSandboxLayer
+from plone.app.multilingual.testing import PLONE_APP_MULTILINGUAL_FIXTURE
+from plone.app.contenttypes.testing import (
+    PLONE_APP_CONTENTTYPES_FIXTURE,
+    PLONE_APP_CONTENTTYPES_MIGRATION_FIXTURE
+)
 from plone.app.testing import applyProfile
 from plone.testing import z2
 from zope.configuration import xmlconfig
@@ -14,39 +18,34 @@
 
 
 class ArchetypesMultilingualLayer(PloneSandboxLayer):
-    defaultBases = (PLONE_FIXTURE,)
 
-    class Session(dict):
-        def set(self, key, value):
-            self[key] = value
+    defaultBases = (
+        PLONE_APP_CONTENTTYPES_MIGRATION_FIXTURE,)
 
     def setUpZope(self, app, configurationContext):
-        import Products.ATContentTypes
-        self.loadZCML(package=Products.ATContentTypes)
+        # import Products.ATContentTypes
+        # self.loadZCML(package=Products.ATContentTypes)
 
-        z2.installProduct(app, 'Products.Archetypes')
-        z2.installProduct(app, 'Products.ATContentTypes')
+        # z2.installProduct(app, 'Products.Archetypes')
+        # z2.installProduct(app, 'Products.ATContentTypes')
 
         import archetypes.multilingual
 
         xmlconfig.file('testing.zcml', archetypes.multilingual,
                        context=configurationContext)
 
-        # Support sessionstorage in tests
-        app.REQUEST['SESSION'] = self.Session()
-        if not hasattr(app, 'temp_folder'):
-            tf = Folder('temp_folder')
-            app._setObject('temp_folder', tf)
-            transaction.commit()
+        # if not hasattr(app, 'temp_folder'):
+        #     tf = Folder('temp_folder')
+        #     app._setObject('temp_folder', tf)
+        #     transaction.commit()
 
-        ztc.utils.setupCoreSessions(app)
+        # ztc.utils.setupCoreSessions(app)
 
     def setUpPloneSite(self, portal):
         # install Products.ATContentTypes manually if profile is available
         # (this is only needed for Plone >= 5)
-        profiles = [x['id'] for x in portal.portal_setup.listProfileInfo()]
-        if 'Products.ATContentTypes:default' in profiles:
-            applyProfile(portal, 'Products.ATContentTypes:default')
+        # profiles = [x['id'] for x in portal.portal_setup.listProfileInfo()]
+        applyProfile(portal, 'plone.app.multilingual:default')
         applyProfile(portal, 'archetypes.multilingual:default')
 
 ARCHETYPESMULTILINGUAL_FIXTURE = ArchetypesMultilingualLayer()
diff --git a/setup.py b/setup.py
index b670048..154168c 100644
--- a/setup.py
+++ b/setup.py
@@ -3,7 +3,7 @@
 from setuptools import setup
 import os
 
-version = '2.0.dev0'
+version = '3.0.dev0'
 
 setup(
     name='archetypes.multilingual',


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-24T09:08:44+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/85a086d122aff330d6949676c3a4c9637072ada3

Fixing test setup

Files changed:
M archetypes/multilingual/tests/test_language_inheritance.py

diff --git a/archetypes/multilingual/tests/test_language_inheritance.py b/archetypes/multilingual/tests/test_language_inheritance.py
index cc844df..89b1ac2 100644
--- a/archetypes/multilingual/tests/test_language_inheritance.py
+++ b/archetypes/multilingual/tests/test_language_inheritance.py
@@ -9,6 +9,8 @@
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import setRoles
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
+from zope.interface import alsoProvides
 
 import unittest
 
@@ -27,7 +29,7 @@ class TestArchetypesLanguageInheritance(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
-
+        alsoProvides(self.layer['request'], IPloneAppMultilingualInstalled)
         self.ltool = getToolByName(self.portal, 'portal_languages')
         self.ltool.addSupportedLanguage('de')
         self.ltool.addSupportedLanguage('en')


Repository: archetypes.multilingual
Branch: refs/heads/master
Date: 2015-03-25T20:45:13+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/e570f8012ea5289382b0fd963f79d8b639feb61b

Merge pull request #11 from plone/plip13091-multilingual

Plip13091 multilingual

Files changed:
A archetypes/multilingual/profiles/default/browserlayer.xml
A archetypes/multilingual/profiles/uninstall/componentregistry.xml
M archetypes/multilingual/browser/configure.zcml
M archetypes/multilingual/browser/translate.py
M archetypes/multilingual/browser/viewlets.py
M archetypes/multilingual/configure.zcml
M archetypes/multilingual/interfaces.py
M archetypes/multilingual/language.py
M archetypes/multilingual/profile.zcml
M archetypes/multilingual/profiles/default/componentregistry.xml
M archetypes/multilingual/subscriber.py
M archetypes/multilingual/testing.py
M archetypes/multilingual/tests/languageindependentfields.txt
M archetypes/multilingual/tests/multilingual.txt
M archetypes/multilingual/tests/test_language_inheritance.py
M archetypes/multilingual/tests/test_monkey.py
M docs/HISTORY.txt
M setup.py

diff --git a/archetypes/multilingual/browser/configure.zcml b/archetypes/multilingual/browser/configure.zcml
index 86679f4..d1f3071 100644
--- a/archetypes/multilingual/browser/configure.zcml
+++ b/archetypes/multilingual/browser/configure.zcml
@@ -14,7 +14,7 @@
           manager="plone.app.layout.viewlets.interfaces.IAboveContent"
           class=".viewlets.addFormATIsATranslationViewlet"
           template="templates/add-form-is-translation.pt"
-          layer="plone.app.multilingual.interfaces.IPloneAppMultilingualInstalled"
+          layer="archetypes.multilingual.interfaces.IArchetypesMultilingualInstalled"
           permission="zope.Public"
           />
 
diff --git a/archetypes/multilingual/browser/translate.py b/archetypes/multilingual/browser/translate.py
index 9841099..03cee5f 100644
--- a/archetypes/multilingual/browser/translate.py
+++ b/archetypes/multilingual/browser/translate.py
@@ -2,7 +2,7 @@
 from Products.Five import BrowserView
 from plone.app.multilingual import _
 from plone.app.multilingual.browser.translate import google_translate
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.registry.interfaces import IRegistry
diff --git a/archetypes/multilingual/browser/viewlets.py b/archetypes/multilingual/browser/viewlets.py
index 13e9550..d4440ff 100644
--- a/archetypes/multilingual/browser/viewlets.py
+++ b/archetypes/multilingual/browser/viewlets.py
@@ -2,7 +2,7 @@
 from Products.CMFCore.utils import getToolByName
 
 from plone.app.layout.viewlets.common import ViewletBase
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ITranslatable
 
 
@@ -25,16 +25,17 @@ def render(self):
     def update(self):
         """ It's only for AT on factory so we check """
         if self.context.portal_factory.isTemporary(self.context):
-            sdm = self.context.session_data_manager
-            session = sdm.getSessionData(create=True)
             if ITranslatable.providedBy(self.context):
                 self.lang = ILanguage(self.context).get_language()
             else:
                 self.lang = 'NaN'
-            if 'tg' in session.keys():
-                tg = session['tg']
-                self.available = True
-                ptool = getToolByName(self.context, 'portal_catalog')
-                query = {'TranslationGroup': tg, 'Language': 'all'}
-                results = ptool.searchResults(query)
-                self.origin = results
+            # No support for sessions on PAM
+            # Its needed to be done an implementation to pass the tg to
+            # to the factory
+            # if 'tg' in session.keys():
+            #     tg = session['tg']
+            #     self.available = True
+            #     ptool = getToolByName(self.context, 'portal_catalog')
+            #     query = {'TranslationGroup': tg, 'Language': 'all'}
+            #     results = ptool.searchResults(query)
+            #     self.origin = results
diff --git a/archetypes/multilingual/configure.zcml b/archetypes/multilingual/configure.zcml
index a305770..3c30057 100644
--- a/archetypes/multilingual/configure.zcml
+++ b/archetypes/multilingual/configure.zcml
@@ -7,7 +7,6 @@
     xmlns:cmf="http://namespaces.zope.org/cmf">
 
     <include package="Products.ATContentTypes" />
-    <include package="Products.PloneLanguageTool" />
     <include package="plone.app.multilingual" />
     <include package="plone.app.dexterity" />
     <include package="collective.monkeypatcher" />
@@ -22,8 +21,8 @@
     </class>
 
     <adapter
-        for=".interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ILanguage"
+        for="Products.ATContentTypes.interfaces.IATContentType"
+        provides="Products.CMFPlone.interfaces.ILanguage"
         factory=".language.ATLanguage" />
 
     <monkey:patch
@@ -36,45 +35,4 @@
         directory="skins"
         recursive="True" />
 
-    <subscriber
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable
-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
-        handler=".subscriber.handler" />
-
-    <adapter
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ITranslationCloner"
-        factory=".cloner.Cloner"/>
-
-    <adapter
-        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
-        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
-        factory=".utils.LanguageIndependentFieldsManager"/>
-
-    <!-- Language independent folder content indexers -->
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             zope.lifecycleevent.interfaces.IObjectAddedEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-     <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             Products.CMFCore.interfaces.IActionSucceededEvent"
-        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             OFS.interfaces.IObjectWillBeMovedEvent"
-         handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
-
-    <subscriber
-        for="Products.ATContentTypes.interfaces.IATContentType
-             OFS.interfaces.IObjectWillBeRemovedEvent"
-        handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
-
 </configure>
diff --git a/archetypes/multilingual/interfaces.py b/archetypes/multilingual/interfaces.py
index 866c382..a5d4ed7 100644
--- a/archetypes/multilingual/interfaces.py
+++ b/archetypes/multilingual/interfaces.py
@@ -1,5 +1,10 @@
 # -*- coding: utf-8 -*-
 from plone.app.multilingual.interfaces import ITranslatable
+from zope.interface import Interface
+
+
+class IArchetypesMultilingualInstalled(Interface):
+    """ Marker interface """
 
 
 class IArchetypesTranslatable(ITranslatable):
diff --git a/archetypes/multilingual/language.py b/archetypes/multilingual/language.py
index 0e8e398..ada603d 100644
--- a/archetypes/multilingual/language.py
+++ b/archetypes/multilingual/language.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
 from plone.app.layout.navigation.root import getNavigationRootObject
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT
 from zope import interface
 from zope.component.hooks import getSite
diff --git a/archetypes/multilingual/profile.zcml b/archetypes/multilingual/profile.zcml
index 9060ef4..ab860c4 100644
--- a/archetypes/multilingual/profile.zcml
+++ b/archetypes/multilingual/profile.zcml
@@ -11,4 +11,13 @@
       provides="Products.GenericSetup.interfaces.EXTENSION"
       />
 
+
+  <genericsetup:registerProfile
+      name="uninstall"
+      title="Remove Archetypes Multilingual Support"
+      directory="profiles/uninstall"
+      description="Removes the components of Archetypes Multilingual."
+      provides="Products.GenericSetup.interfaces.EXTENSION"
+      />
+
 </configure>
diff --git a/archetypes/multilingual/profiles/default/browserlayer.xml b/archetypes/multilingual/profiles/default/browserlayer.xml
new file mode 100644
index 0000000..df012ff
--- /dev/null
+++ b/archetypes/multilingual/profiles/default/browserlayer.xml
@@ -0,0 +1,5 @@
+<layers>
+  <layer
+      name="archetypes.multilingual"
+      interface="archetypes.multilingual.interfaces.IArchetypesMultilingualInstalled"/>
+</layers>
diff --git a/archetypes/multilingual/profiles/default/componentregistry.xml b/archetypes/multilingual/profiles/default/componentregistry.xml
index ad135fc..af1ff89 100644
--- a/archetypes/multilingual/profiles/default/componentregistry.xml
+++ b/archetypes/multilingual/profiles/default/componentregistry.xml
@@ -11,6 +11,15 @@
       provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
       factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"
     />
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ITranslationCloner"
+        factory="archetypes.multilingual.cloner.Cloner"/>
+
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+        factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"/>
   </adapters>
   <subscribers>
     <subscriber
@@ -18,5 +27,34 @@
            zope.lifecycleevent.interfaces.IObjectModifiedEvent"
       handler="archetypes.multilingual.subscriber.handler"
       />
+    <!-- Language independent folder content indexers -->
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectAddedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+     <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             Products.CMFCore.interfaces.IActionSucceededEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeMovedEvent"
+         handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeRemovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"/>
   </subscribers>
 </componentregistry>
+
+
+
+
diff --git a/archetypes/multilingual/profiles/uninstall/componentregistry.xml b/archetypes/multilingual/profiles/uninstall/componentregistry.xml
new file mode 100644
index 0000000..b5f6d47
--- /dev/null
+++ b/archetypes/multilingual/profiles/uninstall/componentregistry.xml
@@ -0,0 +1,77 @@
+<?xml version="1.0"?>
+<componentregistry>
+  <adapters>
+    <adapter
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+      provides="plone.app.multilingual.interfaces.ITranslationCloner"
+      factory="archetypes.multilingual.cloner.Cloner"
+      remove="True"
+    />
+    <adapter
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+      provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+      factory="archetypes.multilingual.utils.LanguageIndependentFieldsManager"
+      remove="True"
+    />
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ITranslationCloner"
+        factory=".cloner.Cloner"
+        remove="True"
+    />
+
+    <adapter
+        for="archetypes.multilingual.interfaces.IArchetypesTranslatable"
+        provides="plone.app.multilingual.interfaces.ILanguageIndependentFieldsManager"
+        factory=".utils.LanguageIndependentFieldsManager"
+        remove="True"
+    />
+  </adapters>
+  <subscribers>
+    <subscriber
+      for="archetypes.multilingual.interfaces.IArchetypesTranslatable
+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+      handler="archetypes.multilingual.subscriber.handler"
+      remove="True"
+      />
+    <!-- Language independent folder content indexers -->
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectAddedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+     <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             Products.CMFCore.interfaces.IActionSucceededEvent"
+        handler="plone.app.multilingual.subscriber.reindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeMovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"
+        remove="True"
+    />
+
+    <subscriber
+        for="Products.ATContentTypes.interfaces.IATContentType
+             OFS.interfaces.IObjectWillBeRemovedEvent"
+        handler="plone.app.multilingual.subscriber.unindex_language_independent"
+        remove="True"
+    />
+  </subscribers>
+</componentregistry>
+
+
+
+
diff --git a/archetypes/multilingual/subscriber.py b/archetypes/multilingual/subscriber.py
index 1306072..9b30304 100644
--- a/archetypes/multilingual/subscriber.py
+++ b/archetypes/multilingual/subscriber.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 from archetypes.multilingual.interfaces import IArchetypesTranslatable
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager
 from plone.app.multilingual.interfaces import ITranslationManager
 from zope.component import queryAdapter
diff --git a/archetypes/multilingual/testing.py b/archetypes/multilingual/testing.py
index 9e94f0a..4ecd219 100644
--- a/archetypes/multilingual/testing.py
+++ b/archetypes/multilingual/testing.py
@@ -3,8 +3,12 @@
 from Testing import ZopeTestCase as ztc
 from plone.app.testing import FunctionalTesting
 from plone.app.testing import IntegrationTesting
-from plone.app.testing import PLONE_FIXTURE
 from plone.app.testing import PloneSandboxLayer
+from plone.app.multilingual.testing import PLONE_APP_MULTILINGUAL_FIXTURE
+from plone.app.contenttypes.testing import (
+    PLONE_APP_CONTENTTYPES_FIXTURE,
+    PLONE_APP_CONTENTTYPES_MIGRATION_FIXTURE
+)
 from plone.app.testing import applyProfile
 from plone.testing import z2
 from zope.configuration import xmlconfig
@@ -14,37 +18,35 @@
 
 
 class ArchetypesMultilingualLayer(PloneSandboxLayer):
-    defaultBases = (PLONE_FIXTURE,)
 
-    class Session(dict):
-        def set(self, key, value):
-            self[key] = value
+    defaultBases = (
+        PLONE_APP_CONTENTTYPES_MIGRATION_FIXTURE,)
 
     def setUpZope(self, app, configurationContext):
-        # load ZCML
+        # import Products.ATContentTypes
+        # self.loadZCML(package=Products.ATContentTypes)
+
+        # z2.installProduct(app, 'Products.Archetypes')
+        # z2.installProduct(app, 'Products.ATContentTypes')
+
         import archetypes.multilingual
-        import archetypes.testcase
 
         xmlconfig.file('testing.zcml', archetypes.multilingual,
                        context=configurationContext)
-        xmlconfig.file('configure.zcml', archetypes.testcase,
-                       context=configurationContext)
-
-        z2.installProduct(app, 'archetypes.testcase')
 
-        # Support sessionstorage in tests
-        app.REQUEST['SESSION'] = self.Session()
-        if not hasattr(app, 'temp_folder'):
-            tf = Folder('temp_folder')
-            app._setObject('temp_folder', tf)
-            transaction.commit()
+        # if not hasattr(app, 'temp_folder'):
+        #     tf = Folder('temp_folder')
+        #     app._setObject('temp_folder', tf)
+        #     transaction.commit()
 
-        ztc.utils.setupCoreSessions(app)
+        # ztc.utils.setupCoreSessions(app)
 
     def setUpPloneSite(self, portal):
-        # install into the Plone site
+        # install Products.ATContentTypes manually if profile is available
+        # (this is only needed for Plone >= 5)
+        # profiles = [x['id'] for x in portal.portal_setup.listProfileInfo()]
+        applyProfile(portal, 'plone.app.multilingual:default')
         applyProfile(portal, 'archetypes.multilingual:default')
-        applyProfile(portal, 'archetypes.testcase:default')
 
 ARCHETYPESMULTILINGUAL_FIXTURE = ArchetypesMultilingualLayer()
 
diff --git a/archetypes/multilingual/tests/languageindependentfields.txt b/archetypes/multilingual/tests/languageindependentfields.txt
index 4aa1a13..674ffd0 100644
--- a/archetypes/multilingual/tests/languageindependentfields.txt
+++ b/archetypes/multilingual/tests/languageindependentfields.txt
@@ -44,7 +44,7 @@ interface ``plone.app.multilingual.interfaces.ITranslatable`` and
 
 We should also be able to access the adapter for ``plone.app.multilingual.interfaces.ILanguage``::
 
-    >>> from plone.app.multilingual.interfaces import ILanguage
+    >>> from Products.CMFPlone.interfaces import ILanguage
     >>> from zope.component import queryAdapter
     >>> adapter = queryAdapter(obj, ILanguage)
     >>> adapter == None
diff --git a/archetypes/multilingual/tests/multilingual.txt b/archetypes/multilingual/tests/multilingual.txt
index eb6225a..bda0704 100644
--- a/archetypes/multilingual/tests/multilingual.txt
+++ b/archetypes/multilingual/tests/multilingual.txt
@@ -4,8 +4,6 @@ testing the multilingualsupport
 creating some sample-content::
 
     >>> portal = layer['portal']
-    >>> language_tool = portal.portal_languages
-    >>> language_tool.start_neutral = 0
     >>> from plone.app.testing import TEST_USER_ID, setRoles
     >>> setRoles(portal, TEST_USER_ID, ['Manager'])
     >>> content_id = portal.invokeFactory(type_name="Document", id='monkey_sample')
@@ -19,7 +17,7 @@ ITranslatable should be provided::
 
 language-adapter::
 
-    >>> from plone.app.multilingual.interfaces import ILanguage
+    >>> from Products.CMFPlone.interfaces import ILanguage
     >>> from zope import component
     >>> adapter = component.queryAdapter(content, ILanguage)
     >>> adapter is not None
diff --git a/archetypes/multilingual/tests/test_language_inheritance.py b/archetypes/multilingual/tests/test_language_inheritance.py
index 6d70930..89b1ac2 100644
--- a/archetypes/multilingual/tests/test_language_inheritance.py
+++ b/archetypes/multilingual/tests/test_language_inheritance.py
@@ -3,12 +3,14 @@
 from Products.CMFPlone.utils import _createObjectByType
 from archetypes.multilingual.testing import \
     ARCHETYPESMULTILINGUAL_INTEGRATION_TESTING
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import setRoles
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
+from zope.interface import alsoProvides
 
 import unittest
 
@@ -27,7 +29,7 @@ class TestArchetypesLanguageInheritance(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
-
+        alsoProvides(self.layer['request'], IPloneAppMultilingualInstalled)
         self.ltool = getToolByName(self.portal, 'portal_languages')
         self.ltool.addSupportedLanguage('de')
         self.ltool.addSupportedLanguage('en')
diff --git a/archetypes/multilingual/tests/test_monkey.py b/archetypes/multilingual/tests/test_monkey.py
index 0a215da..d2c2406 100644
--- a/archetypes/multilingual/tests/test_monkey.py
+++ b/archetypes/multilingual/tests/test_monkey.py
@@ -3,7 +3,7 @@
 from archetypes.multilingual.testing import \
     ARCHETYPESMULTILINGUAL_FUNCTIONAL_TESTING
 from archetypes.multilingual.tests.utils import makeContent
-from plone.app.multilingual.interfaces import ILanguage
+from Products.CMFPlone.interfaces import ILanguage
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import TEST_USER_PASSWORD
diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index 125a178..7a305e0 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -4,6 +4,13 @@ Changelog
 1.3dev - Unreleased
 -------------------
 
+- Remove archetypes.testcase test dependency.
+  [timo]
+
+- Remove PloneLanguageTool dependency.
+  [timo]
+
+
 1.2 - 2013-09-24
 ----------------
 
diff --git a/setup.py b/setup.py
index e5b669b..154168c 100644
--- a/setup.py
+++ b/setup.py
@@ -3,7 +3,7 @@
 from setuptools import setup
 import os
 
-version = '2.0.dev0'
+version = '3.0.dev0'
 
 setup(
     name='archetypes.multilingual',
@@ -39,7 +39,6 @@
         'test': [
             'plone.app.testing',
             'plone.app.multilingual[test]',
-            'archetypes.testcase'
         ]
     },
     entry_points="""


