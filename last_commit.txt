Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-06-10T23:39:52+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/e385c48c3774908e1743a82bb9d162348f213d04

date speller changes

Remove inconsistency in date_speller and rename ``month`` and ``wkday`` keys
to ``month_name`` and ``wkday_name``. Introduce ``month``, the non-zero
padded numeric value of the current month, ``month2``, the zero-padded one,
``wkday``, the weekday number and ``week``, the weeknumber of the current
year.

Files changed:
M CHANGES.rst
M plone/app/event/base.py
M plone/app/event/browser/event_listing.py
M plone/app/event/tests/test_base_module.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d96055a..496a8da 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,12 @@ Changelog
 2.0a13 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Remove inconsistency in date_speller and rename ``month`` and ``wkday`` keys
+  to ``month_name`` and ``wkday_name``. Introduce ``month``, the non-zero
+  padded numeric value of the current month, ``month2``, the zero-padded one,
+  ``wkday``, the weekday number and ``week``, the weeknumber of the current
+  year.
+  [thet]
 
 
 2.0a12 (2015-06-05)
diff --git a/plone/app/event/base.py b/plone/app/event/base.py
index 8d885ee..50ee7a4 100644
--- a/plone/app/event/base.py
+++ b/plone/app/event/base.py
@@ -847,21 +847,23 @@ def zero_pad(num):
     date_dict = dict(
         year=dt.year(),
 
-        month=util.translate(
+        month=dt.month(),
+        month2=zero_pad(dt.month()),
+        month_name=util.translate(
             util.month_msgid(dt.month()),
             domain=dom, context=context
         ),
-
         month_abbr=util.translate(
             util.month_msgid(dt.month(), 'a'),
             domain=dom, context=context
         ),
 
-        wkday=util.translate(
+        week=dt.week(),
+        wkday=dt.dow(),
+        wkday_name=util.translate(
             util.day_msgid(dt.dow()),
             domain=dom, context=context
         ),
-
         wkday_abbr=util.translate(
             util.day_msgid(dt.dow(), 'a'),
             domain=dom, context=context
diff --git a/plone/app/event/browser/event_listing.py b/plone/app/event/browser/event_listing.py
index 9eb1ee0..861cd93 100644
--- a/plone/app/event/browser/event_listing.py
+++ b/plone/app/event/browser/event_listing.py
@@ -276,15 +276,15 @@ def header_string(self):
                 default=u"${from} until ${until}.",
                 mapping={
                     'from': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                     'until': "%s, %s. %s %s" % (
-                        end_dict['wkday'],
+                        end_dict['wkday_name'],
                         end.day,
-                        end_dict['month'],
+                        end_dict['month_name'],
                         end.year
                     ),
                 }
@@ -296,9 +296,9 @@ def header_string(self):
                 default=u"Events on ${day}",
                 mapping={
                     'day': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                 }
@@ -313,15 +313,15 @@ def header_string(self):
                 default=u"${from} until ${until}.",
                 mapping={
                     'from': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                     'until': "%s, %s. %s %s" % (
-                        end_dict['wkday'],
+                        end_dict['wkday_name'],
                         end.day,
-                        end_dict['month'],
+                        end_dict['month_name'],
                         end.year
                     ),
                 }
@@ -332,7 +332,7 @@ def header_string(self):
                 u"events_in_month",
                 default=u"Events in ${month} ${year}",
                 mapping={
-                    'month': start_dict['month'],
+                    'month': start_dict['month_name'],
                     'year': start.year,
                 }
             )
diff --git a/plone/app/event/tests/test_base_module.py b/plone/app/event/tests/test_base_module.py
index 1d2ec0c..9f5c658 100644
--- a/plone/app/event/tests/test_base_module.py
+++ b/plone/app/event/tests/test_base_module.py
@@ -10,6 +10,7 @@
 from plone.app.event.base import RET_MODE_OBJECTS
 from plone.app.event.base import construct_calendar
 from plone.app.event.base import dates_for_display
+from plone.app.event.base import date_speller
 from plone.app.event.base import default_end
 from plone.app.event.base import default_start
 from plone.app.event.base import default_timezone
@@ -300,6 +301,30 @@ def ret_6():
             end.hour == 23 and end.minute == 59 and end.second == 59
         )
 
+    def test_date_speller(self):
+        DT = DateTime(2015, 6, 6, 1, 2, 3)
+        date_spelled = date_speller(self.portal, DT)
+        self.assertEqual(date_spelled['year'], 2015)
+        self.assertEqual(date_spelled['month'], 6)
+        self.assertEqual(date_spelled['month2'], '06')
+        self.assertEqual(date_spelled['day'], 6)
+        self.assertEqual(date_spelled['day2'], '06')
+        self.assertEqual(date_spelled['hour'], 1)
+        self.assertEqual(date_spelled['hour2'], '01')
+        self.assertEqual(date_spelled['minute'], 2)
+        self.assertEqual(date_spelled['minute2'], '02')
+        self.assertEqual(date_spelled['second'], 3)
+        self.assertEqual(date_spelled['second2'], '03')
+        self.assertEqual(date_spelled['week'], 23)
+
+        # locale specific
+        # TODO: test better.
+        self.assertTrue(isinstance(date_spelled['wkday'], int))
+        self.assertTrue(isinstance(date_spelled['month_name'], basestring))
+        self.assertTrue(isinstance(date_spelled['month_abbr'], basestring))
+        self.assertTrue(isinstance(date_spelled['wkday_name'], basestring))
+        self.assertTrue(isinstance(date_spelled['wkday_abbr'], basestring))
+
 
 class TimezoneTest(unittest.TestCase):
     layer = PAEvent_INTEGRATION_TESTING


Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-06-10T23:53:21+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/1d4a8e0c5a85592b75633086a2ef3a6d79736a54

Let ``date_speller`` return the short, 2-letter weekday abbreviation instead of a 3-letter one.

Files changed:
M CHANGES.rst
M plone/app/event/base.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 496a8da..9c54642 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0a13 (unreleased)
 -------------------
 
+- Let ``date_speller`` return the short, 2-letter weekday abbreviation instead
+  of a 3-letter one.
+  [thet]
+
 - Remove inconsistency in date_speller and rename ``month`` and ``wkday`` keys
   to ``month_name`` and ``wkday_name``. Introduce ``month``, the non-zero
   padded numeric value of the current month, ``month2``, the zero-padded one,
diff --git a/plone/app/event/base.py b/plone/app/event/base.py
index 50ee7a4..f48b1ce 100644
--- a/plone/app/event/base.py
+++ b/plone/app/event/base.py
@@ -865,7 +865,7 @@ def zero_pad(num):
             domain=dom, context=context
         ),
         wkday_abbr=util.translate(
-            util.day_msgid(dt.dow(), 'a'),
+            util.day_msgid(dt.dow(), 's'),
             domain=dom, context=context
         ),
 


Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-06-11T02:45:37+02:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/00855330e9baa991934400c894fbdd6aebdd7020

Merge pull request #190 from plone/thet-date_speller

date speller changes

Files changed:
M CHANGES.rst
M plone/app/event/base.py
M plone/app/event/browser/event_listing.py
M plone/app/event/tests/test_base_module.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d96055a..9c54642 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,16 @@ Changelog
 2.0a13 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Let ``date_speller`` return the short, 2-letter weekday abbreviation instead
+  of a 3-letter one.
+  [thet]
+
+- Remove inconsistency in date_speller and rename ``month`` and ``wkday`` keys
+  to ``month_name`` and ``wkday_name``. Introduce ``month``, the non-zero
+  padded numeric value of the current month, ``month2``, the zero-padded one,
+  ``wkday``, the weekday number and ``week``, the weeknumber of the current
+  year.
+  [thet]
 
 
 2.0a12 (2015-06-05)
diff --git a/plone/app/event/base.py b/plone/app/event/base.py
index 8d885ee..f48b1ce 100644
--- a/plone/app/event/base.py
+++ b/plone/app/event/base.py
@@ -847,23 +847,25 @@ def zero_pad(num):
     date_dict = dict(
         year=dt.year(),
 
-        month=util.translate(
+        month=dt.month(),
+        month2=zero_pad(dt.month()),
+        month_name=util.translate(
             util.month_msgid(dt.month()),
             domain=dom, context=context
         ),
-
         month_abbr=util.translate(
             util.month_msgid(dt.month(), 'a'),
             domain=dom, context=context
         ),
 
-        wkday=util.translate(
+        week=dt.week(),
+        wkday=dt.dow(),
+        wkday_name=util.translate(
             util.day_msgid(dt.dow()),
             domain=dom, context=context
         ),
-
         wkday_abbr=util.translate(
-            util.day_msgid(dt.dow(), 'a'),
+            util.day_msgid(dt.dow(), 's'),
             domain=dom, context=context
         ),
 
diff --git a/plone/app/event/browser/event_listing.py b/plone/app/event/browser/event_listing.py
index 9eb1ee0..861cd93 100644
--- a/plone/app/event/browser/event_listing.py
+++ b/plone/app/event/browser/event_listing.py
@@ -276,15 +276,15 @@ def header_string(self):
                 default=u"${from} until ${until}.",
                 mapping={
                     'from': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                     'until': "%s, %s. %s %s" % (
-                        end_dict['wkday'],
+                        end_dict['wkday_name'],
                         end.day,
-                        end_dict['month'],
+                        end_dict['month_name'],
                         end.year
                     ),
                 }
@@ -296,9 +296,9 @@ def header_string(self):
                 default=u"Events on ${day}",
                 mapping={
                     'day': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                 }
@@ -313,15 +313,15 @@ def header_string(self):
                 default=u"${from} until ${until}.",
                 mapping={
                     'from': "%s, %s. %s %s" % (
-                        start_dict['wkday'],
+                        start_dict['wkday_name'],
                         start.day,
-                        start_dict['month'],
+                        start_dict['month_name'],
                         start.year
                     ),
                     'until': "%s, %s. %s %s" % (
-                        end_dict['wkday'],
+                        end_dict['wkday_name'],
                         end.day,
-                        end_dict['month'],
+                        end_dict['month_name'],
                         end.year
                     ),
                 }
@@ -332,7 +332,7 @@ def header_string(self):
                 u"events_in_month",
                 default=u"Events in ${month} ${year}",
                 mapping={
-                    'month': start_dict['month'],
+                    'month': start_dict['month_name'],
                     'year': start.year,
                 }
             )
diff --git a/plone/app/event/tests/test_base_module.py b/plone/app/event/tests/test_base_module.py
index 1d2ec0c..9f5c658 100644
--- a/plone/app/event/tests/test_base_module.py
+++ b/plone/app/event/tests/test_base_module.py
@@ -10,6 +10,7 @@
 from plone.app.event.base import RET_MODE_OBJECTS
 from plone.app.event.base import construct_calendar
 from plone.app.event.base import dates_for_display
+from plone.app.event.base import date_speller
 from plone.app.event.base import default_end
 from plone.app.event.base import default_start
 from plone.app.event.base import default_timezone
@@ -300,6 +301,30 @@ def ret_6():
             end.hour == 23 and end.minute == 59 and end.second == 59
         )
 
+    def test_date_speller(self):
+        DT = DateTime(2015, 6, 6, 1, 2, 3)
+        date_spelled = date_speller(self.portal, DT)
+        self.assertEqual(date_spelled['year'], 2015)
+        self.assertEqual(date_spelled['month'], 6)
+        self.assertEqual(date_spelled['month2'], '06')
+        self.assertEqual(date_spelled['day'], 6)
+        self.assertEqual(date_spelled['day2'], '06')
+        self.assertEqual(date_spelled['hour'], 1)
+        self.assertEqual(date_spelled['hour2'], '01')
+        self.assertEqual(date_spelled['minute'], 2)
+        self.assertEqual(date_spelled['minute2'], '02')
+        self.assertEqual(date_spelled['second'], 3)
+        self.assertEqual(date_spelled['second2'], '03')
+        self.assertEqual(date_spelled['week'], 23)
+
+        # locale specific
+        # TODO: test better.
+        self.assertTrue(isinstance(date_spelled['wkday'], int))
+        self.assertTrue(isinstance(date_spelled['month_name'], basestring))
+        self.assertTrue(isinstance(date_spelled['month_abbr'], basestring))
+        self.assertTrue(isinstance(date_spelled['wkday_name'], basestring))
+        self.assertTrue(isinstance(date_spelled['wkday_abbr'], basestring))
+
 
 class TimezoneTest(unittest.TestCase):
     layer = PAEvent_INTEGRATION_TESTING


