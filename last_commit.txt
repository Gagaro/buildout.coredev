Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:54:16+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/fb13be1ecb320a1d29506329d6d03d7ea7bdc98a

move everthing to __call__

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index a666659..6af3407 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -7,11 +7,11 @@
 
 class CollectionView(FolderView):
 
-    def __init__(self, *args, **kwargs):
-        super(CollectionView, self).__init__(*args, **kwargs)
+    def __call__(self):
         context = aq_inner(self.context)
         self.collection_behavior = ICollection(context)
         self.b_size = self.collection_behavior.item_count
+        return super(CollectionView, self).__call__()
 
     def results(self, **kwargs):
         return self.collection_behavior.results(
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1fbde08..1aa15e5 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -19,8 +19,9 @@
 
 class FolderView(BrowserView):
 
-    def __init__(self, context, request):
-        super(FolderView, self).__init__(context, request)
+    def __call__(self):
+        context = self.context
+        request = self.request
 
         registry = getUtility(IRegistry)
 
@@ -62,6 +63,7 @@ def __init__(self, context, request):
         self.b_size = int(b_size) if b_size is not None else limit_display
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
+        return super(FolderView, self).__call__()
 
     def _content_filter(self):
         content_filter = getattr(self.request, 'contentFilter', None)


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:54:31+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/52e45df2d95ac02a95ec98004704a3f4537daafd

Revert "move everthing to __call__"

This reverts commit 0a0adf182c8d6a4e5b98328648eac4e8effb082e.

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 6af3407..a666659 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -7,11 +7,11 @@
 
 class CollectionView(FolderView):
 
-    def __call__(self):
+    def __init__(self, *args, **kwargs):
+        super(CollectionView, self).__init__(*args, **kwargs)
         context = aq_inner(self.context)
         self.collection_behavior = ICollection(context)
         self.b_size = self.collection_behavior.item_count
-        return super(CollectionView, self).__call__()
 
     def results(self, **kwargs):
         return self.collection_behavior.results(
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1aa15e5..1fbde08 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -19,9 +19,8 @@
 
 class FolderView(BrowserView):
 
-    def __call__(self):
-        context = self.context
-        request = self.request
+    def __init__(self, context, request):
+        super(FolderView, self).__init__(context, request)
 
         registry = getUtility(IRegistry)
 
@@ -63,7 +62,6 @@ def __call__(self):
         self.b_size = int(b_size) if b_size is not None else limit_display
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
-        return super(FolderView, self).__call__()
 
     def _content_filter(self):
         content_filter = getattr(self.request, 'contentFilter', None)


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:54:41+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f5b44adf4a4446244e5707b99bb92d82de5def69

move code out of __init__ into properties, as __init__ is not security wrapped

Files changed:
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1fbde08..8f45b66 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -22,35 +22,10 @@ class FolderView(BrowserView):
     def __init__(self, context, request):
         super(FolderView, self).__init__(context, request)
 
-        registry = getUtility(IRegistry)
-
         self.plone_view = getMultiAdapter(
             (context, request), name=u"plone")
-
         self.portal_state = getMultiAdapter(
             (context, request), name=u"plone_portal_state")
-        self.friendly_types = self.portal_state.friendly_types()
-        self.isAnon = self.portal_state.anonymous()
-        self.navigation_root_url = self.portal_state.navigation_root_url()
-
-        # BBB
-        self.site_properties = context.restrictedTraverse(
-            'portal_properties').site_properties
-        self.use_view_action = getattr(
-            self.site_properties, 'typesUseViewActionInListings', ())
-
-        if HAS_SECURITY_SETTINGS:
-            security_settings = registry.forInterface(
-                ISecuritySchema, prefix="plone")
-            self.show_about = getattr(
-                security_settings, 'allow_anon_views_about', False
-            ) or not self.isAnon
-        else:
-            # BBB
-            self.show_about = getattr(
-                self.site_properties, 'allowAnonymousViewAbout', False
-            ) or not self.isAnon
-
         self.pas_member = getMultiAdapter(
             (context, request), name=u"pas_member")
 
@@ -88,6 +63,38 @@ def normalizeString(self, text):
     def toLocalizedTime(self, time, long_format=None, time_only=None):
         return self.plone_view.toLocalizedTime(time, long_format, time_only)
 
+    @property
+    def friendly_types(self):
+        return self.portal_state.friendly_types()
+
+    @property
+    def isAnon(self):
+        return self.portal_state.anonymous()
+
+    @property
+    def navigation_root_url(self):
+        return self.portal_state.navigation_root_url()
+
+    @property
+    def use_view_action(self):
+        site_props = self.context.restrictedTraverse(
+            'portal_properties').site_properties
+        return getattr(site_props, 'typesUseViewActionInListings', ())
+
+    @property
+    def show_about(self):
+        if not HAS_SECURITY_SETTINGS:
+            # BBB
+            site_props = self.context.restrictedTraverse(
+                'portal_properties').site_properties
+            show_about = getattr(site_props, 'allowAnonymousViewAbout', False)
+        else:
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISecuritySchema, prefix="plone")
+            show_about = getattr(settings, 'allow_anon_views_about', False)
+        return show_about or not self.isAnon
+
+    @property
     def text(self):
         textfield = getattr(aq_base(self.context), 'text', None)
         text = getattr(textfield, 'output', None)
@@ -97,6 +104,7 @@ def text(self):
             ) else 'plain'
         return text
 
+    @property
     def tabular_fields(self):
         ret = []
         ret.append('Title')
@@ -141,6 +149,7 @@ def formatted_date(self, item):
         )
         return provider(item)
 
+    @property
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:54:57+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b5af51b670242646965fbdd9ad702b1afd285d4e

results + filter refactoring

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index a666659..06ee0f3 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -14,11 +14,24 @@ def __init__(self, *args, **kwargs):
         self.b_size = self.collection_behavior.item_count
 
     def results(self, **kwargs):
-        return self.collection_behavior.results(
-            b_start=self.b_start,
-            b_size=self.b_size,
-            **kwargs
-        )
+        """Return a content listing based result set with results from the
+        collection query.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
+        return self.collection_behavior.results(**kwargs)
 
     def getFoldersAndImages(self, **kwargs):
         context = aq_inner(self.context)
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 8f45b66..7679751 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -38,18 +38,27 @@ def __init__(self, context, request):
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
 
-    def _content_filter(self):
-        content_filter = getattr(self.request, 'contentFilter', None)
-        content_filter = dict(content_filter) if content_filter else {}
-        content_filter.setdefault('portal_type', self.friendly_types)
-        content_filter.setdefault('batch', True)
-        content_filter.setdefault('b_size', self.b_size)
-        content_filter.setdefault('b_start', self.b_start)
-        return content_filter
-
-    def results(self):
+    def results(self, **kwargs):
+        """Return a content listing based result set with contents of the
+        folder.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('portal_type', self.friendly_types)
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
         results = self.context.restrictedTraverse(
-            '@@folderListing')(**self._content_filter())
+            '@@folderListing')(**kwargs)
         return results
 
     def batch(self):


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:57:06+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7cba13f3a17a7b33f0f87168d3367f6709891ca8

robot tests for refactored unified listing views

Conflicts:
	buildout.d/checkouts.cfg
	buildout.d/sources.cfg

Files changed:
M buildout.d/checkouts.cfg
M buildout.d/sources.cfg
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/robot/variables.py
M setup.py

diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
index 153f9b7..a6b0796 100644
--- a/buildout.d/checkouts.cfg
+++ b/buildout.d/checkouts.cfg
@@ -4,3 +4,4 @@ always-checkout = force
 auto-checkout +=
     plone.app.dexterity
     plone.app.querystring
+    plone.app.robotframework
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
index 884b670..6b5cc5e 100644
--- a/buildout.d/sources.cfg
+++ b/buildout.d/sources.cfg
@@ -7,3 +7,4 @@ plone_push = git@github.com:plone
 [sources]
 plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
 plone.app.querystring = git ${remotes:plone}/plone.app.querystring.git pushurl=${remotes:plone_push}/plone.app.querystring.git
+plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index ff27d81..1c43e10 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -5,37 +5,159 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 
 Variables  plone/app/contenttypes/tests/robot/variables.py
 
-Test Setup  Run keywords  Open test browser
+Test Setup  Run keywords  Setup Testcontent  Open test browser
 Test Teardown  Close all browsers
 
 *** Variables ***
 
 *** Test cases ***
 
-# XXX: This test needs to be refactored. The test should use robot content
-# keywords and is way too long.
-Scenario: Test Folderlisting
+Scenario: Test listing views
     Given I am logged in as site owner
-      And a Folder  Test-Folder
-      And a File  Test-File
-      And a Image  Test-Image
-      And a Collection  Test-Collection
-      And a Link  Test-Link
-      And a News Item  Test-News
-      And a Document  Test-Document
-     When I Go to  ${PLONE_URL}/folder_contents
-     Then Page Should Contain  Test-Folder
-      And Page Should Contain  Test-File
-      And Page Should Contain  Test-Image
-      And Page Should Contain  Test-Collection
-      And Page Should Contain  Test-Link
-      And Page Should Contain  Test-News
-      And Page Should Contain  Test-Document
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_listing
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_summary_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_tabular_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
+    Then Listing should list contained content in detail
+
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
+    Then Listing should list all content in detail
 
 
 *** Keywords ***
 
+Listing should list contained content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Not Contain  Test Album Image 1
+  Page Should Not Contain  Test Album Image 2
+  Page Should Not Contain  Test Album Image 3
+  Page Should Not Contain  Test Sub Album
+  Page Should Not Contain  Test Sub Album Image 1
+  Page Should Not Contain  Test Sub Album Image 2
+  Page Should Not Contain  Test Sub Album Image 3
+
+Listing should list contained content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  0
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  0
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  0
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  0
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  0
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
+
+Listing should list all content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Page Should Contain  Test Album Image 2
+  Page Should Contain  Test Album Image 3
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Page Should Contain  Test Sub Album Image 2
+  Page Should Contain  Test Sub Album Image 3
+
+Listing should list all content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+
+
+Setup Testcontent
+  Given I am logged in as site owner
+  Create Content  type=Document  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_document  title=Test Document  text=this is a test document
+  Create Content  type=News Item  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_news_item  title=Test News Item  text=this is a test news item
+  Create Content  type=Event  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_event  title=Test Event  text=this is a test event
+  Create Content  type=Collection  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_collection  title=Test Collection  query=${COLLECTION_TEST_QUERY}  text=this is a test collection
+  Create Content  type=Link  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_link  title=Test Link  remoteUrl=http://plone.org
+  Create Content  type=File  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_file  title=Test File
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_image  title=Test Image
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_album  title=Test Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_1  title=Test Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_2  title=Test Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_3  title=Test Album Image 3
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=test_subalbum  title=Test Sub Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_1  title=Test Sub Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_2  title=Test Sub Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_3  title=Test Sub Album Image 3
+
 I go to
     [Arguments]  ${location}
     Go to  ${location}
-    Wait until page contains  Test-Document
diff --git a/plone/app/contenttypes/tests/robot/variables.py b/plone/app/contenttypes/tests/robot/variables.py
index 7310966..757ff22 100644
--- a/plone/app/contenttypes/tests/robot/variables.py
+++ b/plone/app/contenttypes/tests/robot/variables.py
@@ -2,4 +2,6 @@
 from pkg_resources import resource_filename
 
 TEST_FOLDER_ID = 'robot-test-folder'
+PLONE_PATH = '/plone'
+COLLECTION_TEST_QUERY = '[{"i": "path", "o": "plone.app.querystring.operation.string.path", "v": "%s/%s"}]' % (PLONE_PATH, TEST_FOLDER_ID)  # noqa
 PATH_TO_TEST_FILES = resource_filename("plone.app.contenttypes.tests", "")
diff --git a/setup.py b/setup.py
index 7ff234b..1833bd7 100644
--- a/setup.py
+++ b/setup.py
@@ -55,7 +55,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework',
+              'plone.app.robotframework [debug, reload] >= 0.9.9',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:57:25+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/ec45724c45601e9e12200b609486b77fd230b091

prettyfying html

Files changed:
A plone/app/contenttypes/browser/templates/listing_album.pt

diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
new file mode 100644
index 0000000..2fad8bf
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -0,0 +1,89 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="here/main_template/macros/master"
+      i18n:domain="plone">
+
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:main_macro define-macro="content-core"
+    tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
+                images result/images;
+                albums result/folders;
+                otherContents result/others;
+                Batch python:modules['Products.CMFPlone'].Batch;
+                b_start python:request.get('b_start', 0);
+                templateId template/getId;
+                batch python:Batch(images, 12, int(b_start), orphan=1)">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <tal:images tal:condition="batch" tal:repeat="image batch">
+  <div class="photoAlbumEntry">
+    <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
+                   scale image/@@images;
+                   img_tag python:scale.scale('image', scale='thumb').tag()"
+        tal:attributes="href string:${image/absolute_url}/view;
+                        title image/Description">
+      <span class="photoAlbumEntryWrapper">
+        <img src="" alt="" tal:replace="structure img_tag" />
+      </span>
+      <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
+          Title
+      </span>
+    </a>
+  </div>
+  </tal:images>
+
+  <div class="photoAlbum" tal:condition="albums">
+    <tal:albums tal:repeat="album albums">
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
+                    number_of_images python:len(image_brains_in_album);
+                    random python:modules['random'];
+                    random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <tal:block condition="number_of_images">
+          <img src="" alt=""
+               tal:define="scale random_image/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+               tal:replace="structure img_tag" />
+          </tal:block>
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/pretty_title_or_id">Title</tal:title>
+          (<tal:number content="number_of_images" />)
+        </span>
+      </a>
+    </div>
+    </tal:albums>
+  </div>
+
+  <div class="visualClear"></div>
+  
+  <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+  <metal:empty metal:define-slot="no_items_in_listing">
+    <p class="discreet"
+        tal:condition="not: view/batch"
+        tal:content="view/no_items_message">
+      There are currently no items in this folder.
+    </p>
+  </metal:empty>
+
+
+</metal:main_macro>
+</metal:content-core>
+</body>
+</html>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:58:29+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/32ccadde3963c6c6168d5ca2f8804512cb3cf4eb

unify folder_album_view and thumbnail_view into album_view

Conflicts:
	plone/app/contenttypes/browser/configure.zcml

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_collection.py
D plone/app/contenttypes/browser/templates/folder_album_view.pt
D plone/app/contenttypes/browser/templates/thumbnail_view.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 17b9a2b..2fa1270 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -7,11 +7,12 @@ Changelog
 - Refactor full_view and incorporate fixes from collective.fullview to
   1) display the default views of it's items, 2) be recursively callable
   and 3) have the same templates for folder and collections.
-  [thet] 
+  [thet]
 
-- Refactor folder_listing, folder_summary_view, folder_tabular_view for folders
-  and standard_view (collection_view), summary_view and tabular_view for
-  collections to use the same templates and base view class.
+- Refactor folder_listing, folder_summary_view, folder_tabular_view and
+  folder_album_view for folders as well as standard_view (collection_view),
+  summary_view, tabular_view and thumbnail_view for collections to use the same
+  templates and base view class.
   [thet]
 
 - In the file view, render HTML5 ``<audio>`` or ``<video>`` tags for audio
diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 30d058e..52d897e 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -142,36 +142,6 @@ def results(self, batch=True, b_start=0, b_size=None,
             limit=limit, brains=brains, custom_query=custom_query
         )
 
-    def getFoldersAndImages(self):
-        catalog = getToolByName(self.context, 'portal_catalog')
-        results = self.results(batch=False)
-
-        _mapping = {'results': results, 'images': {}}
-        portal_atct = getToolByName(self.context, 'portal_atct', None)
-        image_types = getattr(portal_atct, 'image_types', ['Image'])
-
-        filtered_results = []
-        for item in results:
-            item_path = item.getPath()
-            if item.isPrincipiaFolderish:
-                query = {
-                    'portal_type': image_types,
-                    'path': item_path,
-                }
-                _mapping['images'][item_path] = IContentListing(catalog(query))
-            elif item.portal_type in image_types:
-                _mapping['images'][item_path] = [item, ]
-            else:
-                continue
-            filtered_results.append(item)
-
-        _mapping['total_number_of_images'] = sum(map(
-            len,
-            _mapping['images'].values()
-        ))
-        _mapping['results'] = filtered_results
-        return _mapping
-
     def selectedViewFields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 06ee0f3..23953c0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
 from plone.app.contenttypes import _
@@ -33,10 +35,21 @@ def results(self, **kwargs):
 
         return self.collection_behavior.results(**kwargs)
 
-    def getFoldersAndImages(self, **kwargs):
-        context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.getFoldersAndImages(**kwargs)
+    @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        results = self.results()
+        images = []
+        folders = []
+        for it in results:
+            # TODO: potentially expensive!
+            ob = it.getObject()
+            if IImage.providedBy(ob):
+                images.append(it)
+            elif IFolder.providedBy(ob):
+                folders.append(it)
+        return {'images': images, 'folders': folders}
 
     def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 13d4148..f88b9d9 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -69,11 +69,11 @@
     />
 
   <browser:page
-    name="thumbnail_view"
+    name="album_view"
     permission="zope2.View"
     for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
     class=".collection.CollectionView"
-    template="templates/thumbnail_view.pt"
+    template="templates/listing_album.pt"
     />
 
   <!-- COLLECTION MENU ITEMS -->
@@ -98,8 +98,8 @@
       action="tabular_view"
       />
     <browser:menuItem
-      title="Thumbnail view"
-      action="thumbnail_view"
+      title="Album view"
+      action="album_view"
       />
   </browser:menuItems>
 
@@ -211,24 +211,12 @@
     />
 
   <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    />
-
-  <!-- BBB -->
-  <browser:page
-    name="atct_album_view"
+    name="album_view"
     for="plone.dexterity.interfaces.IDexterityContainer"
     layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
     permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
     />
 
   <browser:page
@@ -294,4 +282,31 @@
   <!-- Query string widget -->
   <adapter factory=".widgets.QueryStringFieldWidget" />
 
+  <!-- BBB -->
+  <browser:page
+    name="folder_album_view"
+    for="plone.dexterity.interfaces.IDexterityContainer"
+    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
+    permission="zope2.View"
+    />
+  <browser:page
+    name="atct_album_view"
+    for="plone.dexterity.interfaces.IDexterityContainer"
+    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+    class=".folder.FolderView"
+    template="templates/listing_album.pt"
+    permission="zope2.View"
+    menu="plone_displayviews"
+    title="Album"
+    />
+  <browser:page
+    name="thumbnail_view"
+    permission="zope2.View"
+    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+    class=".collection.CollectionView"
+    template="templates/listing_album.pt"
+    />
+
 </configure>
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 7679751..72d8e72 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -4,6 +4,8 @@
 from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
 from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.event.interfaces import IEvent
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
@@ -159,6 +161,20 @@ def formatted_date(self, item):
         return provider(item)
 
     @property
+    def album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        images = self.results(
+            batch=False,
+            object_provides=IImage.__identifier__
+        )
+        folders = self.results(
+            batch=False,
+            object_provides=IFolder.__identifier__
+        )
+        return {'images': images, 'folders': folders}
+
+    @property
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',
diff --git a/plone/app/contenttypes/browser/templates/folder_album_view.pt b/plone/app/contenttypes/browser/templates/folder_album_view.pt
deleted file mode 100644
index e5b5609..0000000
--- a/plone/app/contenttypes/browser/templates/folder_album_view.pt
+++ /dev/null
@@ -1,104 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
-      lang="en-US"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-
-<metal:main_macro define-macro="content-core"
-     tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
-                 images result/images;
-                 albums result/folders;
-                 otherContents result/others;
-                 Batch python:modules['Products.CMFPlone'].Batch;
-                 b_start python:request.get('b_start', 0);
-                 templateId template/getId;
-                 batch python:Batch(images, 12, int(b_start), orphan=1)">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/getText;
-                     text python:has_text and here.getText() or ''"
-         tal:condition="text"
-         tal:attributes="class python: here.Format() in ('text/structured',
-                                               'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:albumsimages tal:condition="python:albums or images">
-        <tal:images tal:condition="batch" tal:repeat="image batch">
-            <div class="photoAlbumEntry">
-                <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                               scale image/@@images;
-                               img_tag python:scale.scale('image', scale='thumb').tag()"
-                   tal:attributes="href string:${image/absolute_url}/view;
-                                   title image/Description">
-                    <span class="photoAlbumEntryWrapper">
-                        <img src="" alt="" tal:replace="structure img_tag" />
-                    </span>
-                    <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
-                       Title
-                    </span>
-                </a>
-            </div>
-        </tal:images>
-
-        <div class="photoAlbum" tal:condition="albums">
-        <tal:albums tal:repeat="album albums">
-
-            <div class="photoAlbumEntry photoAlbumFolder"
-                 tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                             number_of_images python:len(image_brains_in_album);
-                             random python:modules['random'];
-                             random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-                        <a tal:attributes="href album/getURL;
-                                           title album/Description">
-                            <span class="photoAlbumEntryWrapper">
-                                <tal:block condition="number_of_images">
-                                <img src="" alt=""
-                                     tal:define="scale random_image/@@images;
-                                                 img_tag python:scale.scale('image', scale='thumb').tag()"
-                                     tal:replace="structure img_tag" />
-                                </tal:block>
-                            </span>
-                            <span class="photoAlbumEntryTitle">
-                               <tal:title content="album/pretty_title_or_id">Title</tal:title>
-                            (<tal:number content="number_of_images" />)
-                            </span>
-                        </a>
-            </div>
-
-        </tal:albums>
-        </div>
-
-        <div class="visualClear"><!-- --></div>
-
-    </tal:albumsimages>
-
-    <p class="discreet"
-       i18n:domain="atcontenttypes"
-       i18n:translate="text_no_albums_uploaded"
-       tal:condition="python:not (albums or images)">
-        No albums or photos uploaded yet.
-    </p>
-
-    <div tal:condition="python:albums or images"
-         metal:use-macro="here/batch_macros/macros/navigation" />
-
-    <tal:listing condition="otherContents"
-                 define="folderContents otherContents;
-                         view nocall:here/@@folder_listing">
-        <metal:listing metal:use-macro="view/macros/listing">
-            <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
-        </metal:listing>
-
-    </tal:listing>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-
-</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index 2fad8bf..6a443e6 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -10,14 +10,9 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:main_macro define-macro="content-core"
-    tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
+    tal:define="result view/album_results;
                 images result/images;
-                albums result/folders;
-                otherContents result/others;
-                Batch python:modules['Products.CMFPlone'].Batch;
-                b_start python:request.get('b_start', 0);
-                templateId template/getId;
-                batch python:Batch(images, 12, int(b_start), orphan=1)">
+                albums result/folders">
 
   <div metal:define-macro="text-field-view"
       id="parent-fieldname-text" class="stx"
@@ -27,48 +22,50 @@
     <div metal:define-slot="inside" tal:replace="structure text">The body</div>
   </div>
 
-  <tal:images tal:condition="batch" tal:repeat="image batch">
+  <tal:images tal:repeat="image images">
   <div class="photoAlbumEntry">
-    <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                   scale image/@@images;
-                   img_tag python:scale.scale('image', scale='thumb').tag()"
-        tal:attributes="href string:${image/absolute_url}/view;
-                        title image/Description">
+    <a tal:attributes="href string:${image/getURL}/view;
+                       title image/Description">
       <span class="photoAlbumEntryWrapper">
-        <img src="" alt="" tal:replace="structure img_tag" />
+        <img tal:define="ob image/getObject;
+                         scale ob/@@images;
+                         img_tag python:scale.scale('image', scale='thumb').tag()"
+            tal:replace="structure img_tag" />
       </span>
-      <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
+      <span class="photoAlbumEntryTitle" tal:content="image/Title">
           Title
       </span>
     </a>
   </div>
   </tal:images>
+  
+  <div class="visualClear"></div>
 
-  <div class="photoAlbum" tal:condition="albums">
-    <tal:albums tal:repeat="album albums">
-    <div class="photoAlbumEntry photoAlbumFolder"
-        tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                    number_of_images python:len(image_brains_in_album);
-                    random python:modules['random'];
-                    random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-      <a tal:attributes="href album/getURL;
-                         title album/Description">
-        <span class="photoAlbumEntryWrapper">
-          <tal:block condition="number_of_images">
-          <img src="" alt=""
-               tal:define="scale random_image/@@images;
-                           img_tag python:scale.scale('image', scale='thumb').tag()"
-               tal:replace="structure img_tag" />
-          </tal:block>
-        </span>
-        <span class="photoAlbumEntryTitle">
-          <tal:title content="album/pretty_title_or_id">Title</tal:title>
-          (<tal:number content="number_of_images" />)
-        </span>
-      </a>
-    </div>
-    </tal:albums>
+  <tal:albums tal:repeat="album albums">
+  <div class="photoAlbumEntry photoAlbumFolder"
+      tal:define="ob album/getObject;
+                  subalbum_view nocall:ob/@@album_view;
+                  subalbum_results subalbum_view/album_results;
+                  subalbum_images subalbum_results/images;
+                  number_of_images python:len(subalbum_images);
+                  random python:modules['random'];
+                  random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+    <a tal:attributes="href album/getURL;
+                       title album/Description">
+      <span class="photoAlbumEntryWrapper">
+        <tal:block condition="number_of_images">
+        <img tal:define="scale random_image/@@images;
+                         img_tag python:scale.scale('image', scale='thumb').tag()"
+             tal:replace="structure img_tag" />
+        </tal:block>
+      </span>
+      <span class="photoAlbumEntryTitle">
+        <tal:title content="album/Title">Title</tal:title>
+        (<tal:number content="number_of_images" />)
+      </span>
+    </a>
   </div>
+  </tal:albums>
 
   <div class="visualClear"></div>
   
diff --git a/plone/app/contenttypes/browser/templates/thumbnail_view.pt b/plone/app/contenttypes/browser/templates/thumbnail_view.pt
deleted file mode 100644
index 220c22d..0000000
--- a/plone/app/contenttypes/browser/templates/thumbnail_view.pt
+++ /dev/null
@@ -1,70 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:main_macro define-macro="content-core"
-     tal:define="data view/getFoldersAndImages;
-                total_number_of_images data/total_number_of_images;
-                site_properties context/portal_properties/site_properties;
-                use_view_action site_properties/typesUseViewActionInListings|python:();">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
-         tal:condition="text"
-         tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results tal:repeat="item data/results"
-                 tal:condition="total_number_of_images">
-    <div class="photoAlbumEntry photoAlbumFolder"
-         tal:define="item_path item/getPath;
-                     item_type item/portal_type;
-                     is_album python:item_type=='Folder';
-                     images_album python:data['images'].get(item_path, []);
-                     number_of_images python:len(images_album);
-                     item_title item/Title;
-                     item_url item/getURL;
-                     item_description item/Description;
-                     item_view python:item_type in use_view_action and item_url+'/view' or item_url;
-                     random python:modules['random'];
-                     random_image python:number_of_images and random.choice(images_album).getObject() or None"
-          tal:attributes="class python:is_album and 'photoAlbumEntry photoAlbumFolder' or 'photoAlbumEntry'">
-                <a tal:attributes="href item_view;
-                                   title item_description">
-                    <span class="photoAlbumEntryWrapper"
-                          tal:condition="number_of_images">
-                     <img src="" alt=""
-                          tal:define="scales random_image/@@images;
-                                      scale python:scales.scale('image', 'thumb')"
-                          tal:replace="structure python:scale and scale.tag(title=item_description) or None" />
-                    </span>
-                    <span class="photoAlbumEntryTitle">
-                       <tal:title content="item_title">Title</tal:title>
-                       <tal:count condition="is_album">(<tal:number content="number_of_images" />)</tal:count>
-                    </span>
-                </a>
-    </div>
-    </tal:results>
-    <div class="visualClear"><!-- --></div>
-
-    <p class="discreet"
-       i18n:translate=""
-       tal:condition="not: total_number_of_images">
-        No images found in this collection.
-    </p>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 1c43e10..0435688 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -27,6 +27,9 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
     Then Listing should list contained content in detail
 
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
+    Then Album should list contained images and albums
+
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
     Then Listing should list all content
@@ -40,6 +43,9 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
     Then Listing should list all content in detail
 
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
+    Then Album should list all images and albums
+
 
 *** Keywords ***
 
@@ -91,6 +97,16 @@ Listing should list contained content in detail
   Page Should Contain  Test Sub Album Image 3
   Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
 
+Album should list contained images and albums
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+
+
 Listing should list all content
   Page Should Contain  Test Document
   Page Should Contain  Test News Item
@@ -139,6 +155,25 @@ Listing should list all content in detail
   Page Should Contain  Test Sub Album Image 3
   Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
 
+Album should list all images and albums
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Sub Album
+
+
 
 Setup Testcontent
   Given I am logged in as site owner
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index a129ff4..530c6ae 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -75,9 +75,6 @@ def test_bbb_selectedViewFields(self):
         self.assertEqual(self.collection.selectedViewFields(),
                          [('Title', 'Title'), ('Description', 'Description')])
 
-    def test_getFoldersAndImages(self):
-        pass
-
     def test_bbb_setQuery(self):
         self.collection.setQuery(query)
         self.assertEqual(self.collection.query, query)
@@ -363,79 +360,6 @@ def test_custom_query(self):
                                                 'id': 'bla'})
         self.assertEqual(len(results), 0)
 
-    def test_getFoldersAndImages(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder and a subfolder to it, both with same id
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        folder.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        subfolder = folder['folder1']
-        # add example image into folder and its subfolder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        subfolder.invokeFactory("Image",
-                                "another_image",
-                                title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Folder',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        # The current implementation for getFoldersAndImages will return
-        # another_image under subfolder and also under folder
-        self.assertEqual(imagecount, 3)
-
-    def test_getFoldersAndImages_returning_images(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        # add example image into this folder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        # add another image into the portal root
-        portal.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Image',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        self.assertEqual(imagecount, 2)
-
     def test_respect_navigation_root(self):
         portal = self.layer['portal']
         login(portal, 'admin')


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:58:44+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7680ac96fd3fc92ffd34229c871746848e581237

test fix

Files changed:
M plone/app/contenttypes/tests/robot/test_folderlisting.robot

diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 0435688..3919357 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -157,7 +157,7 @@ Listing should list all content in detail
 
 Album should list all images and albums
   Page Should Contain  Test Image
-  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Xpath Should Match X Times  //img[@title="Test Image"]  2
   Page Should Contain  Test Album Image 1
   Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
   Page Should Contain  Test Album Image 2


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:59:36+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/038d57cd82ae8387005366842e966cfa4349df98

Register folder and collection views under the same name. Old registrations are kept for BBB compatibility.

Conflicts:
	plone/app/contenttypes/browser/configure.zcml

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/tests/test_collection.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 2fa1270..e74ce43 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Register folder and collection views under the same name. Old registrations
+  are kept for BBB compatibility.
+  [thet]
+
 - Refactor full_view and incorporate fixes from collective.fullview to
   1) display the default views of it's items, 2) be recursively callable
   and 3) have the same templates for folder and collections.
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index f88b9d9..b24a503 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -9,263 +9,213 @@
 
   <browser:resource
       name="collection.css"
-      file="stylesheets/collection.css" />
+      file="stylesheets/collection.css"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"/>
 
 
-  <!-- VIEWS FOR COLLECTION ITEM -->
+  <!-- VIEWS FOR PLONE SITE ROOT -->
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
+
+
+  <!-- VIEWS FOR FOLDERS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
 
-  <browser:page
-    name="view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
 
+  <!-- VIEWS FOR COLLECTION ITEM -->
   <browser:page
-    name="standard_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
+      name="listing_view"
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      template="templates/listing.pt"
+      permission="zope2.View"
+      />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
-
        Note that these ignore other fields, but integrators should
        create other themplates if they want that.  Or improve the
        query view widget.  -->
-
-  <browser:page
-    name="collection_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
-
-  <browser:page
-    name="summary_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_summary.pt"
-    />
-
-  <browser:page
-    name="all_content"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/full_view.pt"
-    />
-
-  <browser:page
-    name="tabular_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_tabular.pt"
-    />
-
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Listing"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album"
+        />
+  </browser:pages>
+
+
+  <!-- OTHER VIEWS -->
   <browser:page
-    name="album_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_album.pt"
-    />
-
-  <!-- COLLECTION MENU ITEMS -->
-
-  <browser:menuItems
-    for="plone.app.contenttypes.interfaces.ICollection"
-    menu="plone_displayviews">
-    <browser:menuItem
-      title="Standard view"
-      action="standard_view"
-      />
-    <browser:menuItem
-      title="Summary view"
-      action="summary_view"
-      />
-    <browser:menuItem
-      title="All content"
-      action="all_content"
-      />
-    <browser:menuItem
-      title="Tabular view"
-      action="tabular_view"
-      />
-    <browser:menuItem
-      title="Album view"
-      action="album_view"
+      name="full_view_item"
+      for="*"
+      class=".full_view.FullViewItem"
+      template="templates/full_view_item.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
       />
-  </browser:menuItems>
-
-  <browser:page
-    name="document_view"
-    for="plone.app.contenttypes.interfaces.IDocument"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/document.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Document"
-    />
-
-  <browser:page
-    name="file_view"
-    for="plone.app.contenttypes.interfaces.IFile"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".file.FileView"
-    template="templates/file.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View File"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="Products.CMFPlone.interfaces.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_full_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/full_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="All content"
-    />
-
-  <browser:page
-    name="full_view_item"
-    for="Products.CMFCore.interfaces._content.IContentish"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".full_view.FullViewItem"
-    template="templates/full_view_item.pt"
-    permission="zope2.View"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
   <browser:page
-    name="folder_summary_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_tabular_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="document_view"
+      for="plone.app.contenttypes.interfaces.IDocument"
+      template="templates/document.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Document"
+      />
   <browser:page
-    name="folder_tabular_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="file_view"
+      for="plone.app.contenttypes.interfaces.IFile"
+      class=".file.FileView"
+      template="templates/file.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View File"
+      />
   <browser:page
-    name="album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    />
-
+      name="image_view"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image"
+      />
   <browser:page
-    name="image_view"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image"
-    />
-
+      name="image_view_fullscreen"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image_view_fullscreen.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image Fullscreen"
+      />
   <browser:page
-    name="image_view_fullscreen"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image_view_fullscreen.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image Fullscreen"
-    />
-
+      name="link_redirect_view"
+      for="plone.app.contenttypes.interfaces.ILink"
+      class=".link_redirect_view.LinkRedirectView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Link"
+      />
   <browser:page
-    name="link_redirect_view"
-    for="plone.app.contenttypes.interfaces.ILink"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".link_redirect_view.LinkRedirectView"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Link"
-    />
-
+      name="newsitem_view"
+      for="plone.app.contenttypes.interfaces.INewsItem"
+      template="templates/newsitem.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View News Item"
+      />
   <browser:page
-    name="newsitem_view"
-    for="plone.app.contenttypes.interfaces.INewsItem"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/newsitem.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View News Item"
-    />
+      name="contenttype_utils"
+      for="*"
+      class=".utils.Utils"
+      allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      />
 
-  <browser:page
-    name="contenttype_utils"
-    for="*"
-    permission="zope2.View"
-    class=".utils.Utils"
-    allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
-    />
 
   <configure zcml:condition="installed Products.Archetypes">
     <browser:viewlet
@@ -282,31 +232,45 @@
   <!-- Query string widget -->
   <adapter factory=".widgets.QueryStringFieldWidget" />
 
-  <!-- BBB -->
-  <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    />
-  <browser:page
-    name="atct_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_album.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
-    />
-  <browser:page
-    name="thumbnail_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_album.pt"
-    />
+  <!-- BBB OlD VIEW NAME REGISTRATIONS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_full_view" template="templates/full_view.pt"/>
+    <browser:page name="full_view_item" template="templates/full_view_item.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+    <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
+    <browser:page name="atct_album_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="view" template="templates/listing.pt"/>
+    <browser:page name="standard_view" template="templates/listing.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="collection_view" template="templates/listing.pt"/>
+    <browser:page name="all_content" template="templates/full_view.pt"/>
+    <browser:page name="thumbnail_view" template="templates/listing_album.pt"/>
+  </browser:pages>
 
 </configure>
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index c8ba5cd..1e1e62b 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -30,11 +30,11 @@
   <property name="default_view">standard_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
-    <element value="standard_view" />
-    <element value="summary_view" />
-    <element value="all_content" />
-    <element value="tabular_view" />
-    <element value="thumbnail_view" />
+    <element value="summary_view"/>
+    <element value="full_view"/>
+    <element value="tabular_view"/>
+    <element value="album_view"/>
+    <element value="listing_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index 98178db..8ad112d 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -14,11 +14,11 @@
  <property name="allow_discussion">False</property>
  <property name="default_view">folder_listing</property>
  <property name="view_methods">
-  <element value="folder_summary_view"/>
-  <element value="folder_full_view"/>
-  <element value="folder_tabular_view"/>
-  <element value="folder_album_view"/>
-  <element value="folder_listing"/>
+  <element value="summary_view"/>
+  <element value="full_view"/>
+  <element value="tabular_view"/>
+  <element value="album_view"/>
+  <element value="listing_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index 530c6ae..8e9a439 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -1,35 +1,28 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
 from DateTime import DateTime
-
-import unittest2 as unittest
-
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.interface import alsoProvides
-from transaction import commit
-
-from plone.dexterity.interfaces import IDexterityFTI
-
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-
-from plone.app.testing import SITE_OWNER_NAME
-from plone.app.testing import SITE_OWNER_PASSWORD
-
-from plone.testing.z2 import Browser
-from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, \
-    setRoles, login, logout
-
+from plone.app.contenttypes.behaviors.collection import ICollection as ICollection_behavior  # noqa
 from plone.app.contenttypes.interfaces import ICollection
-from plone.app.contenttypes.behaviors.collection import ICollection as \
-    ICollection_behavior
-
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
+from plone.app.contenttypes.testing import set_browserlayer
 from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import SITE_OWNER_NAME
+from plone.app.testing import SITE_OWNER_PASSWORD
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import login
+from plone.app.testing import logout
+from plone.app.testing import setRoles
 from plone.app.textfield.value import RichTextValue
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from transaction import commit
+from zope.component import createObject
+from zope.component import queryUtility
+from zope.interface import alsoProvides
 import os.path
+import unittest2 as unittest
 
 query = [{
     'i': 'Title',
@@ -141,6 +134,7 @@ def setUp(self):
         self.browser = Browser(self.layer['app'])
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
@@ -409,6 +403,7 @@ class PloneAppCollectionEditViewsIntegrationTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:59:51+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/bb000d650d1c5cb782ab82849ef01f2cc9ce6db4

cleanup

Files changed:
D plone/app/contenttypes/browser/album_view.py

diff --git a/plone/app/contenttypes/browser/album_view.py b/plone/app/contenttypes/browser/album_view.py
deleted file mode 100644
index fca86d8..0000000
--- a/plone/app/contenttypes/browser/album_view.py
+++ /dev/null
@@ -1,57 +0,0 @@
-# -*- coding: utf-8 -*-
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-# from Products.CMFCore.utils import getToolByName
-
-
-class AlbumView(BrowserView):
-
-    template = ViewPageTemplateFile('templates/folder_album_view.pt')
-
-    def getAlbumContent(self,
-                        container=None,
-                        images=0,
-                        folders=0,
-                        subimages=0,
-                        others=0):
-        """ Mostly ripped out from atctListAlbum.py
-        """
-
-        if not container:
-            container = self.context
-
-        result = {}
-
-        if images:
-            result['images'] = container.getFolderContents(
-                {'portal_type': ('Image',)}, full_objects=True)
-
-        if folders:
-            result['folders'] = container.getFolderContents(
-                {'portal_type': ('Folder',)})
-
-        if subimages:
-            # Handle brains or objects
-            if getattr(container, 'getPath', None) is not None:
-                path = container.getPath()
-            else:
-                path = '/'.join(container.getPhysicalPath())
-            # Explicitly set path to remove default depth
-            result['subimages'] = container.getFolderContents(
-                {'portal_type': ('Image',), 'path': path})
-
-        if others:
-            utils = getToolByName(self.context, 'plone_utils')
-            searchContentTypes = utils.getUserFriendlyTypes()
-            filtered = [p_type for p_type in searchContentTypes
-                        if p_type not in ('Image', 'Folder',)]
-            if filtered:
-                # We don't need the full objects for the folder_listing
-                result['others'] = container.getFolderContents(
-                    {'portal_type': filtered})
-            else:
-                result['others'] = ()
-
-        return result


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T14:59:59+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2c3c37ff3f68e16a221fc3c1495575394978bf6b

dont depend on unreleased...

Files changed:
M setup.py

diff --git a/setup.py b/setup.py
index 1833bd7..1ab7152 100644
--- a/setup.py
+++ b/setup.py
@@ -55,7 +55,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework [debug, reload] >= 0.9.9',  # create image and file content for Image, File and News Item if not given.  # noqa
+              'plone.app.robotframework [debug, reload] > 0.9.8',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T15:01:20+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/58d7a7787d26db5ae34792aed6d8ad0a1fda1fb9

reformat all templates

Conflicts:
	plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/full_view_item.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/templates/newsitem.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index e74ce43..391a707 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Reformatted all templates for 2 space indentation, 4 space for attributes.
+  [thet]
+
 - Register folder and collection views under the same name. Old registrations
   are kept for BBB compatibility.
   [thet]
diff --git a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
index f32ba04..8ba1390 100644
--- a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
+++ b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
@@ -1,22 +1,18 @@
 <tal:available condition="view/available">
-<dl class="portalMessage alert-box secondary warning"
-    i18n:domain="plone">
-    <dt i18n:translate="">Warning</dt>
-    <dd>
-        <tal:manager tal:condition="not:view/can_migrate">
-            <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
-        </tal:manager>
-        <tal:manager tal:condition="view/can_migrate">
-            <span i18n:translate="">You can't edit this content unless you
-                <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
-                    migrate the default content-types to Dexterity.
-                </a>
-            </span>
-        </tal:manager>
-    </dd>
-</dl>
-
-<style type="text/css">
-#contentview-edit {display: None;}
-</style>
+  <div class="portalMessage alert-box secondary warning" i18n:domain="plone">
+    <strong i18n:translate="">Warning</strong>
+    <tal:manager tal:condition="not:view/can_migrate">
+      <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
+    </tal:manager>
+    <tal:manager tal:condition="view/can_migrate">
+      <span i18n:translate="">You can't edit this content unless you
+        <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
+          migrate the default content-types to Dexterity.
+        </a>
+      </span>
+    </tal:manager>
+  </div>
+  <style type="text/css">
+    #contentview-edit {display: None;}
+  </style>
 </tal:available>
diff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt
index 25fefa0..0e6756b 100644
--- a/plone/app/contenttypes/browser/templates/document.pt
+++ b/plone/app/contenttypes/browser/templates/document.pt
@@ -1,20 +1,19 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
-    <metal:content-core define-macro="content-core">
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-              tal:content="structure python:context.text.output_relative_to(view.context)" />
-    </metal:content-core>
+<metal:content-core define-macro="content-core">
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure python:context.text.output_relative_to(view.context)" />
+</metal:content-core>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt
index 547d748..b6e8eae 100644
--- a/plone/app/contenttypes/browser/templates/file.pt
+++ b/plone/app/contenttypes/browser/templates/file.pt
@@ -1,44 +1,43 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="content_type context/file/contentType|nothing;
-                                 download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
-            <p>
-                <a tal:attributes="href download_url">
-                    <img tal:attributes="src view/get_mimetype_icon;
-                                         alt content_type;" border="0"  />
-                    <tal:name tal:content="context/file/filename" >Filename</tal:name>
-                </a>
-                <span class="discreet"
-                      tal:define="size context/file/getSize;
-                                  kb python:size/1024">
-                      &mdash; <span tal:replace="kb" /> KB</span>
-            </p>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core"
+    tal:define="content_type context/file/contentType|nothing;
+                download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
+  <p>
+    <a tal:attributes="href download_url">
+      <img tal:attributes="src view/get_mimetype_icon;
+                           alt content_type;" border="0" />
+      <tal:name tal:content="context/file/filename" >Filename</tal:name>
+    </a>
+    <span class="discreet"
+        tal:define="size context/file/getSize;
+                    kb python:size/1024">
+      &mdash; <span tal:replace="kb" /> KB</span>
+  </p>
 
-            <video tal:condition="view/is_videotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </video>
+  <video tal:condition="view/is_videotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </video>
 
-            <audio tal:condition="view/is_audiotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </audio>
+  <audio tal:condition="view/is_audiotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </audio>
 
-            <div tal:condition="python: content_type.startswith('text')">
-                <h2 i18n:translate="heading_file_contents">File contents</h2>
-                <pre tal:content="context/file/data|nothing" />
-            </div>
-        </metal:block>
-    </metal:content-core>
+  <div tal:condition="python: content_type.startswith('text')">
+    <h2 i18n:translate="heading_file_contents">File contents</h2>
+    <pre tal:content="context/file/data|nothing" />
+  </div>
 
-</body>
+</metal:block>
+</metal:content-core>
 
+</body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
index 37974ec..e0adc9f 100644
--- a/plone/app/contenttypes/browser/templates/full_view.pt
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -1,29 +1,26 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core">
-        <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
-                    <metal:entry fill-slot="entry">
-                        <div
-                            tal:define="obj item/getObject;"
-                            tal:replace="structure obj/@@full_view_item" />
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:listing>
-    </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
+    <!-- we don't want the dl -->
+    <metal:entries fill-slot="entries">
+      <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
+        <metal:entry fill-slot="entry">
+          <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
+        </metal:entry>
+      </metal:block>
+    </metal:entries>
+  </metal:listing>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
index 16eac28..0acb32f 100644
--- a/plone/app/contenttypes/browser/templates/full_view_item.pt
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -1,73 +1,70 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone"
-      tal:omit-tag="">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone"
+    tal:omit-tag="">
 <body tal:omit-tag="">
 
-    <div class="item visualIEFloatFix"
-         tal:define="item_macro nocall:view/item_macros/content-core|nothing;
-                     item_url view/item_url;
-                     rendering_error python:[];">
-
-        <div tal:replace="structure provider:plone.abovecontenttitle" />
-
-        <h2 class="headline">
-            <a href="#" class="summary url" tal:content="context/Title"
-               tal:attributes="href item_url;">
-               Title
-             </a>
-        </h2>
-
-        <div tal:replace="structure provider:plone.belowcontenttitle" />
+  <div class="item visualIEFloatFix"
+      tal:define="item_macro nocall:view/item_macros/content-core|nothing;
+      item_url view/item_url;
+      rendering_error python:[];">
 
-        <div class="description"
-             tal:content="context/Description"
-             tal:condition="context/Description">
-            Description
-        </div>
+    <div tal:replace="structure provider:plone.abovecontenttitle" />
 
-        <tal:block tal:condition="item_macro">
-        <!-- tal:on-error="python:rendering_error.append(True)"-->
+    <h2 class="headline">
+      <a class="summary url" tal:content="context/Title"
+        tal:attributes="href item_url;">
+        Title
+      </a>
+    </h2>
 
-            <div tal:replace="structure provider:plone.abovecontentbody" />
+    <div tal:replace="structure provider:plone.belowcontenttitle" />
 
-            <div tal:define="view nocall:view/default_view;
-                             portal_state context/@@plone_portal_state;
-                             context_state context/@@plone_context_state;
-                             plone_layout context/@@plone_layout;
-                             lang portal_state/language;
-                             dummy python: plone_layout.mark_view(view);
-                             portal_url portal_state/portal_url;
-                             checkPermission nocall: context/portal_membership/checkPermission;
-                             site_properties context/portal_properties/site_properties;">
-            <div metal:use-macro="item_macro">
-                content
-            </div>
-            </div>
+    <div class="description"
+        tal:content="context/Description"
+        tal:condition="context/Description">
+      Description
+    </div>
 
-            <div tal:replace="structure provider:plone.belowcontentbody" />
+    <tal:block tal:condition="item_macro">
+      <!-- tal:on-error="python:rendering_error.append(True)"-->
+
+      <div tal:replace="structure provider:plone.abovecontentbody" />
+
+      <div tal:define="view nocall:view/default_view;
+                       portal_state context/@@plone_portal_state;
+                       context_state context/@@plone_context_state;
+                       plone_layout context/@@plone_layout;
+                       lang portal_state/language;
+                       dummy python: plone_layout.mark_view(view);
+                       portal_url portal_state/portal_url;
+                       checkPermission nocall: context/portal_membership/checkPermission;
+                       site_properties context/portal_properties/site_properties;">
+        <div metal:use-macro="item_macro">
+          content
+        </div>
+      </div>
 
-        </tal:block>
+      <div tal:replace="structure provider:plone.belowcontentbody" />
 
-        <tal:block tal:condition="rendering_error">
-            <!-- Error rendering item macro -->
-        </tal:block>
+    </tal:block>
 
-        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
-            <a href=""
-               tal:attributes="href item_url"
-               i18n:translate="read_more">
-                Read More&hellip;
-            </a>
-        </p>
+    <tal:block tal:condition="rendering_error">
+      <!-- Error rendering item macro -->
+    </tal:block>
 
-        <div class="visualClear"><!-- --></div>
+    <p class="more" tal:condition="python:not(item_macro) or rendering_error">
+      <a tal:attributes="href item_url"
+          i18n:translate="read_more">
+        Read More&hellip;
+      </a>
+    </p>
 
-    </div>
+    <div class="visualClear"><!-- --></div>
 
+  </div>
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt
index 3090cab..8f15418 100644
--- a/plone/app/contenttypes/browser/templates/image.pt
+++ b/plone/app/contenttypes/browser/templates/image.pt
@@ -1,32 +1,29 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="size context/image/getSize">
-            <figure class="image-product">
-              <a class="discreet"
-                 tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
-                 tal:define="scale context/@@images;
-                             img_tag python:scale.scale('image', scale='large').tag()"
-                  tal:on-error="string: Image cannot be displayed">
-                <img tal:replace="structure img_tag" />
-              
-              <figcaption class="discreet">
-                <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
-                <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
-              </figcaption>
-              </a>
-            </figure>
-        </metal:block>
-    </metal:content-core>
-</body>
 
-</html>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core" tal:define="size context/image/getSize">
+  <figure class="image-product">
+    <a class="discreet"
+        tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
+        tal:define="scale context/@@images;
+                    img_tag python:scale.scale('image', scale='large').tag()"
+        tal:on-error="string: Image cannot be displayed">
+    <img tal:replace="structure img_tag" />
+    <figcaption class="discreet">
+      <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
+      <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
+    </figcaption>
+    </a>
+  </figure>
+</metal:block>
+</metal:content-core>
 
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
index 1cb6ca2..dec7933 100644
--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
@@ -1,69 +1,53 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone">
 <head>
-
-    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
-
-    <title tal:content="context/Title">
-        Title
-    </title>
-
-    <style type="text/css" media="screen">
+  <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
+  <title tal:content="context/Title">Title</title>
+  <style type="text/css" media="screen">
     body {
-        background-color: white;
-        color: black;
-        font-family: Helvetica, Arial, sans-serif;
-        font-size: 14px;
-        padding:0;
-        margin:0;
+      background-color: white;
+      color: black;
+      font-family: Helvetica, Arial, sans-serif;
+      font-size: 14px;
+      padding:0;
+      margin:0;
     }
     a {
-        color: #08c;
-        text-decoration: none;
-        text-align:center;
+      color: #08c;
+      text-decoration: none;
+      text-align:center;
+    }
+    a:hover {text-decoration:underline;}
+    a span {
+      display:block;
+      line-height:1.5em;
+      padding:12px;
     }
-      a:hover {text-decoration:underline;}
-      a span {
-          display:block;
-          line-height:1.5em;
-          padding:12px;
-      }
-
     img {
-        border: 0;
-        display:block;
-        margin:0 auto;
+      border: 0;
+      display:block;
+      margin:0 auto;
     }
-
-    </style>
-
+  </style>
 </head>
 
 <body>
-
-<div id="content-core"
-     tal:condition="context/@@images">
-    <a href=""
-       tal:attributes="href request/HTTP_REFERER"
-       tal:condition="request/HTTP_REFERER"
-       ><span i18n:translate="label_back_to_site">Back to site</span>
-    <tal:block replace="structure context/@@images/image" />
-  </a>
-
-    <a href=""
-       tal:attributes="href context/portal_url"
-       tal:condition="not: request/HTTP_REFERER"
-       ><span i18n:translate="label_home">Home</span>
-       <tal:block replace="structure context/@@images/image" />
+  <div id="content-core" tal:condition="context/@@images">
+    <a tal:attributes="href request/HTTP_REFERER"
+        tal:condition="request/HTTP_REFERER"
+      ><span i18n:translate="label_back_to_site">Back to site</span>
+      <tal:block replace="structure context/@@images/image" />
     </a>
-</div>
-
+    <a tal:attributes="href context/portal_url"
+        tal:condition="not: request/HTTP_REFERER"
+      ><span i18n:translate="label_home">Home</span>
+      <tal:block replace="structure context/@@images/image" />
+    </a>
+  </div>
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt
index 4aa7290..c5752e4 100644
--- a/plone/app/contenttypes/browser/templates/link.pt
+++ b/plone/app/contenttypes/browser/templates/link.pt
@@ -1,38 +1,35 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:header fill-slot="header">
-        <div class="portalMessage info"
-            tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
-            tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
-            <strong i18n:translate="">Info</strong>
-            <span tal:omit-tag=""
-                i18n:translate="message_permissions_blocking_link_redirect">
-              You see this page because you have permission to edit this link.
-              Others will be immediately redirected to the link's target URL.
-            </span>
-        </div>
-    </metal:header>
+<metal:header fill-slot="header">
+  <div class="portalMessage info"
+      tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
+      tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
+    <strong i18n:translate="">Info</strong>
+    <span tal:omit-tag=""
+        i18n:translate="message_permissions_blocking_link_redirect">
+      You see this page because you have permission to edit this link.
+      Others will be immediately redirected to the link's target URL.
+    </span>
+  </div>
+</metal:header>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core">
-        <p tal:define="portal_url portal_state/portal_url;
-                       navigation_root_url portal_state/navigation_root_url;
-                       url view/absolute_target_url">
-            <span i18n:translate="link_address">The link address is:</span>
-            <a href="#" tal:attributes="href url"
-                        tal:content="context/remoteUrl">remote url</a>
-        </p>
-        </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <p tal:define="portal_url portal_state/portal_url;
+                 navigation_root_url portal_state/navigation_root_url;
+                 url view/absolute_target_url">
+    <span i18n:translate="link_address">The link address is:</span>
+    <a tal:attributes="href url" tal:content="context/remoteUrl">remote url</a>
+  </p>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index dd38ae0..5ec5a92 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -1,136 +1,122 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <metal:listingmacro define-macro="listing">
+  <metal:listingmacro define-macro="listing">
     <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
+      <tal:listing condition="batch">
         <div metal:define-slot="entries">
-            <article tal:repeat="item batch" metal:define-macro="entries">
+          <article tal:repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="obj item/getObject;
-                                   item_url item/getURL;
-                                   item_id item/getId;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-                <metal:block define-slot="entry">
-                <header metal:define-macro="listitem"
-                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
-                    <span class="summary">
-                        <a href="#"
-                           tal:attributes="href item_link;
-                                           class string:$item_type_class $item_wf_state_class url;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-                    </span>
-
-                    <metal:block metal:define-macro="document_byline">
+                item_url item/getURL;
+                item_id item/getId;
+                item_title item/Title;
+                item_description item/Description;
+                item_type item/PortalType;
+                item_modified item/ModificationDate;
+                item_created item/CreationDate;
+                item_icon item/getIcon;
+                item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                item_wf_state item/review_state;
+                item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                item_creator item/Creator;
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+              <metal:block define-slot="entry">
+                <header metal:define-macro="listitem" tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
+                  <span class="summary">
+                    <a tal:attributes="href item_link;
+                                       class string:$item_type_class $item_wf_state_class url;
+                                       title item_type"
+                        tal:content="item_title">
+                      Item Title
+                    </a>
+                  </span>
+
+                  <metal:block metal:define-macro="document_byline">
                     <span class="documentByLine">
-                        <tal:event condition="python:view.is_event(obj)">
-                            <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
-                            <span tal:condition="item/location"
-                                  i18n:translate="label_event_byline_location">&mdash;
-                                <span tal:content="string:${item/location}"
-                                      class="location"
-                                      i18n:name="location">Oslo</span>,
-                            </span>
-                        </tal:event>
-                        <tal:byline condition="view/show_about">
-                            &mdash;
-
-                            <tal:name tal:condition="item_creator"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            creator_short_form author/username;
-                                            creator_long_form string:?author=${author/username};
-                                            creator_is_openid python:'/' in creator_short_form;
-                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                              <span i18n:translate="label_by_author">
-                                by
-                              <a href="#"
-                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                 tal:content="author/name_or_id"
-                                 tal:omit-tag="not:author"
-                                 i18n:name="author">
-                                Bob Dobalina
-                              </a>
-                              </span>
-
-                            </tal:name>
-
-                            <tal:modified condition="python: item_type != 'Event'">
-                                &mdash;
-                                <tal:mod i18n:translate="box_last_modified">
-                                  last modified
-                                </tal:mod>
-                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                                  August 16, 2001 at 23:35:59
-                                </span>
-                            </tal:modified>
-
-                            <metal:description define-slot="description_slot">
-                                <tal:comment replace="nothing">
-                                    Place custom listing info for custom types here
-                                </tal:comment>
-                            </metal:description>
-                        </tal:byline>
+                      <tal:event condition="python:view.is_event(obj)">
+                        <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                        <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                          <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                        </span>
+                      </tal:event>
+                      <tal:byline condition="view/show_about">
+                        &mdash;
+                        <tal:name tal:condition="item_creator"
+                            tal:define="author python:view.pas_member.info(item_creator);
+                                        creator_short_form author/username;
+                                        creator_long_form string:?author=${author/username};
+                                        creator_is_openid python:'/' in creator_short_form;
+                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                        <span i18n:translate="label_by_author">
+                          by
+                          <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                              tal:content="author/name_or_id"
+                              tal:omit-tag="not:author"
+                              i18n:name="author">
+                            Bob Dobalina
+                          </a>
+                        </span>
+                        </tal:name>
+
+                        <tal:modified condition="python: item_type != 'Event'">
+                          &mdash;
+                          <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                          <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                            August 16, 2001 at 23:35:59
+                          </span>
+                        </tal:modified>
+
+                        <metal:description define-slot="description_slot">
+                          <tal:comment replace="nothing">
+                            Place custom listing info for custom types here
+                          </tal:comment>
+                        </metal:description>
+                      </tal:byline>
                     </span>
-                    </metal:block>
-
+                  </metal:block>
                 </header>
 
                 <p class="description discreet"
                     tal:condition="item_description"
                     tal:content="item_description">
-                    description
+                  description
                 </p>
-            </metal:block>
+              </metal:block>
             </tal:block>
-            </article>
+          </article>
         </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
-    </tal:listing>
+      </tal:listing>
 
-    <metal:empty metal:define-slot="no_items_in_listing">
+      <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
+            tal:condition="not: view/batch"
+            tal:content="view/no_items_message">
+          There are currently no items in this folder.
         </p>
-    </metal:empty>
+      </metal:empty>
 
     </tal:results>
-    </metal:listingmacro>
+  </metal:listingmacro>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index 6a443e6..ab9c319 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -5,7 +5,6 @@
       lang="en"
       metal:use-macro="here/main_template/macros/master"
       i18n:domain="plone">
-
 <body>
 
 <metal:content-core fill-slot="content-core">
@@ -23,52 +22,52 @@
   </div>
 
   <tal:images tal:repeat="image images">
-  <div class="photoAlbumEntry">
-    <a tal:attributes="href string:${image/getURL}/view;
-                       title image/Description">
-      <span class="photoAlbumEntryWrapper">
-        <img tal:define="ob image/getObject;
-                         scale ob/@@images;
-                         img_tag python:scale.scale('image', scale='thumb').tag()"
-            tal:replace="structure img_tag" />
-      </span>
-      <span class="photoAlbumEntryTitle" tal:content="image/Title">
-          Title
-      </span>
-    </a>
-  </div>
+    <div class="photoAlbumEntry">
+      <a tal:attributes="href string:${image/getURL}/view;
+                         title image/Description">
+        <span class="photoAlbumEntryWrapper">
+          <img tal:define="ob image/getObject;
+                           scale ob/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+              tal:replace="structure img_tag" />
+        </span>
+        <span class="photoAlbumEntryTitle" tal:content="image/Title">
+            Title
+        </span>
+      </a>
+    </div>
   </tal:images>
-  
-  <div class="visualClear"></div>
+
+  <div class="visualClear"><!-- --></div>
 
   <tal:albums tal:repeat="album albums">
-  <div class="photoAlbumEntry photoAlbumFolder"
-      tal:define="ob album/getObject;
-                  subalbum_view nocall:ob/@@album_view;
-                  subalbum_results subalbum_view/album_results;
-                  subalbum_images subalbum_results/images;
-                  number_of_images python:len(subalbum_images);
-                  random python:modules['random'];
-                  random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
-    <a tal:attributes="href album/getURL;
-                       title album/Description">
-      <span class="photoAlbumEntryWrapper">
-        <tal:block condition="number_of_images">
-        <img tal:define="scale random_image/@@images;
-                         img_tag python:scale.scale('image', scale='thumb').tag()"
-             tal:replace="structure img_tag" />
-        </tal:block>
-      </span>
-      <span class="photoAlbumEntryTitle">
-        <tal:title content="album/Title">Title</tal:title>
-        (<tal:number content="number_of_images" />)
-      </span>
-    </a>
-  </div>
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="ob album/getObject;
+                    subalbum_view nocall:ob/@@album_view;
+                    subalbum_results subalbum_view/album_results;
+                    subalbum_images subalbum_results/images;
+                    number_of_images python:len(subalbum_images);
+                    random python:modules['random'];
+                    random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <tal:block condition="number_of_images">
+            <img tal:define="scale random_image/@@images;
+                             img_tag python:scale.scale('image', scale='thumb').tag()"
+                 tal:replace="structure img_tag" />
+          </tal:block>
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/Title">Title</tal:title>
+          (<tal:number content="number_of_images" />)
+        </span>
+      </a>
+    </div>
   </tal:albums>
 
-  <div class="visualClear"></div>
-  
+  <div class="visualClear"><!-- --></div>
+
   <div metal:use-macro="context/batch_macros/macros/navigation" />
 
   <metal:empty metal:define-slot="no_items_in_listing">
@@ -79,8 +78,8 @@
     </p>
   </metal:empty>
 
-
 </metal:main_macro>
 </metal:content-core>
+
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index af12928..41b6ce5 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -1,68 +1,62 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
 
-    <metal:entries fill-slot="entries">
+  <metal:entries fill-slot="entries">
     <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
-
-                    <a href="#"
-                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                        tal:attributes="href item_link">
-                        <div class="tileImage">
-                            <img src="" alt=""
-                                 tal:define="scales obj/@@images;
-                                             scale python:scales.scale('image', 'thumb')"
-                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                        </div>
-                    </a>
-
-                    <h2 class="tileHeadline" metal:define-macro="listitem">
-
-                        <a href="#"
-                           class="summary url"
-                           tal:attributes="href item_link;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-
-                    </h2>
-
-                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
-
-                    <p class="tileBody" tal:condition="item_description">
-                        <span class="description" tal:content="item_description">
-                            description
-                        </span>
-                    </p>
-
-                    <p class="tileFooter">
-                        <a href=""
-                           tal:attributes="href item_link"
-                           i18n:translate="read_more">
-                        Read More&hellip;
-                        </a>
-                    </p>
-
-                    <div class="visualClear"><!-- --></div>
-
-                </div>
-
-    </metal:entry>
+      <metal:entry fill-slot="entry">
+
+        <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+
+          <a tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
+              tal:attributes="href item_link">
+            <div class="tileImage">
+              <img src="" alt=""
+                  tal:define="scales obj/@@images;
+                              scale python:scales.scale('image', 'thumb')"
+                  tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+            </div>
+          </a>
+
+          <h2 class="tileHeadline" metal:define-macro="listitem">
+            <a class="summary url"
+                tal:attributes="href item_link;
+                                title item_type"
+                tal:content="item_title">
+              Item Title
+            </a>
+          </h2>
+
+          <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
+
+          <p class="tileBody" tal:condition="item_description">
+            <span class="description" tal:content="item_description">
+              description
+            </span>
+          </p>
+
+          <p class="tileFooter">
+            <a tal:attributes="href item_link"
+                i18n:translate="read_more">
+              Read More&hellip;
+            </a>
+          </p>
+
+          <div class="visualClear"><!-- --></div>
+
+        </div>
+
+      </metal:entry>
     </metal:block>
-    </metal:entries>
+  </metal:entries>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt
index 3bd8c4f..ab1d18e 100644
--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt
+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt
@@ -1,105 +1,97 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <tal:results define="batch view/batch">
+  <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
-
-          <div metal:use-macro="context/batch_macros/macros/navigation" />
-          <div class="has-table">
-            <table class="listing"
-                   summary="Content listing"
-                   i18n:attributes="summary summary_content_listing;">
-                <thead>
-                    <tr>
-                        <th class="nosort"
-                            i18n:translate=""
-                            tal:repeat="field view/tabular_fields"
-                            tal:content="field">Field name</th>
-                    </tr>
-                </thead>
-
-                <tbody>
-
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div class="has-table">
+        <table class="listing"
+            summary="Content listing"
+            i18n:attributes="summary summary_content_listing;">
+          <thead>
+            <tr>
+              <th class="nosort"
+                  i18n:translate=""
+                  tal:repeat="field view/tabular_fields"
+                  tal:content="field">Field name</th>
+            </tr>
+          </thead>
+          <tbody>
             <tal:entries tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-
-                    <tr metal:define-macro="listitem"
-                        tal:define="oddrow repeat/item/odd;"
-                        tal:attributes="class python: oddrow and 'even' or 'odd'">
-
-                        <tal:block tal:repeat="field view/tabular_fields">
-                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
-                                tal:define="field_data python:view.tabular_fielddata(item, field)">
-                                <tal:block tal:replace="field_data/value" />
-                            </td>
-                            <td tal:condition="python:field == 'Title'">
-                                <a href="#"
-                                   tal:attributes="href item_link;
-                                                   class string:$item_wf_state_class $item_type_class;
-                                                   title item_description;"
-                                   tal:content="item_title">
-                                    Item Title
-                                </a>
-                            </td>
-                            <td tal:condition="python:field == 'Creator'"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            name python:author['fullname'] or author['username']">
-                                <a href="#"
-                                   tal:condition="author"
-                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                   tal:content="name">Jos Henken</a>
-                            </td>
-                        </tal:block>
-
-                    </tr>
-
-            </tal:block>
+              <tal:block tal:define="item_url item/getURL;
+                                     item_title item/Title;
+                                     item_description item/Description;
+                                     item_type item/PortalType;
+                                     item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                     item_wf_state item/review_state;
+                                     item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                     item_creator item/Creator;
+                                     item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                <tr metal:define-macro="listitem"
+                    tal:define="oddrow repeat/item/odd;"
+                    tal:attributes="class python: oddrow and 'even' or 'odd'">
+
+                  <tal:block tal:repeat="field view/tabular_fields">
+                    <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                        tal:define="field_data python:view.tabular_fielddata(item, field)">
+                      <tal:block tal:replace="field_data/value" />
+                    </td>
+                    <td tal:condition="python:field == 'Title'">
+                      <a href="#"
+                          tal:attributes="href item_link;
+                          class string:$item_wf_state_class $item_type_class;
+                          title item_description;"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </td>
+                    <td tal:condition="python:field == 'Creator'"
+                        tal:define="author python:view.pas_member.info(item_creator);
+                                    name python:author['fullname'] or author['username']">
+                      <a tal:condition="author"
+                          tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                          tal:content="name">Jos Henken</a>
+                    </td>
+                  </tal:block>
+
+                </tr>
+              </tal:block>
             </tal:entries>
+          </tbody>
+        </table>
+      </div>
 
-                </tbody>
-            </table>
-          </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
 
     <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
+    <p class="discreet"
+    tal:condition="not: view/batch"
+    tal:content="view/no_items_message">
+    There are currently no items in this folder.
+    </p>
     </metal:empty>
 
-    </tal:results>
+  </tal:results>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt
index 009e8d9..ebd41fe 100644
--- a/plone/app/contenttypes/browser/templates/newsitem.pt
+++ b/plone/app/contenttypes/browser/templates/newsitem.pt
@@ -1,57 +1,49 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:head fill-slot="javascript_head_slot">
-<script type="text/javascript">
-  jQuery(function($){
-    $('.newsImageContainer a').prepOverlay({subtype: 'image'});
-  })
-</script>
+  <script type="text/javascript">
+    jQuery(function ($) {
+      $('.newsImageContainer a').prepOverlay({subtype: 'image'});
+    });
+  </script>
 </metal:head>
 
 <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core"
-          tal:define="templateId template/getId;
-                      scale_func context/@@images;
-                      scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
-
-        <figure class="newsImageContainer"
-             tal:condition="python: scaled_image">
-            <a href="#"
-               tal:define="here_url context/@@plone_context_state/object_url;
-                           large_image python: scale_func.scale('image', scale='large');"
-               tal:attributes="href large_image/url">
-              <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
-
-              <figcaption
-                 tal:condition="context/image_caption|nothing"
-                 tal:content="structure context/image_caption" >
-              </figcaption>
-
-            </a>
-        </figure>
-
-
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-             tal:content="structure context/text/output" />
-
-        <div class="newsFileContainer"
-             tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
-            <a tal:content="structure python:context.image_caption or context.image.filename"
-               tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
-            </a>
-        </div>
-
-    </metal:block>
+<metal:block define-macro="content-core"
+    tal:define="templateId template/getId;
+                scale_func context/@@images;
+                scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
+  <figure class="newsImageContainer" tal:condition="python: scaled_image">
+    <a tal:define="here_url context/@@plone_context_state/object_url;
+                   large_image python: scale_func.scale('image', scale='large');"
+        tal:attributes="href large_image/url">
+      <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
+      <figcaption tal:condition="context/image_caption|nothing"
+          tal:content="structure context/image_caption">
+      </figcaption>
+    </a>
+  </figure>
+
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure context/text/output" />
+
+  <div class="newsFileContainer"
+      tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
+    <a tal:content="structure python:context.image_caption or context.image.filename"
+        tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
+    </a>
+  </div>
+
+</metal:block>
 </metal:content-core>
 
 </body>
 </html>
-


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T15:58:53+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4f16676b3fd934060a1371769245c8d409af1c9e

use new view names in templates, tests and upgrades

Files changed:
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_migration.py
M plone/app/contenttypes/tests/test_migration_topic.py
M plone/app/contenttypes/upgrades.py

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index b24a503..26bb37a 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -240,7 +240,6 @@
       permission="zope2.View">
     <browser:page name="folder_listing" template="templates/listing.pt"/>
     <browser:page name="folder_full_view" template="templates/full_view.pt"/>
-    <browser:page name="full_view_item" template="templates/full_view_item.pt"/>
     <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
     <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
     <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
index e0adc9f..2366c33 100644
--- a/plone/app/contenttypes/browser/templates/full_view.pt
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -9,10 +9,10 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
-  <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
+  <metal:listing use-macro="context/@@listing_view/macros/content-core">
     <!-- we don't want the dl -->
     <metal:entries fill-slot="entries">
-      <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
+      <metal:block use-macro="context/@@listing_view/macros/entries">
         <metal:entry fill-slot="entry">
           <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
         </metal:entry>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index 41b6ce5..f02a961 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -8,10 +8,10 @@
 <body>
 
 <metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
+<metal:block use-macro="context/@@listing_view/macros/content-core">
 
   <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
+    <metal:block use-macro="context/@@listing_view/macros/entries">
       <metal:entry fill-slot="entry">
 
         <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
@@ -35,7 +35,7 @@
             </a>
           </h2>
 
-          <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
+          <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>
 
           <p class="tileBody" tal:condition="item_description">
             <span class="description" tal:content="item_description">
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index f25dbd5..93a7e84 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -505,7 +505,7 @@ class FolderMigrator(ATCTFolderMigrator):
 
     def beforeChange_migrate_layout(self):
         if self.old.getLayout() == 'atct_album_view':
-            self.old.setLayout('folder_album_view')
+            self.old.setLayout('album_view')
 
 
 def migrate_folders(portal):
diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index c710577..575fe5f 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -444,13 +444,13 @@ class TopicMigrator(InplaceCMFItemMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
@@ -556,13 +556,13 @@ class FolderishTopicMigrator(InplaceCMFFolderMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index 1e1e62b..0f93674 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -27,14 +27,14 @@
   </property>
 
   <!-- View information -->
-  <property name="default_view">standard_view</property>
+  <property name="default_view">listing_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
+    <element value="listing_view"/>
     <element value="summary_view"/>
-    <element value="full_view"/>
     <element value="tabular_view"/>
+    <element value="full_view"/>
     <element value="album_view"/>
-    <element value="listing_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index 8ad112d..0ca8284 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -12,13 +12,13 @@
  <property name="filter_content_types">False</property>
  <property name="allowed_content_types"/>
  <property name="allow_discussion">False</property>
- <property name="default_view">folder_listing</property>
+ <property name="default_view">listing_view</property>
  <property name="view_methods">
+  <element value="listing_view"/>
   <element value="summary_view"/>
-  <element value="full_view"/>
   <element value="tabular_view"/>
+  <element value="full_view"/>
   <element value="album_view"/>
-  <element value="listing_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 3919357..18223d8 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -15,23 +15,23 @@ Test Teardown  Close all browsers
 Scenario: Test listing views
     Given I am logged in as site owner
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_listing
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_summary_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/summary_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_tabular_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/tabular_view
     Then Listing should list contained content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/folder_full_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/full_view
     Then Listing should list contained content in detail
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
     Then Album should list contained images and albums
 
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/collection_view
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/listing_view
     Then Listing should list all content
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
@@ -40,7 +40,7 @@ Scenario: Test listing views
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
     Then Listing should list all content
 
-    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/all_content
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/full_view
     Then Listing should list all content in detail
 
     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 4b80a4b..66ae5c3 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,7 +72,8 @@ def _get_browser(self):
         )
         return browser
 
-    def test_collection_view(self):
+    def test_default_dexterity_view(self):
+        # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue(
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index 8e9a439..dca1157 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -145,33 +145,33 @@ def setUp(self):
         self.request.set('URL', self.collection.absolute_url())
         self.request.set('ACTUAL_URL', self.collection.absolute_url())
 
-    def test_view(self):
+    def test_collection_view(self):
         view = self.collection.restrictedTraverse('@@view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_standard_view(self):
-        view = self.collection.restrictedTraverse('standard_view')
+    def test_collection_listing_view(self):
+        view = self.collection.restrictedTraverse('listing_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_summary_view(self):
+    def test_collection_summary_view(self):
         view = self.collection.restrictedTraverse('summary_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_all_content(self):
-        view = self.collection.restrictedTraverse('all_content')
+    def test_collection_full_view(self):
+        view = self.collection.restrictedTraverse('full_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         view = self.collection.restrictedTraverse('tabular_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_thumbnail_view(self):
-        view = self.collection.restrictedTraverse('thumbnail_view')
+    def test_collection_album_view(self):
+        view = self.collection.restrictedTraverse('album_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
@@ -248,8 +248,8 @@ def test_collection_templates(self):
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
-        # open all_content template
-        browser.open('%s/@@all_content' % url)
+        # open full_view template
+        browser.open('%s/@@full_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -259,7 +259,7 @@ def test_collection_templates(self):
         self.assertTrue("Image example" in browser.contents)
 
         # open thumbnail_view template
-        browser.open('%s/@@thumbnail_view' % url)
+        browser.open('%s/@@album_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
diff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py
index aa8237f..272153e 100644
--- a/plone/app/contenttypes/tests/test_folder.py
+++ b/plone/app/contenttypes/tests/test_folder.py
@@ -131,21 +131,21 @@ def test_folder_view(self):
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_summary_view(self):
-        self.browser.open(self.folder_url + '/folder_summary_view')
+        self.browser.open(self.folder_url + '/summary_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_full_view(self):
-        self.browser.open(self.folder_url + '/folder_full_view')
+        self.browser.open(self.folder_url + '/full_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_tabular_view(self):
-        self.browser.open(self.folder_url + '/folder_tabular_view')
+        self.browser.open(self.folder_url + '/tabular_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_album_view(self):
-        self.browser.open(self.folder_url + '/folder_album_view')
+        self.browser.open(self.folder_url + '/album_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index 5afa65f..7ac2feb 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -924,7 +924,7 @@ def test_folder_is_migrated(self):
         dx_folder = self.portal['folder']
         self.assertTrue(IFolder.providedBy(dx_folder))
         self.assertTrue(at_folder is not dx_folder)
-        self.assertEqual(dx_folder.getLayout(), 'folder_album_view')
+        self.assertEqual(dx_folder.getLayout(), 'album_view')
 
     def test_folder_children_are_migrated(self):
         from plone.app.contenttypes.migration.migration import FolderMigrator
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 7789964..d2a3b8d 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -63,7 +63,7 @@ def test_migrate_simple_topic(self):
         self.run_migration()
         new = ICollection(self.portal.topic)
         self.assertEqual(self.portal.topic.portal_type, 'Collection')
-        self.assertEqual(self.portal.topic.getLayout(), 'standard_view')
+        self.assertEqual(self.portal.topic.getLayout(), 'listing_view')
         self.assertEqual(new.sort_on, None)
         self.assertEqual(new.sort_reversed, None)
         self.assertEqual(new.limit, 1000)
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 04a0efa..366c2d4 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -87,7 +87,7 @@ def migrate_to_richtext(context):
 
 
 def migrate_album_view(context):
-    """Migrate atct_album_view to folder_album_view."""
+    """Migrate atct_album_view to album_view."""
 
     # TODO: Don't reload the profile. Only change the settings.
     context.runImportStepFromProfile(
@@ -100,7 +100,7 @@ def migrate_album_view(context):
         obj = brain.getObject()
         current = context.getLayout()
         if current == 'atct_album_view':
-            obj.setLayout('folder_album_view')
+            obj.setLayout('album_view')
 
 
 # def enable_shortname_behavior(context):


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T16:00:44+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e254cfd8fbc89488e93dd6bbe1e334b2c27579a7

upgrade step

Conflicts:
	plone/app/contenttypes/upgrades.py
	plone/app/contenttypes/upgrades.zcml

Files changed:
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml

diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index 06eb2ab..f7bf387 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1103</version>
+ <version>1104</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 366c2d4..2559210 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -3,6 +3,8 @@
 # from plone.app.contenttypes.utils import DEFAULT_TYPES
 from plone.dexterity.interfaces import IDexterityFTI
 from zope.component import queryUtility
+import logging
+logger = logging.getLogger(name="plone.app.contenttypes upgrade")
 
 
 def update_fti(context):
@@ -121,3 +123,44 @@ def migrate_album_view(context):
 #         behaviors.append(behavior)
 #         behaviors = tuple(behaviors)
 #         fti._updateProperty('behaviors', behaviors)
+
+
+def use_new_view_names(context):
+    """Migrate old view names to new view names."""
+
+    # TODO: Don't reload the profile. Only change the settings.
+    context.runImportStepFromProfile(
+        'profile-plone.app.contenttypes:default',
+        'typeinfo',
+    )
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+
+    def _fixup(portal_type, view_map):
+        for brain in search(portal_type=portal_type):
+            obj = brain.getObject()
+            current = context.getLayout()
+            if current in view_map.keys():
+                obj.setLayout(view_map[current])
+                logger.info("Set view to {} for {}".format(
+                    view_map[current], obj.absolute_url()
+                ))
+
+    folder_view_map = {  # OLD : NEW
+        'folder_listing': 'listing_view',
+        'folder_full_view': 'full_view',
+        'folder_summary_view': 'summary_view',
+        'folder_tabular_view': 'tabular_view',
+        'folder_album_view': 'album_view',
+        'atct_album_view': 'album_view',
+    }
+    collection_view_map = {  # OLD : NEW
+        'view': 'listing_view',
+        'standard_view': 'listing_view',
+        'collection_view': 'listing_view',
+        'all_content': 'full_view',
+        'thumbnail_view': 'album_view',
+    }
+    _fixup('Folder', folder_view_map)
+    _fixup('Plone Site', folder_view_map)
+    _fixup('Collection', collection_view_map)
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index b8966bc..66a2f15 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -62,4 +62,14 @@
       handler=".upgrades.enable_shortname_behavior"
       />
  -->
+
+  <genericsetup:upgradeStep
+      source="1103"
+      destination="1104"
+      title="Use new view names"
+      description=""
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.use_new_view_names"
+      />
+
 </configure>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T16:00:54+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c2e4a900855579a6b702e7762e9959768b8bcfea

better-to-distinguish name for these tests

Files changed:
M plone/app/contenttypes/tests/test_behaviors_collection.py

diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 66ae5c3..ae6f601 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,14 +72,14 @@ def _get_browser(self):
         )
         return browser
 
-    def test_default_dexterity_view(self):
+    def test_collection_default_dexterity_view(self):
         # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue(
             'v:records" value="Collection Test Page"' in browser.contents)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/tabular_view')
         # search from here:


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T16:01:02+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/af9bf1bf1f13a834ab3db44382b956eb423e8ad6

views need the plone_view

Files changed:
M plone/app/contenttypes/browser/templates/full_view_item.pt

diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
index 0acb32f..f8407d7 100644
--- a/plone/app/contenttypes/browser/templates/full_view_item.pt
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -35,6 +35,7 @@
       <div tal:replace="structure provider:plone.abovecontentbody" />
 
       <div tal:define="view nocall:view/default_view;
+                       plone_view context/@@plone;
                        portal_state context/@@plone_portal_state;
                        context_state context/@@plone_context_state;
                        plone_layout context/@@plone_layout;


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-26T16:09:03+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/bbcf7575d936d3f6b26872e91ff3f5984ad1ed18

old view titles

Files changed:
M plone/app/contenttypes/browser/configure.zcml

diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 26bb37a..7794eb5 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -23,19 +23,19 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
         name="tabular_view"
         template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="Tabular view"
         />
     <browser:page
         name="full_view"
@@ -47,7 +47,7 @@
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 
@@ -62,19 +62,19 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
         name="tabular_view"
         template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="Tabular view"
         />
     <browser:page
         name="full_view"
@@ -86,7 +86,7 @@
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 
@@ -114,31 +114,31 @@
         name="listing_view"
         template="templates/listing.pt"
         menu="plone_displayviews"
-        title="Listing"
+        title="Standard view"
         />
     <browser:page
         name="summary_view"
         template="templates/listing_summary.pt"
         menu="plone_displayviews"
-        title="Summary"
+        title="Summary view"
         />
     <browser:page
-        name="full_view"
-        template="templates/full_view.pt"
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
         menu="plone_displayviews"
-        title="All content"
+        title="Tabular view"
         />
     <browser:page
-        name="tabular_view"
-        template="templates/listing_tabular.pt"
+        name="full_view"
+        template="templates/full_view.pt"
         menu="plone_displayviews"
-        title="Tabular"
+        title="All content"
         />
     <browser:page
         name="album_view"
         template="templates/listing_album.pt"
         menu="plone_displayviews"
-        title="Album"
+        title="Album view"
         />
   </browser:pages>
 


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-27T04:36:04+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/25c3d3a4971177cec51c2e02cd1ae5617f39e838

exclude random image in photoAlbumFolder from robot-test

Files changed:
M plone/app/contenttypes/tests/robot/test_folderlisting.robot

diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index 18223d8..c15fed7 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -159,17 +159,17 @@ Album should list all images and albums
   Page Should Contain  Test Image
   Xpath Should Match X Times  //img[@title="Test Image"]  2
   Page Should Contain  Test Album Image 1
-  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1
   Page Should Contain  Test Album Image 2
-  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 2"]  1
   Page Should Contain  Test Album Image 3
-  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 3"]  1
   Page Should Contain  Test Sub Album Image 1
-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 1"]  1
   Page Should Contain  Test Sub Album Image 2
-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 2"]  1
   Page Should Contain  Test Sub Album Image 3
-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1
   Page Should Contain  Test Album
   Page Should Contain  Test Sub Album
 


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-27T04:36:12+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0803f88b509ff5931e934ad32d9ecd71e032c0a0

add Plone Site and configure new view names for it

Files changed:
A plone/app/contenttypes/profiles/default/types/Plone_Site.xml
A plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
M plone/app/contenttypes/profiles/default/types.xml
M plone/app/contenttypes/profiles/uninstall/types.xml

diff --git a/plone/app/contenttypes/profiles/default/types.xml b/plone/app/contenttypes/profiles/default/types.xml
index ac9b7eb..4e13ba7 100644
--- a/plone/app/contenttypes/profiles/default/types.xml
+++ b/plone/app/contenttypes/profiles/default/types.xml
@@ -22,5 +22,8 @@
  <object meta_type="Dexterity FTI" name="Image" />
  <object meta_type="Dexterity FTI" name="News Item" />
  <object meta_type="Dexterity FTI" name="Event" />
+ 
+ <object name="Plone Site"
+    meta_type="Factory-based Type Information with dynamic views"/>
 
 </object>
diff --git a/plone/app/contenttypes/profiles/default/types/Plone_Site.xml b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml
new file mode 100644
index 0000000..bd03b87
--- /dev/null
+++ b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0"?>
+<object name="Plone Site" meta_type="Factory-based Type Information with dynamic views" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+  <property name="immediate_view">listing_view</property>
+  <property name="default_view">listing_view</property>
+  <property name="view_methods">
+    <element value="listing_view" />
+    <element value="summary_view" />
+    <element value="tabular_view" />
+    <element value="full_view" />
+    <element value="album_view" />
+    <element value="event_listing" />
+  </property>
+</object>
diff --git a/plone/app/contenttypes/profiles/uninstall/types.xml b/plone/app/contenttypes/profiles/uninstall/types.xml
index fcd0b15..fca8606 100644
--- a/plone/app/contenttypes/profiles/uninstall/types.xml
+++ b/plone/app/contenttypes/profiles/uninstall/types.xml
@@ -24,4 +24,8 @@
     meta_type="Factory-based Type Information with dynamic views"/>
  <object name="News Item"
     meta_type="Factory-based Type Information with dynamic views"/>
+
+ <object name="Plone Site"
+    meta_type="Factory-based Type Information with dynamic views"/>
+
 </object>
diff --git a/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml b/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
new file mode 100644
index 0000000..316c0c5
--- /dev/null
+++ b/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+<object name="Plone Site" meta_type="Factory-based Type Information with dynamic views" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+  <property name="immediate_view">folder_listing</property>
+  <property name="default_view">folder_listing</property>
+  <property name="view_methods">
+    <element value="folder_listing" />
+    <element value="folder_summary_view" />
+    <element value="folder_full_view" />
+    <element value="folder_tabular_view" />
+    <element value="atct_album_view" />
+  </property>
+</object>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-02-27T04:36:21+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b85eb2f7114121ba1364cdab2021f45c876fdcd4

When installing the default profile, restrict uninstalling of old types to old FTI based ones.

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/profiles/default/types.xml

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 391a707..ab65c5c 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- When installing the default profile, restrict uninstalling of old types to
+  old FTI based ones.
+  [thet]
+
 - Reformatted all templates for 2 space indentation, 4 space for attributes.
   [thet]
 
diff --git a/plone/app/contenttypes/profiles/default/types.xml b/plone/app/contenttypes/profiles/default/types.xml
index 4e13ba7..30011bd 100644
--- a/plone/app/contenttypes/profiles/default/types.xml
+++ b/plone/app/contenttypes/profiles/default/types.xml
@@ -4,15 +4,24 @@
  <!-- We remove old ATContentTypes if they exist.
       Instances of these types can still be looked at since the
       skin-templates in CMFPlone are there but they cannot be edited -->
- <object name="Collection" remove="True"/>
- <object name="Document" remove="True"/>
- <object name="Event" remove="True"/>
- <object name="File" remove="True"/>
- <object name="Folder" remove="True"/>
- <object name="Image" remove="True"/>
- <object name="Link" remove="True"/>
- <object name="News Item" remove="True"/>
- <object name="Topic" remove="True"/>
+ <object name="Collection" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Document" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Event" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="File" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Folder" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Image" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Link" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="News Item" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Topic" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
 
  <object meta_type="Dexterity FTI" name="Collection" />
  <object meta_type="Dexterity FTI" name="Document" />


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-05T00:53:09+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/cf91ef12fecfdcc65c2031181b8d17f0f838967e

For the link_redirect_view, don't modify the urls for mailto:, tel:, callto: and file: link types but render them as-is.

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/tests/test_link.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index ab65c5c..8507f91 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- For the link_redirect_view, don't modify the urls for ``mailto:``, ``tel:``,
+  ``callto:`` and ``file:`` link types but render them as-is.
+  [thet]
+
 - When installing the default profile, restrict uninstalling of old types to
   old FTI based ones.
   [thet]
diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py
index 4e4a45d..0bd5ae8 100644
--- a/plone/app/contenttypes/browser/link_redirect_view.py
+++ b/plone/app/contenttypes/browser/link_redirect_view.py
@@ -32,7 +32,8 @@ def __call__(self):
 
     def absolute_target_url(self):
         """Compute the absolute target URL."""
-        if self.context.remoteUrl.startswith('.'):
+        url = self.context.remoteUrl
+        if url.startswith('.'):
             # we just need to adapt ../relative/links, /absolute/ones work
             # anyway -> this requires relative links to start with ./ or
             # ../
@@ -41,13 +42,17 @@ def absolute_target_url(self):
             )
             url = '/'.join([
                 context_state.canonical_object_url(),
-                self.context.remoteUrl
+                url
             ])
+        elif url.startswith('mailto:')\
+                or url.startswith('tel:')\
+                or url.startswith('callto:')\
+                or url.startswith('file:')\
+                or url.startswith('#'):
+            # Do nothing for html/html5 links
+            pass
         else:
-            url = replace_link_variables_by_paths(
-                self.context,
-                self.context.remoteUrl
-            )
+            url = replace_link_variables_by_paths(self.context, url)
             if not (url.startswith('http://') or url.startswith('https://')):
                 url = self.request.physicalPathToURL(url)
 
diff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py
index e22f3e5..f2ce7a3 100644
--- a/plone/app/contenttypes/tests/test_link.py
+++ b/plone/app/contenttypes/tests/test_link.py
@@ -162,6 +162,30 @@ def test_link_redirect_view_path_with_variable(self):
         self.assertTrue(view())
         self._assert_redirect('http://nohost/plone/my-folder/my-item')
 
+    def test_mailto_type(self):
+        self.link.remoteUrl = 'mailto:stress@test.us'
+        view = self._get_link_redirect_view(self.link)
+        rendered = view()
+        self.assertTrue('href="mailto:stress@test.us"' in rendered)
+
+    def test_tel_type(self):
+        self.link.remoteUrl = 'tel:123'
+        view = self._get_link_redirect_view(self.link)
+        rendered = view()
+        self.assertTrue('href="tel:123"' in rendered)
+
+    def test_callto_type(self):
+        self.link.remoteUrl = 'callto:123'
+        view = self._get_link_redirect_view(self.link)
+        rendered = view()
+        self.assertTrue('href="callto:123"' in rendered)
+
+    def test_file_type(self):
+        self.link.remoteUrl = 'file:///tmp'
+        view = self._get_link_redirect_view(self.link)
+        rendered = view()
+        self.assertTrue('href="file:///tmp"' in rendered)
+
     def _publish(self, obj):
         portal_workflow = getToolByName(self.portal, "portal_workflow")
         portal_workflow.doActionFor(obj, 'publish')


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-05T11:03:15+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/56130435f608f0d9a19774e4f6fa22ea7e8cc225

Improve handling of Link types with other URL schemes than http:// and https://.

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/tests/test_link.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 8507f91..f7d9cb5 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,8 +4,8 @@ Changelog
 1.2 (unreleased)
 ----------------
 
-- For the link_redirect_view, don't modify the urls for ``mailto:``, ``tel:``,
-  ``callto:`` and ``file:`` link types but render them as-is.
+- Improve handling of Link types with other URL schemes than ``http://`` and
+  ``https://``.
   [thet]
 
 - When installing the default profile, restrict uninstalling of old types to
diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py
index 0bd5ae8..adb74a1 100644
--- a/plone/app/contenttypes/browser/link_redirect_view.py
+++ b/plone/app/contenttypes/browser/link_redirect_view.py
@@ -5,14 +5,38 @@
 from plone.app.contenttypes.utils import replace_link_variables_by_paths
 
 
+# links starting with these URL scheme should not be redirected to
+NON_REDIRECTABLE_URL_SCHEMES = [
+    'mailto:',
+    'tel:',
+    'callto:',
+    'webdav:',
+    'caldav:'
+]
+
+# links starting with these URL scheme should not be resolved to paths
+NON_RESOLVABLE_URL_SCHEMES = NON_REDIRECTABLE_URL_SCHEMES + [
+    'file:',
+    'ftp:',
+]
+
+
 class LinkRedirectView(BrowserView):
 
     index = ViewPageTemplateFile('templates/link.pt')
 
+    def _url_uses_scheme(self, schemes, url=None):
+        url = url or self.context.remoteUrl
+        for scheme in schemes:
+            if url.startswith(scheme):
+                return True
+        return False
+
     def __call__(self):
         """Redirect to the Link target URL, if and only if:
          - redirect_links property is enabled in
            portal_properties/site_properties
+         - the link is of a redirectable type (no mailto:, etc)
          - AND current user doesn't have permission to edit the Link"""
         context = self.context
         ptool = getToolByName(context, 'portal_properties')
@@ -24,6 +48,8 @@ def __call__(self):
             False
         )
         can_edit = mtool.checkPermission('Modify portal content', context)
+        redirect_links = redirect_links\
+            and not self._url_uses_scheme(NON_REDIRECTABLE_URL_SCHEMES)
 
         if redirect_links and not can_edit:
             return self.request.RESPONSE.redirect(self.absolute_target_url())
@@ -33,6 +59,11 @@ def __call__(self):
     def absolute_target_url(self):
         """Compute the absolute target URL."""
         url = self.context.remoteUrl
+
+        if self._url_uses_scheme(NON_RESOLVABLE_URL_SCHEMES):
+            # For non http/https url schemes, there is no path to resolve.
+            return url
+
         if url.startswith('.'):
             # we just need to adapt ../relative/links, /absolute/ones work
             # anyway -> this requires relative links to start with ./ or
@@ -44,13 +75,6 @@ def absolute_target_url(self):
                 context_state.canonical_object_url(),
                 url
             ])
-        elif url.startswith('mailto:')\
-                or url.startswith('tel:')\
-                or url.startswith('callto:')\
-                or url.startswith('file:')\
-                or url.startswith('#'):
-            # Do nothing for html/html5 links
-            pass
         else:
             url = replace_link_variables_by_paths(self.context, url)
             if not (url.startswith('http://') or url.startswith('https://')):
diff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py
index f2ce7a3..4cb837e 100644
--- a/plone/app/contenttypes/tests/test_link.py
+++ b/plone/app/contenttypes/tests/test_link.py
@@ -1,31 +1,23 @@
 # -*- coding: utf-8 -*-
-import unittest2 as unittest
-
 from Products.CMFCore.utils import getToolByName
-
-from zope.interface import alsoProvides
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.component import getMultiAdapter
-from zope.event import notify
-from zope.traversing.interfaces import BeforeTraverseEvent
-
-from plone.dexterity.interfaces import IDexterityFTI
-
+from datetime import datetime
+from plone.app.contenttypes.interfaces import ILink
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
-from plone.app.testing import logout
-from plone.testing.z2 import Browser
-
-from plone.app.contenttypes.interfaces import ILink
-
-from plone.app.contenttypes.testing import (
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-)
-
 from plone.app.testing import TEST_USER_ID, setRoles
+from plone.app.testing import logout
 from plone.app.z3cform.interfaces import IPloneFormLayer
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from zope.component import createObject
+from zope.component import getMultiAdapter
+from zope.component import queryUtility
+from zope.event import notify
+from zope.interface import alsoProvides
+from zope.traversing.interfaces import BeforeTraverseEvent
+import unittest2 as unittest
 
 
 class LinkIntegrationTest(unittest.TestCase):
@@ -165,26 +157,65 @@ def test_link_redirect_view_path_with_variable(self):
     def test_mailto_type(self):
         self.link.remoteUrl = 'mailto:stress@test.us'
         view = self._get_link_redirect_view(self.link)
+
+        logout()
         rendered = view()
         self.assertTrue('href="mailto:stress@test.us"' in rendered)
+        self._assert_response_OK()
 
     def test_tel_type(self):
         self.link.remoteUrl = 'tel:123'
         view = self._get_link_redirect_view(self.link)
+
+        logout()
         rendered = view()
         self.assertTrue('href="tel:123"' in rendered)
+        self._assert_response_OK()
 
     def test_callto_type(self):
         self.link.remoteUrl = 'callto:123'
         view = self._get_link_redirect_view(self.link)
+
+        logout()
         rendered = view()
         self.assertTrue('href="callto:123"' in rendered)
+        self._assert_response_OK()
 
-    def test_file_type(self):
-        self.link.remoteUrl = 'file:///tmp'
+    def test_webdav_type(self):
+        self.link.remoteUrl = 'webdav://web.site/resource'
         view = self._get_link_redirect_view(self.link)
+
+        logout()
+        rendered = view()
+        self.assertTrue('href="webdav://web.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_caldav_type(self):
+        self.link.remoteUrl = 'caldav://calendar.site/resource'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
         rendered = view()
-        self.assertTrue('href="file:///tmp"' in rendered)
+        self.assertTrue('href="caldav://calendar.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_file_type(self):
+        self.link.remoteUrl = 'file:///some/file/on/your/system'
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
+
+    def test_ftp_type(self):
+        self.link.remoteUrl = 'ftp://thereIsNoSuchDomain.isThere{0}'.format(
+            datetime.now().isoformat()
+        )
+        view = self._get_link_redirect_view(self.link)
+
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
 
     def _publish(self, obj):
         portal_workflow = getToolByName(self.portal, "portal_workflow")
@@ -194,6 +225,9 @@ def _assert_redirect(self, url):
         self.assertEqual(self.response.status, 302)
         self.assertEqual(self.response.headers['location'], url)
 
+    def _assert_response_OK(self):
+        self.assertEqual(self.response.status, 200)
+
     def _get_link_redirect_view(self, obj):
         return getMultiAdapter((obj, self.request), name='link_redirect_view')
 


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-08T01:18:56+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d19b9a652147282d2ab187b16818064c2327e86c

optimize album_view for better performance

Files changed:
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/listing_album.pt

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index 23953c0..dffd130 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -5,6 +5,8 @@
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
 from plone.app.contenttypes import _
+from plone.memoize.view import memoize
+import random
 
 
 class CollectionView(FolderView):
@@ -35,8 +37,9 @@ def results(self, **kwargs):
 
         return self.collection_behavior.results(**kwargs)
 
+    @memoize
     @property
-    def album_results(self):
+    def _album_results(self):
         """Get results to display an album with subalbums.
         """
         results = self.results()
@@ -51,6 +54,18 @@ def album_results(self):
                 folders.append(it)
         return {'images': images, 'folders': folders}
 
+    @property
+    def album_images(self):
+        """Get all images within this collection.
+        """
+        return self._album_results['images']
+
+    @property
+    def album_folders(self):
+        """Get all folders within this collection.
+        """
+        return self._album_results['folders']
+
     def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 72d8e72..8fcf386 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -7,10 +7,12 @@
 from plone.app.contenttypes.interfaces import IFolder
 from plone.app.contenttypes.interfaces import IImage
 from plone.event.interfaces import IEvent
+from plone.memoize.view import memoize
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.contentprovider.interfaces import IContentProvider
+import random
 
 HAS_SECURITY_SETTINGS = True
 try:
@@ -161,18 +163,43 @@ def formatted_date(self, item):
         return provider(item)
 
     @property
-    def album_results(self):
-        """Get results to display an album with subalbums.
+    @memoize
+    def album_images(self):
+        """Get all images within this folder.
         """
         images = self.results(
             batch=False,
             object_provides=IImage.__identifier__
         )
-        folders = self.results(
+        return images
+
+    @property
+    @memoize
+    def album_folders(self):
+        """Get all folders within this folder.
+        """
+        images = self.results(
             batch=False,
             object_provides=IFolder.__identifier__
         )
-        return {'images': images, 'folders': folders}
+        return images
+
+    @property
+    def album_random_image(self):
+        """Get random image from this folder.
+        """
+        img = None
+        images = self.album_images
+        if images:
+            img = random.choice(images)
+        return img
+
+    @property
+    def album_number_images(self):
+        """Get number of images from this folder.
+        """
+        images = self.album_images
+        return len(images)
 
     @property
     def no_items_message(self):
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
index ab9c319..61f46e6 100644
--- a/plone/app/contenttypes/browser/templates/listing_album.pt
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -9,9 +9,8 @@
 
 <metal:content-core fill-slot="content-core">
 <metal:main_macro define-macro="content-core"
-    tal:define="result view/album_results;
-                images result/images;
-                albums result/folders">
+    tal:define="images view/album_images;
+                albums view/album_folders">
 
   <div metal:define-macro="text-field-view"
       id="parent-fieldname-text" class="stx"
@@ -42,25 +41,21 @@
 
   <tal:albums tal:repeat="album albums">
     <div class="photoAlbumEntry photoAlbumFolder"
-        tal:define="ob album/getObject;
-                    subalbum_view nocall:ob/@@album_view;
-                    subalbum_results subalbum_view/album_results;
-                    subalbum_images subalbum_results/images;
-                    number_of_images python:len(subalbum_images);
-                    random python:modules['random'];
-                    random_image python:number_of_images and random.choice(subalbum_images).getObject() or None">
+        tal:define="album_ob album/getObject;
+                    subalbum_view nocall:album_ob/@@album_view;
+                    random_image subalbum_view/album_random_image;
+                    number_images subalbum_view/album_number_images"
+        tal:condition="random_image">
       <a tal:attributes="href album/getURL;
                          title album/Description">
         <span class="photoAlbumEntryWrapper">
-          <tal:block condition="number_of_images">
-            <img tal:define="scale random_image/@@images;
-                             img_tag python:scale.scale('image', scale='thumb').tag()"
-                 tal:replace="structure img_tag" />
-          </tal:block>
+          <img tal:define="random_img_ob random_image/getObject;
+                           scales random_img_ob/@@images"
+               tal:replace="structure python:scales.tag(fieldname='image', scale='thumb')" />
         </span>
         <span class="photoAlbumEntryTitle">
           <tal:title content="album/Title">Title</tal:title>
-          (<tal:number content="number_of_images" />)
+          (<tal:number content="number_images" />)
         </span>
       </a>
     </div>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-08T02:16:21+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/dcea9883bfd94be54483d75b56809129cf73900f

bugfix

Files changed:
M plone/app/contenttypes/browser/collection.py

diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index dffd130..e49eefe 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -37,8 +37,8 @@ def results(self, **kwargs):
 
         return self.collection_behavior.results(**kwargs)
 
-    @memoize
     @property
+    @memoize
     def _album_results(self):
         """Get results to display an album with subalbums.
         """


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-11T03:32:48+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e831bcc1fb4540d37c1189b71497ca33890b3d21

Don't try to show IContentLeadImage images, if theree none. Use the 'mini' scale as default scale for IContentLeadImage

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/leadimage.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index f7d9cb5..dd901f8 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Don't try to show IContentLeadImage images, if theree none. Use the "mini"
+  scale as default scale for IContentLeadImage.
+  [thet]
+
 - Improve handling of Link types with other URL schemes than ``http://`` and
   ``https://``.
   [thet]
diff --git a/plone/app/contenttypes/behaviors/leadimage.pt b/plone/app/contenttypes/behaviors/leadimage.pt
index 5e3b3ca..1c50f80 100644
--- a/plone/app/contenttypes/behaviors/leadimage.pt
+++ b/plone/app/contenttypes/behaviors/leadimage.pt
@@ -1,5 +1,6 @@
-<div class="leadImage"
-     tal:condition="view/available">
-  <img tal:define="scale context/@@images"
-       tal:replace="structure python: scale.scale('image', width=200, height=200).tag(css_class='newsImage')" />
-</div>
\ No newline at end of file
+<div class="leadImage" tal:condition="view/available">
+  <img tal:define="has_img context/image|nothing;
+                   scales context/@@images|nothing"
+       tal:condition="python:has_img and scales" 
+       tal:replace="structure python: scales.scale('image', scale='mini').tag(css_class='newsImage')" />
+</div>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-13T09:53:21+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/75a6f3affaff69e20e087be39c8a5b0a1fa0f412

In the listing view, don't repeat on the article tag, which makes it impossible to override this structure. Instead, repeat on a unrendered tal tag and move the article tag within.

Files changed:
M docs/CHANGES.rst
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index dd901f8..f331b83 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,11 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- In the listing view, don't repeat on the ``article`` tag, which makes it
+  impossible to override this structure. Instead, repeat on a unrendered
+  ``tal`` tag and move the article tag within.
+  [thet]
+
 - Don't try to show IContentLeadImage images, if theree none. Use the "mini"
   scale as default scale for IContentLeadImage.
   [thet]
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 8fcf386..2de8505 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -152,7 +152,15 @@ def tabular_fielddata(self, item, fieldname):
             'value': value
         }
 
+    def has_image(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
+        img = getattr(aq_base(obj), 'image', None)
+        return True if img else False
+
     def is_event(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
         return IEvent.providedBy(obj)
 
     def formatted_date(self, item):
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index 5ec5a92..b21f554 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -21,8 +21,8 @@
   <metal:listingmacro define-macro="listing">
     <tal:results define="batch view/batch">
       <tal:listing condition="batch">
-        <div metal:define-slot="entries">
-          <article tal:repeat="item batch" metal:define-macro="entries">
+        <div class="entries" metal:define-slot="entries">
+          <tal:repeat repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="obj item/getObject;
                 item_url item/getURL;
                 item_id item/getId;
@@ -36,71 +36,74 @@
                 item_wf_state item/review_state;
                 item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
                 item_creator item/Creator;
-                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url;
+                item_has_image python:view.has_image(obj);
+                item_is_event python:view.is_event(obj)">
               <metal:block define-slot="entry">
-                <header metal:define-macro="listitem" tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-                  <span class="summary">
-                    <a tal:attributes="href item_link;
-                                       class string:$item_type_class $item_wf_state_class url;
-                                       title item_type"
-                        tal:content="item_title">
-                      Item Title
-                    </a>
-                  </span>
-
-                  <metal:block metal:define-macro="document_byline">
-                    <span class="documentByLine">
-                      <tal:event condition="python:view.is_event(obj)">
-                        <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
-                        <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
-                          <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
-                        </span>
-                      </tal:event>
-                      <tal:byline condition="view/show_about">
-                        &mdash;
-                        <tal:name tal:condition="item_creator"
-                            tal:define="author python:view.pas_member.info(item_creator);
-                                        creator_short_form author/username;
-                                        creator_long_form string:?author=${author/username};
-                                        creator_is_openid python:'/' in creator_short_form;
-                                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                        <span i18n:translate="label_by_author">
-                          by
-                          <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                              tal:content="author/name_or_id"
-                              tal:omit-tag="not:author"
-                              i18n:name="author">
-                            Bob Dobalina
-                          </a>
-                        </span>
-                        </tal:name>
+                <article class="entry">
+                  <header metal:define-macro="listitem" tal:attributes="class python:'vevent' if item_is_event else None">
+                    <span class="summary">
+                      <a tal:attributes="href item_link;
+                                         class string:$item_type_class $item_wf_state_class url;
+                                         title item_type"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </span>
 
-                        <tal:modified condition="python: item_type != 'Event'">
+                    <metal:block metal:define-macro="document_byline">
+                      <span class="documentByLine">
+                        <tal:event condition="item_is_event">
+                          <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                          <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                            <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                          </span>
+                        </tal:event>
+                        <tal:byline condition="view/show_about">
                           &mdash;
-                          <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
-                          <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                            August 16, 2001 at 23:35:59
+                          <tal:name tal:condition="item_creator"
+                              tal:define="author python:view.pas_member.info(item_creator);
+                                          creator_short_form author/username;
+                                          creator_long_form string:?author=${author/username};
+                                          creator_is_openid python:'/' in creator_short_form;
+                                          creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                          <span i18n:translate="label_by_author">
+                            by
+                            <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                                tal:content="author/name_or_id"
+                                tal:omit-tag="not:author"
+                                i18n:name="author">
+                              Bob Dobalina
+                            </a>
                           </span>
-                        </tal:modified>
+                          </tal:name>
 
-                        <metal:description define-slot="description_slot">
-                          <tal:comment replace="nothing">
-                            Place custom listing info for custom types here
-                          </tal:comment>
-                        </metal:description>
-                      </tal:byline>
-                    </span>
-                  </metal:block>
-                </header>
+                          <tal:modified condition="python: item_type != 'Event'">
+                            &mdash;
+                            <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                            <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                              August 16, 2001 at 23:35:59
+                            </span>
+                          </tal:modified>
 
-                <p class="description discreet"
-                    tal:condition="item_description"
-                    tal:content="item_description">
-                  description
-                </p>
+                          <metal:description define-slot="description_slot">
+                            <tal:comment replace="nothing">
+                              Place custom listing info for custom types here
+                            </tal:comment>
+                          </metal:description>
+                        </tal:byline>
+                      </span>
+                    </metal:block>
+                  </header>
+                  <p class="description discreet"
+                      tal:condition="item_description"
+                      tal:content="item_description">
+                    description
+                  </p>
+                </article>
               </metal:block>
             </tal:block>
-          </article>
+          </tal:repeat>
         </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index f02a961..a4455e4 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -14,17 +14,15 @@
     <metal:block use-macro="context/@@listing_view/macros/entries">
       <metal:entry fill-slot="entry">
 
-        <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+        <article class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
 
-          <a tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-              tal:attributes="href item_link">
-            <div class="tileImage">
-              <img src="" alt=""
-                  tal:define="scales obj/@@images;
-                              scale python:scales.scale('image', 'thumb')"
+          <div class="tileImage" tal:condition="item_has_image">
+            <a tal:attributes="href item_link">
+              <img tal:define="scales obj/@@images;
+                               scale python:scales.scale('image', 'thumb')"
                   tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-            </div>
-          </a>
+            </a>
+          </div>
 
           <h2 class="tileHeadline" metal:define-macro="listitem">
             <a class="summary url"
@@ -52,7 +50,7 @@
 
           <div class="visualClear"><!-- --></div>
 
-        </div>
+        </article>
 
       </metal:entry>
     </metal:block>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-29T22:48:23+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/635569ec0e9038ba2d276a7209b5b358ea8c4845

ReSt fix.

Files changed:
M setup.py

diff --git a/setup.py b/setup.py
index 1ab7152..b796c9a 100644
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ def read(*rnames):
     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()
 
 long_description = \
-    read('docs', 'README.rst') + \
+    read('docs', 'README.rst') + '\n\n' + \
     read('docs', 'CHANGES.rst')
 
 setup(name='plone.app.contenttypes',


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-29T22:49:07+02:00
Author: Fulvio Casali (fulv) <fulviocasali@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/177c789dcf42f87ee41ed3b27142d0b00cc81449

Update image_view_fullscreen.pt for mobile friendliness

see https://github.com/plone/Products.CMFPlone/pull/407

Google complains loudly about this template, and will deduct mobile karma points.

Also, using a different `viewport` meta directive than sunburst's default, for better accessibility.
See: https://github.com/plone/Products.CMFPlone/issues/389

Files changed:
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt

diff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
index dec7933..2b796fd 100644
--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
@@ -7,6 +7,7 @@
     i18n:domain="plone">
 <head>
   <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
+  <meta name="viewport" content="width=device-width, initial-scale=1">
   <title tal:content="context/Title">Title</title>
   <style type="text/css" media="screen">
     body {
@@ -17,6 +18,11 @@
       padding:0;
       margin:0;
     }
+    @media screen and (max-width: 768px) {
+        body {
+          font-size: 100%;
+        }
+    }
     a {
       color: #08c;
       text-decoration: none;
@@ -32,6 +38,7 @@
       border: 0;
       display:block;
       margin:0 auto;
+      max-width: 100%; height: auto;
     }
   </style>
 </head>


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-03-29T22:50:45+02:00
Author: Fulvio Casali (fulv) <fulviocasali@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1378ad37c828156b7ae3364421782d935a1e46be

Add changelog entry
Conflicts:
	docs/CHANGES.rst

Files changed:
M docs/CHANGES.rst

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index f331b83..c14738d 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Update image_view_fullscreen.pt for mobile friendliness.
+  [fulv]
+
 - In the listing view, don't repeat on the ``article`` tag, which makes it
   impossible to override this structure. Instead, repeat on a unrendered
   ``tal`` tag and move the article tag within.


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-04-07T10:33:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/73a21842b1683ca48cc3698a2551ed04da0ff3e6

fix test by publishing links before accessing as anonymous

Files changed:
M plone/app/contenttypes/tests/test_link.py

diff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py
index 4cb837e..71c4563 100644
--- a/plone/app/contenttypes/tests/test_link.py
+++ b/plone/app/contenttypes/tests/test_link.py
@@ -157,7 +157,7 @@ def test_link_redirect_view_path_with_variable(self):
     def test_mailto_type(self):
         self.link.remoteUrl = 'mailto:stress@test.us'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         rendered = view()
         self.assertTrue('href="mailto:stress@test.us"' in rendered)
@@ -166,7 +166,7 @@ def test_mailto_type(self):
     def test_tel_type(self):
         self.link.remoteUrl = 'tel:123'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         rendered = view()
         self.assertTrue('href="tel:123"' in rendered)
@@ -175,7 +175,7 @@ def test_tel_type(self):
     def test_callto_type(self):
         self.link.remoteUrl = 'callto:123'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         rendered = view()
         self.assertTrue('href="callto:123"' in rendered)
@@ -184,7 +184,7 @@ def test_callto_type(self):
     def test_webdav_type(self):
         self.link.remoteUrl = 'webdav://web.site/resource'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         rendered = view()
         self.assertTrue('href="webdav://web.site/resource"' in rendered)
@@ -193,7 +193,7 @@ def test_webdav_type(self):
     def test_caldav_type(self):
         self.link.remoteUrl = 'caldav://calendar.site/resource'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         rendered = view()
         self.assertTrue('href="caldav://calendar.site/resource"' in rendered)
@@ -202,7 +202,7 @@ def test_caldav_type(self):
     def test_file_type(self):
         self.link.remoteUrl = 'file:///some/file/on/your/system'
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         self.assertTrue(view())
         self._assert_redirect(self.link.remoteUrl)
@@ -212,7 +212,7 @@ def test_ftp_type(self):
             datetime.now().isoformat()
         )
         view = self._get_link_redirect_view(self.link)
-
+        self._publish(self.link)
         logout()
         self.assertTrue(view())
         self._assert_redirect(self.link.remoteUrl)


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-04-07T15:03:51+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/27442233d20dc1a1b4f6c87e1380d2b15d0d5e39

fix test of album_view (was testing if doc1 appeared in navigation-portlet)

Files changed:
M plone/app/contenttypes/tests/test_folder.py

diff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py
index 272153e..fcb0522 100644
--- a/plone/app/contenttypes/tests/test_folder.py
+++ b/plone/app/contenttypes/tests/test_folder.py
@@ -16,6 +16,7 @@
     PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,
     PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
 )
+from plone.app.contenttypes.tests.test_image import dummy_image
 
 from plone.app.testing import TEST_USER_ID, setRoles
 
@@ -146,6 +147,13 @@ def test_folder_tabular_view(self):
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_album_view(self):
+        self.folder.invokeFactory('Image', id='image1', title='Image 1')
+        img1 = self.folder['image1']
+        img1.image = dummy_image()
+        import transaction
+        transaction.commit()
         self.browser.open(self.folder_url + '/album_view')
         self.assertTrue('My Folder' in self.browser.contents)
-        self.assertTrue('Document 1' in self.browser.contents)
+        self.assertIn(
+            '<img src="http://nohost/plone/folder/image1/@@images',
+            self.browser.contents)


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-04-07T15:27:27+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0d785c12d94b502fef32d2848b72bf14a470cf41

Merge branch '1.1.x' into 1.1.x-thet-unifiedlistings

Files changed:




Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-04-07T15:30:01+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2fbf180997c81b366b4c367213a47b81f4e6bb09

fix flake8

Files changed:
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py

diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 52d897e..f900b97 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -4,7 +4,6 @@
     as BaseCollectionFeed
 from Products.CMFPlone.interfaces.syndication import IFeed
 from Products.CMFPlone.interfaces.syndication import ISyndicatable
-from plone.app.contentlisting.interfaces import IContentListing
 from plone.app.contenttypes import _
 from plone.autoform.interfaces import IFormFieldProvider
 from plone.dexterity.interfaces import IDexterityContent
@@ -13,8 +12,8 @@
 from zope.component import adapter
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import provider
 from zope.interface import implementer
+from zope.interface import provider
 from zope.schema.interfaces import IVocabularyFactory
 from zope.schema.vocabulary import SimpleTerm
 from zope.schema.vocabulary import SimpleVocabulary
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index e49eefe..bfafca0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,12 +1,11 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from plone.app.contenttypes.interfaces import IFolder
-from plone.app.contenttypes.interfaces import IImage
+from plone.app.contenttypes import _
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
-from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.memoize.view import memoize
-import random
 
 
 class CollectionView(FolderView):


Repository: plone.app.contenttypes
Branch: refs/heads/1.1.x
Date: 2015-04-07T15:46:11+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/80e7237bfdf8b4277e44509c5c075e9eadfb1e96

Merge pull request #216 from plone/1.1.x-thet-unifiedlistings

1.1.x thet unifiedlistings

Files changed:
A plone/app/contenttypes/browser/templates/listing_album.pt
A plone/app/contenttypes/profiles/default/types/Plone_Site.xml
A plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
M buildout.d/checkouts.cfg
M buildout.d/sources.cfg
M docs/CHANGES.rst
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/behaviors/leadimage.pt
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/full_view_item.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/templates/newsitem.pt
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/profiles/default/types.xml
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/profiles/uninstall/types.xml
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/robot/variables.py
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_link.py
M plone/app/contenttypes/tests/test_migration.py
M plone/app/contenttypes/tests/test_migration_topic.py
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml
M setup.py
D plone/app/contenttypes/browser/album_view.py
D plone/app/contenttypes/browser/templates/folder_album_view.pt
D plone/app/contenttypes/browser/templates/thumbnail_view.pt

diff --git a/buildout.d/checkouts.cfg b/buildout.d/checkouts.cfg
index 153f9b7..a6b0796 100644
--- a/buildout.d/checkouts.cfg
+++ b/buildout.d/checkouts.cfg
@@ -4,3 +4,4 @@ always-checkout = force
 auto-checkout +=
     plone.app.dexterity
     plone.app.querystring
+    plone.app.robotframework
diff --git a/buildout.d/sources.cfg b/buildout.d/sources.cfg
index 884b670..6b5cc5e 100644
--- a/buildout.d/sources.cfg
+++ b/buildout.d/sources.cfg
@@ -7,3 +7,4 @@ plone_push = git@github.com:plone
 [sources]
 plone.app.dexterity = git ${remotes:plone}/plone.app.dexterity.git pushurl=${remotes:plone_push}/plone.app.dexterity.git branch=2.0.x
 plone.app.querystring = git ${remotes:plone}/plone.app.querystring.git pushurl=${remotes:plone_push}/plone.app.querystring.git
+plone.app.robotframework = git ${remotes:plone}/plone.app.robotframework.git pushurl=${remotes:plone_push}/plone.app.robotframework.git branch=master
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 17b9a2b..c14738d 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -4,14 +4,42 @@ Changelog
 1.2 (unreleased)
 ----------------
 
+- Update image_view_fullscreen.pt for mobile friendliness.
+  [fulv]
+
+- In the listing view, don't repeat on the ``article`` tag, which makes it
+  impossible to override this structure. Instead, repeat on a unrendered
+  ``tal`` tag and move the article tag within.
+  [thet]
+
+- Don't try to show IContentLeadImage images, if theree none. Use the "mini"
+  scale as default scale for IContentLeadImage.
+  [thet]
+
+- Improve handling of Link types with other URL schemes than ``http://`` and
+  ``https://``.
+  [thet]
+
+- When installing the default profile, restrict uninstalling of old types to
+  old FTI based ones.
+  [thet]
+
+- Reformatted all templates for 2 space indentation, 4 space for attributes.
+  [thet]
+
+- Register folder and collection views under the same name. Old registrations
+  are kept for BBB compatibility.
+  [thet]
+
 - Refactor full_view and incorporate fixes from collective.fullview to
   1) display the default views of it's items, 2) be recursively callable
   and 3) have the same templates for folder and collections.
-  [thet] 
+  [thet]
 
-- Refactor folder_listing, folder_summary_view, folder_tabular_view for folders
-  and standard_view (collection_view), summary_view and tabular_view for
-  collections to use the same templates and base view class.
+- Refactor folder_listing, folder_summary_view, folder_tabular_view and
+  folder_album_view for folders as well as standard_view (collection_view),
+  summary_view, tabular_view and thumbnail_view for collections to use the same
+  templates and base view class.
   [thet]
 
 - In the file view, render HTML5 ``<audio>`` or ``<video>`` tags for audio
diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 30d058e..f900b97 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -4,7 +4,6 @@
     as BaseCollectionFeed
 from Products.CMFPlone.interfaces.syndication import IFeed
 from Products.CMFPlone.interfaces.syndication import ISyndicatable
-from plone.app.contentlisting.interfaces import IContentListing
 from plone.app.contenttypes import _
 from plone.autoform.interfaces import IFormFieldProvider
 from plone.dexterity.interfaces import IDexterityContent
@@ -13,8 +12,8 @@
 from zope.component import adapter
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import provider
 from zope.interface import implementer
+from zope.interface import provider
 from zope.schema.interfaces import IVocabularyFactory
 from zope.schema.vocabulary import SimpleTerm
 from zope.schema.vocabulary import SimpleVocabulary
@@ -142,36 +141,6 @@ def results(self, batch=True, b_start=0, b_size=None,
             limit=limit, brains=brains, custom_query=custom_query
         )
 
-    def getFoldersAndImages(self):
-        catalog = getToolByName(self.context, 'portal_catalog')
-        results = self.results(batch=False)
-
-        _mapping = {'results': results, 'images': {}}
-        portal_atct = getToolByName(self.context, 'portal_atct', None)
-        image_types = getattr(portal_atct, 'image_types', ['Image'])
-
-        filtered_results = []
-        for item in results:
-            item_path = item.getPath()
-            if item.isPrincipiaFolderish:
-                query = {
-                    'portal_type': image_types,
-                    'path': item_path,
-                }
-                _mapping['images'][item_path] = IContentListing(catalog(query))
-            elif item.portal_type in image_types:
-                _mapping['images'][item_path] = [item, ]
-            else:
-                continue
-            filtered_results.append(item)
-
-        _mapping['total_number_of_images'] = sum(map(
-            len,
-            _mapping['images'].values()
-        ))
-        _mapping['results'] = filtered_results
-        return _mapping
-
     def selectedViewFields(self):
         """Returns a list of all metadata fields from the catalog that were
            selected.
diff --git a/plone/app/contenttypes/behaviors/leadimage.pt b/plone/app/contenttypes/behaviors/leadimage.pt
index 5e3b3ca..1c50f80 100644
--- a/plone/app/contenttypes/behaviors/leadimage.pt
+++ b/plone/app/contenttypes/behaviors/leadimage.pt
@@ -1,5 +1,6 @@
-<div class="leadImage"
-     tal:condition="view/available">
-  <img tal:define="scale context/@@images"
-       tal:replace="structure python: scale.scale('image', width=200, height=200).tag(css_class='newsImage')" />
-</div>
\ No newline at end of file
+<div class="leadImage" tal:condition="view/available">
+  <img tal:define="has_img context/image|nothing;
+                   scales context/@@images|nothing"
+       tal:condition="python:has_img and scales" 
+       tal:replace="structure python: scales.scale('image', scale='mini').tag(css_class='newsImage')" />
+</div>
diff --git a/plone/app/contenttypes/browser/album_view.py b/plone/app/contenttypes/browser/album_view.py
deleted file mode 100644
index fca86d8..0000000
--- a/plone/app/contenttypes/browser/album_view.py
+++ /dev/null
@@ -1,57 +0,0 @@
-# -*- coding: utf-8 -*-
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-# from Products.CMFCore.utils import getToolByName
-
-
-class AlbumView(BrowserView):
-
-    template = ViewPageTemplateFile('templates/folder_album_view.pt')
-
-    def getAlbumContent(self,
-                        container=None,
-                        images=0,
-                        folders=0,
-                        subimages=0,
-                        others=0):
-        """ Mostly ripped out from atctListAlbum.py
-        """
-
-        if not container:
-            container = self.context
-
-        result = {}
-
-        if images:
-            result['images'] = container.getFolderContents(
-                {'portal_type': ('Image',)}, full_objects=True)
-
-        if folders:
-            result['folders'] = container.getFolderContents(
-                {'portal_type': ('Folder',)})
-
-        if subimages:
-            # Handle brains or objects
-            if getattr(container, 'getPath', None) is not None:
-                path = container.getPath()
-            else:
-                path = '/'.join(container.getPhysicalPath())
-            # Explicitly set path to remove default depth
-            result['subimages'] = container.getFolderContents(
-                {'portal_type': ('Image',), 'path': path})
-
-        if others:
-            utils = getToolByName(self.context, 'plone_utils')
-            searchContentTypes = utils.getUserFriendlyTypes()
-            filtered = [p_type for p_type in searchContentTypes
-                        if p_type not in ('Image', 'Folder',)]
-            if filtered:
-                # We don't need the full objects for the folder_listing
-                result['others'] = container.getFolderContents(
-                    {'portal_type': filtered})
-            else:
-                result['others'] = ()
-
-        return result
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index a666659..bfafca0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,8 +1,11 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
+from plone.app.contenttypes import _
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
-from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
+from plone.memoize.view import memoize
 
 
 class CollectionView(FolderView):
@@ -14,16 +17,53 @@ def __init__(self, *args, **kwargs):
         self.b_size = self.collection_behavior.item_count
 
     def results(self, **kwargs):
-        return self.collection_behavior.results(
-            b_start=self.b_start,
-            b_size=self.b_size,
-            **kwargs
-        )
+        """Return a content listing based result set with results from the
+        collection query.
 
-    def getFoldersAndImages(self, **kwargs):
-        context = aq_inner(self.context)
-        wrapped = ICollection(context)
-        return wrapped.getFoldersAndImages(**kwargs)
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
+
+        return self.collection_behavior.results(**kwargs)
+
+    @property
+    @memoize
+    def _album_results(self):
+        """Get results to display an album with subalbums.
+        """
+        results = self.results()
+        images = []
+        folders = []
+        for it in results:
+            # TODO: potentially expensive!
+            ob = it.getObject()
+            if IImage.providedBy(ob):
+                images.append(it)
+            elif IFolder.providedBy(ob):
+                folders.append(it)
+        return {'images': images, 'folders': folders}
+
+    @property
+    def album_images(self):
+        """Get all images within this collection.
+        """
+        return self._album_results['images']
+
+    @property
+    def album_folders(self):
+        """Get all folders within this collection.
+        """
+        return self._album_results['folders']
 
     def tabular_fields(self):
         """Returns a list of all metadata fields from the catalog that were
diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml
index 13d4148..7794eb5 100644
--- a/plone/app/contenttypes/browser/configure.zcml
+++ b/plone/app/contenttypes/browser/configure.zcml
@@ -9,275 +9,213 @@
 
   <browser:resource
       name="collection.css"
-      file="stylesheets/collection.css" />
+      file="stylesheets/collection.css"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"/>
 
 
-  <!-- VIEWS FOR COLLECTION ITEM -->
+  <!-- VIEWS FOR PLONE SITE ROOT -->
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
+
+
+  <!-- VIEWS FOR FOLDERS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
 
-  <browser:page
-    name="view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
 
+  <!-- VIEWS FOR COLLECTION ITEM -->
   <browser:page
-    name="standard_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.interfaces.ICollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
+      name="listing_view"
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      template="templates/listing.pt"
+      permission="zope2.View"
+      />
 
   <!-- VIEWS FOR ANYTHING WITH THE COLLECTION BEHAVIOR.
-
        Note that these ignore other fields, but integrators should
        create other themplates if they want that.  Or improve the
        query view widget.  -->
-
-  <browser:page
-    name="collection_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing.pt"
-    />
-
-  <browser:page
-    name="summary_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_summary.pt"
-    />
-
-  <browser:page
-    name="all_content"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/full_view.pt"
-    />
-
-  <browser:page
-    name="tabular_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/listing_tabular.pt"
-    />
-
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page
+        name="listing_view"
+        template="templates/listing.pt"
+        menu="plone_displayviews"
+        title="Standard view"
+        />
+    <browser:page
+        name="summary_view"
+        template="templates/listing_summary.pt"
+        menu="plone_displayviews"
+        title="Summary view"
+        />
+    <browser:page
+        name="tabular_view"
+        template="templates/listing_tabular.pt"
+        menu="plone_displayviews"
+        title="Tabular view"
+        />
+    <browser:page
+        name="full_view"
+        template="templates/full_view.pt"
+        menu="plone_displayviews"
+        title="All content"
+        />
+    <browser:page
+        name="album_view"
+        template="templates/listing_album.pt"
+        menu="plone_displayviews"
+        title="Album view"
+        />
+  </browser:pages>
+
+
+  <!-- OTHER VIEWS -->
   <browser:page
-    name="thumbnail_view"
-    permission="zope2.View"
-    for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
-    class=".collection.CollectionView"
-    template="templates/thumbnail_view.pt"
-    />
-
-  <!-- COLLECTION MENU ITEMS -->
-
-  <browser:menuItems
-    for="plone.app.contenttypes.interfaces.ICollection"
-    menu="plone_displayviews">
-    <browser:menuItem
-      title="Standard view"
-      action="standard_view"
-      />
-    <browser:menuItem
-      title="Summary view"
-      action="summary_view"
-      />
-    <browser:menuItem
-      title="All content"
-      action="all_content"
-      />
-    <browser:menuItem
-      title="Tabular view"
-      action="tabular_view"
-      />
-    <browser:menuItem
-      title="Thumbnail view"
-      action="thumbnail_view"
+      name="full_view_item"
+      for="*"
+      class=".full_view.FullViewItem"
+      template="templates/full_view_item.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
       />
-  </browser:menuItems>
-
-  <browser:page
-    name="document_view"
-    for="plone.app.contenttypes.interfaces.IDocument"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/document.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Document"
-    />
-
-  <browser:page
-    name="file_view"
-    for="plone.app.contenttypes.interfaces.IFile"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".file.FileView"
-    template="templates/file.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View File"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_listing"
-    for="Products.CMFPlone.interfaces.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Standard view"
-    />
-
-  <browser:page
-    name="folder_full_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/full_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="All content"
-    />
-
-  <browser:page
-    name="full_view_item"
-    for="Products.CMFCore.interfaces._content.IContentish"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".full_view.FullViewItem"
-    template="templates/full_view_item.pt"
-    permission="zope2.View"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_summary_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_summary.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Summary view"
-    />
-
-  <browser:page
-    name="folder_tabular_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
   <browser:page
-    name="folder_tabular_view"
-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".folder.FolderView"
-    template="templates/listing_tabular.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Tabular view"
-    />
-
+      name="document_view"
+      for="plone.app.contenttypes.interfaces.IDocument"
+      template="templates/document.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Document"
+      />
   <browser:page
-    name="folder_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    />
-
-  <!-- BBB -->
+      name="file_view"
+      for="plone.app.contenttypes.interfaces.IFile"
+      class=".file.FileView"
+      template="templates/file.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View File"
+      />
   <browser:page
-    name="atct_album_view"
-    for="plone.dexterity.interfaces.IDexterityContainer"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".album_view.AlbumView"
-    template="templates/folder_album_view.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="Album"
-    />
-
+      name="image_view"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image"
+      />
   <browser:page
-    name="image_view"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image"
-    />
-
+      name="image_view_fullscreen"
+      for="plone.app.contenttypes.interfaces.IImage"
+      template="templates/image_view_fullscreen.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Image Fullscreen"
+      />
   <browser:page
-    name="image_view_fullscreen"
-    for="plone.app.contenttypes.interfaces.IImage"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/image_view_fullscreen.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Image Fullscreen"
-    />
-
+      name="link_redirect_view"
+      for="plone.app.contenttypes.interfaces.ILink"
+      class=".link_redirect_view.LinkRedirectView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View Link"
+      />
   <browser:page
-    name="link_redirect_view"
-    for="plone.app.contenttypes.interfaces.ILink"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    class=".link_redirect_view.LinkRedirectView"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View Link"
-    />
-
+      name="newsitem_view"
+      for="plone.app.contenttypes.interfaces.INewsItem"
+      template="templates/newsitem.pt"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      menu="plone_displayviews"
+      title="View News Item"
+      />
   <browser:page
-    name="newsitem_view"
-    for="plone.app.contenttypes.interfaces.INewsItem"
-    layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
-    template="templates/newsitem.pt"
-    permission="zope2.View"
-    menu="plone_displayviews"
-    title="View News Item"
-    />
+      name="contenttype_utils"
+      for="*"
+      class=".utils.Utils"
+      allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View"
+      />
 
-  <browser:page
-    name="contenttype_utils"
-    for="*"
-    permission="zope2.View"
-    class=".utils.Utils"
-    allowed_interface="plone.app.contenttypes.browser.utils.IUtils"
-    />
 
   <configure zcml:condition="installed Products.Archetypes">
     <browser:viewlet
@@ -294,4 +232,44 @@
   <!-- Query string widget -->
   <adapter factory=".widgets.QueryStringFieldWidget" />
 
+  <!-- BBB OlD VIEW NAME REGISTRATIONS -->
+  <browser:pages
+      for="plone.dexterity.interfaces.IDexterityContainer"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_full_view" template="templates/full_view.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+    <browser:page name="folder_album_view" template="templates/listing_album.pt"/>
+    <browser:page name="atct_album_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".folder.FolderView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="folder_listing" template="templates/listing.pt"/>
+    <browser:page name="folder_summary_view" template="templates/listing_summary.pt"/>
+    <browser:page name="folder_tabular_view" template="templates/listing_tabular.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.interfaces.ICollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="view" template="templates/listing.pt"/>
+    <browser:page name="standard_view" template="templates/listing.pt"/>
+  </browser:pages>
+  <browser:pages
+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"
+      class=".collection.CollectionView"
+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"
+      permission="zope2.View">
+    <browser:page name="collection_view" template="templates/listing.pt"/>
+    <browser:page name="all_content" template="templates/full_view.pt"/>
+    <browser:page name="thumbnail_view" template="templates/listing_album.pt"/>
+  </browser:pages>
+
 </configure>
diff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py
index 1fbde08..2de8505 100644
--- a/plone/app/contenttypes/browser/folder.py
+++ b/plone/app/contenttypes/browser/folder.py
@@ -4,11 +4,15 @@
 from Products.CMFPlone.utils import safe_callable
 from Products.Five import BrowserView
 from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.event.interfaces import IEvent
+from plone.memoize.view import memoize
 from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.contentprovider.interfaces import IContentProvider
+import random
 
 HAS_SECURITY_SETTINGS = True
 try:
@@ -22,35 +26,10 @@ class FolderView(BrowserView):
     def __init__(self, context, request):
         super(FolderView, self).__init__(context, request)
 
-        registry = getUtility(IRegistry)
-
         self.plone_view = getMultiAdapter(
             (context, request), name=u"plone")
-
         self.portal_state = getMultiAdapter(
             (context, request), name=u"plone_portal_state")
-        self.friendly_types = self.portal_state.friendly_types()
-        self.isAnon = self.portal_state.anonymous()
-        self.navigation_root_url = self.portal_state.navigation_root_url()
-
-        # BBB
-        self.site_properties = context.restrictedTraverse(
-            'portal_properties').site_properties
-        self.use_view_action = getattr(
-            self.site_properties, 'typesUseViewActionInListings', ())
-
-        if HAS_SECURITY_SETTINGS:
-            security_settings = registry.forInterface(
-                ISecuritySchema, prefix="plone")
-            self.show_about = getattr(
-                security_settings, 'allow_anon_views_about', False
-            ) or not self.isAnon
-        else:
-            # BBB
-            self.show_about = getattr(
-                self.site_properties, 'allowAnonymousViewAbout', False
-            ) or not self.isAnon
-
         self.pas_member = getMultiAdapter(
             (context, request), name=u"pas_member")
 
@@ -63,18 +42,27 @@ def __init__(self, context, request):
         b_start = getattr(self.request, 'b_start', None)
         self.b_start = int(b_start) if b_start is not None else 0
 
-    def _content_filter(self):
-        content_filter = getattr(self.request, 'contentFilter', None)
-        content_filter = dict(content_filter) if content_filter else {}
-        content_filter.setdefault('portal_type', self.friendly_types)
-        content_filter.setdefault('batch', True)
-        content_filter.setdefault('b_size', self.b_size)
-        content_filter.setdefault('b_start', self.b_start)
-        return content_filter
+    def results(self, **kwargs):
+        """Return a content listing based result set with contents of the
+        folder.
+
+        :param **kwargs: Any keyword argument, which can be used for catalog
+                         queries.
+        :type  **kwargs: keyword argument
+
+        :returns: plone.app.contentlisting based result set.
+        :rtype: ``plone.app.contentlisting.interfaces.IContentListing`` based
+                sequence.
+        """
+        # Extra filter
+        kwargs.update(dict(getattr(self.request, 'contentFilter', {})))
+        kwargs.setdefault('portal_type', self.friendly_types)
+        kwargs.setdefault('batch', True)
+        kwargs.setdefault('b_size', self.b_size)
+        kwargs.setdefault('b_start', self.b_start)
 
-    def results(self):
         results = self.context.restrictedTraverse(
-            '@@folderListing')(**self._content_filter())
+            '@@folderListing')(**kwargs)
         return results
 
     def batch(self):
@@ -88,6 +76,38 @@ def normalizeString(self, text):
     def toLocalizedTime(self, time, long_format=None, time_only=None):
         return self.plone_view.toLocalizedTime(time, long_format, time_only)
 
+    @property
+    def friendly_types(self):
+        return self.portal_state.friendly_types()
+
+    @property
+    def isAnon(self):
+        return self.portal_state.anonymous()
+
+    @property
+    def navigation_root_url(self):
+        return self.portal_state.navigation_root_url()
+
+    @property
+    def use_view_action(self):
+        site_props = self.context.restrictedTraverse(
+            'portal_properties').site_properties
+        return getattr(site_props, 'typesUseViewActionInListings', ())
+
+    @property
+    def show_about(self):
+        if not HAS_SECURITY_SETTINGS:
+            # BBB
+            site_props = self.context.restrictedTraverse(
+                'portal_properties').site_properties
+            show_about = getattr(site_props, 'allowAnonymousViewAbout', False)
+        else:
+            registry = getUtility(IRegistry)
+            settings = registry.forInterface(ISecuritySchema, prefix="plone")
+            show_about = getattr(settings, 'allow_anon_views_about', False)
+        return show_about or not self.isAnon
+
+    @property
     def text(self):
         textfield = getattr(aq_base(self.context), 'text', None)
         text = getattr(textfield, 'output', None)
@@ -97,6 +117,7 @@ def text(self):
             ) else 'plain'
         return text
 
+    @property
     def tabular_fields(self):
         ret = []
         ret.append('Title')
@@ -131,7 +152,15 @@ def tabular_fielddata(self, item, fieldname):
             'value': value
         }
 
+    def has_image(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
+        img = getattr(aq_base(obj), 'image', None)
+        return True if img else False
+
     def is_event(self, obj):
+        if getattr(obj, 'getObject', False):
+            obj = obj.getObject()
         return IEvent.providedBy(obj)
 
     def formatted_date(self, item):
@@ -141,6 +170,46 @@ def formatted_date(self, item):
         )
         return provider(item)
 
+    @property
+    @memoize
+    def album_images(self):
+        """Get all images within this folder.
+        """
+        images = self.results(
+            batch=False,
+            object_provides=IImage.__identifier__
+        )
+        return images
+
+    @property
+    @memoize
+    def album_folders(self):
+        """Get all folders within this folder.
+        """
+        images = self.results(
+            batch=False,
+            object_provides=IFolder.__identifier__
+        )
+        return images
+
+    @property
+    def album_random_image(self):
+        """Get random image from this folder.
+        """
+        img = None
+        images = self.album_images
+        if images:
+            img = random.choice(images)
+        return img
+
+    @property
+    def album_number_images(self):
+        """Get number of images from this folder.
+        """
+        images = self.album_images
+        return len(images)
+
+    @property
     def no_items_message(self):
         return _(
             'description_no_items_in_folder',
diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py
index 4e4a45d..adb74a1 100644
--- a/plone/app/contenttypes/browser/link_redirect_view.py
+++ b/plone/app/contenttypes/browser/link_redirect_view.py
@@ -5,14 +5,38 @@
 from plone.app.contenttypes.utils import replace_link_variables_by_paths
 
 
+# links starting with these URL scheme should not be redirected to
+NON_REDIRECTABLE_URL_SCHEMES = [
+    'mailto:',
+    'tel:',
+    'callto:',
+    'webdav:',
+    'caldav:'
+]
+
+# links starting with these URL scheme should not be resolved to paths
+NON_RESOLVABLE_URL_SCHEMES = NON_REDIRECTABLE_URL_SCHEMES + [
+    'file:',
+    'ftp:',
+]
+
+
 class LinkRedirectView(BrowserView):
 
     index = ViewPageTemplateFile('templates/link.pt')
 
+    def _url_uses_scheme(self, schemes, url=None):
+        url = url or self.context.remoteUrl
+        for scheme in schemes:
+            if url.startswith(scheme):
+                return True
+        return False
+
     def __call__(self):
         """Redirect to the Link target URL, if and only if:
          - redirect_links property is enabled in
            portal_properties/site_properties
+         - the link is of a redirectable type (no mailto:, etc)
          - AND current user doesn't have permission to edit the Link"""
         context = self.context
         ptool = getToolByName(context, 'portal_properties')
@@ -24,6 +48,8 @@ def __call__(self):
             False
         )
         can_edit = mtool.checkPermission('Modify portal content', context)
+        redirect_links = redirect_links\
+            and not self._url_uses_scheme(NON_REDIRECTABLE_URL_SCHEMES)
 
         if redirect_links and not can_edit:
             return self.request.RESPONSE.redirect(self.absolute_target_url())
@@ -32,7 +58,13 @@ def __call__(self):
 
     def absolute_target_url(self):
         """Compute the absolute target URL."""
-        if self.context.remoteUrl.startswith('.'):
+        url = self.context.remoteUrl
+
+        if self._url_uses_scheme(NON_RESOLVABLE_URL_SCHEMES):
+            # For non http/https url schemes, there is no path to resolve.
+            return url
+
+        if url.startswith('.'):
             # we just need to adapt ../relative/links, /absolute/ones work
             # anyway -> this requires relative links to start with ./ or
             # ../
@@ -41,13 +73,10 @@ def absolute_target_url(self):
             )
             url = '/'.join([
                 context_state.canonical_object_url(),
-                self.context.remoteUrl
+                url
             ])
         else:
-            url = replace_link_variables_by_paths(
-                self.context,
-                self.context.remoteUrl
-            )
+            url = replace_link_variables_by_paths(self.context, url)
             if not (url.startswith('http://') or url.startswith('https://')):
                 url = self.request.physicalPathToURL(url)
 
diff --git a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
index f32ba04..8ba1390 100644
--- a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
+++ b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
@@ -1,22 +1,18 @@
 <tal:available condition="view/available">
-<dl class="portalMessage alert-box secondary warning"
-    i18n:domain="plone">
-    <dt i18n:translate="">Warning</dt>
-    <dd>
-        <tal:manager tal:condition="not:view/can_migrate">
-            <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
-        </tal:manager>
-        <tal:manager tal:condition="view/can_migrate">
-            <span i18n:translate="">You can't edit this content unless you
-                <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
-                    migrate the default content-types to Dexterity.
-                </a>
-            </span>
-        </tal:manager>
-    </dd>
-</dl>
-
-<style type="text/css">
-#contentview-edit {display: None;}
-</style>
+  <div class="portalMessage alert-box secondary warning" i18n:domain="plone">
+    <strong i18n:translate="">Warning</strong>
+    <tal:manager tal:condition="not:view/can_migrate">
+      <span i18n:translate="">You can't edit this content. Ask your administrator to migrate to Dexterity!</span>
+    </tal:manager>
+    <tal:manager tal:condition="view/can_migrate">
+      <span i18n:translate="">You can't edit this content unless you
+        <a href="#" tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">
+          migrate the default content-types to Dexterity.
+        </a>
+      </span>
+    </tal:manager>
+  </div>
+  <style type="text/css">
+    #contentview-edit {display: None;}
+  </style>
 </tal:available>
diff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt
index 25fefa0..0e6756b 100644
--- a/plone/app/contenttypes/browser/templates/document.pt
+++ b/plone/app/contenttypes/browser/templates/document.pt
@@ -1,20 +1,19 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
-    <metal:content-core define-macro="content-core">
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-              tal:content="structure python:context.text.output_relative_to(view.context)" />
-    </metal:content-core>
+<metal:content-core define-macro="content-core">
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure python:context.text.output_relative_to(view.context)" />
+</metal:content-core>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt
index 547d748..b6e8eae 100644
--- a/plone/app/contenttypes/browser/templates/file.pt
+++ b/plone/app/contenttypes/browser/templates/file.pt
@@ -1,44 +1,43 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="content_type context/file/contentType|nothing;
-                                 download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
-            <p>
-                <a tal:attributes="href download_url">
-                    <img tal:attributes="src view/get_mimetype_icon;
-                                         alt content_type;" border="0"  />
-                    <tal:name tal:content="context/file/filename" >Filename</tal:name>
-                </a>
-                <span class="discreet"
-                      tal:define="size context/file/getSize;
-                                  kb python:size/1024">
-                      &mdash; <span tal:replace="kb" /> KB</span>
-            </p>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core"
+    tal:define="content_type context/file/contentType|nothing;
+                download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">
+  <p>
+    <a tal:attributes="href download_url">
+      <img tal:attributes="src view/get_mimetype_icon;
+                           alt content_type;" border="0" />
+      <tal:name tal:content="context/file/filename" >Filename</tal:name>
+    </a>
+    <span class="discreet"
+        tal:define="size context/file/getSize;
+                    kb python:size/1024">
+      &mdash; <span tal:replace="kb" /> KB</span>
+  </p>
 
-            <video tal:condition="view/is_videotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </video>
+  <video tal:condition="view/is_videotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </video>
 
-            <audio tal:condition="view/is_audiotype" controls="controls">
-              <source tal:attributes="src download_url; type content_type"></source>
-            </audio>
+  <audio tal:condition="view/is_audiotype" controls="controls">
+    <source tal:attributes="src download_url; type content_type"></source>
+  </audio>
 
-            <div tal:condition="python: content_type.startswith('text')">
-                <h2 i18n:translate="heading_file_contents">File contents</h2>
-                <pre tal:content="context/file/data|nothing" />
-            </div>
-        </metal:block>
-    </metal:content-core>
+  <div tal:condition="python: content_type.startswith('text')">
+    <h2 i18n:translate="heading_file_contents">File contents</h2>
+    <pre tal:content="context/file/data|nothing" />
+  </div>
 
-</body>
+</metal:block>
+</metal:content-core>
 
+</body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/folder_album_view.pt b/plone/app/contenttypes/browser/templates/folder_album_view.pt
deleted file mode 100644
index e5b5609..0000000
--- a/plone/app/contenttypes/browser/templates/folder_album_view.pt
+++ /dev/null
@@ -1,104 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
-      lang="en-US"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-
-<metal:main_macro define-macro="content-core"
-     tal:define="result python:view.getAlbumContent(images=1, folders=1, subimages=0, others=1);
-                 images result/images;
-                 albums result/folders;
-                 otherContents result/others;
-                 Batch python:modules['Products.CMFPlone'].Batch;
-                 b_start python:request.get('b_start', 0);
-                 templateId template/getId;
-                 batch python:Batch(images, 12, int(b_start), orphan=1)">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/getText;
-                     text python:has_text and here.getText() or ''"
-         tal:condition="text"
-         tal:attributes="class python: here.Format() in ('text/structured',
-                                               'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:albumsimages tal:condition="python:albums or images">
-        <tal:images tal:condition="batch" tal:repeat="image batch">
-            <div class="photoAlbumEntry">
-                <a tal:define="id python:int(b_start)+int(repeat['image'].number()-1);
-                               scale image/@@images;
-                               img_tag python:scale.scale('image', scale='thumb').tag()"
-                   tal:attributes="href string:${image/absolute_url}/view;
-                                   title image/Description">
-                    <span class="photoAlbumEntryWrapper">
-                        <img src="" alt="" tal:replace="structure img_tag" />
-                    </span>
-                    <span class="photoAlbumEntryTitle" tal:content="image/pretty_title_or_id">
-                       Title
-                    </span>
-                </a>
-            </div>
-        </tal:images>
-
-        <div class="photoAlbum" tal:condition="albums">
-        <tal:albums tal:repeat="album albums">
-
-            <div class="photoAlbumEntry photoAlbumFolder"
-                 tal:define="image_brains_in_album python:view.getAlbumContent(subimages=1, container=album)['subimages'];
-                             number_of_images python:len(image_brains_in_album);
-                             random python:modules['random'];
-                             random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
-                        <a tal:attributes="href album/getURL;
-                                           title album/Description">
-                            <span class="photoAlbumEntryWrapper">
-                                <tal:block condition="number_of_images">
-                                <img src="" alt=""
-                                     tal:define="scale random_image/@@images;
-                                                 img_tag python:scale.scale('image', scale='thumb').tag()"
-                                     tal:replace="structure img_tag" />
-                                </tal:block>
-                            </span>
-                            <span class="photoAlbumEntryTitle">
-                               <tal:title content="album/pretty_title_or_id">Title</tal:title>
-                            (<tal:number content="number_of_images" />)
-                            </span>
-                        </a>
-            </div>
-
-        </tal:albums>
-        </div>
-
-        <div class="visualClear"><!-- --></div>
-
-    </tal:albumsimages>
-
-    <p class="discreet"
-       i18n:domain="atcontenttypes"
-       i18n:translate="text_no_albums_uploaded"
-       tal:condition="python:not (albums or images)">
-        No albums or photos uploaded yet.
-    </p>
-
-    <div tal:condition="python:albums or images"
-         metal:use-macro="here/batch_macros/macros/navigation" />
-
-    <tal:listing condition="otherContents"
-                 define="folderContents otherContents;
-                         view nocall:here/@@folder_listing">
-        <metal:listing metal:use-macro="view/macros/listing">
-            <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
-        </metal:listing>
-
-    </tal:listing>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-
-</html>
diff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt
index 37974ec..2366c33 100644
--- a/plone/app/contenttypes/browser/templates/full_view.pt
+++ b/plone/app/contenttypes/browser/templates/full_view.pt
@@ -1,29 +1,26 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core">
-        <metal:listing use-macro="context/@@folder_listing/macros/content-core|context/@@collection_view/macros/content-core">
-            <!-- we don't want the dl -->
-            <metal:entries fill-slot="entries">
-                <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@collection_view/macros/entries">
-                    <metal:entry fill-slot="entry">
-                        <div
-                            tal:define="obj item/getObject;"
-                            tal:replace="structure obj/@@full_view_item" />
-                    </metal:entry>
-                </metal:block>
-            </metal:entries>
-        </metal:listing>
-    </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <metal:listing use-macro="context/@@listing_view/macros/content-core">
+    <!-- we don't want the dl -->
+    <metal:entries fill-slot="entries">
+      <metal:block use-macro="context/@@listing_view/macros/entries">
+        <metal:entry fill-slot="entry">
+          <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item" />
+        </metal:entry>
+      </metal:block>
+    </metal:entries>
+  </metal:listing>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt
index 16eac28..f8407d7 100644
--- a/plone/app/contenttypes/browser/templates/full_view_item.pt
+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt
@@ -1,73 +1,71 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone"
-      tal:omit-tag="">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone"
+    tal:omit-tag="">
 <body tal:omit-tag="">
 
-    <div class="item visualIEFloatFix"
-         tal:define="item_macro nocall:view/item_macros/content-core|nothing;
-                     item_url view/item_url;
-                     rendering_error python:[];">
-
-        <div tal:replace="structure provider:plone.abovecontenttitle" />
-
-        <h2 class="headline">
-            <a href="#" class="summary url" tal:content="context/Title"
-               tal:attributes="href item_url;">
-               Title
-             </a>
-        </h2>
-
-        <div tal:replace="structure provider:plone.belowcontenttitle" />
+  <div class="item visualIEFloatFix"
+      tal:define="item_macro nocall:view/item_macros/content-core|nothing;
+      item_url view/item_url;
+      rendering_error python:[];">
 
-        <div class="description"
-             tal:content="context/Description"
-             tal:condition="context/Description">
-            Description
-        </div>
+    <div tal:replace="structure provider:plone.abovecontenttitle" />
 
-        <tal:block tal:condition="item_macro">
-        <!-- tal:on-error="python:rendering_error.append(True)"-->
+    <h2 class="headline">
+      <a class="summary url" tal:content="context/Title"
+        tal:attributes="href item_url;">
+        Title
+      </a>
+    </h2>
 
-            <div tal:replace="structure provider:plone.abovecontentbody" />
+    <div tal:replace="structure provider:plone.belowcontenttitle" />
 
-            <div tal:define="view nocall:view/default_view;
-                             portal_state context/@@plone_portal_state;
-                             context_state context/@@plone_context_state;
-                             plone_layout context/@@plone_layout;
-                             lang portal_state/language;
-                             dummy python: plone_layout.mark_view(view);
-                             portal_url portal_state/portal_url;
-                             checkPermission nocall: context/portal_membership/checkPermission;
-                             site_properties context/portal_properties/site_properties;">
-            <div metal:use-macro="item_macro">
-                content
-            </div>
-            </div>
+    <div class="description"
+        tal:content="context/Description"
+        tal:condition="context/Description">
+      Description
+    </div>
 
-            <div tal:replace="structure provider:plone.belowcontentbody" />
+    <tal:block tal:condition="item_macro">
+      <!-- tal:on-error="python:rendering_error.append(True)"-->
+
+      <div tal:replace="structure provider:plone.abovecontentbody" />
+
+      <div tal:define="view nocall:view/default_view;
+                       plone_view context/@@plone;
+                       portal_state context/@@plone_portal_state;
+                       context_state context/@@plone_context_state;
+                       plone_layout context/@@plone_layout;
+                       lang portal_state/language;
+                       dummy python: plone_layout.mark_view(view);
+                       portal_url portal_state/portal_url;
+                       checkPermission nocall: context/portal_membership/checkPermission;
+                       site_properties context/portal_properties/site_properties;">
+        <div metal:use-macro="item_macro">
+          content
+        </div>
+      </div>
 
-        </tal:block>
+      <div tal:replace="structure provider:plone.belowcontentbody" />
 
-        <tal:block tal:condition="rendering_error">
-            <!-- Error rendering item macro -->
-        </tal:block>
+    </tal:block>
 
-        <p class="more" tal:condition="python:not(item_macro) or rendering_error">
-            <a href=""
-               tal:attributes="href item_url"
-               i18n:translate="read_more">
-                Read More&hellip;
-            </a>
-        </p>
+    <tal:block tal:condition="rendering_error">
+      <!-- Error rendering item macro -->
+    </tal:block>
 
-        <div class="visualClear"><!-- --></div>
+    <p class="more" tal:condition="python:not(item_macro) or rendering_error">
+      <a tal:attributes="href item_url"
+          i18n:translate="read_more">
+        Read More&hellip;
+      </a>
+    </p>
 
-    </div>
+    <div class="visualClear"><!-- --></div>
 
+  </div>
 </body>
 </html>
diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt
index 3090cab..8f15418 100644
--- a/plone/app/contenttypes/browser/templates/image.pt
+++ b/plone/app/contenttypes/browser/templates/image.pt
@@ -1,32 +1,29 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core"
-                     tal:define="size context/image/getSize">
-            <figure class="image-product">
-              <a class="discreet"
-                 tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
-                 tal:define="scale context/@@images;
-                             img_tag python:scale.scale('image', scale='large').tag()"
-                  tal:on-error="string: Image cannot be displayed">
-                <img tal:replace="structure img_tag" />
-              
-              <figcaption class="discreet">
-                <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
-                <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
-              </figcaption>
-              </a>
-            </figure>
-        </metal:block>
-    </metal:content-core>
-</body>
 
-</html>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core" tal:define="size context/image/getSize">
+  <figure class="image-product">
+    <a class="discreet"
+        tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"
+        tal:define="scale context/@@images;
+                    img_tag python:scale.scale('image', scale='large').tag()"
+        tal:on-error="string: Image cannot be displayed">
+    <img tal:replace="structure img_tag" />
+    <figcaption class="discreet">
+      <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>
+      <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>
+    </figcaption>
+    </a>
+  </figure>
+</metal:block>
+</metal:content-core>
 
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
index 1cb6ca2..2b796fd 100644
--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
@@ -1,69 +1,60 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    i18n:domain="plone">
 <head>
-
-    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
-
-    <title tal:content="context/Title">
-        Title
-    </title>
-
-    <style type="text/css" media="screen">
+  <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/html;;charset=utf-8')" />
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  <title tal:content="context/Title">Title</title>
+  <style type="text/css" media="screen">
     body {
-        background-color: white;
-        color: black;
-        font-family: Helvetica, Arial, sans-serif;
-        font-size: 14px;
-        padding:0;
-        margin:0;
+      background-color: white;
+      color: black;
+      font-family: Helvetica, Arial, sans-serif;
+      font-size: 14px;
+      padding:0;
+      margin:0;
+    }
+    @media screen and (max-width: 768px) {
+        body {
+          font-size: 100%;
+        }
     }
     a {
-        color: #08c;
-        text-decoration: none;
-        text-align:center;
+      color: #08c;
+      text-decoration: none;
+      text-align:center;
+    }
+    a:hover {text-decoration:underline;}
+    a span {
+      display:block;
+      line-height:1.5em;
+      padding:12px;
     }
-      a:hover {text-decoration:underline;}
-      a span {
-          display:block;
-          line-height:1.5em;
-          padding:12px;
-      }
-
     img {
-        border: 0;
-        display:block;
-        margin:0 auto;
+      border: 0;
+      display:block;
+      margin:0 auto;
+      max-width: 100%; height: auto;
     }
-
-    </style>
-
+  </style>
 </head>
 
 <body>
-
-<div id="content-core"
-     tal:condition="context/@@images">
-    <a href=""
-       tal:attributes="href request/HTTP_REFERER"
-       tal:condition="request/HTTP_REFERER"
-       ><span i18n:translate="label_back_to_site">Back to site</span>
-    <tal:block replace="structure context/@@images/image" />
-  </a>
-
-    <a href=""
-       tal:attributes="href context/portal_url"
-       tal:condition="not: request/HTTP_REFERER"
-       ><span i18n:translate="label_home">Home</span>
-       <tal:block replace="structure context/@@images/image" />
+  <div id="content-core" tal:condition="context/@@images">
+    <a tal:attributes="href request/HTTP_REFERER"
+        tal:condition="request/HTTP_REFERER"
+      ><span i18n:translate="label_back_to_site">Back to site</span>
+      <tal:block replace="structure context/@@images/image" />
     </a>
-</div>
-
+    <a tal:attributes="href context/portal_url"
+        tal:condition="not: request/HTTP_REFERER"
+      ><span i18n:translate="label_home">Home</span>
+      <tal:block replace="structure context/@@images/image" />
+    </a>
+  </div>
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt
index 4aa7290..c5752e4 100644
--- a/plone/app/contenttypes/browser/templates/link.pt
+++ b/plone/app/contenttypes/browser/templates/link.pt
@@ -1,38 +1,35 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
-    <metal:header fill-slot="header">
-        <div class="portalMessage info"
-            tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
-            tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
-            <strong i18n:translate="">Info</strong>
-            <span tal:omit-tag=""
-                i18n:translate="message_permissions_blocking_link_redirect">
-              You see this page because you have permission to edit this link.
-              Others will be immediately redirected to the link's target URL.
-            </span>
-        </div>
-    </metal:header>
+<metal:header fill-slot="header">
+  <div class="portalMessage info"
+      tal:define="redirect_links context/portal_properties/site_properties/redirect_links|nothing;"
+      tal:condition="python: redirect_links and checkPermission('Modify portal content', context)">
+    <strong i18n:translate="">Info</strong>
+    <span tal:omit-tag=""
+        i18n:translate="message_permissions_blocking_link_redirect">
+      You see this page because you have permission to edit this link.
+      Others will be immediately redirected to the link's target URL.
+    </span>
+  </div>
+</metal:header>
 
-    <metal:content-core fill-slot="content-core">
-        <metal:block define-macro="content-core">
-        <p tal:define="portal_url portal_state/portal_url;
-                       navigation_root_url portal_state/navigation_root_url;
-                       url view/absolute_target_url">
-            <span i18n:translate="link_address">The link address is:</span>
-            <a href="#" tal:attributes="href url"
-                        tal:content="context/remoteUrl">remote url</a>
-        </p>
-        </metal:block>
-    </metal:content-core>
+<metal:content-core fill-slot="content-core">
+<metal:block define-macro="content-core">
+  <p tal:define="portal_url portal_state/portal_url;
+                 navigation_root_url portal_state/navigation_root_url;
+                 url view/absolute_target_url">
+    <span i18n:translate="link_address">The link address is:</span>
+    <a tal:attributes="href url" tal:content="context/remoteUrl">remote url</a>
+  </p>
+</metal:block>
+</metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt
index dd38ae0..b21f554 100644
--- a/plone/app/contenttypes/browser/templates/listing.pt
+++ b/plone/app/contenttypes/browser/templates/listing.pt
@@ -1,136 +1,125 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <metal:listingmacro define-macro="listing">
+  <metal:listingmacro define-macro="listing">
     <tal:results define="batch view/batch">
-    <tal:listing condition="batch">
-
-        <div metal:define-slot="entries">
-            <article tal:repeat="item batch" metal:define-macro="entries">
+      <tal:listing condition="batch">
+        <div class="entries" metal:define-slot="entries">
+          <tal:repeat repeat="item batch" metal:define-macro="entries">
             <tal:block tal:define="obj item/getObject;
-                                   item_url item/getURL;
-                                   item_id item/getId;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_modified item/ModificationDate;
-                                   item_created item/CreationDate;
-                                   item_icon item/getIcon;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-                <metal:block define-slot="entry">
-                <header metal:define-macro="listitem"
-                    tal:attributes="class python:item_type == 'Event' and 'vevent' or ''">
-
+                item_url item/getURL;
+                item_id item/getId;
+                item_title item/Title;
+                item_description item/Description;
+                item_type item/PortalType;
+                item_modified item/ModificationDate;
+                item_created item/CreationDate;
+                item_icon item/getIcon;
+                item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                item_wf_state item/review_state;
+                item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                item_creator item/Creator;
+                item_link python:item_type in view.use_view_action and item_url+'/view' or item_url;
+                item_has_image python:view.has_image(obj);
+                item_is_event python:view.is_event(obj)">
+              <metal:block define-slot="entry">
+                <article class="entry">
+                  <header metal:define-macro="listitem" tal:attributes="class python:'vevent' if item_is_event else None">
                     <span class="summary">
-                        <a href="#"
-                           tal:attributes="href item_link;
-                                           class string:$item_type_class $item_wf_state_class url;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
+                      <a tal:attributes="href item_link;
+                                         class string:$item_type_class $item_wf_state_class url;
+                                         title item_type"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
                     </span>
 
                     <metal:block metal:define-macro="document_byline">
-                    <span class="documentByLine">
-                        <tal:event condition="python:view.is_event(obj)">
-                            <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
-                            <span tal:condition="item/location"
-                                  i18n:translate="label_event_byline_location">&mdash;
-                                <span tal:content="string:${item/location}"
-                                      class="location"
-                                      i18n:name="location">Oslo</span>,
-                            </span>
+                      <span class="documentByLine">
+                        <tal:event condition="item_is_event">
+                          <tal:date tal:replace="structure python:view.formatted_date(obj)"/>
+                          <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;
+                            <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,
+                          </span>
                         </tal:event>
                         <tal:byline condition="view/show_about">
+                          &mdash;
+                          <tal:name tal:condition="item_creator"
+                              tal:define="author python:view.pas_member.info(item_creator);
+                                          creator_short_form author/username;
+                                          creator_long_form string:?author=${author/username};
+                                          creator_is_openid python:'/' in creator_short_form;
+                                          creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
+                          <span i18n:translate="label_by_author">
+                            by
+                            <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                                tal:content="author/name_or_id"
+                                tal:omit-tag="not:author"
+                                i18n:name="author">
+                              Bob Dobalina
+                            </a>
+                          </span>
+                          </tal:name>
+
+                          <tal:modified condition="python: item_type != 'Event'">
                             &mdash;
+                            <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>
+                            <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
+                              August 16, 2001 at 23:35:59
+                            </span>
+                          </tal:modified>
 
-                            <tal:name tal:condition="item_creator"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            creator_short_form author/username;
-                                            creator_long_form string:?author=${author/username};
-                                            creator_is_openid python:'/' in creator_short_form;
-                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">
-                              <span i18n:translate="label_by_author">
-                                by
-                              <a href="#"
-                                 tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                 tal:content="author/name_or_id"
-                                 tal:omit-tag="not:author"
-                                 i18n:name="author">
-                                Bob Dobalina
-                              </a>
-                              </span>
-
-                            </tal:name>
-
-                            <tal:modified condition="python: item_type != 'Event'">
-                                &mdash;
-                                <tal:mod i18n:translate="box_last_modified">
-                                  last modified
-                                </tal:mod>
-                                <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">
-                                  August 16, 2001 at 23:35:59
-                                </span>
-                            </tal:modified>
-
-                            <metal:description define-slot="description_slot">
-                                <tal:comment replace="nothing">
-                                    Place custom listing info for custom types here
-                                </tal:comment>
-                            </metal:description>
+                          <metal:description define-slot="description_slot">
+                            <tal:comment replace="nothing">
+                              Place custom listing info for custom types here
+                            </tal:comment>
+                          </metal:description>
                         </tal:byline>
-                    </span>
+                      </span>
                     </metal:block>
-
-                </header>
-
-                <p class="description discreet"
-                    tal:condition="item_description"
-                    tal:content="item_description">
+                  </header>
+                  <p class="description discreet"
+                      tal:condition="item_description"
+                      tal:content="item_description">
                     description
-                </p>
-            </metal:block>
+                  </p>
+                </article>
+              </metal:block>
             </tal:block>
-            </article>
+          </tal:repeat>
         </div>
 
         <div metal:use-macro="context/batch_macros/macros/navigation" />
 
-    </tal:listing>
+      </tal:listing>
 
-    <metal:empty metal:define-slot="no_items_in_listing">
+      <metal:empty metal:define-slot="no_items_in_listing">
         <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
+            tal:condition="not: view/batch"
+            tal:content="view/no_items_message">
+          There are currently no items in this folder.
         </p>
-    </metal:empty>
+      </metal:empty>
 
     </tal:results>
-    </metal:listingmacro>
+  </metal:listingmacro>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt
new file mode 100644
index 0000000..61f46e6
--- /dev/null
+++ b/plone/app/contenttypes/browser/templates/listing_album.pt
@@ -0,0 +1,80 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="here/main_template/macros/master"
+      i18n:domain="plone">
+<body>
+
+<metal:content-core fill-slot="content-core">
+<metal:main_macro define-macro="content-core"
+    tal:define="images view/album_images;
+                albums view/album_folders">
+
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
+
+  <tal:images tal:repeat="image images">
+    <div class="photoAlbumEntry">
+      <a tal:attributes="href string:${image/getURL}/view;
+                         title image/Description">
+        <span class="photoAlbumEntryWrapper">
+          <img tal:define="ob image/getObject;
+                           scale ob/@@images;
+                           img_tag python:scale.scale('image', scale='thumb').tag()"
+              tal:replace="structure img_tag" />
+        </span>
+        <span class="photoAlbumEntryTitle" tal:content="image/Title">
+            Title
+        </span>
+      </a>
+    </div>
+  </tal:images>
+
+  <div class="visualClear"><!-- --></div>
+
+  <tal:albums tal:repeat="album albums">
+    <div class="photoAlbumEntry photoAlbumFolder"
+        tal:define="album_ob album/getObject;
+                    subalbum_view nocall:album_ob/@@album_view;
+                    random_image subalbum_view/album_random_image;
+                    number_images subalbum_view/album_number_images"
+        tal:condition="random_image">
+      <a tal:attributes="href album/getURL;
+                         title album/Description">
+        <span class="photoAlbumEntryWrapper">
+          <img tal:define="random_img_ob random_image/getObject;
+                           scales random_img_ob/@@images"
+               tal:replace="structure python:scales.tag(fieldname='image', scale='thumb')" />
+        </span>
+        <span class="photoAlbumEntryTitle">
+          <tal:title content="album/Title">Title</tal:title>
+          (<tal:number content="number_images" />)
+        </span>
+      </a>
+    </div>
+  </tal:albums>
+
+  <div class="visualClear"><!-- --></div>
+
+  <div metal:use-macro="context/batch_macros/macros/navigation" />
+
+  <metal:empty metal:define-slot="no_items_in_listing">
+    <p class="discreet"
+        tal:condition="not: view/batch"
+        tal:content="view/no_items_message">
+      There are currently no items in this folder.
+    </p>
+  </metal:empty>
+
+</metal:main_macro>
+</metal:content-core>
+
+</body>
+</html>
diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt
index af12928..a4455e4 100644
--- a/plone/app/contenttypes/browser/templates/listing_summary.pt
+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt
@@ -1,68 +1,60 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
-<metal:block use-macro="context/@@folder_listing/macros/content-core|context/@@standard_view/macros/content-core">
-
-    <metal:entries fill-slot="entries">
-    <metal:block use-macro="context/@@folder_listing/macros/entries|context/@@standard_view/macros/entries">
-    <metal:entry fill-slot="entry">
-
-                <div class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
-
-                    <a href="#"
-                        tal:condition="python:getattr(obj.aq_explicit, 'image', None)"
-                        tal:attributes="href item_link">
-                        <div class="tileImage">
-                            <img src="" alt=""
-                                 tal:define="scales obj/@@images;
-                                             scale python:scales.scale('image', 'thumb')"
-                                 tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
-                        </div>
-                    </a>
-
-                    <h2 class="tileHeadline" metal:define-macro="listitem">
-
-                        <a href="#"
-                           class="summary url"
-                           tal:attributes="href item_link;
-                                           title item_type"
-                           tal:content="item_title">
-                            Item Title
-                        </a>
-
-                    </h2>
-
-                    <div metal:use-macro="context/@@folder_listing/macros/document_byline|context/@@collection_view/macros/document_byline"></div>
-
-                    <p class="tileBody" tal:condition="item_description">
-                        <span class="description" tal:content="item_description">
-                            description
-                        </span>
-                    </p>
-
-                    <p class="tileFooter">
-                        <a href=""
-                           tal:attributes="href item_link"
-                           i18n:translate="read_more">
-                        Read More&hellip;
-                        </a>
-                    </p>
-
-                    <div class="visualClear"><!-- --></div>
-
-                </div>
-
-    </metal:entry>
+<metal:block use-macro="context/@@listing_view/macros/content-core">
+
+  <metal:entries fill-slot="entries">
+    <metal:block use-macro="context/@@listing_view/macros/entries">
+      <metal:entry fill-slot="entry">
+
+        <article class="tileItem visualIEFloatFix" tal:define="obj item/getObject">
+
+          <div class="tileImage" tal:condition="item_has_image">
+            <a tal:attributes="href item_link">
+              <img tal:define="scales obj/@@images;
+                               scale python:scales.scale('image', 'thumb')"
+                  tal:replace="structure python:scale and scale.tag(css_class='tileImage') or None" />
+            </a>
+          </div>
+
+          <h2 class="tileHeadline" metal:define-macro="listitem">
+            <a class="summary url"
+                tal:attributes="href item_link;
+                                title item_type"
+                tal:content="item_title">
+              Item Title
+            </a>
+          </h2>
+
+          <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>
+
+          <p class="tileBody" tal:condition="item_description">
+            <span class="description" tal:content="item_description">
+              description
+            </span>
+          </p>
+
+          <p class="tileFooter">
+            <a tal:attributes="href item_link"
+                i18n:translate="read_more">
+              Read More&hellip;
+            </a>
+          </p>
+
+          <div class="visualClear"><!-- --></div>
+
+        </article>
+
+      </metal:entry>
     </metal:block>
-    </metal:entries>
+  </metal:entries>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt
index 3bd8c4f..ab1d18e 100644
--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt
+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt
@@ -1,105 +1,97 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
-
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:content-core fill-slot="content-core">
 <metal:block define-macro="content-core">
 
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="text view/text"
-         tal:condition="text"
-         tal:attributes="class view/text_class">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
+  <div metal:define-macro="text-field-view"
+      id="parent-fieldname-text" class="stx"
+      tal:define="text view/text"
+      tal:condition="text"
+      tal:attributes="class view/text_class">
+    <div metal:define-slot="inside" tal:replace="structure text">The body</div>
+  </div>
 
-    <tal:results define="batch view/batch">
+  <tal:results define="batch view/batch">
     <tal:listing condition="batch">
 
-
-          <div metal:use-macro="context/batch_macros/macros/navigation" />
-          <div class="has-table">
-            <table class="listing"
-                   summary="Content listing"
-                   i18n:attributes="summary summary_content_listing;">
-                <thead>
-                    <tr>
-                        <th class="nosort"
-                            i18n:translate=""
-                            tal:repeat="field view/tabular_fields"
-                            tal:content="field">Field name</th>
-                    </tr>
-                </thead>
-
-                <tbody>
-
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div class="has-table">
+        <table class="listing"
+            summary="Content listing"
+            i18n:attributes="summary summary_content_listing;">
+          <thead>
+            <tr>
+              <th class="nosort"
+                  i18n:translate=""
+                  tal:repeat="field view/tabular_fields"
+                  tal:content="field">Field name</th>
+            </tr>
+          </thead>
+          <tbody>
             <tal:entries tal:repeat="item batch">
-            <tal:block tal:define="item_url item/getURL;
-                                   item_title item/Title;
-                                   item_description item/Description;
-                                   item_type item/PortalType;
-                                   item_type_class python:'contenttype-' + view.normalizeString(item_type);
-                                   item_wf_state item/review_state;
-                                   item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
-                                   item_creator item/Creator;
-                                   item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
-
-                    <tr metal:define-macro="listitem"
-                        tal:define="oddrow repeat/item/odd;"
-                        tal:attributes="class python: oddrow and 'even' or 'odd'">
-
-                        <tal:block tal:repeat="field view/tabular_fields">
-                            <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
-                                tal:define="field_data python:view.tabular_fielddata(item, field)">
-                                <tal:block tal:replace="field_data/value" />
-                            </td>
-                            <td tal:condition="python:field == 'Title'">
-                                <a href="#"
-                                   tal:attributes="href item_link;
-                                                   class string:$item_wf_state_class $item_type_class;
-                                                   title item_description;"
-                                   tal:content="item_title">
-                                    Item Title
-                                </a>
-                            </td>
-                            <td tal:condition="python:field == 'Creator'"
-                                tal:define="author python:view.pas_member.info(item_creator);
-                                            name python:author['fullname'] or author['username']">
-                                <a href="#"
-                                   tal:condition="author"
-                                   tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
-                                   tal:content="name">Jos Henken</a>
-                            </td>
-                        </tal:block>
-
-                    </tr>
-
-            </tal:block>
+              <tal:block tal:define="item_url item/getURL;
+                                     item_title item/Title;
+                                     item_description item/Description;
+                                     item_type item/PortalType;
+                                     item_type_class python:'contenttype-' + view.normalizeString(item_type);
+                                     item_wf_state item/review_state;
+                                     item_wf_state_class python:'state-' + view.normalizeString(item_wf_state);
+                                     item_creator item/Creator;
+                                     item_link python:item_type in view.use_view_action and item_url+'/view' or item_url">
+                <tr metal:define-macro="listitem"
+                    tal:define="oddrow repeat/item/odd;"
+                    tal:attributes="class python: oddrow and 'even' or 'odd'">
+
+                  <tal:block tal:repeat="field view/tabular_fields">
+                    <td tal:condition="python:field not in ['Title', 'Creator', 'getIcon']"
+                        tal:define="field_data python:view.tabular_fielddata(item, field)">
+                      <tal:block tal:replace="field_data/value" />
+                    </td>
+                    <td tal:condition="python:field == 'Title'">
+                      <a href="#"
+                          tal:attributes="href item_link;
+                          class string:$item_wf_state_class $item_type_class;
+                          title item_description;"
+                          tal:content="item_title">
+                        Item Title
+                      </a>
+                    </td>
+                    <td tal:condition="python:field == 'Creator'"
+                        tal:define="author python:view.pas_member.info(item_creator);
+                                    name python:author['fullname'] or author['username']">
+                      <a tal:condition="author"
+                          tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"
+                          tal:content="name">Jos Henken</a>
+                    </td>
+                  </tal:block>
+
+                </tr>
+              </tal:block>
             </tal:entries>
+          </tbody>
+        </table>
+      </div>
 
-                </tbody>
-            </table>
-          </div>
-
-        <div metal:use-macro="context/batch_macros/macros/navigation" />
+      <div metal:use-macro="context/batch_macros/macros/navigation" />
 
     </tal:listing>
 
     <metal:empty metal:define-slot="no_items_in_listing">
-        <p class="discreet"
-           tal:condition="not: view/batch"
-           tal:content="view/no_items_message">
-            There are currently no items in this folder.
-        </p>
+    <p class="discreet"
+    tal:condition="not: view/batch"
+    tal:content="view/no_items_message">
+    There are currently no items in this folder.
+    </p>
     </metal:empty>
 
-    </tal:results>
+  </tal:results>
 
 </metal:block>
 </metal:content-core>
diff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt
index 009e8d9..ebd41fe 100644
--- a/plone/app/contenttypes/browser/templates/newsitem.pt
+++ b/plone/app/contenttypes/browser/templates/newsitem.pt
@@ -1,57 +1,49 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="context/main_template/macros/master"
-      i18n:domain="plone">
+    xmlns:tal="http://xml.zope.org/namespaces/tal"
+    xmlns:metal="http://xml.zope.org/namespaces/metal"
+    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+    lang="en"
+    metal:use-macro="context/main_template/macros/master"
+    i18n:domain="plone">
 <body>
 
 <metal:head fill-slot="javascript_head_slot">
-<script type="text/javascript">
-  jQuery(function($){
-    $('.newsImageContainer a').prepOverlay({subtype: 'image'});
-  })
-</script>
+  <script type="text/javascript">
+    jQuery(function ($) {
+      $('.newsImageContainer a').prepOverlay({subtype: 'image'});
+    });
+  </script>
 </metal:head>
 
 <metal:content-core fill-slot="content-core">
-    <metal:block define-macro="content-core"
-          tal:define="templateId template/getId;
-                      scale_func context/@@images;
-                      scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
-
-        <figure class="newsImageContainer"
-             tal:condition="python: scaled_image">
-            <a href="#"
-               tal:define="here_url context/@@plone_context_state/object_url;
-                           large_image python: scale_func.scale('image', scale='large');"
-               tal:attributes="href large_image/url">
-              <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
-
-              <figcaption
-                 tal:condition="context/image_caption|nothing"
-                 tal:content="structure context/image_caption" >
-              </figcaption>
-
-            </a>
-        </figure>
-
-
-        <div id="parent-fieldname-text"
-             tal:condition="context/text"
-             tal:content="structure context/text/output" />
-
-        <div class="newsFileContainer"
-             tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
-            <a tal:content="structure python:context.image_caption or context.image.filename"
-               tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
-            </a>
-        </div>
-
-    </metal:block>
+<metal:block define-macro="content-core"
+    tal:define="templateId template/getId;
+                scale_func context/@@images;
+                scaled_image python: getattr(context.aq_explicit, 'image', False) and scale_func.scale('image', scale='mini')">
+  <figure class="newsImageContainer" tal:condition="python: scaled_image">
+    <a tal:define="here_url context/@@plone_context_state/object_url;
+                   large_image python: scale_func.scale('image', scale='large');"
+        tal:attributes="href large_image/url">
+      <img tal:replace="structure python: scaled_image.tag(css_class='newsImage')" />
+      <figcaption tal:condition="context/image_caption|nothing"
+          tal:content="structure context/image_caption">
+      </figcaption>
+    </a>
+  </figure>
+
+  <div id="parent-fieldname-text"
+      tal:condition="context/text"
+      tal:content="structure context/text/output" />
+
+  <div class="newsFileContainer"
+      tal:condition="python: getattr(context.aq_explicit, 'image', False) and not scaled_image">
+    <a tal:content="structure python:context.image_caption or context.image.filename"
+        tal:attributes="href python:'%s/@@download/image' % context.absolute_url()">
+    </a>
+  </div>
+
+</metal:block>
 </metal:content-core>
 
 </body>
 </html>
-
diff --git a/plone/app/contenttypes/browser/templates/thumbnail_view.pt b/plone/app/contenttypes/browser/templates/thumbnail_view.pt
deleted file mode 100644
index 220c22d..0000000
--- a/plone/app/contenttypes/browser/templates/thumbnail_view.pt
+++ /dev/null
@@ -1,70 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
-      xmlns:tal="http://xml.zope.org/namespaces/tal"
-      xmlns:metal="http://xml.zope.org/namespaces/metal"
-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
-      lang="en"
-      metal:use-macro="here/main_template/macros/master"
-      i18n:domain="plone">
-
-<body>
-
-<metal:content-core fill-slot="content-core">
-<metal:main_macro define-macro="content-core"
-     tal:define="data view/getFoldersAndImages;
-                total_number_of_images data/total_number_of_images;
-                site_properties context/portal_properties/site_properties;
-                use_view_action site_properties/typesUseViewActionInListings|python:();">
-
-    <div metal:define-macro="text-field-view"
-         id="parent-fieldname-text" class="stx"
-         tal:define="has_text exists:context/aq_explicit/text/output;
-                     text python:has_text and here.text.output or ''"
-         tal:condition="text"
-         tal:attributes="class python:here.Format() in ('text/structured', 'text/x-rst', ) and 'stx' or 'plain'">
-        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
-    </div>
-
-    <tal:results tal:repeat="item data/results"
-                 tal:condition="total_number_of_images">
-    <div class="photoAlbumEntry photoAlbumFolder"
-         tal:define="item_path item/getPath;
-                     item_type item/portal_type;
-                     is_album python:item_type=='Folder';
-                     images_album python:data['images'].get(item_path, []);
-                     number_of_images python:len(images_album);
-                     item_title item/Title;
-                     item_url item/getURL;
-                     item_description item/Description;
-                     item_view python:item_type in use_view_action and item_url+'/view' or item_url;
-                     random python:modules['random'];
-                     random_image python:number_of_images and random.choice(images_album).getObject() or None"
-          tal:attributes="class python:is_album and 'photoAlbumEntry photoAlbumFolder' or 'photoAlbumEntry'">
-                <a tal:attributes="href item_view;
-                                   title item_description">
-                    <span class="photoAlbumEntryWrapper"
-                          tal:condition="number_of_images">
-                     <img src="" alt=""
-                          tal:define="scales random_image/@@images;
-                                      scale python:scales.scale('image', 'thumb')"
-                          tal:replace="structure python:scale and scale.tag(title=item_description) or None" />
-                    </span>
-                    <span class="photoAlbumEntryTitle">
-                       <tal:title content="item_title">Title</tal:title>
-                       <tal:count condition="is_album">(<tal:number content="number_of_images" />)</tal:count>
-                    </span>
-                </a>
-    </div>
-    </tal:results>
-    <div class="visualClear"><!-- --></div>
-
-    <p class="discreet"
-       i18n:translate=""
-       tal:condition="not: total_number_of_images">
-        No images found in this collection.
-    </p>
-
-</metal:main_macro>
-</metal:content-core>
-
-</body>
-</html>
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index f25dbd5..93a7e84 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -505,7 +505,7 @@ class FolderMigrator(ATCTFolderMigrator):
 
     def beforeChange_migrate_layout(self):
         if self.old.getLayout() == 'atct_album_view':
-            self.old.setLayout('folder_album_view')
+            self.old.setLayout('album_view')
 
 
 def migrate_folders(portal):
diff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py
index c710577..575fe5f 100644
--- a/plone/app/contenttypes/migration/topics.py
+++ b/plone/app/contenttypes/migration/topics.py
@@ -444,13 +444,13 @@ class TopicMigrator(InplaceCMFItemMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
@@ -556,13 +556,13 @@ class FolderishTopicMigrator(InplaceCMFFolderMigrator, ReferenceMigrator):
     src_meta_type = 'ATTopic'
     dst_portal_type = dst_meta_type = 'Collection'
     view_methods_mapping = {
-        'folder_listing': 'standard_view',
+        'folder_listing': 'listing_view',
         'folder_summary_view': 'summary_view',
-        'folder_full_view': 'all_content',
+        'folder_full_view': 'full_view',
         'folder_tabular_view': 'tabular_view',
-        'atct_album_view': 'thumbnail_view',
-        'atct_topic_view': 'standard_view',
-        }
+        'atct_album_view': 'album_view',
+        'atct_topic_view': 'listing_view',
+    }
 
     @property
     def registry(self):
diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index 06eb2ab..f7bf387 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1103</version>
+ <version>1104</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/profiles/default/types.xml b/plone/app/contenttypes/profiles/default/types.xml
index ac9b7eb..30011bd 100644
--- a/plone/app/contenttypes/profiles/default/types.xml
+++ b/plone/app/contenttypes/profiles/default/types.xml
@@ -4,15 +4,24 @@
  <!-- We remove old ATContentTypes if they exist.
       Instances of these types can still be looked at since the
       skin-templates in CMFPlone are there but they cannot be edited -->
- <object name="Collection" remove="True"/>
- <object name="Document" remove="True"/>
- <object name="Event" remove="True"/>
- <object name="File" remove="True"/>
- <object name="Folder" remove="True"/>
- <object name="Image" remove="True"/>
- <object name="Link" remove="True"/>
- <object name="News Item" remove="True"/>
- <object name="Topic" remove="True"/>
+ <object name="Collection" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Document" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Event" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="File" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Folder" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Image" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Link" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="News Item" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
+ <object name="Topic" remove="True"
+    meta_type="Factory-based Type Information with dynamic views"/>
 
  <object meta_type="Dexterity FTI" name="Collection" />
  <object meta_type="Dexterity FTI" name="Document" />
@@ -22,5 +31,8 @@
  <object meta_type="Dexterity FTI" name="Image" />
  <object meta_type="Dexterity FTI" name="News Item" />
  <object meta_type="Dexterity FTI" name="Event" />
+ 
+ <object name="Plone Site"
+    meta_type="Factory-based Type Information with dynamic views"/>
 
 </object>
diff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml
index c8ba5cd..0f93674 100644
--- a/plone/app/contenttypes/profiles/default/types/Collection.xml
+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml
@@ -27,14 +27,14 @@
   </property>
 
   <!-- View information -->
-  <property name="default_view">standard_view</property>
+  <property name="default_view">listing_view</property>
   <property name="default_view_fallback">False</property>
   <property name="view_methods">
-    <element value="standard_view" />
-    <element value="summary_view" />
-    <element value="all_content" />
-    <element value="tabular_view" />
-    <element value="thumbnail_view" />
+    <element value="listing_view"/>
+    <element value="summary_view"/>
+    <element value="tabular_view"/>
+    <element value="full_view"/>
+    <element value="album_view"/>
     <element value="event_listing"/>
   </property>
 
diff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml
index 98178db..0ca8284 100644
--- a/plone/app/contenttypes/profiles/default/types/Folder.xml
+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml
@@ -12,13 +12,13 @@
  <property name="filter_content_types">False</property>
  <property name="allowed_content_types"/>
  <property name="allow_discussion">False</property>
- <property name="default_view">folder_listing</property>
+ <property name="default_view">listing_view</property>
  <property name="view_methods">
-  <element value="folder_summary_view"/>
-  <element value="folder_full_view"/>
-  <element value="folder_tabular_view"/>
-  <element value="folder_album_view"/>
-  <element value="folder_listing"/>
+  <element value="listing_view"/>
+  <element value="summary_view"/>
+  <element value="tabular_view"/>
+  <element value="full_view"/>
+  <element value="album_view"/>
   <element value="event_listing"/>
  </property>
  <property name="default_view_fallback">False</property>
diff --git a/plone/app/contenttypes/profiles/default/types/Plone_Site.xml b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml
new file mode 100644
index 0000000..bd03b87
--- /dev/null
+++ b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0"?>
+<object name="Plone Site" meta_type="Factory-based Type Information with dynamic views" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+  <property name="immediate_view">listing_view</property>
+  <property name="default_view">listing_view</property>
+  <property name="view_methods">
+    <element value="listing_view" />
+    <element value="summary_view" />
+    <element value="tabular_view" />
+    <element value="full_view" />
+    <element value="album_view" />
+    <element value="event_listing" />
+  </property>
+</object>
diff --git a/plone/app/contenttypes/profiles/uninstall/types.xml b/plone/app/contenttypes/profiles/uninstall/types.xml
index fcd0b15..fca8606 100644
--- a/plone/app/contenttypes/profiles/uninstall/types.xml
+++ b/plone/app/contenttypes/profiles/uninstall/types.xml
@@ -24,4 +24,8 @@
     meta_type="Factory-based Type Information with dynamic views"/>
  <object name="News Item"
     meta_type="Factory-based Type Information with dynamic views"/>
+
+ <object name="Plone Site"
+    meta_type="Factory-based Type Information with dynamic views"/>
+
 </object>
diff --git a/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml b/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
new file mode 100644
index 0000000..316c0c5
--- /dev/null
+++ b/plone/app/contenttypes/profiles/uninstall/types/Plone_Site.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+<object name="Plone Site" meta_type="Factory-based Type Information with dynamic views" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">
+  <property name="immediate_view">folder_listing</property>
+  <property name="default_view">folder_listing</property>
+  <property name="view_methods">
+    <element value="folder_listing" />
+    <element value="folder_summary_view" />
+    <element value="folder_full_view" />
+    <element value="folder_tabular_view" />
+    <element value="atct_album_view" />
+  </property>
+</object>
diff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
index ff27d81..c15fed7 100644
--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot
+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot
@@ -5,37 +5,194 @@ Resource  plone/app/contenttypes/tests/robot/keywords.txt
 
 Variables  plone/app/contenttypes/tests/robot/variables.py
 
-Test Setup  Run keywords  Open test browser
+Test Setup  Run keywords  Setup Testcontent  Open test browser
 Test Teardown  Close all browsers
 
 *** Variables ***
 
 *** Test cases ***
 
-# XXX: This test needs to be refactored. The test should use robot content
-# keywords and is way too long.
-Scenario: Test Folderlisting
+Scenario: Test listing views
     Given I am logged in as site owner
-      And a Folder  Test-Folder
-      And a File  Test-File
-      And a Image  Test-Image
-      And a Collection  Test-Collection
-      And a Link  Test-Link
-      And a News Item  Test-News
-      And a Document  Test-Document
-     When I Go to  ${PLONE_URL}/folder_contents
-     Then Page Should Contain  Test-Folder
-      And Page Should Contain  Test-File
-      And Page Should Contain  Test-Image
-      And Page Should Contain  Test-Collection
-      And Page Should Contain  Test-Link
-      And Page Should Contain  Test-News
-      And Page Should Contain  Test-Document
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/summary_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/tabular_view
+    Then Listing should list contained content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/full_view
+    Then Listing should list contained content in detail
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view
+    Then Album should list contained images and albums
+
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/listing_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view
+    Then Listing should list all content
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/full_view
+    Then Listing should list all content in detail
+
+    When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view
+    Then Album should list all images and albums
 
 
 *** Keywords ***
 
+Listing should list contained content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Not Contain  Test Album Image 1
+  Page Should Not Contain  Test Album Image 2
+  Page Should Not Contain  Test Album Image 3
+  Page Should Not Contain  Test Sub Album
+  Page Should Not Contain  Test Sub Album Image 1
+  Page Should Not Contain  Test Sub Album Image 2
+  Page Should Not Contain  Test Sub Album Image 3
+
+Listing should list contained content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  0
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  0
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  0
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  0
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  0
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  0
+
+Album should list contained images and albums
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+
+
+Listing should list all content
+  Page Should Contain  Test Document
+  Page Should Contain  Test News Item
+  Page Should Contain  Test Event
+  Page Should Contain  Test Collection
+  Page Should Contain  Test Link
+  Page Should Contain  Test File
+  Page Should Contain  Test Image
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Page Should Contain  Test Album Image 2
+  Page Should Contain  Test Album Image 3
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Page Should Contain  Test Sub Album Image 2
+  Page Should Contain  Test Sub Album Image 3
+
+Listing should list all content in detail
+  Page Should Contain  Test Document
+  Page Should Contain  this is a test document
+  Page Should Contain  Test News Item
+  Page Should Contain  this is a test news item
+  Xpath Should Match X Times  //img[@title="Test News Item"]  1
+  Page Should Contain  Test Event
+  Page Should Contain  this is a test event
+  Page Should Contain  Test Collection
+  Page Should Contain  this is a test collection
+  Page Should Contain  Test Link
+  Page Should Contain  http://plone.org
+  Page Should Contain  Test File
+  Page Should Contain  file.pdf
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1
+
+Album should list all images and albums
+  Page Should Contain  Test Image
+  Xpath Should Match X Times  //img[@title="Test Image"]  2
+  Page Should Contain  Test Album Image 1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1
+  Page Should Contain  Test Album Image 2
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 2"]  1
+  Page Should Contain  Test Album Image 3
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 3"]  1
+  Page Should Contain  Test Sub Album Image 1
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 1"]  1
+  Page Should Contain  Test Sub Album Image 2
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 2"]  1
+  Page Should Contain  Test Sub Album Image 3
+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1
+  Page Should Contain  Test Album
+  Page Should Contain  Test Sub Album
+
+
+
+Setup Testcontent
+  Given I am logged in as site owner
+  Create Content  type=Document  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_document  title=Test Document  text=this is a test document
+  Create Content  type=News Item  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_news_item  title=Test News Item  text=this is a test news item
+  Create Content  type=Event  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_event  title=Test Event  text=this is a test event
+  Create Content  type=Collection  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_collection  title=Test Collection  query=${COLLECTION_TEST_QUERY}  text=this is a test collection
+  Create Content  type=Link  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_link  title=Test Link  remoteUrl=http://plone.org
+  Create Content  type=File  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_file  title=Test File
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_image  title=Test Image
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}  id=test_album  title=Test Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_1  title=Test Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_2  title=Test Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=album_image_3  title=Test Album Image 3
+  Create Content  type=Folder  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album  id=test_subalbum  title=Test Sub Album
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_1  title=Test Sub Album Image 1
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_2  title=Test Sub Album Image 2
+  Create Content  type=Image  container=${PLONE_PATH}/${TEST_FOLDER_ID}/test_album/test_subalbum  id=subalbum_image_3  title=Test Sub Album Image 3
+
 I go to
     [Arguments]  ${location}
     Go to  ${location}
-    Wait until page contains  Test-Document
diff --git a/plone/app/contenttypes/tests/robot/variables.py b/plone/app/contenttypes/tests/robot/variables.py
index 7310966..757ff22 100644
--- a/plone/app/contenttypes/tests/robot/variables.py
+++ b/plone/app/contenttypes/tests/robot/variables.py
@@ -2,4 +2,6 @@
 from pkg_resources import resource_filename
 
 TEST_FOLDER_ID = 'robot-test-folder'
+PLONE_PATH = '/plone'
+COLLECTION_TEST_QUERY = '[{"i": "path", "o": "plone.app.querystring.operation.string.path", "v": "%s/%s"}]' % (PLONE_PATH, TEST_FOLDER_ID)  # noqa
 PATH_TO_TEST_FILES = resource_filename("plone.app.contenttypes.tests", "")
diff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py
index 4b80a4b..ae6f601 100644
--- a/plone/app/contenttypes/tests/test_behaviors_collection.py
+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py
@@ -72,13 +72,14 @@ def _get_browser(self):
         )
         return browser
 
-    def test_collection_view(self):
+    def test_collection_default_dexterity_view(self):
+        # Test the default dexterity view
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/view')
         self.assertTrue(
             'v:records" value="Collection Test Page"' in browser.contents)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         browser = self._get_browser()
         browser.open(self.portal_url + '/collectioncontainer/tabular_view')
         # search from here:
diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py
index a129ff4..dca1157 100644
--- a/plone/app/contenttypes/tests/test_collection.py
+++ b/plone/app/contenttypes/tests/test_collection.py
@@ -1,35 +1,28 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
 from DateTime import DateTime
-
-import unittest2 as unittest
-
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.interface import alsoProvides
-from transaction import commit
-
-from plone.dexterity.interfaces import IDexterityFTI
-
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING
-from plone.app.contenttypes.testing import \
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-
-from plone.app.testing import SITE_OWNER_NAME
-from plone.app.testing import SITE_OWNER_PASSWORD
-
-from plone.testing.z2 import Browser
-from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, \
-    setRoles, login, logout
-
+from plone.app.contenttypes.behaviors.collection import ICollection as ICollection_behavior  # noqa
 from plone.app.contenttypes.interfaces import ICollection
-from plone.app.contenttypes.behaviors.collection import ICollection as \
-    ICollection_behavior
-
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
+from plone.app.contenttypes.testing import set_browserlayer
 from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import SITE_OWNER_NAME
+from plone.app.testing import SITE_OWNER_PASSWORD
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import login
+from plone.app.testing import logout
+from plone.app.testing import setRoles
 from plone.app.textfield.value import RichTextValue
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from transaction import commit
+from zope.component import createObject
+from zope.component import queryUtility
+from zope.interface import alsoProvides
 import os.path
+import unittest2 as unittest
 
 query = [{
     'i': 'Title',
@@ -75,9 +68,6 @@ def test_bbb_selectedViewFields(self):
         self.assertEqual(self.collection.selectedViewFields(),
                          [('Title', 'Title'), ('Description', 'Description')])
 
-    def test_getFoldersAndImages(self):
-        pass
-
     def test_bbb_setQuery(self):
         self.collection.setQuery(query)
         self.assertEqual(self.collection.query, query)
@@ -144,6 +134,7 @@ def setUp(self):
         self.browser = Browser(self.layer['app'])
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
@@ -154,33 +145,33 @@ def setUp(self):
         self.request.set('URL', self.collection.absolute_url())
         self.request.set('ACTUAL_URL', self.collection.absolute_url())
 
-    def test_view(self):
+    def test_collection_view(self):
         view = self.collection.restrictedTraverse('@@view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_standard_view(self):
-        view = self.collection.restrictedTraverse('standard_view')
+    def test_collection_listing_view(self):
+        view = self.collection.restrictedTraverse('listing_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_summary_view(self):
+    def test_collection_summary_view(self):
         view = self.collection.restrictedTraverse('summary_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_all_content(self):
-        view = self.collection.restrictedTraverse('all_content')
+    def test_collection_full_view(self):
+        view = self.collection.restrictedTraverse('full_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_tabular_view(self):
+    def test_collection_tabular_view(self):
         view = self.collection.restrictedTraverse('tabular_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
-    def test_thumbnail_view(self):
-        view = self.collection.restrictedTraverse('thumbnail_view')
+    def test_collection_album_view(self):
+        view = self.collection.restrictedTraverse('album_view')
         self.assertTrue(view())
         self.assertEqual(view.request.response.status, 200)
 
@@ -257,8 +248,8 @@ def test_collection_templates(self):
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
-        # open all_content template
-        browser.open('%s/@@all_content' % url)
+        # open full_view template
+        browser.open('%s/@@full_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -268,7 +259,7 @@ def test_collection_templates(self):
         self.assertTrue("Image example" in browser.contents)
 
         # open thumbnail_view template
-        browser.open('%s/@@thumbnail_view' % url)
+        browser.open('%s/@@album_view' % url)
         self.assertTrue("Lorem collection ipsum" in browser.contents)
         self.assertTrue("Image example" in browser.contents)
 
@@ -363,79 +354,6 @@ def test_custom_query(self):
                                                 'id': 'bla'})
         self.assertEqual(len(results), 0)
 
-    def test_getFoldersAndImages(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder and a subfolder to it, both with same id
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        folder.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        subfolder = folder['folder1']
-        # add example image into folder and its subfolder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        subfolder.invokeFactory("Image",
-                                "another_image",
-                                title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Folder',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        # The current implementation for getFoldersAndImages will return
-        # another_image under subfolder and also under folder
-        self.assertEqual(imagecount, 3)
-
-    def test_getFoldersAndImages_returning_images(self):
-        portal = self.layer['portal']
-        login(portal, 'admin')
-        # add a collection, so we can add a query to it
-        portal.invokeFactory("Collection",
-                             "collection",
-                             title="New Collection")
-
-        # add example folder
-        portal.invokeFactory("Folder",
-                             "folder1",
-                             title="Folder1")
-        folder = portal['folder1']
-
-        # add example image into this folder
-        folder.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-
-        # add another image into the portal root
-        portal.invokeFactory("Image",
-                             "image",
-                             title="Image example")
-        query = [{
-            'i': 'Type',
-            'o': 'plone.app.querystring.operation.string.is',
-            'v': 'Image',
-        }]
-        collection = portal['collection']
-        wrapped = ICollection_behavior(collection)
-        wrapped.query = query
-        imagecount = wrapped.getFoldersAndImages()['total_number_of_images']
-        self.assertEqual(imagecount, 2)
-
     def test_respect_navigation_root(self):
         portal = self.layer['portal']
         login(portal, 'admin')
@@ -485,6 +403,7 @@ class PloneAppCollectionEditViewsIntegrationTest(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        set_browserlayer(self.request)
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
         login(self.portal, TEST_USER_NAME)
         self.portal.invokeFactory('Folder', 'test-folder')
diff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py
index aa8237f..fcb0522 100644
--- a/plone/app/contenttypes/tests/test_folder.py
+++ b/plone/app/contenttypes/tests/test_folder.py
@@ -16,6 +16,7 @@
     PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,
     PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
 )
+from plone.app.contenttypes.tests.test_image import dummy_image
 
 from plone.app.testing import TEST_USER_ID, setRoles
 
@@ -131,21 +132,28 @@ def test_folder_view(self):
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_summary_view(self):
-        self.browser.open(self.folder_url + '/folder_summary_view')
+        self.browser.open(self.folder_url + '/summary_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_full_view(self):
-        self.browser.open(self.folder_url + '/folder_full_view')
+        self.browser.open(self.folder_url + '/full_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_tabular_view(self):
-        self.browser.open(self.folder_url + '/folder_tabular_view')
+        self.browser.open(self.folder_url + '/tabular_view')
         self.assertTrue('My Folder' in self.browser.contents)
         self.assertTrue('Document 1' in self.browser.contents)
 
     def test_folder_album_view(self):
-        self.browser.open(self.folder_url + '/folder_album_view')
+        self.folder.invokeFactory('Image', id='image1', title='Image 1')
+        img1 = self.folder['image1']
+        img1.image = dummy_image()
+        import transaction
+        transaction.commit()
+        self.browser.open(self.folder_url + '/album_view')
         self.assertTrue('My Folder' in self.browser.contents)
-        self.assertTrue('Document 1' in self.browser.contents)
+        self.assertIn(
+            '<img src="http://nohost/plone/folder/image1/@@images',
+            self.browser.contents)
diff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py
index e22f3e5..71c4563 100644
--- a/plone/app/contenttypes/tests/test_link.py
+++ b/plone/app/contenttypes/tests/test_link.py
@@ -1,31 +1,23 @@
 # -*- coding: utf-8 -*-
-import unittest2 as unittest
-
 from Products.CMFCore.utils import getToolByName
-
-from zope.interface import alsoProvides
-from zope.component import createObject
-from zope.component import queryUtility
-from zope.component import getMultiAdapter
-from zope.event import notify
-from zope.traversing.interfaces import BeforeTraverseEvent
-
-from plone.dexterity.interfaces import IDexterityFTI
-
+from datetime import datetime
+from plone.app.contenttypes.interfaces import ILink
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa
+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
-from plone.app.testing import logout
-from plone.testing.z2 import Browser
-
-from plone.app.contenttypes.interfaces import ILink
-
-from plone.app.contenttypes.testing import (
-    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,
-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING
-)
-
 from plone.app.testing import TEST_USER_ID, setRoles
+from plone.app.testing import logout
 from plone.app.z3cform.interfaces import IPloneFormLayer
+from plone.dexterity.interfaces import IDexterityFTI
+from plone.testing.z2 import Browser
+from zope.component import createObject
+from zope.component import getMultiAdapter
+from zope.component import queryUtility
+from zope.event import notify
+from zope.interface import alsoProvides
+from zope.traversing.interfaces import BeforeTraverseEvent
+import unittest2 as unittest
 
 
 class LinkIntegrationTest(unittest.TestCase):
@@ -162,6 +154,69 @@ def test_link_redirect_view_path_with_variable(self):
         self.assertTrue(view())
         self._assert_redirect('http://nohost/plone/my-folder/my-item')
 
+    def test_mailto_type(self):
+        self.link.remoteUrl = 'mailto:stress@test.us'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        rendered = view()
+        self.assertTrue('href="mailto:stress@test.us"' in rendered)
+        self._assert_response_OK()
+
+    def test_tel_type(self):
+        self.link.remoteUrl = 'tel:123'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        rendered = view()
+        self.assertTrue('href="tel:123"' in rendered)
+        self._assert_response_OK()
+
+    def test_callto_type(self):
+        self.link.remoteUrl = 'callto:123'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        rendered = view()
+        self.assertTrue('href="callto:123"' in rendered)
+        self._assert_response_OK()
+
+    def test_webdav_type(self):
+        self.link.remoteUrl = 'webdav://web.site/resource'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        rendered = view()
+        self.assertTrue('href="webdav://web.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_caldav_type(self):
+        self.link.remoteUrl = 'caldav://calendar.site/resource'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        rendered = view()
+        self.assertTrue('href="caldav://calendar.site/resource"' in rendered)
+        self._assert_response_OK()
+
+    def test_file_type(self):
+        self.link.remoteUrl = 'file:///some/file/on/your/system'
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
+
+    def test_ftp_type(self):
+        self.link.remoteUrl = 'ftp://thereIsNoSuchDomain.isThere{0}'.format(
+            datetime.now().isoformat()
+        )
+        view = self._get_link_redirect_view(self.link)
+        self._publish(self.link)
+        logout()
+        self.assertTrue(view())
+        self._assert_redirect(self.link.remoteUrl)
+
     def _publish(self, obj):
         portal_workflow = getToolByName(self.portal, "portal_workflow")
         portal_workflow.doActionFor(obj, 'publish')
@@ -170,6 +225,9 @@ def _assert_redirect(self, url):
         self.assertEqual(self.response.status, 302)
         self.assertEqual(self.response.headers['location'], url)
 
+    def _assert_response_OK(self):
+        self.assertEqual(self.response.status, 200)
+
     def _get_link_redirect_view(self, obj):
         return getMultiAdapter((obj, self.request), name='link_redirect_view')
 
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index 5afa65f..7ac2feb 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -924,7 +924,7 @@ def test_folder_is_migrated(self):
         dx_folder = self.portal['folder']
         self.assertTrue(IFolder.providedBy(dx_folder))
         self.assertTrue(at_folder is not dx_folder)
-        self.assertEqual(dx_folder.getLayout(), 'folder_album_view')
+        self.assertEqual(dx_folder.getLayout(), 'album_view')
 
     def test_folder_children_are_migrated(self):
         from plone.app.contenttypes.migration.migration import FolderMigrator
diff --git a/plone/app/contenttypes/tests/test_migration_topic.py b/plone/app/contenttypes/tests/test_migration_topic.py
index 7789964..d2a3b8d 100644
--- a/plone/app/contenttypes/tests/test_migration_topic.py
+++ b/plone/app/contenttypes/tests/test_migration_topic.py
@@ -63,7 +63,7 @@ def test_migrate_simple_topic(self):
         self.run_migration()
         new = ICollection(self.portal.topic)
         self.assertEqual(self.portal.topic.portal_type, 'Collection')
-        self.assertEqual(self.portal.topic.getLayout(), 'standard_view')
+        self.assertEqual(self.portal.topic.getLayout(), 'listing_view')
         self.assertEqual(new.sort_on, None)
         self.assertEqual(new.sort_reversed, None)
         self.assertEqual(new.limit, 1000)
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 04a0efa..2559210 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -3,6 +3,8 @@
 # from plone.app.contenttypes.utils import DEFAULT_TYPES
 from plone.dexterity.interfaces import IDexterityFTI
 from zope.component import queryUtility
+import logging
+logger = logging.getLogger(name="plone.app.contenttypes upgrade")
 
 
 def update_fti(context):
@@ -87,7 +89,7 @@ def migrate_to_richtext(context):
 
 
 def migrate_album_view(context):
-    """Migrate atct_album_view to folder_album_view."""
+    """Migrate atct_album_view to album_view."""
 
     # TODO: Don't reload the profile. Only change the settings.
     context.runImportStepFromProfile(
@@ -100,7 +102,7 @@ def migrate_album_view(context):
         obj = brain.getObject()
         current = context.getLayout()
         if current == 'atct_album_view':
-            obj.setLayout('folder_album_view')
+            obj.setLayout('album_view')
 
 
 # def enable_shortname_behavior(context):
@@ -121,3 +123,44 @@ def migrate_album_view(context):
 #         behaviors.append(behavior)
 #         behaviors = tuple(behaviors)
 #         fti._updateProperty('behaviors', behaviors)
+
+
+def use_new_view_names(context):
+    """Migrate old view names to new view names."""
+
+    # TODO: Don't reload the profile. Only change the settings.
+    context.runImportStepFromProfile(
+        'profile-plone.app.contenttypes:default',
+        'typeinfo',
+    )
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+
+    def _fixup(portal_type, view_map):
+        for brain in search(portal_type=portal_type):
+            obj = brain.getObject()
+            current = context.getLayout()
+            if current in view_map.keys():
+                obj.setLayout(view_map[current])
+                logger.info("Set view to {} for {}".format(
+                    view_map[current], obj.absolute_url()
+                ))
+
+    folder_view_map = {  # OLD : NEW
+        'folder_listing': 'listing_view',
+        'folder_full_view': 'full_view',
+        'folder_summary_view': 'summary_view',
+        'folder_tabular_view': 'tabular_view',
+        'folder_album_view': 'album_view',
+        'atct_album_view': 'album_view',
+    }
+    collection_view_map = {  # OLD : NEW
+        'view': 'listing_view',
+        'standard_view': 'listing_view',
+        'collection_view': 'listing_view',
+        'all_content': 'full_view',
+        'thumbnail_view': 'album_view',
+    }
+    _fixup('Folder', folder_view_map)
+    _fixup('Plone Site', folder_view_map)
+    _fixup('Collection', collection_view_map)
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index b8966bc..66a2f15 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -62,4 +62,14 @@
       handler=".upgrades.enable_shortname_behavior"
       />
  -->
+
+  <genericsetup:upgradeStep
+      source="1103"
+      destination="1104"
+      title="Use new view names"
+      description=""
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.use_new_view_names"
+      />
+
 </configure>
diff --git a/setup.py b/setup.py
index 7ff234b..b796c9a 100644
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ def read(*rnames):
     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()
 
 long_description = \
-    read('docs', 'README.rst') + \
+    read('docs', 'README.rst') + '\n\n' + \
     read('docs', 'CHANGES.rst')
 
 setup(name='plone.app.contenttypes',
@@ -55,7 +55,7 @@ def read(*rnames):
           'test': [
               'archetypes.schemaextender',
               'lxml',
-              'plone.app.robotframework',
+              'plone.app.robotframework [debug, reload] > 0.9.8',  # create image and file content for Image, File and News Item if not given.  # noqa
               'plone.app.testing [robot] >= 4.2.4',  # we need ROBOT_TEST_LEVEL
               # 'plone.dexterity >= 2.3.0',  # fixes setting default values # NOT RELEASED YET. # noqa
               'Products.ATContentTypes',


