Repository: plone.app.textfield
Branch: refs/heads/master
Date: 2015-05-26T18:11:39+02:00
Author: Jonas Baumann (jone) <jone@jone.ch>
Commit: https://github.com/plone/plone.app.textfield/commit/5ae60fb9b24fcaa6518eaf9fadf9c886c14f0989

Fix negative equality bug RawValueHolder and RichTextValue introduced in 1.2.5.

The problem is that the __ne__ implementation was wrong when the compared objects
were not of the same type.

When __eq__ is called with another type (e.g. None), the implementation
returned NotImplemented.

When __ne__ was called with another type, this lead to not NotImplemented, which is False
althought the result should be true in this case.

The fix is to change __ne__ to also return NotImplemented when the type is different, so
that python can solve the problem.

Files changed:
M docs/HISTORY.rst
M plone/app/textfield/field.rst
M plone/app/textfield/value.py

diff --git a/docs/HISTORY.rst b/docs/HISTORY.rst
index 42fcf38..5662b7c 100644
--- a/docs/HISTORY.rst
+++ b/docs/HISTORY.rst
@@ -4,7 +4,8 @@ Changelog
 1.2.6 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix negative equality bug RawValueHolder and RichTextValue introduced in 1.2.5.
+  [jone]
 
 
 1.2.5 (2015-03-26)
diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst
index aca6d51..4c24ada 100644
--- a/plone/app/textfield/field.rst
+++ b/plone/app/textfield/field.rst
@@ -127,6 +127,11 @@ and `encoding`:
     >>> value != value2
     False
 
+    >>> value == None
+    False
+    >>> value != None
+    True
+
 
 Converting a value from unicode
 -------------------------------
diff --git a/plone/app/textfield/value.py b/plone/app/textfield/value.py
index 7a1ca70..0bf06bb 100644
--- a/plone/app/textfield/value.py
+++ b/plone/app/textfield/value.py
@@ -25,7 +25,10 @@ def __eq__(self, other):
         return self.value == other.value
 
     def __ne__(self, other):
-        return not self.__eq__(other)
+        equal = self.__eq__(other)
+        if equal is NotImplemented:
+            return NotImplemented
+        return not equal
 
 
 class RichTextValue(object):
@@ -113,4 +116,7 @@ def __eq__(self, other):
         return vars(self) == vars(other)
 
     def __ne__(self, other):
-        return not self.__eq__(other)
+        equal = self.__eq__(other)
+        if equal is NotImplemented:
+            return NotImplemented
+        return not equal


Repository: plone.app.textfield
Branch: refs/heads/master
Date: 2015-05-26T09:20:40-07:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/plone.app.textfield/commit/8a2ef4c34bb3f48fd49d55266b2b32a92a80b1eb

Merge pull request #16 from plone/jone-value-equal

Fix negative equality bug RawValueHolder and RichTextValue introduced in 1.2.5

Files changed:
M docs/HISTORY.rst
M plone/app/textfield/field.rst
M plone/app/textfield/value.py

diff --git a/docs/HISTORY.rst b/docs/HISTORY.rst
index 42fcf38..5662b7c 100644
--- a/docs/HISTORY.rst
+++ b/docs/HISTORY.rst
@@ -4,7 +4,8 @@ Changelog
 1.2.6 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix negative equality bug RawValueHolder and RichTextValue introduced in 1.2.5.
+  [jone]
 
 
 1.2.5 (2015-03-26)
diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst
index aca6d51..4c24ada 100644
--- a/plone/app/textfield/field.rst
+++ b/plone/app/textfield/field.rst
@@ -127,6 +127,11 @@ and `encoding`:
     >>> value != value2
     False
 
+    >>> value == None
+    False
+    >>> value != None
+    True
+
 
 Converting a value from unicode
 -------------------------------
diff --git a/plone/app/textfield/value.py b/plone/app/textfield/value.py
index 7a1ca70..0bf06bb 100644
--- a/plone/app/textfield/value.py
+++ b/plone/app/textfield/value.py
@@ -25,7 +25,10 @@ def __eq__(self, other):
         return self.value == other.value
 
     def __ne__(self, other):
-        return not self.__eq__(other)
+        equal = self.__eq__(other)
+        if equal is NotImplemented:
+            return NotImplemented
+        return not equal
 
 
 class RichTextValue(object):
@@ -113,4 +116,7 @@ def __eq__(self, other):
         return vars(self) == vars(other)
 
     def __ne__(self, other):
-        return not self.__eq__(other)
+        equal = self.__eq__(other)
+        if equal is NotImplemented:
+            return NotImplemented
+        return not equal


