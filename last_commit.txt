Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T18:58:09+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/ed98d2c673c8865761bbd6725b60031fe43d49c4

fix for remote https themes, which are not loaded due to an lxml problem, where a IOError is raised on https sources

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 3f1aba7..e4e17a7 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -10,8 +10,11 @@
 import re
 
 from lxml import etree
+from lxml import html
 from six import string_types
 from future.moves.urllib.parse import urljoin
+from urllib2 import urlopen  # For Python 2
+#from urllib.requests import urlopen  # For Python 3
 
 from diazo.cssrules import convert_css_selectors
 from diazo.utils import namespaces, fullname, pkg_xsl, _createOptionParser
@@ -121,7 +124,10 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
         if not read_network and url[:6] in ('ftp://', 'http:/', 'https:'):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
-        theme_doc = etree.parse(url, parser=parser)
+        if url.startswith('https://'):
+            theme_doc = html.parse(urlopen(url))
+        else:
+            theme_doc = etree.parse(url, parser=parser)
         expand_theme(element, theme_doc, absolute_prefix)
     return rules_doc
 


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T19:06:24+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/d4703dcb1c950d63f6df78b246fc98b7902f623c

conditional imports for Python 2 and Python 3 to let Diazo work in both environments

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index e4e17a7..ee830fb 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -8,17 +8,22 @@
 
 import logging
 import re
+import sys
 
 from lxml import etree
 from lxml import html
 from six import string_types
 from future.moves.urllib.parse import urljoin
-from urllib2 import urlopen  # For Python 2
-#from urllib.requests import urlopen  # For Python 3
 
 from diazo.cssrules import convert_css_selectors
 from diazo.utils import namespaces, fullname, pkg_xsl, _createOptionParser
 
+# Conditional Imports
+if sys.version.startswith('2'):
+    from urllib2 import urlopen  # For Python 2
+else:
+    from urllib.requests import urlopen  # For Python 3
+
 logger = logging.getLogger('diazo')
 
 IMPORT_STYLESHEET = re.compile(


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T21:14:39+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/54c089cfe3ed53232e6620c4e262305e801d069f

wrong import from in Python 3 case: must be urllib.request

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index ee830fb..9b4b05d 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -22,7 +22,7 @@
 if sys.version.startswith('2'):
     from urllib2 import urlopen  # For Python 2
 else:
-    from urllib.requests import urlopen  # For Python 3
+    from urllib.request import urlopen  # For Python 3
 
 logger = logging.getLogger('diazo')
 


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T21:29:11+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/9b26a41e95c5f4c7ded2a2d1de046a33611fc525

reduced import due to future import posibility, as @lrowe recommended

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 9b4b05d..84e1288 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -8,22 +8,16 @@
 
 import logging
 import re
-import sys
 
 from lxml import etree
 from lxml import html
 from six import string_types
 from future.moves.urllib.parse import urljoin
+from future.moves.urllib.request import urlopen
 
 from diazo.cssrules import convert_css_selectors
 from diazo.utils import namespaces, fullname, pkg_xsl, _createOptionParser
 
-# Conditional Imports
-if sys.version.startswith('2'):
-    from urllib2 import urlopen  # For Python 2
-else:
-    from urllib.request import urlopen  # For Python 3
-
 logger = logging.getLogger('diazo')
 
 IMPORT_STYLESHEET = re.compile(


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T23:10:05+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/8b6cce0c49b4a05553b206ad3dc119c556e9b5d6

always use urlopen on remote locations

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 84e1288..480c9b3 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -10,7 +10,6 @@
 import re
 
 from lxml import etree
-from lxml import html
 from six import string_types
 from future.moves.urllib.parse import urljoin
 from future.moves.urllib.request import urlopen
@@ -123,10 +122,11 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
         if not read_network and url[:6] in ('ftp://', 'http:/', 'https:'):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
-        if url.startswith('https://'):
-            theme_doc = html.parse(urlopen(url))
+        if '://' in url:
+            theme = urlopen(url)
         else:
-            theme_doc = etree.parse(url, parser=parser)
+            theme = url
+        theme_doc = etree.parse(theme, parser=parser, base_url=url)
         expand_theme(element, theme_doc, absolute_prefix)
     return rules_doc
 


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-02T23:21:41+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/4cea8824dce2de58c54715bdda16b0072c3a58f5

make protocol check more pythonic

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 480c9b3..9200839 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -119,7 +119,8 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
     for element in rules_doc.xpath('//diazo:theme[@href]',
                                    namespaces=namespaces):
         url = urljoin(base, element.get('href'))
-        if not read_network and url[:6] in ('ftp://', 'http:/', 'https:'):
+        if not read_network and \
+           url.startswith(('ftp://', 'http://', 'https://')):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
         if '://' in url:


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-03T23:24:25+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/f06f71779b6bc9703383b9d383613cff52d6488a

fix broken tests, due to explicit usage of urllib only for remote themes

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 9200839..e4a0992 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -123,7 +123,7 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
            url.startswith(('ftp://', 'http://', 'https://')):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
-        if '://' in url:
+        if url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
             theme = urlopen(url)
         else:
             theme = url


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-03T23:36:15+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/1657f2d7ddadcb52a30d8a78d107f57a5271d9c4

apply lrowe flake8 fix to my fork

Files changed:
M lib/diazo/compiler.py
M lib/diazo/cssrules.py
M lib/diazo/rules.py
M lib/diazo/run.py
M lib/diazo/tests/test_diazo.py

diff --git a/lib/diazo/compiler.py b/lib/diazo/compiler.py
index 2f67b48..e6b176f 100644
--- a/lib/diazo/compiler.py
+++ b/lib/diazo/compiler.py
@@ -9,19 +9,16 @@
               theme="//div[@id='page-content']"/>
     </rules>\
 """
-usage = __doc__
-
 import logging
 import pkg_resources
-
 from lxml import etree
 from six import string_types
-
 from diazo.rules import process_rules
 from diazo.utils import pkg_xsl, _createOptionParser, CustomResolver
 from diazo.utils import quote_param, split_params
 
 logger = logging.getLogger('diazo')
+usage = __doc__
 
 
 def set_parser(stylesheet, parser, compiler_parser=None):
diff --git a/lib/diazo/cssrules.py b/lib/diazo/cssrules.py
index 84aece6..4512ea7 100644
--- a/lib/diazo/cssrules.py
+++ b/lib/diazo/cssrules.py
@@ -10,17 +10,15 @@
 </rules>\
 """
 from __future__ import absolute_import
-usage = __doc__
-
 from optparse import OptionParser
 from lxml import etree
 from experimental.cssselect import css_to_xpath
-
 from . import utils
-
 import sys
 import logging
+
 logger = logging.getLogger('diazo')
+usage = __doc__
 
 
 def convert_css_selectors(rules):
diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index e4a0992..ce45a3a 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -4,20 +4,17 @@
 
 Preprocess RULES, an diazo rules file
 """
-usage = __doc__
-
 import logging
 import re
-
 from lxml import etree
 from six import string_types
 from future.moves.urllib.parse import urljoin
 from future.moves.urllib.request import urlopen
-
 from diazo.cssrules import convert_css_selectors
 from diazo.utils import namespaces, fullname, pkg_xsl, _createOptionParser
 
 logger = logging.getLogger('diazo')
+usage = __doc__
 
 IMPORT_STYLESHEET = re.compile(
     r'''(?P<before>@import[ \t]+(?P<paren>url\([ \t]?)?(?P<quote>['"]?))'''
diff --git a/lib/diazo/run.py b/lib/diazo/run.py
index 2c6dfe9..10b685e 100644
--- a/lib/diazo/run.py
+++ b/lib/diazo/run.py
@@ -7,22 +7,18 @@
 
 Usage: %prog -r RULES [options] CONTENT
 """
-usage = __doc__
-
 import logging
 import sys
 import os.path
-
 from lxml import etree
 from six import string_types
-
 from diazo.compiler import compile_theme
 from diazo.utils import AC_READ_NET, AC_READ_FILE, _createOptionParser
 from diazo.utils import split_params, quote_param
-
 import diazo.runtrace
 
 logger = logging.getLogger('diazo')
+usage = __doc__
 
 
 class RunResolver(etree.Resolver):
diff --git a/lib/diazo/tests/test_diazo.py b/lib/diazo/tests/test_diazo.py
index 5698cd4..cf26659 100644
--- a/lib/diazo/tests/test_diazo.py
+++ b/lib/diazo/tests/test_diazo.py
@@ -9,9 +9,7 @@
 import difflib
 from io import BytesIO
 import unittest
-import future.standard_library
-with future.standard_library.hooks():
-    import configparser
+import configparser
 import pkg_resources
 
 import diazo.compiler


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-03T23:50:12+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/afa0ca0d0627e54c43d67ba82a2a8dd999345c8e

make checks even more explicite to avoid any problem on remote connections

Files changed:
M lib/diazo/rules.py

diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index ce45a3a..50ad6d6 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -117,10 +117,11 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
                                    namespaces=namespaces):
         url = urljoin(base, element.get('href'))
         if not read_network and \
-           url.startswith(('ftp://', 'http://', 'https://')):
+                url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
-        if url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
+        elif read_network and \
+                url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
             theme = urlopen(url)
         else:
             theme = url


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-04T00:00:48+01:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/38d529d9482bd14de5c71178580458f011e506c9

modified changes.txt to describe changes / changelog

Files changed:
M docs/CHANGES.txt

diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 6ce2a22..8ffaa11 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -5,6 +5,8 @@ Changelog
 ------------------
 
 - Nothing changed yet.
+* Fixed issue with remote themes via https connections
+  [loechel]
 
 
 1.1.0 (2014-10-23)


Repository: diazo
Branch: refs/heads/master
Date: 2015-03-31T03:31:11+02:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/e86b8f6e1b84ed597d4a36d9440143b8bb823694

update gitignore

Files changed:
M .gitignore

diff --git a/.gitignore b/.gitignore
index 5935b7b..32841ce 100644
--- a/.gitignore
+++ b/.gitignore
@@ -6,6 +6,7 @@ dist
 *.pyc
 *.pyo
 *.egg-info
+.eggs/
 .installed.cfg
 .tox
 include


Repository: diazo
Branch: refs/heads/master
Date: 2015-04-08T14:53:34+02:00
Author: Alexander Loechel () <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/diazo/commit/22ca84bc0aeeed0d2c4761522ff5ae250853495d

Merge remote-tracking branch 'plone/master'

Files changed:
M docs/CHANGES.txt
M lib/diazo/tests/test_diazo.py
M lib/diazo/utils.py
M setup.py
D docs/HISTORY.txt

diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 8ffaa11..f95fae4 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-1.1.1 (unreleased)
+1.1.2 (unreleased)
 ------------------
 
 - Nothing changed yet.
@@ -9,12 +9,20 @@ Changelog
   [loechel]
 
 
+1.1.1 (2015-03-21)
+------------------
+
+- Make flake8 happy by moving imports to top of file.
+  [elro]
+
+
 1.1.0 (2014-10-23)
 ------------------
 
 * Python 3 support.
   [regebro, elro]
 
+
 1.0.6 (2014-09-11)
 ------------------
 
diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
deleted file mode 100644
index 9b22d07..0000000
--- a/docs/HISTORY.txt
+++ /dev/null
@@ -1,48 +0,0 @@
-History
-=======
-
-0.3 - 2010-05-29
-----------------
-
-* Added access control defaults, diazo.utils.AC_READ_NET, diazo.utils.AC_READ_FILE
-
-0.3rc2 - 2010-05-25
--------------------
-
-Note: the current lxml Windows binaries are unable to load files over the
-network.
-
-* Fixed bug resolving the rules files while use a network theme.
-  [elro]
-
-0.3rc1 - 2010-05-23
--------------------
-
-* Nested <rules> are now allowed, so you can simply::
-
-    ``<xi:include href="standard-rules.xml" />``
-
-  [elro]
-
-* XInclude processing is now enabled by default
-  [elro]
-
-* XSL directives inlined in the rules file are now supported (e.g.
-  <xsl:strip-space elements="*" />). With the inline XSL support, there should
-  now be no need for extra.xsl.
-  [elro]
-
-* libxml2 quotes CR characters on output, causing Firefox to insert extra
-  blank lines in ``<pre>`` blocks. As HTTP specified CRLF line endings for
-  form this was a problem for us. This is now caught by the compiled XSL.
-  [elro]
-
-* Support for including complete fragment documents with SSI/ESI.
-  [elro]
-
-* A bug on namespace upgrade is fixed, but you should update your namespace to
-  http://namespaces.plone.org/diazo anyway.
-  [elro]
-
-* First release candidate.
-  [elro]
diff --git a/lib/diazo/tests/test_diazo.py b/lib/diazo/tests/test_diazo.py
index cf26659..37c17cb 100644
--- a/lib/diazo/tests/test_diazo.py
+++ b/lib/diazo/tests/test_diazo.py
@@ -7,9 +7,12 @@
 import os
 import sys
 import difflib
-from io import BytesIO
+from io import BytesIO, StringIO
 import unittest
-import configparser
+try:
+    import configparser
+except ImportError:
+    import ConfigParser as configparser
 import pkg_resources
 
 import diazo.compiler
@@ -17,6 +20,7 @@
 
 from diazo.utils import quote_param
 from formencode.doctest_xml_compare import xml_compare
+from future.builtins import str
 
 
 if __name__ == '__main__':
@@ -137,9 +141,9 @@ def testAll(self):
 
         # Read the whole thing to strip off xhtml namespace.
         # If we had xslt 2.0 then we could use xpath-default-namespace.
-        self.themed_string = bytes(result)
+        self.themed_string = str(result)
         self.themed_content = etree.ElementTree(
-            file=BytesIO(self.themed_string), parser=etree.HTMLParser())
+            file=StringIO(self.themed_string), parser=etree.HTMLParser())
 
         # remove the extra meta content type
 
diff --git a/lib/diazo/utils.py b/lib/diazo/utils.py
index 8fd4802..deb7d35 100644
--- a/lib/diazo/utils.py
+++ b/lib/diazo/utils.py
@@ -4,7 +4,12 @@
 
 from lxml import etree
 from optparse import OptionParser
-from six import string_types, integer_types
+from six import string_types, integer_types, PY3
+
+if PY3:
+    stdout = sys.stdout.buffer
+else:
+    stdout = sys.stdout
 
 strparam = etree.XSLT.strparam
 
@@ -109,7 +114,7 @@ def _createOptionParser(usage):
     parser = OptionParser(usage=usage)
     parser.add_option("-o", "--output", metavar="output.xsl",
                       help="Output filename (instead of stdout)",
-                      dest="output", default=sys.stdout)
+                      dest="output", default=stdout)
     parser.add_option("-p", "--pretty-print", action="store_true",
                       help="Pretty print output (may alter rendering in "
                            "browser)",
diff --git a/setup.py b/setup.py
index 6799637..0564cac 100644
--- a/setup.py
+++ b/setup.py
@@ -19,7 +19,7 @@
 
 setup(
     name='diazo',
-    version='1.1.1.dev0',
+    version='1.1.2.dev0',
     description='''Diazo implements a Deliverance like language using a pure
         XSLT engine. With Diazo, you "compile" your theme and ruleset in one
         step, then use a superfast/simple transform on each request thereafter.


Repository: diazo
Branch: refs/heads/master
Date: 2015-04-08T14:59:34+02:00
Author: Laurence Rowe (lrowe) <l@lrowe.co.uk>
Commit: https://github.com/plone/diazo/commit/7bb1137552692cf2096abc05e6f795f46de485b1

Merge pull request #41 from loechel/master

Fix case when theme is provided via an remote https source

Files changed:
M .gitignore
M docs/CHANGES.txt
M lib/diazo/rules.py

diff --git a/.gitignore b/.gitignore
index 5935b7b..32841ce 100644
--- a/.gitignore
+++ b/.gitignore
@@ -6,6 +6,7 @@ dist
 *.pyc
 *.pyo
 *.egg-info
+.eggs/
 .installed.cfg
 .tox
 include
diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 84d40e9..f95fae4 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -5,6 +5,8 @@ Changelog
 ------------------
 
 - Nothing changed yet.
+* Fixed issue with remote themes via https connections
+  [loechel]
 
 
 1.1.1 (2015-03-21)
diff --git a/lib/diazo/rules.py b/lib/diazo/rules.py
index 8316d0f..50ad6d6 100644
--- a/lib/diazo/rules.py
+++ b/lib/diazo/rules.py
@@ -9,6 +9,7 @@
 from lxml import etree
 from six import string_types
 from future.moves.urllib.parse import urljoin
+from future.moves.urllib.request import urlopen
 from diazo.cssrules import convert_css_selectors
 from diazo.utils import namespaces, fullname, pkg_xsl, _createOptionParser
 
@@ -115,10 +116,16 @@ def expand_themes(rules_doc, parser=None, absolute_prefix=None,
     for element in rules_doc.xpath('//diazo:theme[@href]',
                                    namespaces=namespaces):
         url = urljoin(base, element.get('href'))
-        if not read_network and url[:6] in ('ftp://', 'http:/', 'https:'):
+        if not read_network and \
+                url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
             raise ValueError("Supplied theme '%s', "
                              "but network access denied." % url)
-        theme_doc = etree.parse(url, parser=parser)
+        elif read_network and \
+                url.startswith(('ftp://', 'ftps://', 'http://', 'https://')):
+            theme = urlopen(url)
+        else:
+            theme = url
+        theme_doc = etree.parse(theme, parser=parser, base_url=url)
         expand_theme(element, theme_doc, absolute_prefix)
     return rules_doc
 


