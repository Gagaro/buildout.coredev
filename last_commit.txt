Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-02-26T22:43:13+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/7db068a254b558e2ed350b8f572cbbb953d0503b

undo changes introduced with a537138d8fbfdbacd571886dd3728debe45ea9ee

Conflicts:
	docs/CHANGES.txt

Files changed:
M docs/CHANGES.txt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index b7eedf7..44e2ab5 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -6,10 +6,15 @@ Changelog
 
 - Replaced ``jq`` usage with ``$``
   [keul]
+
 - Fixing reference sorting issue due to global function refactoring done
   on recent versions
   [keul]
 
+- #16 fix browsing for widgets in case field has set ``allowed_types``
+
+>>>>>>> ed36daf... undo changes introduced with a537138d8fbfdbacd571886dd3728debe45ea9ee
+
 2.5.2 (2014-09-11)
 ------------------
 
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index b5e46d8..f121547 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -18,7 +18,7 @@
 try:
     # Zope >= 2.13
     from AccessControl.security import checkPermission
-    checkPermission   # pyflakes
+    checkPermission  # pyflakes
 except ImportError:
     from Products.Five.security import checkPermission
 
@@ -282,6 +282,7 @@ def getResult(self):
             self.request.form['path'] = {
                 'query': '/'.join(folder.getPhysicalPath()),
                 'depth': 1}
+            self.request.form['portal_type'] = []
             if 'sort_on' in self.widget.base_query:
                 self.request.form['sort_on'] = self.widget.base_query['sort_on']
             else:
@@ -292,7 +293,7 @@ def getResult(self):
             result = []
         b_size = int(self.request.get('b_size', 20))
         b_start = int(self.request.get('b_start', 0))
-
+        
         return Batch(result, b_size, b_start, orphan=1)
 
     def breadcrumbs(self, startup_directory=None):
@@ -373,5 +374,5 @@ def preview_url(self, item):
         site_properties = portal_properties.site_properties
         types_use_view = site_properties.typesUseViewActionInListings
         if item.portal_type in types_use_view:
-            return item.getURL()+'/view'
+            return item.getURL() + '/view'
         return item.getURL()
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index 838f3f6..d8cecf5 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -12,7 +12,7 @@
 from Products.Five import BrowserView
 try:
     from Testing.testbrowser import Browser  # Zope >= 2.13
-    Browser   # pyflakes
+    Browser  # pyflakes
 except ImportError:
     from Products.Five.testbrowser import Browser  # Zope < 2.13
 
@@ -25,7 +25,7 @@
 from Products.PloneTestCase.PloneTestCase import portal_owner
 try:
     import plone.uuid
-    plone.uuid   # pyflakes
+    plone.uuid  # pyflakes
     import pkg_resources
     uuid_version = pkg_resources.get_distribution("plone.uuid").version
     if uuid_version < '1.0.2':
@@ -199,7 +199,7 @@ def test_alternatetemplate(self):
         alternate_template = named_template_adapter(
             ViewPageTemplateFile('sample.pt'))
         zope.component.provideAdapter(alternate_template,
-                                      adapts=(BrowserView, ),
+                                      adapts=(BrowserView,),
                                       provides=INamedTemplate,
                                       name='alternate')
         fieldname = 'multiRef2'
@@ -319,7 +319,7 @@ def test_preview_url(self):
         # now testing what URL is get for content's where "/view" if forced
         site_properties = self.portal.portal_properties.site_properties
         site_properties.typesUseViewActionInListings = ('RefBrowserDemo',)
-        assert popup.preview_url(brain) == brain.getURL()+'/view'
+        assert popup.preview_url(brain) == brain.getURL() + '/view'
 
     def test_at_url(self):
         makeContent(self.folder, portal_type='RefBrowserDemo', id='with space')
@@ -654,13 +654,15 @@ def test_popup_html(self):
         assert '<input type="hidden" name="at_url" value="plone/demo1" />' in body
 
     def test_popup_items(self):
+        wanted_rows = 7
         wanted_insertlinks = 2
 
         body = self.getNormalizedPopup()
         INSERTLINK = re.compile(r'<input type="checkbox" class="insertreference" id="[0-9a-f]*?" rel="[0-9a-f]*?" />')
         INSERTLINK_UUID = re.compile(r'<input type="checkbox" class="insertreference" id="[\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12}" rel="[\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12}" />')
 
-        ROWS = re.compile(r'<tr.*?>(.*?)</tr>', re.MULTILINE|re.DOTALL)
+        ROWS = re.compile(r'<tr.*?>(.*?)</tr>', re.MULTILINE | re.DOTALL)
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows)
         if HAS_DASH_UUID:
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:
@@ -669,6 +671,7 @@ def test_popup_items(self):
         makeContent(self.portal, portal_type='News Item', id='newsitem')
         body = self.getNormalizedPopup()
 
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows + 1)
         if HAS_DASH_UUID:
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-02-26T22:43:41+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/9a4a82f901de79a502733d39d285e16cd1e4e684

only show items that are either referenceable or can be used for browsing

Files changed:
M src/archetypes/referencebrowserwidget/browser/popup.pt

diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index c7cae56..f292395 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -180,7 +180,8 @@
             referenceable python:view.isReferencable(item);
             browsable python:allow_browse and view.isBrowsable(item);
             title_or_id python:view.title_or_id(item);
-            color view/discreetColor;">
+            color view/discreetColor;"
+        tal:condition="python: referenceable or browsable or not isNotSelf">
 
           <tr tal:define="oddrow repeat/item/odd"
           tal:attributes="class python:oddrow and 'even' or 'odd'">


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-02-26T22:44:14+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/f0ab0093016165a30fc440c7a2cc110f80d8d806

add unittest

Files changed:
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index d8cecf5..bda02ae 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -668,15 +668,24 @@ def test_popup_items(self):
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks)
 
+        # add a news-item, which is not shown in the popup because its not in allowed_types
         makeContent(self.portal, portal_type='News Item', id='newsitem')
         body = self.getNormalizedPopup()
-
-        self.assertEqual(len(ROWS.findall(body)), wanted_rows + 1)
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows, 'not linkable types should not be shown')
         if HAS_DASH_UUID:
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks)
-
+            
+        # add a document, this will be addable in the popup
+        makeContent(self.portal, portal_type='Document', id='another-doc')
+        body = self.getNormalizedPopup()
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows + 1)
+        if HAS_DASH_UUID:
+            self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks + 1)
+        else:
+            self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks + 1)
+            
     def test_bc_navigationroot(self):
         makeContent(self.portal.folder1, portal_type='Document', id='page1')
 


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-02-26T22:44:26+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/b8a7ffc1a4627805d9bfdeea28ebc31488725505

filter non-referencable items before creating the batch to not end up having batch navigation pages without any items

Files changed:
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index f292395..5f20cd8 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -172,18 +172,18 @@
     <tbody>
       <tal:results tal:define="plone_view context/@@plone;
                                normalizeString nocall:plone_view/normalizeString;"
-                   tal:repeat="item batch">
+                   tal:repeat="info batch">
         <tal:row
         tal:define="
+            item info/item;
             uid python:view.getUid(item);
             isNotSelf python:view.isNotSelf(item);
-            referenceable python:view.isReferencable(item);
-            browsable python:allow_browse and view.isBrowsable(item);
+            referenceable info/referenceable;
+            browsable python:allow_browse and info['browsable'];
             title_or_id python:view.title_or_id(item);
-            color view/discreetColor;"
-        tal:condition="python: referenceable or browsable or not isNotSelf">
+            color view/discreetColor;">
 
-          <tr tal:define="oddrow repeat/item/odd"
+          <tr tal:define="oddrow repeat/info/odd"
           tal:attributes="class python:oddrow and 'even' or 'odd'">
 
         <td>
@@ -220,10 +220,10 @@
                   tal:content="title_or_id" />
           </tal:foldercheck>
           <a class="discreet"
-		     tal:condition="referenceable"
-			 onclick="window.open(jQuery(this).attr('href'));return false;"
-			 tal:attributes="href python:view.preview_url(item)">
-          	(<span i18n:translate="" i18n:domain="plone">View</span>)
+             tal:condition="referenceable"
+             onclick="window.open(jQuery(this).attr('href'));return false;"
+             tal:attributes="href python:view.preview_url(item)">
+            (<span i18n:translate="" i18n:domain="plone">View</span>)
           </a>
 
           <div tal:condition="widget/show_review_state">
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index f121547..faf8e2e 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -289,12 +289,31 @@ def getResult(self):
                 self.request.form['sort_on'] = 'getObjPositionInParent'
 
             result = qc(search_catalog=self.widget.search_catalog)
+
         else:
             result = []
+
         b_size = int(self.request.get('b_size', 20))
         b_start = int(self.request.get('b_start', 0))
-        
-        return Batch(result, b_size, b_start, orphan=1)
+        return Batch(self._prepareResults(result), b_size, b_start, orphan=1)
+
+    def _prepareResults(self, result):
+        items_with_info = []
+        for item in result:
+            browse = self.isBrowsable(item)
+            ref = self.isReferencable(item)
+            if self.allowed_types:
+                # we only show allowed_types and objects needed for browsing
+                if not (ref or browse or not self.isNotSelf(item)):
+                    continue
+
+            items_with_info.append(dict(
+                item=item,
+                browsable=browse,
+                referenceable=ref,
+                ))
+
+        return items_with_info
 
     def breadcrumbs(self, startup_directory=None):
         assert self._updated
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index bda02ae..906a352 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -251,7 +251,7 @@ def test_query(self):
         batch = popup.getResult()
         assert isinstance(batch, Batch)
         assert len(batch) == 1
-        assert batch[0].getObject() == self.portal.news
+        assert batch[0]['item'].getObject() == self.portal.news
         assert popup.has_queryresults
 
     def test_path_query(self):
@@ -267,8 +267,8 @@ def test_path_query(self):
         assert isinstance(batch, Batch)
         # expected to have both the folder at "path" and its contents
         assert len(batch) == 2
-        assert batch[0].getObject() == self.portal.events
-        assert batch[1].getObject() == self.portal.events.aggregator
+        assert batch[0]['item'].getObject() == self.portal.events
+        assert batch[1]['item'].getObject() == self.portal.events.aggregator
         assert popup.has_queryresults
 
     def test_noquery(self):
@@ -676,7 +676,7 @@ def test_popup_items(self):
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks)
-            
+
         # add a document, this will be addable in the popup
         makeContent(self.portal, portal_type='Document', id='another-doc')
         body = self.getNormalizedPopup()
@@ -685,7 +685,7 @@ def test_popup_items(self):
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks + 1)
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks + 1)
-            
+
     def test_bc_navigationroot(self):
         makeContent(self.portal.folder1, portal_type='Document', id='page1')
 


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-02-26T22:46:07+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/c4049abbaf35bff6abdabdd1b0fed2ae2d2c46a2

add warning to changelog, fix unit-test

Conflicts:
	docs/CHANGES.txt

Files changed:
M CONTRIBUTORS.txt
M docs/CHANGES.txt
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/CONTRIBUTORS.txt b/CONTRIBUTORS.txt
index af14db1..dedaaf8 100644
--- a/CONTRIBUTORS.txt
+++ b/CONTRIBUTORS.txt
@@ -6,4 +6,5 @@
  - Mathieu Le Marec - Pasquet, template fix
  - Thomas Desvenan, thomasdesvenain@gmail.com - fixes and minor features
  - Peter Holzer, hpeter@agitator.com - query update/fix
- - Gauthier Bastien, gauthier@imio.be - bug fixes
\ No newline at end of file
+ - Gauthier Bastien, gauthier@imio.be - bug fixes
+ - Harald Friessnegger, harald@webmeisterei.com - bug fixes
\ No newline at end of file
diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index 44e2ab5..407d296 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -13,7 +13,11 @@ Changelog
 
 - #16 fix browsing for widgets in case field has set ``allowed_types``
 
->>>>>>> ed36daf... undo changes introduced with a537138d8fbfdbacd571886dd3728debe45ea9ee
+  (Warning: changed return value of view/getResult from 
+  `[`brain1, brain2,..]``  to ``[dict(item=brain1,browsable=True,
+  referenceable=False),...]`` in case you customized popup.pt) 
+  [fRiSi]
+
 
 2.5.2 (2014-09-11)
 ------------------
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index 906a352..ff28f75 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -283,7 +283,7 @@ def test_noquery(self):
         batch = popup.getResult()
         assert isinstance(batch, Batch)
         assert len(batch) == 1
-        assert batch[0].getObject() == self.obj
+        assert batch[0]['item'].getObject() == self.obj
         assert popup.has_queryresults
 
     def test_title_or_id(self):


Repository: archetypes.referencebrowserwidget
Branch: refs/heads/master
Date: 2015-03-09T11:33:12+01:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/bb73074b780611a1ba96200f8fbd2303b90ddb90

Merge pull request #22 from plone/issue16-allowed_types

take allowed_types into account, but also allow users to browse

Files changed:
M CONTRIBUTORS.txt
M docs/CHANGES.txt
M src/archetypes/referencebrowserwidget/browser/popup.pt
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/CONTRIBUTORS.txt b/CONTRIBUTORS.txt
index af14db1..dedaaf8 100644
--- a/CONTRIBUTORS.txt
+++ b/CONTRIBUTORS.txt
@@ -6,4 +6,5 @@
  - Mathieu Le Marec - Pasquet, template fix
  - Thomas Desvenan, thomasdesvenain@gmail.com - fixes and minor features
  - Peter Holzer, hpeter@agitator.com - query update/fix
- - Gauthier Bastien, gauthier@imio.be - bug fixes
\ No newline at end of file
+ - Gauthier Bastien, gauthier@imio.be - bug fixes
+ - Harald Friessnegger, harald@webmeisterei.com - bug fixes
\ No newline at end of file
diff --git a/docs/CHANGES.txt b/docs/CHANGES.txt
index b7eedf7..407d296 100644
--- a/docs/CHANGES.txt
+++ b/docs/CHANGES.txt
@@ -6,10 +6,19 @@ Changelog
 
 - Replaced ``jq`` usage with ``$``
   [keul]
+
 - Fixing reference sorting issue due to global function refactoring done
   on recent versions
   [keul]
 
+- #16 fix browsing for widgets in case field has set ``allowed_types``
+
+  (Warning: changed return value of view/getResult from 
+  `[`brain1, brain2,..]``  to ``[dict(item=brain1,browsable=True,
+  referenceable=False),...]`` in case you customized popup.pt) 
+  [fRiSi]
+
+
 2.5.2 (2014-09-11)
 ------------------
 
diff --git a/src/archetypes/referencebrowserwidget/browser/popup.pt b/src/archetypes/referencebrowserwidget/browser/popup.pt
index c7cae56..5f20cd8 100644
--- a/src/archetypes/referencebrowserwidget/browser/popup.pt
+++ b/src/archetypes/referencebrowserwidget/browser/popup.pt
@@ -172,17 +172,18 @@
     <tbody>
       <tal:results tal:define="plone_view context/@@plone;
                                normalizeString nocall:plone_view/normalizeString;"
-                   tal:repeat="item batch">
+                   tal:repeat="info batch">
         <tal:row
         tal:define="
+            item info/item;
             uid python:view.getUid(item);
             isNotSelf python:view.isNotSelf(item);
-            referenceable python:view.isReferencable(item);
-            browsable python:allow_browse and view.isBrowsable(item);
+            referenceable info/referenceable;
+            browsable python:allow_browse and info['browsable'];
             title_or_id python:view.title_or_id(item);
             color view/discreetColor;">
 
-          <tr tal:define="oddrow repeat/item/odd"
+          <tr tal:define="oddrow repeat/info/odd"
           tal:attributes="class python:oddrow and 'even' or 'odd'">
 
         <td>
@@ -219,10 +220,10 @@
                   tal:content="title_or_id" />
           </tal:foldercheck>
           <a class="discreet"
-		     tal:condition="referenceable"
-			 onclick="window.open(jQuery(this).attr('href'));return false;"
-			 tal:attributes="href python:view.preview_url(item)">
-          	(<span i18n:translate="" i18n:domain="plone">View</span>)
+             tal:condition="referenceable"
+             onclick="window.open(jQuery(this).attr('href'));return false;"
+             tal:attributes="href python:view.preview_url(item)">
+            (<span i18n:translate="" i18n:domain="plone">View</span>)
           </a>
 
           <div tal:condition="widget/show_review_state">
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index b5e46d8..faf8e2e 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -18,7 +18,7 @@
 try:
     # Zope >= 2.13
     from AccessControl.security import checkPermission
-    checkPermission   # pyflakes
+    checkPermission  # pyflakes
 except ImportError:
     from Products.Five.security import checkPermission
 
@@ -282,18 +282,38 @@ def getResult(self):
             self.request.form['path'] = {
                 'query': '/'.join(folder.getPhysicalPath()),
                 'depth': 1}
+            self.request.form['portal_type'] = []
             if 'sort_on' in self.widget.base_query:
                 self.request.form['sort_on'] = self.widget.base_query['sort_on']
             else:
                 self.request.form['sort_on'] = 'getObjPositionInParent'
 
             result = qc(search_catalog=self.widget.search_catalog)
+
         else:
             result = []
+
         b_size = int(self.request.get('b_size', 20))
         b_start = int(self.request.get('b_start', 0))
-
-        return Batch(result, b_size, b_start, orphan=1)
+        return Batch(self._prepareResults(result), b_size, b_start, orphan=1)
+
+    def _prepareResults(self, result):
+        items_with_info = []
+        for item in result:
+            browse = self.isBrowsable(item)
+            ref = self.isReferencable(item)
+            if self.allowed_types:
+                # we only show allowed_types and objects needed for browsing
+                if not (ref or browse or not self.isNotSelf(item)):
+                    continue
+
+            items_with_info.append(dict(
+                item=item,
+                browsable=browse,
+                referenceable=ref,
+                ))
+
+        return items_with_info
 
     def breadcrumbs(self, startup_directory=None):
         assert self._updated
@@ -373,5 +393,5 @@ def preview_url(self, item):
         site_properties = portal_properties.site_properties
         types_use_view = site_properties.typesUseViewActionInListings
         if item.portal_type in types_use_view:
-            return item.getURL()+'/view'
+            return item.getURL() + '/view'
         return item.getURL()
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index 838f3f6..ff28f75 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -12,7 +12,7 @@
 from Products.Five import BrowserView
 try:
     from Testing.testbrowser import Browser  # Zope >= 2.13
-    Browser   # pyflakes
+    Browser  # pyflakes
 except ImportError:
     from Products.Five.testbrowser import Browser  # Zope < 2.13
 
@@ -25,7 +25,7 @@
 from Products.PloneTestCase.PloneTestCase import portal_owner
 try:
     import plone.uuid
-    plone.uuid   # pyflakes
+    plone.uuid  # pyflakes
     import pkg_resources
     uuid_version = pkg_resources.get_distribution("plone.uuid").version
     if uuid_version < '1.0.2':
@@ -199,7 +199,7 @@ def test_alternatetemplate(self):
         alternate_template = named_template_adapter(
             ViewPageTemplateFile('sample.pt'))
         zope.component.provideAdapter(alternate_template,
-                                      adapts=(BrowserView, ),
+                                      adapts=(BrowserView,),
                                       provides=INamedTemplate,
                                       name='alternate')
         fieldname = 'multiRef2'
@@ -251,7 +251,7 @@ def test_query(self):
         batch = popup.getResult()
         assert isinstance(batch, Batch)
         assert len(batch) == 1
-        assert batch[0].getObject() == self.portal.news
+        assert batch[0]['item'].getObject() == self.portal.news
         assert popup.has_queryresults
 
     def test_path_query(self):
@@ -267,8 +267,8 @@ def test_path_query(self):
         assert isinstance(batch, Batch)
         # expected to have both the folder at "path" and its contents
         assert len(batch) == 2
-        assert batch[0].getObject() == self.portal.events
-        assert batch[1].getObject() == self.portal.events.aggregator
+        assert batch[0]['item'].getObject() == self.portal.events
+        assert batch[1]['item'].getObject() == self.portal.events.aggregator
         assert popup.has_queryresults
 
     def test_noquery(self):
@@ -283,7 +283,7 @@ def test_noquery(self):
         batch = popup.getResult()
         assert isinstance(batch, Batch)
         assert len(batch) == 1
-        assert batch[0].getObject() == self.obj
+        assert batch[0]['item'].getObject() == self.obj
         assert popup.has_queryresults
 
     def test_title_or_id(self):
@@ -319,7 +319,7 @@ def test_preview_url(self):
         # now testing what URL is get for content's where "/view" if forced
         site_properties = self.portal.portal_properties.site_properties
         site_properties.typesUseViewActionInListings = ('RefBrowserDemo',)
-        assert popup.preview_url(brain) == brain.getURL()+'/view'
+        assert popup.preview_url(brain) == brain.getURL() + '/view'
 
     def test_at_url(self):
         makeContent(self.folder, portal_type='RefBrowserDemo', id='with space')
@@ -654,26 +654,38 @@ def test_popup_html(self):
         assert '<input type="hidden" name="at_url" value="plone/demo1" />' in body
 
     def test_popup_items(self):
+        wanted_rows = 7
         wanted_insertlinks = 2
 
         body = self.getNormalizedPopup()
         INSERTLINK = re.compile(r'<input type="checkbox" class="insertreference" id="[0-9a-f]*?" rel="[0-9a-f]*?" />')
         INSERTLINK_UUID = re.compile(r'<input type="checkbox" class="insertreference" id="[\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12}" rel="[\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12}" />')
 
-        ROWS = re.compile(r'<tr.*?>(.*?)</tr>', re.MULTILINE|re.DOTALL)
+        ROWS = re.compile(r'<tr.*?>(.*?)</tr>', re.MULTILINE | re.DOTALL)
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows)
         if HAS_DASH_UUID:
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks)
 
+        # add a news-item, which is not shown in the popup because its not in allowed_types
         makeContent(self.portal, portal_type='News Item', id='newsitem')
         body = self.getNormalizedPopup()
-
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows, 'not linkable types should not be shown')
         if HAS_DASH_UUID:
             self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks)
         else:
             self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks)
 
+        # add a document, this will be addable in the popup
+        makeContent(self.portal, portal_type='Document', id='another-doc')
+        body = self.getNormalizedPopup()
+        self.assertEqual(len(ROWS.findall(body)), wanted_rows + 1)
+        if HAS_DASH_UUID:
+            self.assertEqual(len(INSERTLINK_UUID.findall(body)), wanted_insertlinks + 1)
+        else:
+            self.assertEqual(len(INSERTLINK.findall(body)), wanted_insertlinks + 1)
+
     def test_bc_navigationroot(self):
         makeContent(self.portal.folder1, portal_type='Document', id='page1')
 


