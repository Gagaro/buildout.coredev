Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-11T15:23:51+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@redturtle.it>
Commit: https://github.com/plone/plone.app.layout/commit/10a905af52450ae44d45fc0492b4d68531382f72

Added data-view-url

The data-base-url is used by pat-modal as a target for redirects
For file like objects the absolute_url leads to the file download
For this reason I think it would be useful to have a data-view-url

Files changed:
M CHANGES.rst
M plone/app/layout/globals/patterns_settings.py
M plone/app/layout/globals/tests/test_pattern_settings.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 64c5fe1..187ca4b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.5.10 (unreleased)
 -------------------
 
+- Add view url to document as data-view-url
+  [ale-rt]
+
 - If toolbar logo is empty, use default
   [vangheem]
 
diff --git a/plone/app/layout/globals/patterns_settings.py b/plone/app/layout/globals/patterns_settings.py
index 669bbd1..cd21a2c 100644
--- a/plone/app/layout/globals/patterns_settings.py
+++ b/plone/app/layout/globals/patterns_settings.py
@@ -16,6 +16,15 @@ class PatternsSettings(BrowserView):
     """
     implements(IPatternsSettingsRenderer)
 
+    def view_url(self):
+        ''' Facade to the homonymous plone_context_state method
+        '''
+        context_state = getMultiAdapter(
+            (self.context, self.request),
+            name='plone_context_state'
+        )
+        return context_state.view_url()
+
     def __call__(self):
         portal_state = getMultiAdapter(
             (self.context, self.request), name=u'plone_portal_state')
@@ -24,6 +33,7 @@ def __call__(self):
         base_url = portal_state.portal_url()
         result = {
             'data-base-url': self.context.absolute_url(),
+            'data-view-url': self.view_url(),
             'data-portal-url': base_url,
             'data-i18ncatalogurl': base_url + '/plonejsi18n'
         }
diff --git a/plone/app/layout/globals/tests/test_pattern_settings.py b/plone/app/layout/globals/tests/test_pattern_settings.py
index a17cc1a..7743442 100644
--- a/plone/app/layout/globals/tests/test_pattern_settings.py
+++ b/plone/app/layout/globals/tests/test_pattern_settings.py
@@ -16,11 +16,27 @@ def testShouldReturnCorrectType(self):
             self.assertTrue(isinstance(key, basestring))
             self.assertTrue(isinstance(value, basestring))
 
-    def testUrls(self):
+    def testFolderUrls(self):
         settings = PatternsSettings(self.folder, self.app.REQUEST)
         result = settings()
         self.assertEquals(result['data-base-url'], self.folder.absolute_url())
         self.assertEquals(result['data-portal-url'], self.portal.absolute_url())
+        self.assertEquals(result['data-view-url'], self.folder.absolute_url())
+
+    def testFileUrls(self):
+        self.folder.invokeFactory('File', 'file1')
+        file_obj = self.folder['file1']
+        settings = PatternsSettings(file_obj, self.app.REQUEST)
+        result = settings()
+        self.assertEquals(result['data-base-url'], file_obj.absolute_url())
+        self.assertEquals(
+            result['data-portal-url'],
+            self.portal.absolute_url()
+        )
+        self.assertEquals(
+            result['data-view-url'],
+            file_obj.absolute_url() + '/view'
+        )
 
     def testPatternOptions(self):
         registry = getUtility(IRegistry)
@@ -30,4 +46,4 @@ def testPatternOptions(self):
 
         settings = PatternsSettings(self.folder, self.app.REQUEST)
         result = settings()
-        self.assertEquals(result['data-pat-foo'], u'{"foo": "bar"}')
\ No newline at end of file
+        self.assertEquals(result['data-pat-foo'], u'{"foo": "bar"}')


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2015-08-11T08:42:10-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/c0610be73e2257105c1479a55a8362b268b590e1

Merge pull request #55 from plone/data-base-url-broken-for-files

Fix data-base-url for file like objects

Files changed:
M CHANGES.rst
M plone/app/layout/globals/patterns_settings.py
M plone/app/layout/globals/tests/test_pattern_settings.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 64c5fe1..187ca4b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,9 @@ Changelog
 2.5.10 (unreleased)
 -------------------
 
+- Add view url to document as data-view-url
+  [ale-rt]
+
 - If toolbar logo is empty, use default
   [vangheem]
 
diff --git a/plone/app/layout/globals/patterns_settings.py b/plone/app/layout/globals/patterns_settings.py
index 669bbd1..cd21a2c 100644
--- a/plone/app/layout/globals/patterns_settings.py
+++ b/plone/app/layout/globals/patterns_settings.py
@@ -16,6 +16,15 @@ class PatternsSettings(BrowserView):
     """
     implements(IPatternsSettingsRenderer)
 
+    def view_url(self):
+        ''' Facade to the homonymous plone_context_state method
+        '''
+        context_state = getMultiAdapter(
+            (self.context, self.request),
+            name='plone_context_state'
+        )
+        return context_state.view_url()
+
     def __call__(self):
         portal_state = getMultiAdapter(
             (self.context, self.request), name=u'plone_portal_state')
@@ -24,6 +33,7 @@ def __call__(self):
         base_url = portal_state.portal_url()
         result = {
             'data-base-url': self.context.absolute_url(),
+            'data-view-url': self.view_url(),
             'data-portal-url': base_url,
             'data-i18ncatalogurl': base_url + '/plonejsi18n'
         }
diff --git a/plone/app/layout/globals/tests/test_pattern_settings.py b/plone/app/layout/globals/tests/test_pattern_settings.py
index a17cc1a..7743442 100644
--- a/plone/app/layout/globals/tests/test_pattern_settings.py
+++ b/plone/app/layout/globals/tests/test_pattern_settings.py
@@ -16,11 +16,27 @@ def testShouldReturnCorrectType(self):
             self.assertTrue(isinstance(key, basestring))
             self.assertTrue(isinstance(value, basestring))
 
-    def testUrls(self):
+    def testFolderUrls(self):
         settings = PatternsSettings(self.folder, self.app.REQUEST)
         result = settings()
         self.assertEquals(result['data-base-url'], self.folder.absolute_url())
         self.assertEquals(result['data-portal-url'], self.portal.absolute_url())
+        self.assertEquals(result['data-view-url'], self.folder.absolute_url())
+
+    def testFileUrls(self):
+        self.folder.invokeFactory('File', 'file1')
+        file_obj = self.folder['file1']
+        settings = PatternsSettings(file_obj, self.app.REQUEST)
+        result = settings()
+        self.assertEquals(result['data-base-url'], file_obj.absolute_url())
+        self.assertEquals(
+            result['data-portal-url'],
+            self.portal.absolute_url()
+        )
+        self.assertEquals(
+            result['data-view-url'],
+            file_obj.absolute_url() + '/view'
+        )
 
     def testPatternOptions(self):
         registry = getUtility(IRegistry)
@@ -30,4 +46,4 @@ def testPatternOptions(self):
 
         settings = PatternsSettings(self.folder, self.app.REQUEST)
         result = settings()
-        self.assertEquals(result['data-pat-foo'], u'{"foo": "bar"}')
\ No newline at end of file
+        self.assertEquals(result['data-pat-foo'], u'{"foo": "bar"}')


