Repository: plone.app.event
Branch: refs/heads/master
Date: 2015-01-29T11:34:49+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/plone.app.event/commit/e51fdbdea5debd22158c95095d4a8b835f3d0311

No need to return DateTime objects for the indexer. Products.DateRecurringIndex works with Python datetime objects.

Files changed:
M CHANGES.rst
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/test_dx_behaviors.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 56dc8f0..761e5de 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ Changelog
 2.0.0 (unreleased)
 ------------------
 
+- No need to return DateTime objects for the indexer.
+  Products.DateRecurringIndex works with Python datetime objects.
+  [thet]
+
 - Whole day setting doesn't hide effective range anymore. Fixes issue #167.
   [thet]
 
diff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py
index bd34e10..8a4b047 100644
--- a/plone/app/event/dx/behaviors.py
+++ b/plone/app/event/dx/behaviors.py
@@ -375,19 +375,13 @@ def data_postprocessing_context(context):
 # Start indexer
 @indexer(IDXEvent)
 def start_indexer(obj):
-    event = IEventBasic(obj)
-    if event.start is None:
-        return None
-    return DT(event.start)
+    return IEventBasic(obj).start
 
 
 # End indexer
 @indexer(IDXEvent)
 def end_indexer(obj):
-    event = IEventBasic(obj)
-    if event.end is None:
-        return None
-    return DT(event.end)
+    return IEventBasic(obj).end
 
 
 # Location indexer
diff --git a/plone/app/event/tests/test_dx_behaviors.py b/plone/app/event/tests/test_dx_behaviors.py
index 13f6d5d..899c6d8 100644
--- a/plone/app/event/tests/test_dx_behaviors.py
+++ b/plone/app/event/tests/test_dx_behaviors.py
@@ -295,12 +295,14 @@ def test_end_default(self):
 
     def test_start_end_dates_indexed(self):
         tz = pytz.timezone("Europe/Vienna")
+        start = tz.localize(datetime(2011, 11, 11, 11, 0))
+        end = tz.localize(datetime(2011, 11, 11, 12, 0))
         e1 = createContentInContainer(
             self.portal,
             'plone.app.event.dx.event',
             title='event1',
-            start=tz.localize(datetime(2011, 11, 11, 11, 0)),
-            end=tz.localize(datetime(2011, 11, 11, 12, 0)),
+            start=start,
+            end=end
         )
 
         result = self.portal.portal_catalog(
@@ -308,15 +310,9 @@ def test_start_end_dates_indexed(self):
         )
         self.assertEqual(1, len(result))
 
-        # result returns Zope's DateTime
-        self.assertEqual(
-            result[0].start,
-            DateTime('2011/11/11 11:00:00 Europe/Vienna')
-        )
-        self.assertEqual(
-            result[0].end,
-            DateTime('2011/11/11 12:00:00 Europe/Vienna')
-        )
+        # The start and end datetime's are indexed as Python datetimes
+        self.assertEqual(result[0].start, start)
+        self.assertEqual(result[0].end, end)
 
     def test_recurrence_indexing(self):
         tz = pytz.timezone("Europe/Vienna")


