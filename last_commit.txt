Repository: plone.app.contenttypes
Branch: refs/heads/master
Date: 2015-04-07T18:28:09+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/5a23afca235c8f3d35a1ce6b887d65d1d8bd92af

fix pep8- and spelling-errors

Files changed:
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/content.py
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/setuphandlers.py
M plone/app/contenttypes/tests/test_migration.py

diff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py
index 4dbf5b8..fef593c 100644
--- a/plone/app/contenttypes/behaviors/collection.py
+++ b/plone/app/contenttypes/behaviors/collection.py
@@ -4,22 +4,21 @@
     as BaseCollectionFeed
 from Products.CMFPlone.interfaces.syndication import IFeed
 from Products.CMFPlone.interfaces.syndication import ISyndicatable
-from plone.app.contentlisting.interfaces import IContentListing
 from plone.app.contenttypes import _
-from plone.autoform.interfaces import IFormFieldProvider
+from plone.app.z3cform.widget import QueryStringFieldWidget
 from plone.autoform import directives as form
+from plone.autoform.interfaces import IFormFieldProvider
 from plone.dexterity.interfaces import IDexterityContent
 from plone.supermodel import model
 from zope import schema
 from zope.component import adapter
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import provider
 from zope.interface import implementer
+from zope.interface import provider
 from zope.schema.interfaces import IVocabularyFactory
 from zope.schema.vocabulary import SimpleTerm
 from zope.schema.vocabulary import SimpleVocabulary
-from plone.app.z3cform.widget import QueryStringFieldWidget
 
 
 @implementer(IVocabularyFactory)
diff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py
index e49eefe..bfafca0 100644
--- a/plone/app/contenttypes/browser/collection.py
+++ b/plone/app/contenttypes/browser/collection.py
@@ -1,12 +1,11 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from plone.app.contenttypes.interfaces import IFolder
-from plone.app.contenttypes.interfaces import IImage
+from plone.app.contenttypes import _
 from plone.app.contenttypes.behaviors.collection import ICollection
 from plone.app.contenttypes.browser.folder import FolderView
-from plone.app.contenttypes import _
+from plone.app.contenttypes.interfaces import IFolder
+from plone.app.contenttypes.interfaces import IImage
 from plone.memoize.view import memoize
-import random
 
 
 class CollectionView(FolderView):
diff --git a/plone/app/contenttypes/content.py b/plone/app/contenttypes/content.py
index cd56046..faeb33b 100644
--- a/plone/app/contenttypes/content.py
+++ b/plone/app/contenttypes/content.py
@@ -14,7 +14,7 @@
 
 @implementer(ICollection)
 class Collection(Item):
-    """Convinience Item subclass for ``Collection`` portal type
+    """Convenience subclass for ``Collection`` portal type
     """
     # BBB
 
@@ -59,41 +59,41 @@ def results(self, **kwargs):
 
 @implementer(IDocument)
 class Document(Item):
-    """Convinience Item subclass for ``Document`` portal type
+    """Convenience subclass for ``Document`` portal type
     """
 
 
 @implementer(IFile)
 class File(Item):
-    """Convinience subclass for ``File`` portal type
+    """Convenience subclass for ``File`` portal type
     """
 
 
 @implementer(IFolder)
 class Folder(Container):
-    """Convinience subclass for ``Folder`` portal type
+    """Convenience subclass for ``Folder`` portal type
     """
 
 
 @implementer(IImage)
 class Image(Item):
-    """Convinience subclass for ``Image`` portal type
+    """Convenience subclass for ``Image`` portal type
     """
 
 
 @implementer(ILink)
 class Link(Item):
-    """Convinience subclass for ``Link`` portal type
+    """Convenience subclass for ``Link`` portal type
     """
 
 
 @implementer(INewsItem)
 class NewsItem(Item):
-    """Convinience subclass for ``News Item`` portal type
+    """Convenience subclass for ``News Item`` portal type
     """
 
 
 @implementer(IEvent)
 class Event(Item):
-    """Convinience subclass for ``Event`` portal type
+    """Convenience subclass for ``Event`` portal type
     """
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index abf84ac..798f897 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -99,7 +99,7 @@ def restore_refs(obj):
         if not getattr(obj, 'relatedItems', None):
             obj.relatedItems = PersistentList()
 
-        elif type(obj.relatedItems) != type(PersistentList()):
+        elif not isinstance(obj.relatedItems, PersistentList):
             obj.relatedItems = PersistentList(obj.relatedItems)
 
         for uuid in obj._relatedItems:
@@ -124,7 +124,7 @@ def restore_backrefs(portal, obj):
                 relitems = getattr(backrefobj, 'relatedItems', None)
                 if not relitems:
                     backrefobj.relatedItems = PersistentList()
-                elif type(relitems) != type(PersistentList()):
+                elif not isinstance(obj.relatedItems, PersistentList):
                     backrefobj.relatedItems = PersistentList(
                         obj.relatedItems
                     )
diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py
index 4a02168..02ae12b 100644
--- a/plone/app/contenttypes/setuphandlers.py
+++ b/plone/app/contenttypes/setuphandlers.py
@@ -14,6 +14,7 @@
 from plone.i18n.normalizer.interfaces import IURLNormalizer
 from plone.portlets.interfaces import ILocalPortletAssignmentManager
 from plone.portlets.interfaces import IPortletManager
+from plone.registry.interfaces import IRegistry
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
@@ -23,9 +24,7 @@
 from zope.i18n.interfaces import ITranslationDomain
 from zope.i18n.locales import locales
 from zope.interface import implements
-from plone.registry.interfaces import IRegistry
 
-import pkg_resources
 
 try:
     DEXTERITY_WITH_CONSTRAINS = True
@@ -397,7 +396,7 @@ def _delete_at_example_content(portal):
 def step_setup_various(context):
     if context.readDataFile('plone.app.contenttypes_default.txt') is None:
         return
-    portal = context.getSite()
+#    portal = context.getSite()
 #     enable_multilingual_behavior(portal)
 
 
diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py
index e3fb428..b753239 100644
--- a/plone/app/contenttypes/tests/test_migration.py
+++ b/plone/app/contenttypes/tests/test_migration.py
@@ -1561,8 +1561,8 @@ def test_dxmigration_migrate_check_migration_form_view(self):
 
     def test_dxmigration_migrate_check_migration_successful_message(self):
         """Check base class migrator view of changed base class names."""
-        self.browser.getControl(name='form.widgets.changed_base_classes:list') \
-            .value = ['true']
+        self.browser.getControl(
+            name='form.widgets.changed_base_classes:list').value = ['true']
         self.browser.getControl('Update').click()
         self.assertIn(
             self.good_info_message_template.format(1), self.browser.contents)


