Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2015-07-20T19:16:53Z
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/442617061c81babef71ea755207eb1384658e573

Allow to disable logs

Files changed:
M CHANGES.txt
M src/plone/recipe/zope2instance/__init__.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 06c97df..b9b1a4b 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,7 +4,8 @@ Changelog
 4.2.18 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Allow to disable logs
+  [frapell]
 
 
 4.2.17 (2015-04-29)
diff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py
index 5bc5300..e01d9e6 100644
--- a/src/plone/recipe/zope2instance/__init__.py
+++ b/src/plone/recipe/zope2instance/__init__.py
@@ -260,29 +260,6 @@ def build_zope_conf(self):
         zope_conf_additional = options.get('zope-conf-additional', '')
 
         # logging
-        event_log_level = options.get('event-log-level', 'INFO')
-        custom_event_log = options.get('event-log-custom', None)
-        default_log = os.path.sep.join(('log', self.name + '.log',))
-        # log file
-        if not custom_event_log:
-            event_log_name = options.get('event-log', default_log)
-            event_file = os.path.join(var_dir, event_log_name)
-            event_log_dir = os.path.dirname(event_file)
-            if not os.path.exists(event_log_dir):
-                os.makedirs(event_log_dir)
-            event_log_rotate = ''
-            event_log_max_size = options.get('event-log-max-size', None)
-            if event_log_max_size:
-                event_log_old_files = options.get('event-log-old-files', 1)
-                event_log_rotate = '\n'.join((
-                    "max-size %s" % event_log_max_size,
-                    "    old-files %s" % event_log_old_files))
-            event_log = event_logfile % {'event_logfile': event_file,
-                                         'event_log_level': event_log_level,
-                                         'event_log_rotate': event_log_rotate}
-        # custom log
-        else:
-            event_log = custom_event_log
 
         mailinglogger_config = options.get('mailinglogger', '')
         mailinglogger_import = ''
@@ -290,31 +267,73 @@ def build_zope_conf(self):
             mailinglogger_config = mailinglogger_config.strip()
             mailinglogger_import = '%import mailinglogger'
 
+        default_log = os.path.sep.join(('log', self.name + '.log',))
+        event_log_name = options.get('event-log', default_log)
+
+        if event_log_name.lower() == 'disable':
+            event_log = ''
+        else:
+            event_log_level = options.get('event-log-level', 'INFO')
+            custom_event_log = options.get('event-log-custom', None)
+            # log file
+            if not custom_event_log:
+                event_file = os.path.join(var_dir, event_log_name)
+                event_log_dir = os.path.dirname(event_file)
+                if not os.path.exists(event_log_dir):
+                    os.makedirs(event_log_dir)
+                event_log_rotate = ''
+                event_log_max_size = options.get('event-log-max-size', None)
+                if event_log_max_size:
+                    event_log_old_files = options.get('event-log-old-files', 1)
+                    event_log_rotate = '\n'.join((
+                        "max-size %s" % event_log_max_size,
+                        "    old-files %s" % event_log_old_files))
+                event_log = event_logfile % {'event_logfile': event_file,
+                                             'event_log_level': event_log_level,
+                                             'event_log_rotate': event_log_rotate}
+            # custom log
+            else:
+                event_log = custom_event_log
+
+            event_log = event_log_template % {
+                'mailinglogger_config': mailinglogger_config,
+                'event_log_level': event_log_level,
+                'event_log': event_log,
+            }
+
         z_log_name = os.path.sep.join(('log', self.name + '-Z2.log'))
         z_log_name = options.get('z2-log', z_log_name)
-        z_log = os.path.join(var_dir, z_log_name)
-        z_log_dir = os.path.dirname(z_log)
-        if not os.path.exists(z_log_dir):
-            os.makedirs(z_log_dir)
-
-        z_log_level = options.get('z2-log-level', 'WARN')
-
-        # access event log
-        custom_access_event_log = options.get('access-log-custom', None)
-        # filelog directive
-        if not custom_access_event_log:
-            access_log_rotate = ''
-            access_log_max_size = options.get('access-log-max-size', None)
-            if access_log_max_size:
-                access_log_old_files = options.get('access-log-old-files', 1)
-                access_log_rotate = '\n'.join((
-                    "max-size %s" % access_log_max_size,
-                    "    old-files %s" % access_log_old_files))
-            access_event_log = access_event_logfile % {'z_log': z_log,
-                                         'access_log_rotate': access_log_rotate}
-        # custom directive
+        if z_log_name.lower() == 'disable':
+            access_event_log = ''
         else:
-            access_event_log = custom_access_event_log
+            z_log = os.path.join(var_dir, z_log_name)
+            z_log_dir = os.path.dirname(z_log)
+            if not os.path.exists(z_log_dir):
+                os.makedirs(z_log_dir)
+
+            z_log_level = options.get('z2-log-level', 'WARN')
+
+            # access event log
+            custom_access_event_log = options.get('access-log-custom', None)
+            # filelog directive
+            if not custom_access_event_log:
+                access_log_rotate = ''
+                access_log_max_size = options.get('access-log-max-size', None)
+                if access_log_max_size:
+                    access_log_old_files = options.get('access-log-old-files', 1)
+                    access_log_rotate = '\n'.join((
+                        "max-size %s" % access_log_max_size,
+                        "    old-files %s" % access_log_old_files))
+                access_event_log = access_event_logfile % {'z_log': z_log,
+                                             'access_log_rotate': access_log_rotate}
+            # custom directive
+            else:
+                access_event_log = custom_access_event_log
+
+            access_event_log = access_log_template % {
+                'z_log_level': z_log_level,
+                'access_event_log': access_event_log,
+            }
 
         default_zpublisher_encoding = options.get('default-zpublisher-encoding',
                                                   'utf-8')
@@ -553,11 +572,8 @@ def is_rs_option(name):
                                     http_header_max_length = http_header_max_length,
                                     ip_address = ip_address,
                                     mailinglogger_import = mailinglogger_import,
-                                    mailinglogger_config = mailinglogger_config,
                                     event_log = event_log,
-                                    event_log_level = event_log_level,
                                     access_event_log = access_event_log,
-                                    z_log_level = z_log_level,
                                     default_zpublisher_encoding = default_zpublisher_encoding,
                                     storage_snippet = storage_snippet,
                                     port_base = port_base,
@@ -993,16 +1009,10 @@ def render_file_storage(self, file_storage, blob_storage,
 %(deprecation_warnings)s
 
 %(mailinglogger_import)s
-<eventlog>
-  %(mailinglogger_config)s
-  level %(event_log_level)s
-  %(event_log)s
-</eventlog>
 
-<logger access>
-  level %(z_log_level)s
-  %(access_event_log)s
-</logger>
+%(event_log)s
+
+%(access_event_log)s
 
 %(http_address)s
 %(ftp_address)s
@@ -1027,6 +1037,21 @@ def render_file_storage(self, file_storage, blob_storage,
 %(zope_conf_additional)s
 """
 
+event_log_template = """\
+<eventlog>
+  %(mailinglogger_config)s
+  level %(event_log_level)s
+  %(event_log)s
+</eventlog>
+"""
+
+access_log_template = """\
+<logger access>
+  level %(z_log_level)s
+  %(access_event_log)s
+</logger>
+"""
+
 # Template used for plone.resource directory
 resources_zcml = """\
 <configure xmlns="http://namespaces.zope.org/zope"


Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2015-07-20T16:49:42-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/7190ea2fc6b02f6d0279a960036774db31c083b8

Add test

Files changed:
M src/plone/recipe/zope2instance/tests/zope2instance.txt

diff --git a/src/plone/recipe/zope2instance/tests/zope2instance.txt b/src/plone/recipe/zope2instance/tests/zope2instance.txt
index b383308..9d7cfe4 100644
--- a/src/plone/recipe/zope2instance/tests/zope2instance.txt
+++ b/src/plone/recipe/zope2instance/tests/zope2instance.txt
@@ -1471,6 +1471,85 @@ We should have a zope instance, with the custom event log::
     ...
     <BLANKLINE>
 
+
+Disable access log
+==================
+
+If we assign `disable` to `z2-log`, the whole <logger access> section
+will be omitted::
+
+    >>> write('buildout.cfg',
+    ... '''
+    ... [buildout]
+    ... parts = instance
+    ... find-links = %(sample_buildout)s/eggs
+    ...
+    ... [instance]
+    ... recipe = plone.recipe.zope2instance
+    ... eggs =
+    ... user = me:me
+    ...
+    ... z2-log = disable
+    ... ''' % options)
+
+Let's run it::
+
+    >>> print system(join('bin', 'buildout')),
+    Uninstalling instance.
+    Installing instance.
+    Generated script '...instance'.
+    Generated interpreter '.../parts/instance/bin/interpreter'.
+
+We should have a zope instance, with no access log::
+
+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')
+    >>> zope_conf = open(os.path.join(instance, 'etc', 'zope.conf')).read()
+    >>> zope_conf = zope_conf.replace('\\', '/')
+    >>> "logger access" in zope_conf
+    False
+    >>> "eventlog" in zope_conf
+    True
+
+
+Disable events log
+==================
+
+If we assign `disable` to `event-log`, the whole <eventlog> section
+will be omitted::
+
+    >>> write('buildout.cfg',
+    ... '''
+    ... [buildout]
+    ... parts = instance
+    ... find-links = %(sample_buildout)s/eggs
+    ...
+    ... [instance]
+    ... recipe = plone.recipe.zope2instance
+    ... eggs =
+    ... user = me:me
+    ...
+    ... event-log = disable
+    ... ''' % options)
+
+Let's run it::
+
+    >>> print system(join('bin', 'buildout')),
+    Uninstalling instance.
+    Installing instance.
+    Generated script '...instance'.
+    Generated interpreter '.../parts/instance/bin/interpreter'.
+
+We should have a zope instance, with no access log::
+
+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')
+    >>> zope_conf = open(os.path.join(instance, 'etc', 'zope.conf')).read()
+    >>> zope_conf = zope_conf.replace('\\', '/')
+    >>> "logger access" in zope_conf
+    True
+    >>> "eventlog" in zope_conf
+    False
+
+
 Custom site.zcml file
 =====================
 


Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2015-07-20T19:52:09Z
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/f909d65fe18b8e2dbea2f9cf307eeadc01c456ef

Update doc

Files changed:
M README.rst

diff --git a/README.rst b/README.rst
index 9b8fa47..077b52b 100644
--- a/README.rst
+++ b/README.rst
@@ -221,6 +221,7 @@ log levels or configure `mailinglogger`.
 
 event-log
   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log
+  Setting this value to 'disable' will make the <eventlog> section to be omitted
 
 event-log-level
   Set the level of the console output for the event log. Level may be any of
@@ -251,6 +252,7 @@ mailinglogger
 
 z2-log
   The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.
+  Setting this value to 'disable' will make the <logger access> section to be omitted
 
 z2-log-level
   Set the log level for the access log. Level may be any of CRITICAL, ERROR,


Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2015-07-22T17:15:57-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/c9fbb24b85b7de5ea20aa6682524d9bd389b64e0

Update docs

Files changed:
M README.rst

diff --git a/README.rst b/README.rst
index 077b52b..b802041 100644
--- a/README.rst
+++ b/README.rst
@@ -221,7 +221,8 @@ log levels or configure `mailinglogger`.
 
 event-log
   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log
-  Setting this value to 'disable' will make the <eventlog> section to be omitted
+  Setting this value to 'disable' will make the <eventlog> section to be omitted,
+  disabling logging events by default to a .log file.
 
 event-log-level
   Set the level of the console output for the event log. Level may be any of
@@ -252,7 +253,8 @@ mailinglogger
 
 z2-log
   The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.
-  Setting this value to 'disable' will make the <logger access> section to be omitted
+  Setting this value to 'disable' will make the <logger access> section to be omitted,
+  disabling logging access events to a .log file
 
 z2-log-level
   Set the log level for the access log. Level may be any of CRITICAL, ERROR,


Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2015-07-22T23:36:36+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/c3f67c7f98f360ee63c73d11fbb3cb5ffb0f7d75

Merge pull request #17 from enfold/master

Allow to not render the logging sections in zope.conf

Files changed:
M CHANGES.txt
M README.rst
M src/plone/recipe/zope2instance/__init__.py
M src/plone/recipe/zope2instance/tests/zope2instance.txt

diff --git a/CHANGES.txt b/CHANGES.txt
index 06c97df..b9b1a4b 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,7 +4,8 @@ Changelog
 4.2.18 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- Allow to disable logs
+  [frapell]
 
 
 4.2.17 (2015-04-29)
diff --git a/README.rst b/README.rst
index 9b8fa47..b802041 100644
--- a/README.rst
+++ b/README.rst
@@ -221,6 +221,8 @@ log levels or configure `mailinglogger`.
 
 event-log
   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log
+  Setting this value to 'disable' will make the <eventlog> section to be omitted,
+  disabling logging events by default to a .log file.
 
 event-log-level
   Set the level of the console output for the event log. Level may be any of
@@ -251,6 +253,8 @@ mailinglogger
 
 z2-log
   The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.
+  Setting this value to 'disable' will make the <logger access> section to be omitted,
+  disabling logging access events to a .log file
 
 z2-log-level
   Set the log level for the access log. Level may be any of CRITICAL, ERROR,
diff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py
index 5bc5300..e01d9e6 100644
--- a/src/plone/recipe/zope2instance/__init__.py
+++ b/src/plone/recipe/zope2instance/__init__.py
@@ -260,29 +260,6 @@ def build_zope_conf(self):
         zope_conf_additional = options.get('zope-conf-additional', '')
 
         # logging
-        event_log_level = options.get('event-log-level', 'INFO')
-        custom_event_log = options.get('event-log-custom', None)
-        default_log = os.path.sep.join(('log', self.name + '.log',))
-        # log file
-        if not custom_event_log:
-            event_log_name = options.get('event-log', default_log)
-            event_file = os.path.join(var_dir, event_log_name)
-            event_log_dir = os.path.dirname(event_file)
-            if not os.path.exists(event_log_dir):
-                os.makedirs(event_log_dir)
-            event_log_rotate = ''
-            event_log_max_size = options.get('event-log-max-size', None)
-            if event_log_max_size:
-                event_log_old_files = options.get('event-log-old-files', 1)
-                event_log_rotate = '\n'.join((
-                    "max-size %s" % event_log_max_size,
-                    "    old-files %s" % event_log_old_files))
-            event_log = event_logfile % {'event_logfile': event_file,
-                                         'event_log_level': event_log_level,
-                                         'event_log_rotate': event_log_rotate}
-        # custom log
-        else:
-            event_log = custom_event_log
 
         mailinglogger_config = options.get('mailinglogger', '')
         mailinglogger_import = ''
@@ -290,31 +267,73 @@ def build_zope_conf(self):
             mailinglogger_config = mailinglogger_config.strip()
             mailinglogger_import = '%import mailinglogger'
 
+        default_log = os.path.sep.join(('log', self.name + '.log',))
+        event_log_name = options.get('event-log', default_log)
+
+        if event_log_name.lower() == 'disable':
+            event_log = ''
+        else:
+            event_log_level = options.get('event-log-level', 'INFO')
+            custom_event_log = options.get('event-log-custom', None)
+            # log file
+            if not custom_event_log:
+                event_file = os.path.join(var_dir, event_log_name)
+                event_log_dir = os.path.dirname(event_file)
+                if not os.path.exists(event_log_dir):
+                    os.makedirs(event_log_dir)
+                event_log_rotate = ''
+                event_log_max_size = options.get('event-log-max-size', None)
+                if event_log_max_size:
+                    event_log_old_files = options.get('event-log-old-files', 1)
+                    event_log_rotate = '\n'.join((
+                        "max-size %s" % event_log_max_size,
+                        "    old-files %s" % event_log_old_files))
+                event_log = event_logfile % {'event_logfile': event_file,
+                                             'event_log_level': event_log_level,
+                                             'event_log_rotate': event_log_rotate}
+            # custom log
+            else:
+                event_log = custom_event_log
+
+            event_log = event_log_template % {
+                'mailinglogger_config': mailinglogger_config,
+                'event_log_level': event_log_level,
+                'event_log': event_log,
+            }
+
         z_log_name = os.path.sep.join(('log', self.name + '-Z2.log'))
         z_log_name = options.get('z2-log', z_log_name)
-        z_log = os.path.join(var_dir, z_log_name)
-        z_log_dir = os.path.dirname(z_log)
-        if not os.path.exists(z_log_dir):
-            os.makedirs(z_log_dir)
-
-        z_log_level = options.get('z2-log-level', 'WARN')
-
-        # access event log
-        custom_access_event_log = options.get('access-log-custom', None)
-        # filelog directive
-        if not custom_access_event_log:
-            access_log_rotate = ''
-            access_log_max_size = options.get('access-log-max-size', None)
-            if access_log_max_size:
-                access_log_old_files = options.get('access-log-old-files', 1)
-                access_log_rotate = '\n'.join((
-                    "max-size %s" % access_log_max_size,
-                    "    old-files %s" % access_log_old_files))
-            access_event_log = access_event_logfile % {'z_log': z_log,
-                                         'access_log_rotate': access_log_rotate}
-        # custom directive
+        if z_log_name.lower() == 'disable':
+            access_event_log = ''
         else:
-            access_event_log = custom_access_event_log
+            z_log = os.path.join(var_dir, z_log_name)
+            z_log_dir = os.path.dirname(z_log)
+            if not os.path.exists(z_log_dir):
+                os.makedirs(z_log_dir)
+
+            z_log_level = options.get('z2-log-level', 'WARN')
+
+            # access event log
+            custom_access_event_log = options.get('access-log-custom', None)
+            # filelog directive
+            if not custom_access_event_log:
+                access_log_rotate = ''
+                access_log_max_size = options.get('access-log-max-size', None)
+                if access_log_max_size:
+                    access_log_old_files = options.get('access-log-old-files', 1)
+                    access_log_rotate = '\n'.join((
+                        "max-size %s" % access_log_max_size,
+                        "    old-files %s" % access_log_old_files))
+                access_event_log = access_event_logfile % {'z_log': z_log,
+                                             'access_log_rotate': access_log_rotate}
+            # custom directive
+            else:
+                access_event_log = custom_access_event_log
+
+            access_event_log = access_log_template % {
+                'z_log_level': z_log_level,
+                'access_event_log': access_event_log,
+            }
 
         default_zpublisher_encoding = options.get('default-zpublisher-encoding',
                                                   'utf-8')
@@ -553,11 +572,8 @@ def is_rs_option(name):
                                     http_header_max_length = http_header_max_length,
                                     ip_address = ip_address,
                                     mailinglogger_import = mailinglogger_import,
-                                    mailinglogger_config = mailinglogger_config,
                                     event_log = event_log,
-                                    event_log_level = event_log_level,
                                     access_event_log = access_event_log,
-                                    z_log_level = z_log_level,
                                     default_zpublisher_encoding = default_zpublisher_encoding,
                                     storage_snippet = storage_snippet,
                                     port_base = port_base,
@@ -993,16 +1009,10 @@ def render_file_storage(self, file_storage, blob_storage,
 %(deprecation_warnings)s
 
 %(mailinglogger_import)s
-<eventlog>
-  %(mailinglogger_config)s
-  level %(event_log_level)s
-  %(event_log)s
-</eventlog>
 
-<logger access>
-  level %(z_log_level)s
-  %(access_event_log)s
-</logger>
+%(event_log)s
+
+%(access_event_log)s
 
 %(http_address)s
 %(ftp_address)s
@@ -1027,6 +1037,21 @@ def render_file_storage(self, file_storage, blob_storage,
 %(zope_conf_additional)s
 """
 
+event_log_template = """\
+<eventlog>
+  %(mailinglogger_config)s
+  level %(event_log_level)s
+  %(event_log)s
+</eventlog>
+"""
+
+access_log_template = """\
+<logger access>
+  level %(z_log_level)s
+  %(access_event_log)s
+</logger>
+"""
+
 # Template used for plone.resource directory
 resources_zcml = """\
 <configure xmlns="http://namespaces.zope.org/zope"
diff --git a/src/plone/recipe/zope2instance/tests/zope2instance.txt b/src/plone/recipe/zope2instance/tests/zope2instance.txt
index b383308..9d7cfe4 100644
--- a/src/plone/recipe/zope2instance/tests/zope2instance.txt
+++ b/src/plone/recipe/zope2instance/tests/zope2instance.txt
@@ -1471,6 +1471,85 @@ We should have a zope instance, with the custom event log::
     ...
     <BLANKLINE>
 
+
+Disable access log
+==================
+
+If we assign `disable` to `z2-log`, the whole <logger access> section
+will be omitted::
+
+    >>> write('buildout.cfg',
+    ... '''
+    ... [buildout]
+    ... parts = instance
+    ... find-links = %(sample_buildout)s/eggs
+    ...
+    ... [instance]
+    ... recipe = plone.recipe.zope2instance
+    ... eggs =
+    ... user = me:me
+    ...
+    ... z2-log = disable
+    ... ''' % options)
+
+Let's run it::
+
+    >>> print system(join('bin', 'buildout')),
+    Uninstalling instance.
+    Installing instance.
+    Generated script '...instance'.
+    Generated interpreter '.../parts/instance/bin/interpreter'.
+
+We should have a zope instance, with no access log::
+
+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')
+    >>> zope_conf = open(os.path.join(instance, 'etc', 'zope.conf')).read()
+    >>> zope_conf = zope_conf.replace('\\', '/')
+    >>> "logger access" in zope_conf
+    False
+    >>> "eventlog" in zope_conf
+    True
+
+
+Disable events log
+==================
+
+If we assign `disable` to `event-log`, the whole <eventlog> section
+will be omitted::
+
+    >>> write('buildout.cfg',
+    ... '''
+    ... [buildout]
+    ... parts = instance
+    ... find-links = %(sample_buildout)s/eggs
+    ...
+    ... [instance]
+    ... recipe = plone.recipe.zope2instance
+    ... eggs =
+    ... user = me:me
+    ...
+    ... event-log = disable
+    ... ''' % options)
+
+Let's run it::
+
+    >>> print system(join('bin', 'buildout')),
+    Uninstalling instance.
+    Installing instance.
+    Generated script '...instance'.
+    Generated interpreter '.../parts/instance/bin/interpreter'.
+
+We should have a zope instance, with no access log::
+
+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')
+    >>> zope_conf = open(os.path.join(instance, 'etc', 'zope.conf')).read()
+    >>> zope_conf = zope_conf.replace('\\', '/')
+    >>> "logger access" in zope_conf
+    True
+    >>> "eventlog" in zope_conf
+    False
+
+
 Custom site.zcml file
 =====================
 


