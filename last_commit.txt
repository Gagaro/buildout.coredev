Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-08-25T16:26:35+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/8311afa411f6a68a165fc7532978e4075ae5ab00

Make formUnload.js works with CKEditor

Files changed:
M Products/CMFPlone/skins/plone_ecmascript/formUnload.js
M docs/CHANGES.rst

diff --git a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
index d3d216b..03f3c6f 100644
--- a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
+++ b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
@@ -12,14 +12,14 @@ if (!window.beforeunload) {(function($) {
         Class,
         form,
         c;
-    
+
     BeforeUnloadHandler = function() {
         var self = this,
             message;
 
         this.message = window.form_modified_message ||
             "Discard changes? If you click OK, any changes you have made will be lost.";
-        
+
         this.forms = [];
         this.chkId = [];
         this.chkType = new this.CheckType();
@@ -31,11 +31,11 @@ if (!window.beforeunload) {(function($) {
             // First clean out dead references to make sure we only work on
             // forms that are actually in the dom. This is needed in
             // combination with KSS and/or other dynamic replacements.
-            var domforms = $('form'); 
+            var domforms = $('form');
             self.forms = $.grep(self.forms, function(form) {
                 return domforms.index(form) > -1;
-            });             
-            
+            });
+
             // Now do the protection work
             if (self.submitting) {return;}
 
@@ -54,7 +54,7 @@ if (!window.beforeunload) {(function($) {
     // form checking code
     Class.isAnyFormChanged = function() {
         var i;
-        for (i=0; i < this.forms.length; i+=1) { 
+        for (i=0; i < this.forms.length; i+=1) {
             form = this.forms[i];
             if (this.isElementChanged(form)) {
                 return true;
@@ -121,6 +121,8 @@ if (!window.beforeunload) {(function($) {
     c.text = c.textarea = function(ele) {
         if ($(ele).hasClass('mce_editable') && typeof(tinyMCE) != "undefined") {
             return tinyMCE.get(ele.id).getContent() != ele.defaultValue;
+        } else if ($(ele).hasClass('ckeditor_plone') && typeof(CKEDITOR) != "undefined") {
+            return CKEDITOR.instances[ele.id].getData() != ele.defaultValue;
         } else {
             return ele.value !== ele.defaultValue;
         }
@@ -187,7 +189,7 @@ if (!window.beforeunload) {(function($) {
 
     // Can't use jQuery handlers here as kupu and kss rely on direct access.
     window.onbeforeunload = new BeforeUnloadHandler().execute;
-    
+
     $(function() {
         var tool = window.onbeforeunload && window.onbeforeunload.tool;
         if (tool && $('#region-content,#content').length) {
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index ae9c985..dff7fb0 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -8,6 +8,10 @@ Changelog
 4.3.7 (unreleased)
 ------------------
 
+- Make the `formUnload.js` protection works while using CKEditor
+  as it is the case with TinyMCE.
+  [gbastien]
+
 - Properly hide ``plone.app.jquery`` and ``plone.app.jquerytools``
   from products.
   [maurits]
@@ -41,9 +45,9 @@ Changelog
   emails.
   [davidjb]
 
-- Fix: If a user "deletes" the same item twice (ex.: having two different tabs 
-  open and not realising it's already been deleted) any higher level item with 
-  the same short name will be deleted without trace. 
+- Fix: If a user "deletes" the same item twice (ex.: having two different tabs
+  open and not realising it's already been deleted) any higher level item with
+  the same short name will be deleted without trace.
   [gotcha]
 
 - Extended ulocalized_time for target_language


Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-03T16:41:18+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/3ece1d4cf7f20ae3e849e91b0cc6ab47e908d744

Make formUnload.js works with CKEditor

Files changed:
M Products/CMFPlone/skins/plone_ecmascript/formUnload.js
M docs/CHANGES.rst

diff --git a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
index d3d216b..03f3c6f 100644
--- a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
+++ b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
@@ -12,14 +12,14 @@ if (!window.beforeunload) {(function($) {
         Class,
         form,
         c;
-    
+
     BeforeUnloadHandler = function() {
         var self = this,
             message;
 
         this.message = window.form_modified_message ||
             "Discard changes? If you click OK, any changes you have made will be lost.";
-        
+
         this.forms = [];
         this.chkId = [];
         this.chkType = new this.CheckType();
@@ -31,11 +31,11 @@ if (!window.beforeunload) {(function($) {
             // First clean out dead references to make sure we only work on
             // forms that are actually in the dom. This is needed in
             // combination with KSS and/or other dynamic replacements.
-            var domforms = $('form'); 
+            var domforms = $('form');
             self.forms = $.grep(self.forms, function(form) {
                 return domforms.index(form) > -1;
-            });             
-            
+            });
+
             // Now do the protection work
             if (self.submitting) {return;}
 
@@ -54,7 +54,7 @@ if (!window.beforeunload) {(function($) {
     // form checking code
     Class.isAnyFormChanged = function() {
         var i;
-        for (i=0; i < this.forms.length; i+=1) { 
+        for (i=0; i < this.forms.length; i+=1) {
             form = this.forms[i];
             if (this.isElementChanged(form)) {
                 return true;
@@ -121,6 +121,8 @@ if (!window.beforeunload) {(function($) {
     c.text = c.textarea = function(ele) {
         if ($(ele).hasClass('mce_editable') && typeof(tinyMCE) != "undefined") {
             return tinyMCE.get(ele.id).getContent() != ele.defaultValue;
+        } else if ($(ele).hasClass('ckeditor_plone') && typeof(CKEDITOR) != "undefined") {
+            return CKEDITOR.instances[ele.id].getData() != ele.defaultValue;
         } else {
             return ele.value !== ele.defaultValue;
         }
@@ -187,7 +189,7 @@ if (!window.beforeunload) {(function($) {
 
     // Can't use jQuery handlers here as kupu and kss rely on direct access.
     window.onbeforeunload = new BeforeUnloadHandler().execute;
-    
+
     $(function() {
         var tool = window.onbeforeunload && window.onbeforeunload.tool;
         if (tool && $('#region-content,#content').length) {
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 6eb9e33..f83ac59 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -14,6 +14,10 @@ Changelog
 - Require ``POST`` request for various forms that send email.
   [maurits]
 
+- Make the `formUnload.js` protection works while using CKEditor
+  as it is the case with TinyMCE.
+  [gbastien]
+
 - Properly hide ``plone.app.jquery`` and ``plone.app.jquerytools``
   from products.
   [maurits]


Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-03T16:42:57+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/429e77237a3e5c54ce2a07dd37aa690c247a118c

Merge branch '4.3.x' of git://github.com/gbastien/Products.CMFPlone into 4.3.x

Conflicts:
	docs/CHANGES.rst

Files changed:




Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2015-09-03T17:06:06+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/53e5390e596fa5e391bdde8e2cc86107cbdcac9b

Merge pull request #841 from gbastien/4.3.x

Make formUnload.js works with CKEditor

Files changed:
M Products/CMFPlone/skins/plone_ecmascript/formUnload.js
M docs/CHANGES.rst

diff --git a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
index d3d216b..03f3c6f 100644
--- a/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
+++ b/Products/CMFPlone/skins/plone_ecmascript/formUnload.js
@@ -12,14 +12,14 @@ if (!window.beforeunload) {(function($) {
         Class,
         form,
         c;
-    
+
     BeforeUnloadHandler = function() {
         var self = this,
             message;
 
         this.message = window.form_modified_message ||
             "Discard changes? If you click OK, any changes you have made will be lost.";
-        
+
         this.forms = [];
         this.chkId = [];
         this.chkType = new this.CheckType();
@@ -31,11 +31,11 @@ if (!window.beforeunload) {(function($) {
             // First clean out dead references to make sure we only work on
             // forms that are actually in the dom. This is needed in
             // combination with KSS and/or other dynamic replacements.
-            var domforms = $('form'); 
+            var domforms = $('form');
             self.forms = $.grep(self.forms, function(form) {
                 return domforms.index(form) > -1;
-            });             
-            
+            });
+
             // Now do the protection work
             if (self.submitting) {return;}
 
@@ -54,7 +54,7 @@ if (!window.beforeunload) {(function($) {
     // form checking code
     Class.isAnyFormChanged = function() {
         var i;
-        for (i=0; i < this.forms.length; i+=1) { 
+        for (i=0; i < this.forms.length; i+=1) {
             form = this.forms[i];
             if (this.isElementChanged(form)) {
                 return true;
@@ -121,6 +121,8 @@ if (!window.beforeunload) {(function($) {
     c.text = c.textarea = function(ele) {
         if ($(ele).hasClass('mce_editable') && typeof(tinyMCE) != "undefined") {
             return tinyMCE.get(ele.id).getContent() != ele.defaultValue;
+        } else if ($(ele).hasClass('ckeditor_plone') && typeof(CKEDITOR) != "undefined") {
+            return CKEDITOR.instances[ele.id].getData() != ele.defaultValue;
         } else {
             return ele.value !== ele.defaultValue;
         }
@@ -187,7 +189,7 @@ if (!window.beforeunload) {(function($) {
 
     // Can't use jQuery handlers here as kupu and kss rely on direct access.
     window.onbeforeunload = new BeforeUnloadHandler().execute;
-    
+
     $(function() {
         var tool = window.onbeforeunload && window.onbeforeunload.tool;
         if (tool && $('#region-content,#content').length) {
diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index 6eb9e33..f83ac59 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -14,6 +14,10 @@ Changelog
 - Require ``POST`` request for various forms that send email.
   [maurits]
 
+- Make the `formUnload.js` protection works while using CKEditor
+  as it is the case with TinyMCE.
+  [gbastien]
+
 - Properly hide ``plone.app.jquery`` and ``plone.app.jquerytools``
   from products.
   [maurits]


