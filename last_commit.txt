Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2015-07-28T23:07:21+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/79f199a85a11bedb3cee844edc097cc01f169317

minor readability improvements, a forgotten non-decorator security and indent in setup.py

Files changed:
M Products/CMFDynamicViewFTI/browserdefault.py
M setup.py

diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py
index e47959a..fa155d9 100644
--- a/Products/CMFDynamicViewFTI/browserdefault.py
+++ b/Products/CMFDynamicViewFTI/browserdefault.py
@@ -80,12 +80,12 @@ def getDefaultPage(self):
         fti = self.getTypeInfo()
         if fti is None:
             return None
-        else:
-            plone_utils = getToolByName(self, 'plone_utils', None)
-            if plone_utils is not None:
-                return plone_utils.getDefaultPage(self)
-            else:
-                return fti.getDefaultPage(self, check_exists=True)
+
+        plone_utils = getToolByName(self, 'plone_utils', None)
+        if plone_utils is not None:
+            return plone_utils.getDefaultPage(self)
+
+        return fti.getDefaultPage(self, check_exists=True)
 
     @security.protected(View)
     def getLayout(self, **kw):
@@ -96,8 +96,7 @@ def getLayout(self, **kw):
         fti = self.getTypeInfo()
         if fti is None:
             return None
-        else:
-            return fti.getViewMethod(self)
+        return fti.getViewMethod(self)
 
     @security.public
     def canSetDefaultPage(self):
@@ -191,8 +190,7 @@ def getDefaultLayout(self):
             return "base_view"  # XXX
         return fti.getDefaultViewMethod(self)
 
-    security.declarePublic('canSetLayout')
-
+    @security.public
     def canSetLayout(self):
         """Check if the current authenticated user is permitted to select a layout.
         """
diff --git a/setup.py b/setup.py
index e97b5b6..f6c4145 100644
--- a/setup.py
+++ b/setup.py
@@ -31,22 +31,22 @@
     include_package_data=True,
     zip_safe=False,
     extras_require=dict(
-      test=[
-        'plone.app.contentmenu',
-        'zope.publisher',
-        'plone.app.testing >= 4.2.5',
-        'Products.Archetypes',
-      ]
+        test=[
+            'plone.app.contentmenu',
+            'zope.publisher',
+            'plone.app.testing >= 4.2.5',
+            'Products.Archetypes',
+        ]
     ),
     install_requires=[
-      'setuptools',
-      'zope.browsermenu',
-      'zope.component',
-      'zope.interface',
-      'Products.CMFCore',
-      'Products.GenericSetup',
-      'Acquisition',
-      'ExtensionClass',
-      'Zope2',
+        'setuptools',
+        'zope.browsermenu',
+        'zope.component',
+        'zope.interface',
+        'Products.CMFCore',
+        'Products.GenericSetup',
+        'Acquisition',
+        'ExtensionClass',
+        'Zope2',
     ],
 )


