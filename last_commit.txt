Repository: Products.ATContentTypes


Branch: refs/heads/master
Date: 2015-10-01T03:50:09+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.ATContentTypes/commit/f37ced2e4323a9d1e7f63920e8b06d554da08491

pyflakes in tests

Files changed:
M Products/ATContentTypes/tests/atctftestcase.py
M Products/ATContentTypes/tests/atcttestcase.py
M Products/ATContentTypes/tests/reindex_sanity.txt
M Products/ATContentTypes/tests/test_atdocument.py
M Products/ATContentTypes/tests/test_atevent.py
M Products/ATContentTypes/tests/test_atfolder.py
M Products/ATContentTypes/tests/test_atimage.py
M Products/ATContentTypes/tests/test_atlink.py
M Products/ATContentTypes/tests/test_atnewsitem.py
M Products/ATContentTypes/tests/test_attopic.py
M Products/ATContentTypes/tests/test_base_profile.py
M Products/ATContentTypes/tests/test_browserdefaultmixin.py
M Products/ATContentTypes/tests/test_bugs.py
M Products/ATContentTypes/tests/test_calendar.py
M Products/ATContentTypes/tests/test_constraintypes.py
M Products/ATContentTypes/tests/test_criteria.py
M Products/ATContentTypes/tests/test_installation.py
M Products/ATContentTypes/tests/test_migrations.py
M Products/ATContentTypes/tests/test_skinScripts.py
M Products/ATContentTypes/tests/test_tool.py
M Products/ATContentTypes/tests/test_topictool.py

diff --git a/Products/ATContentTypes/tests/atctftestcase.py b/Products/ATContentTypes/tests/atctftestcase.py
index 6afd506..0c2d952 100644
--- a/Products/ATContentTypes/tests/atctftestcase.py
+++ b/Products/ATContentTypes/tests/atctftestcase.py
@@ -1,20 +1,14 @@
-from zope.component import getUtility
-from plone.keyring.interfaces import IKeyManager
-
-from Products.ATContentTypes.tests import atcttestcase
-
-from Products.CMFCore.utils import getToolByName
-from plone.app.testing import TEST_USER_NAME
-from plone.app.testing import TEST_USER_ID
-from plone.app.testing import TEST_USER_PASSWORD
-from plone.app.testing import PLONE_SITE_ID as portal_name
+from hashlib import sha1 as sha
 from plone.app.testing import SITE_OWNER_NAME
 from plone.app.testing import SITE_OWNER_PASSWORD
-
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from plone.app.testing import TEST_USER_PASSWORD
+from plone.keyring.interfaces import IKeyManager
 from Products.ATContentTypes.config import HAS_LINGUA_PLONE
-
+from Products.ATContentTypes.tests import atcttestcase
+from zope.component import getUtility
 import hmac
-from hashlib import sha1 as sha
 
 
 class IntegrationTestCase(atcttestcase.ATCTFunctionalSiteTestCase):
@@ -60,7 +54,7 @@ def setupTestObject(self):
         # create test object
         self.obj_id = 'test_object'
         self.title = u'test \xf6bject'
-        if not self.obj_id in self.folder:
+        if self.obj_id not in self.folder:
             self.folder.invokeFactory(
                 self.portal_type, self.obj_id, title=self.title)
         self.obj = getattr(self.folder.aq_explicit, self.obj_id)
diff --git a/Products/ATContentTypes/tests/atcttestcase.py b/Products/ATContentTypes/tests/atcttestcase.py
index 8d901b8..6f3fc94 100644
--- a/Products/ATContentTypes/tests/atcttestcase.py
+++ b/Products/ATContentTypes/tests/atcttestcase.py
@@ -1,25 +1,11 @@
-from Testing import ZopeTestCase
-from plone.app.testing.bbb import PloneTestCase
+from plone.app.blob.markings import markAs
 from plone.app.testing import TEST_USER_ID as default_user
-from plone.app.testing import TEST_USER_PASSWORD as default_password
-from plone.app.testing import PLONE_SITE_ID as portal_name
-from plone.app.testing import SITE_OWNER_NAME as portal_owner
-
-import os
-
-from zope.interface.verify import verifyObject
-
-from Products.CMFCore.interfaces import IDublinCore
-from Products.CMFCore.interfaces import IMutableDublinCore
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.CMFCore.utils import getToolByName
-from Products.CMFDynamicViewFTI.interfaces import ISelectableBrowserDefault
+from plone.app.testing.bbb import PloneTestCase
 from Products.Archetypes.atapi import AttributeStorage
 from Products.Archetypes.atapi import DisplayList
 from Products.Archetypes.atapi import IdWidget
-from Products.Archetypes.atapi import RFC822Marshaller
 from Products.Archetypes.atapi import MetadataStorage
+from Products.Archetypes.atapi import RFC822Marshaller
 from Products.Archetypes.atapi import TextAreaWidget
 from Products.Archetypes.interfaces.base import IBaseContent
 from Products.Archetypes.interfaces.layer import ILayerContainer
@@ -27,14 +13,19 @@
 from Products.Archetypes.interfaces.templatemixin import ITemplateMixin
 from Products.Archetypes.tests.test_baseschema import BaseSchemaTest
 from Products.Archetypes.Widget import RelatedItemsWidget
-
-from plone.app.blob.markings import markAs
-
 from Products.ATContentTypes.config import HAS_LINGUA_PLONE
 from Products.ATContentTypes.interfaces import IATContentType
 from Products.ATContentTypes.tests.utils import dcEdit
 from Products.ATContentTypes.tests.utils import EmptyValidator
 from Products.ATContentTypes.tests.utils import idValidator
+from Products.CMFCore.interfaces import IDublinCore
+from Products.CMFCore.interfaces import IMutableDublinCore
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
+from Products.CMFCore.utils import getToolByName
+from Products.CMFDynamicViewFTI.interfaces import ISelectableBrowserDefault
+from zope.interface.verify import verifyObject
+import os
 
 test_home = os.path.dirname(__file__)
 
@@ -153,7 +144,7 @@ def test_implements_ISelectableBrowserDefault(self):
     def compareDC(self, first, second=None, **kwargs):
         """
         """
-        if second != None:
+        if second is not None:
             title = second.Title()
             description = second.Description()
         else:
@@ -240,7 +231,7 @@ def test_description(self):
         self.assertEqual(field.read_permission, View)
         self.assertEqual(field.write_permission, ModifyPortalContent)
         self.assertEqual(field.generateMode, 'mVc')
-        #self.assertTrue(field.generateMode == 'veVc', field.generateMode)
+        # self.assertTrue(field.generateMode == 'veVc', field.generateMode)
         self.assertEqual(field.force, '')
         self.assertEqual(field.type, 'text')
         self.assertTrue(isinstance(field.storage, MetadataStorage))
diff --git a/Products/ATContentTypes/tests/reindex_sanity.txt b/Products/ATContentTypes/tests/reindex_sanity.txt
index 282ac63..b28205f 100644
--- a/Products/ATContentTypes/tests/reindex_sanity.txt
+++ b/Products/ATContentTypes/tests/reindex_sanity.txt
@@ -10,8 +10,8 @@ Those tests make sure that the catalog is only called as necessary.
   >>> from Products.Archetypes.utils import wrap_method
   >>> from Products.Archetypes.utils import unwrap_method
   >>> from Products.Archetypes.utils import call_original as call
-  >>> from Products.ATContentTypes.tests.atcttestcase import default_user
-  >>> from Products.ATContentTypes.tests.atcttestcase import portal_owner
+  >>> from plone.app.testing import TEST_USER_NAME as default_user
+  >>> from plone.app.testing import SITE_OWNER_NAME as portal_owner
   >>> import transaction
 
   >>> from plone.app.testing import TEST_USER_ID, setRoles
diff --git a/Products/ATContentTypes/tests/test_atdocument.py b/Products/ATContentTypes/tests/test_atdocument.py
index c8d9ddf..a3b0e1b 100644
--- a/Products/ATContentTypes/tests/test_atdocument.py
+++ b/Products/ATContentTypes/tests/test_atdocument.py
@@ -1,25 +1,21 @@
-import unittest
-
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-
-import transaction
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.Archetypes.interfaces.layer import ILayerContainer
+from cgi import FieldStorage
 from Products.Archetypes import atapi
-from Products.ATContentTypes.tests.utils import dcEdit
-
+from Products.Archetypes.interfaces.layer import ILayerContainer
+from Products.ATContentTypes import config as atct_config
 from Products.ATContentTypes.content.document import ATDocument
-from Products.ATContentTypes.lib.validators import TidyHtmlWithCleanupValidator
-from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-from Products.ATContentTypes.tests.utils import input_file_path
+from Products.ATContentTypes.interfaces import IATDocument
 from Products.ATContentTypes.interfaces import IHistoryAware
 from Products.ATContentTypes.interfaces import ITextContent
-from Products.ATContentTypes.interfaces import IATDocument
+from Products.ATContentTypes.lib.validators import TidyHtmlWithCleanupValidator
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.ATContentTypes.tests.utils import dcEdit
+from Products.ATContentTypes.tests.utils import input_file_path
+from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
 from zope.interface.verify import verifyObject
-from cgi import FieldStorage
-from Products.ATContentTypes import config as atct_config
 from ZPublisher.HTTPRequest import FileUpload
+import transaction
 
 example_stx = """
 Header
@@ -281,11 +277,9 @@ def test_id_change_on_initial_edit(self):
         self.assertEqual(response.getStatus(), 200)  # OK
 
         # Change the title
-        temp_id = location.split('/')[-2]
         obj_title = "New Title for Object"
         new_id = "new-title-for-object"
         new_obj = self.folder.portal_factory._getTempFolder('Document')[new_id]
-        #new_obj = getattr(self.folder.aq_explicit, temp_id)
         new_obj_path = '/%s' % new_obj.absolute_url(1)
         # object is not yet edited
         self.assertEqual(new_obj.checkCreationFlag(), True)
diff --git a/Products/ATContentTypes/tests/test_atevent.py b/Products/ATContentTypes/tests/test_atevent.py
index 3e6c24c..fcab35e 100644
--- a/Products/ATContentTypes/tests/test_atevent.py
+++ b/Products/ATContentTypes/tests/test_atevent.py
@@ -1,23 +1,22 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.Archetypes.interfaces.layer import ILayerContainer
+from DateTime import DateTime
 from Products.Archetypes import atapi
-from Products.ATContentTypes.tests.utils import dcEdit
-
+from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.ATContentTypes.content.event import ATEvent
-from Products.ATContentTypes.tests.utils import EmptyValidator
+from Products.ATContentTypes.interfaces import IATEvent
+from Products.ATContentTypes.interfaces import ICalendarSupport
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.ATContentTypes.tests.utils import dcEdit
 from Products.ATContentTypes.tests.utils import EmailValidator
-from Products.ATContentTypes.tests.utils import URLValidator
+from Products.ATContentTypes.tests.utils import EmptyValidator
 from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-from DateTime import DateTime
-from Products.ATContentTypes.interfaces import ICalendarSupport
-from Products.ATContentTypes.interfaces import IATEvent
+from Products.ATContentTypes.tests.utils import URLValidator
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
+from Testing import ZopeTestCase  # side effect import. leave it here.
 from zope.interface.verify import verifyObject
+import unittest
+
+ZopeTestCase  # pyflakes
 
 
 LOCATION = 'my location'
@@ -273,11 +272,11 @@ def test_startDateField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 1, 'Value is %s' % field.required)
-        self.assertTrue(field.default == None, 'Value is %s' %
+        self.assertTrue(field.default is None, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.default_method == DateTime,
                         'Value is %s' % str(field.default_method))
-        self.assertTrue(field.searchable == False,
+        self.assertTrue(field.searchable is False,
                         'Value is %s' % field.searchable)
         self.assertTrue(field.vocabulary == (),
                         'Value is %s' % str(field.vocabulary))
@@ -320,11 +319,11 @@ def test_endDateField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 1, 'Value is %s' % field.required)
-        self.assertTrue(field.default == None, 'Value is %s' %
+        self.assertTrue(field.default is None, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.default_method == DateTime,
                         'Value is %s' % str(field.default_method))
-        self.assertTrue(field.searchable == False,
+        self.assertTrue(field.searchable is False,
                         'Value is %s' % field.searchable)
         self.assertTrue(field.vocabulary == (),
                         'Value is %s' % str(field.vocabulary))
diff --git a/Products/ATContentTypes/tests/test_atfolder.py b/Products/ATContentTypes/tests/test_atfolder.py
index 176db46..77d025e 100644
--- a/Products/ATContentTypes/tests/test_atfolder.py
+++ b/Products/ATContentTypes/tests/test_atfolder.py
@@ -1,17 +1,13 @@
-import unittest
-
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-
-from Products.ATContentTypes.tests.utils import dcEdit
-from Products.ATContentTypes.content.folder import ATFolder
-from Products.ATContentTypes.content.folder import ATBTreeFolder
 from OFS.interfaces import IOrderedContainer as IOrderedContainer
-from Products.ATContentTypes.interfaces import IATFolder
-from Products.ATContentTypes.interfaces import IATBTreeFolder
 from plone.app.testing import SITE_OWNER_NAME as portal_owner
-
-from zope.interface.verify import verifyObject
+from Products.ATContentTypes.content.folder import ATBTreeFolder
+from Products.ATContentTypes.content.folder import ATFolder
+from Products.ATContentTypes.interfaces import IATBTreeFolder
+from Products.ATContentTypes.interfaces import IATFolder
 from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.ATContentTypes.tests.utils import dcEdit
+from zope.interface.verify import verifyObject
 
 
 def editATCT(obj):
diff --git a/Products/ATContentTypes/tests/test_atimage.py b/Products/ATContentTypes/tests/test_atimage.py
index 7a04b8c..170b541 100644
--- a/Products/ATContentTypes/tests/test_atimage.py
+++ b/Products/ATContentTypes/tests/test_atimage.py
@@ -1,27 +1,20 @@
 # -*- coding: utf-8 -*-
-
-import unittest
-
 from cStringIO import StringIO
-import os
-
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.Archetypes.interfaces.layer import ILayerContainer
-from Products.Archetypes import atapi
 from plone.app.blob.content import ATBlob
-from Products.ATContentTypes.interfaces import IImageContent
+from plone.app.testing.bbb import PloneTestCase as FunctionalTestCase
+from plone.testing.z2 import Browser
+from Products.Archetypes import atapi
+from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.ATContentTypes.interfaces import IATImage
+from Products.ATContentTypes.interfaces import IImageContent
 from Products.ATContentTypes.tests import atcttestcase, atctftestcase
 from Products.ATContentTypes.tests.utils import dcEdit, PACKAGE_HOME
-from plone.app.testing.bbb import PloneTestCase as FunctionalTestCase
-from zope.interface.verify import verifyObject
-
-from plone.testing.z2 import Browser
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
 from transaction import commit
-
-# third party extension
+from zope.interface.verify import verifyObject
 import exif
+import os
 
 
 def loadImage(name, size=0):
@@ -189,7 +182,8 @@ def test_broken_exif(self):
         f = StringIO(TEST_EXIF_ERROR)
         exif_data = exif.process_file(f, debug=False)
         # probably want to add some tests on returned data. Currently gives
-        #  ValueError in process_file
+        #  ValueError in process_file.  Actually, no it does not.
+        self.assertEqual(exif_data.get('EXIF ColorSpace'), '1')
 
     def test_exif_upload(self):
         atct = self._ATCT
@@ -237,7 +231,7 @@ def test_imageField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 1, 'Value is %s' % field.required)
-        self.assertTrue(field.default == None, 'Value is %s' %
+        self.assertTrue(field.default is None, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.searchable == 0, 'Value is %s' %
                         field.searchable)
diff --git a/Products/ATContentTypes/tests/test_atlink.py b/Products/ATContentTypes/tests/test_atlink.py
index cf19e68..2526d87 100644
--- a/Products/ATContentTypes/tests/test_atlink.py
+++ b/Products/ATContentTypes/tests/test_atlink.py
@@ -1,16 +1,12 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.Archetypes import atapi
-
+from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.ATContentTypes.content.link import ATLink
 from Products.ATContentTypes.interfaces import IATLink
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
 from zope.interface.verify import verifyObject
+import unittest
 
 URL = 'http://www.example.org/'
 
diff --git a/Products/ATContentTypes/tests/test_atnewsitem.py b/Products/ATContentTypes/tests/test_atnewsitem.py
index ac33f01..519f806 100644
--- a/Products/ATContentTypes/tests/test_atnewsitem.py
+++ b/Products/ATContentTypes/tests/test_atnewsitem.py
@@ -1,20 +1,16 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-
-from Products.CMFCore.permissions import View
-from Products.CMFCore.permissions import ModifyPortalContent
-from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.Archetypes import atapi
-from Products.ATContentTypes.tests.utils import dcEdit
-
+from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.ATContentTypes.content.newsitem import ATNewsItem
-from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
-from Products.ATContentTypes.interfaces import ITextContent
-from Products.ATContentTypes.interfaces import IImageContent
 from Products.ATContentTypes.interfaces import IATNewsItem
+from Products.ATContentTypes.interfaces import IImageContent
+from Products.ATContentTypes.interfaces import ITextContent
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.ATContentTypes.tests.utils import dcEdit
+from Products.ATContentTypes.tests.utils import NotRequiredTidyHTMLValidator
+from Products.CMFCore.permissions import ModifyPortalContent
+from Products.CMFCore.permissions import View
 from zope.interface.verify import verifyObject
+import unittest
 
 
 tests = []
diff --git a/Products/ATContentTypes/tests/test_attopic.py b/Products/ATContentTypes/tests/test_attopic.py
index 8d3d214..75ffecf 100644
--- a/Products/ATContentTypes/tests/test_attopic.py
+++ b/Products/ATContentTypes/tests/test_attopic.py
@@ -1,25 +1,19 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
-from Products.ATContentTypes.tests.utils import dcEdit
-
-from Products.CMFCore.permissions import View
-from Products.Archetypes.interfaces.layer import ILayerContainer
+from OFS.interfaces import IOrderedContainer
 from Products.Archetypes import atapi
-
 from Products.Archetypes.Field import BooleanField
-from Products.CMFCore.utils import getToolByName
-
-from Products.ATContentTypes.permission import ChangeTopics
-from Products.ATContentTypes.content.topic import ATTopic
+from Products.Archetypes.interfaces.layer import ILayerContainer
 from Products.ATContentTypes.content.folder import ATFolder
-from Products.ATContentTypes.tests.utils import EmptyValidator
+from Products.ATContentTypes.content.topic import ATTopic
 from Products.ATContentTypes.interfaces import IATTopic
-from zope.interface.verify import verifyObject
-from OFS.interfaces import IOrderedContainer
-
+from Products.ATContentTypes.permission import ChangeTopics
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
+from Products.ATContentTypes.tests.utils import dcEdit
+from Products.ATContentTypes.tests.utils import EmptyValidator
+from Products.CMFCore.permissions import View
+from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.PloneBatch import Batch
+from zope.interface.verify import verifyObject
+import unittest
 
 
 ACQUIRE = True
@@ -436,7 +430,7 @@ def test_sort_criterion_does_not_affect_available_fields(self):
         self.assertTrue([i for i in topic.listAvailableFields()
                          if i[0] == 'created'])
         # Add a normal criteria for the same field
-        crit = topic.addCriterion('created', 'ATFriendlyDateCriteria')
+        topic.addCriterion('created', 'ATFriendlyDateCriteria')
         # It should no longer be available
         self.assertFalse([i for i in topic.listAvailableFields()
                           if i[0] == 'created'])
@@ -475,7 +469,7 @@ def test_acquireCriteriaField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 0, 'Value is %s' % field.required)
-        self.assertTrue(field.default == False, 'Value is %s' %
+        self.assertFalse(field.default, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.searchable == 0, 'Value is %s' %
                         field.searchable)
@@ -520,7 +514,7 @@ def test_limitNumberField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 0, 'Value is %s' % field.required)
-        self.assertTrue(field.default == False, 'Value is %s' %
+        self.assertFalse(field.default, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.searchable == 0, 'Value is %s' %
                         field.searchable)
@@ -608,7 +602,7 @@ def test_customViewField(self):
 
         self.assertTrue(ILayerContainer.providedBy(field))
         self.assertTrue(field.required == 0, 'Value is %s' % field.required)
-        self.assertTrue(field.default == False, 'Value is %s' %
+        self.assertFalse(field.default, 'Value is %s' %
                         str(field.default))
         self.assertTrue(field.searchable == 0, 'Value is %s' %
                         field.searchable)
@@ -659,7 +653,7 @@ def test_customViewFieldsField(self):
                         field.searchable)
         self.assertTrue(field.vocabulary == 'listMetaDataFields',
                         'Value is %s' % str(field.vocabulary))
-        self.assertTrue(field.enforceVocabulary == True,
+        self.assertTrue(field.enforceVocabulary,
                         'Value is %s' % field.enforceVocabulary)
         self.assertTrue(field.multiValued == 0,
                         'Value is %s' % field.multiValued)
diff --git a/Products/ATContentTypes/tests/test_base_profile.py b/Products/ATContentTypes/tests/test_base_profile.py
index 657f809..4f2bcff 100644
--- a/Products/ATContentTypes/tests/test_base_profile.py
+++ b/Products/ATContentTypes/tests/test_base_profile.py
@@ -1,7 +1,6 @@
 # -*- coding: UTF-8 -*-
 from plone.app.testing.bbb import PloneTestCase
 from Products.CMFCore.utils import getToolByName
-from Products.CMFDynamicViewFTI.interfaces import IDynamicViewTypeInformation
 
 
 class TestBaseProfile(PloneTestCase):
diff --git a/Products/ATContentTypes/tests/test_browserdefaultmixin.py b/Products/ATContentTypes/tests/test_browserdefaultmixin.py
index 706cac4..8ffe846 100644
--- a/Products/ATContentTypes/tests/test_browserdefaultmixin.py
+++ b/Products/ATContentTypes/tests/test_browserdefaultmixin.py
@@ -1,12 +1,9 @@
-import unittest
-import re
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
+from Products.ATContentTypes import permission
 from Products.ATContentTypes.tests import atcttestcase
-
 from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin
-from Products.ATContentTypes import permission
 from Products.CMFDynamicViewFTI.interfaces import ISelectableBrowserDefault
+import re
+import unittest
 
 tests = []
 
diff --git a/Products/ATContentTypes/tests/test_bugs.py b/Products/ATContentTypes/tests/test_bugs.py
index 17be0aa..ef6b8d8 100644
--- a/Products/ATContentTypes/tests/test_bugs.py
+++ b/Products/ATContentTypes/tests/test_bugs.py
@@ -1,9 +1,6 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
+from Products.ATContentTypes.content.schemata import ATContentTypeSchema
 from Products.ATContentTypes.tests import atcttestcase
 from Products.validation.interfaces.IValidator import IValidationChain
-from Products.ATContentTypes.content.schemata import ATContentTypeSchema
 
 tests = []
 
diff --git a/Products/ATContentTypes/tests/test_calendar.py b/Products/ATContentTypes/tests/test_calendar.py
index 93d3912..c485751 100644
--- a/Products/ATContentTypes/tests/test_calendar.py
+++ b/Products/ATContentTypes/tests/test_calendar.py
@@ -1,14 +1,12 @@
 # -*- coding: utf-8 -*-
-
+from Products.ATContentTypes.browser.calendar import cachekey
+from Products.ATContentTypes.interfaces import ICalendarSupport
+from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
 from unittest import defaultTestLoader
-from zope.interface import classImplements
+from zope.annotation.interfaces import IAttributeAnnotatable
 from zope.component import getMultiAdapter
+from zope.interface import classImplements
 from zope.publisher.browser import TestRequest
-from zope.annotation.interfaces import IAttributeAnnotatable
-
-from Products.ATContentTypes.tests.atcttestcase import ATCTSiteTestCase
-from Products.ATContentTypes.interfaces import ICalendarSupport
-from Products.ATContentTypes.browser.calendar import cachekey
 
 
 def makeResponse(request):
@@ -33,14 +31,16 @@ class EventCalendarTests(ATCTSiteTestCase):
     def afterSetUp(self):
         super(EventCalendarTests, self).afterSetUp()
         folder = self.folder
-        event1 = folder[folder.invokeFactory('Event',
-                                             id='ploneconf2007', title='Plone Conf 2007',
-                                             startDate='2007/10/10', endDate='2007/10/12', location='Naples',
-                                             eventUrl='http://plone.org/events/conferences/2007-naples')]
-        event2 = folder[folder.invokeFactory('Event',
-                                             id='ploneconf2008', title='Plone Conf 2008',
-                                             startDate='2008/10/08', endDate='2008/10/10', location='DC',
-                                             eventUrl='http://plone.org/events/conferences/2008-washington-dc')]
+        folder.invokeFactory(
+            'Event',
+            id='ploneconf2007', title='Plone Conf 2007',
+            startDate='2007/10/10', endDate='2007/10/12', location='Naples',
+            eventUrl='http://plone.org/events/conferences/2007-naples')
+        folder.invokeFactory(
+            'Event',
+            id='ploneconf2008', title='Plone Conf 2008',
+            startDate='2008/10/08', endDate='2008/10/10', location='DC',
+            eventUrl='http://plone.org/events/conferences/2008-washington-dc')
         classImplements(TestRequest, IAttributeAnnotatable)
 
     def testCalendarView(self):
@@ -61,9 +61,10 @@ def testCalendarViewForTopic(self):
         self.assertEqual(len(view.events), 1)
         self.assertEqual(sorted([e.Title for e in view.events]),
                          ['Plone Conf 2008'])
-        folder[folder.invokeFactory('Event',
-                                    id='inaug09', title='Inauguration Day 2009',
-                                    startDate='2009/01/20', endDate='2009/01/20', location='DC')]
+        folder.invokeFactory(
+            'Event',
+            id='inaug09', title='Inauguration Day 2009',
+            startDate='2009/01/20', endDate='2009/01/20', location='DC')
         view.update()
         self.assertEqual(len(view.events), 2)
         self.assertEqual(sorted([e.Title for e in view.events]),
@@ -71,7 +72,6 @@ def testCalendarViewForTopic(self):
 
     def testDuplicateQueryParameters(self):
         self.setRoles(('Manager',))
-        folder = self.folder
         topic = self.folder[self.folder.invokeFactory('Topic', id='dc')]
         crit = topic.addCriterion('portal_type', 'ATSimpleStringCriterion')
         crit.setValue('Event')
@@ -153,7 +153,6 @@ def testCalendarInfo(self):
 
     def testRenderingForTopic(self):
         self.setRoles(('Manager',))
-        folder = self.folder
         topic = self.folder[self.folder.invokeFactory('Topic', id='dc')]
         crit = topic.addCriterion('SearchableText', 'ATSimpleStringCriterion')
         crit.setValue('DC')
diff --git a/Products/ATContentTypes/tests/test_constraintypes.py b/Products/ATContentTypes/tests/test_constraintypes.py
index 25781f0..247f175 100644
--- a/Products/ATContentTypes/tests/test_constraintypes.py
+++ b/Products/ATContentTypes/tests/test_constraintypes.py
@@ -1,12 +1,8 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase
-
 from AccessControl.SecurityManagement import newSecurityManager
-
 from Products.ATContentTypes.lib import constraintypes
+from Products.ATContentTypes.tests import atcttestcase
 from Products.CMFPlone.interfaces import ISelectableConstrainTypes
+import unittest
 
 tests = []
 
diff --git a/Products/ATContentTypes/tests/test_criteria.py b/Products/ATContentTypes/tests/test_criteria.py
index f550745..b94084e 100644
--- a/Products/ATContentTypes/tests/test_criteria.py
+++ b/Products/ATContentTypes/tests/test_criteria.py
@@ -1,34 +1,29 @@
-import unittest
-
 from DateTime import DateTime
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase
 from Missing import MV
-
-from zope.interface.verify import verifyObject
+from Products.Archetypes.interfaces import IExtensibleMetadata
 from Products.Archetypes.interfaces.base import IBaseContent
 from Products.Archetypes.interfaces.referenceable import IReferenceable
-from Products.Archetypes.interfaces import IExtensibleMetadata
-
-from Products.ATContentTypes.interfaces import IATTopicCriterion
-
 from Products.ATContentTypes.criteria.base import ATBaseCriterion
+from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
+from Products.ATContentTypes.criteria.currentauthor import \
+    ATCurrentAuthorCriterion
 from Products.ATContentTypes.criteria.date import ATDateCriteria
+from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
 from Products.ATContentTypes.criteria.list import ATListCriterion
+from Products.ATContentTypes.criteria.path import ATPathCriterion
+from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
+from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
+from Products.ATContentTypes.criteria.relativepath import \
+    ATRelativePathCriterion
+from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
 from Products.ATContentTypes.criteria.simpleint import ATSimpleIntCriterion
 from Products.ATContentTypes.criteria.simplestring import \
     ATSimpleStringCriterion
 from Products.ATContentTypes.criteria.sort import ATSortCriterion
-from Products.ATContentTypes.criteria.selection import ATSelectionCriterion
-from Products.ATContentTypes.criteria.daterange import ATDateRangeCriterion
-from Products.ATContentTypes.criteria.reference import ATReferenceCriterion
-from Products.ATContentTypes.criteria.boolean import ATBooleanCriterion
-from Products.ATContentTypes.criteria.portaltype import ATPortalTypeCriterion
-from Products.ATContentTypes.criteria.currentauthor import \
-    ATCurrentAuthorCriterion
-from Products.ATContentTypes.criteria.path import ATPathCriterion
-from Products.ATContentTypes.criteria.relativepath import ATRelativePathCriterion
+from Products.ATContentTypes.interfaces import IATTopicCriterion
+from Products.ATContentTypes.tests import atcttestcase
+from zope.interface.verify import verifyObject
+import unittest
 tests = []
 
 
diff --git a/Products/ATContentTypes/tests/test_installation.py b/Products/ATContentTypes/tests/test_installation.py
index 7902967..12f713e 100644
--- a/Products/ATContentTypes/tests/test_installation.py
+++ b/Products/ATContentTypes/tests/test_installation.py
@@ -1,7 +1,4 @@
 import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-
 from Products.ATContentTypes.tests import atcttestcase
 from Products.ATContentTypes.config import TOOLNAME
 from Products.ATContentTypes.config import SWALLOW_IMAGE_RESIZE_EXCEPTIONS
@@ -69,7 +66,7 @@ def test_adds_related_items_catalog_index(self):
 
     def test_api_import(self):
         import Products.ATContentTypes.atct
-
+        Products.ATContentTypes.atct  # pyflakes
 
 tests.append(TestInstallation)
 
diff --git a/Products/ATContentTypes/tests/test_migrations.py b/Products/ATContentTypes/tests/test_migrations.py
index dc442de..af5ab75 100644
--- a/Products/ATContentTypes/tests/test_migrations.py
+++ b/Products/ATContentTypes/tests/test_migrations.py
@@ -1,8 +1,6 @@
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase
-
 from Products.ATContentTypes.config import TOOLNAME
 from Products.ATContentTypes.migration.v1_2 import upgradeATCTTool
+from Products.ATContentTypes.tests import atcttestcase
 from Products.CMFCore.utils import getToolByName
 
 
diff --git a/Products/ATContentTypes/tests/test_skinScripts.py b/Products/ATContentTypes/tests/test_skinScripts.py
index e18e98d..e90e3ba 100644
--- a/Products/ATContentTypes/tests/test_skinScripts.py
+++ b/Products/ATContentTypes/tests/test_skinScripts.py
@@ -1,9 +1,7 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase
 from DateTime import DateTime
+from Products.ATContentTypes.tests import atcttestcase
 import Missing
+import unittest
 
 tests = []
 
diff --git a/Products/ATContentTypes/tests/test_tool.py b/Products/ATContentTypes/tests/test_tool.py
index fd74c79..d601295 100644
--- a/Products/ATContentTypes/tests/test_tool.py
+++ b/Products/ATContentTypes/tests/test_tool.py
@@ -1,11 +1,9 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase, atctftestcase
 from Products.ATContentTypes.config import TOOLNAME
 from Products.ATContentTypes.interfaces import IATCTTool
-from zope.interface.verify import verifyObject
+from Products.ATContentTypes.tests import atcttestcase, atctftestcase
 from Products.CMFCore.utils import getToolByName
+from zope.interface.verify import verifyObject
+import unittest
 
 tests = []
 
diff --git a/Products/ATContentTypes/tests/test_topictool.py b/Products/ATContentTypes/tests/test_topictool.py
index 6bd687e..49b9d16 100644
--- a/Products/ATContentTypes/tests/test_topictool.py
+++ b/Products/ATContentTypes/tests/test_topictool.py
@@ -1,12 +1,9 @@
-import unittest
-
-from Testing import ZopeTestCase  # side effect import. leave it here.
-from Products.ATContentTypes.tests import atcttestcase
-
-from Products.CMFCore.utils import getToolByName
 from Products.ATContentTypes.config import TOOLNAME
 from Products.ATContentTypes.interfaces import IATCTTopicsTool
+from Products.ATContentTypes.tests import atcttestcase
+from Products.CMFCore.utils import getToolByName
 from zope.interface.verify import verifyObject
+import unittest
 
 tests = []
 index_def = {'index': 'end',
@@ -98,14 +95,14 @@ def test_remove_index(self):
         t.removeIndex(index_def['index'])
         error = None
         try:
-            index = t.topic_indexes[index_def['index']]
+            t.topic_indexes[index_def['index']]
         except KeyError:
             error = True
         self.assertTrue(error)
 
         error = True
         try:
-            index = t.getIndex(index_def['index'])
+            t.getIndex(index_def['index'])
         except AttributeError:
             error = False
         self.assertFalse(error)
@@ -220,14 +217,14 @@ def test_remove_metadata(self):
         t.removeMetadata(meta_def['metadata'])
         error = None
         try:
-            meta = t.topic_metadata[meta_def['metadata']]
+            t.topic_metadata[meta_def['metadata']]
         except KeyError:
             error = True
         self.assertTrue(error)
 
         error = True
         try:
-            meta = t.getMetadata(meta_def['metadata'])
+            t.getMetadata(meta_def['metadata'])
         except AttributeError:
             error = False
         self.assertFalse(error)


Repository: Products.ATContentTypes


Branch: refs/heads/master
Date: 2015-10-01T03:50:55+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.ATContentTypes/commit/7fadd2dbd90c16ab23bce1a80978695703de3d20

pyflakes/pep8 in lib/validators.py

Files changed:
M Products/ATContentTypes/lib/validators.py

diff --git a/Products/ATContentTypes/lib/validators.py b/Products/ATContentTypes/lib/validators.py
index 878a317..134fcc4 100644
--- a/Products/ATContentTypes/lib/validators.py
+++ b/Products/ATContentTypes/lib/validators.py
@@ -168,9 +168,6 @@ def __init__(self, name, title='', description=''):
         self.description = description
 
     def __call__(self, value, *args, **kwargs):
-        instance = kwargs.get('instance', None)
-        field = kwargs.get('field', None)
-
         # calculate size
         if isinstance(value, FileUpload) or type(value) is FileType \
                 or hasattr(aq_base(value), 'tell'):
@@ -267,17 +264,6 @@ def unwrapValueFromHTML(value):
         body = result.group(1)
     else:
         raise ValueError('%s is not a html string' % value)
-
-# remove 2 spaces from the beginning of each line
-##    nlines = []
-# for line in body.split('\n'):
-# print line
-# if line[:2] == '  ':
-# nlines.append(line[2:])
-# else:
-# nlines.append(line)
-##
-# return '\n'.join(nlines)
     return body
 
 


