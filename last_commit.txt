Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-04-18T20:05:45+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.querystring/commit/dc5aacca5e1112a2f9bdc11280f4d61eec8e2f8c

Add operators selection.oneOf and selection.all

change Subject QueryField operators to use selection.oneOf and selection.all
operators. The change make's it possible to use "oneOf" (OR) and "all" (AND) for
Tag criteria of collections. Now is there only a meaningless "Is" operator.

Files changed:
A plone/app/querystring/profiles/upgrades/to_6/registry.xml
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/upgrades.zcml

diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index 99bbe10..1935bf7 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -27,4 +27,12 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+    <genericsetup:registerProfile
+        name="upgrade_to_6"
+        title="Querystring Upgrade profile to v6"
+        description=""
+        directory="profiles/upgrades/to_6"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index 1df4040..e92cf44 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -202,6 +202,22 @@
         <value key="widget">RelativePathWidget</value>
     </records>
 
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.oneOf">
+        <value key="title" i18n:translate="">Contains one of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._contains</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.all">
+        <value key="title" i18n:translate="">Contains all</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._all</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
 <!-- QueryField declarations  -->
     <records interface="plone.app.querystring.interfaces.IQueryField"
              prefix="plone.app.querystring.field.path">
@@ -502,7 +518,8 @@
         <value key="enabled">True</value>
         <value key="sortable">True</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.oneOf</element>
+            <element>plone.app.querystring.operation.selection.all</element>
         </value>
        <value key="vocabulary">plone.app.vocabularies.Keywords</value>
        <value key="group" i18n:translate="">Text</value>
diff --git a/plone/app/querystring/profiles/upgrades/to_6/registry.xml b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
new file mode 100644
index 0000000..570be8c
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
@@ -0,0 +1,35 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.oneOf">
+        <value key="title" i18n:translate="">Contains one of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._contains</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.all">
+        <value key="title" i18n:translate="">Contains all</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._all</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.Subject">
+        <value key="title" i18n:translate="">Tag</value>
+        <value key="description" i18n:translate="">Tags are used for organization of content</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.oneOf</element>
+            <element>plone.app.querystring.operation.selection.all</element>
+        </value>
+       <value key="vocabulary">plone.app.vocabularies.Keywords</value>
+       <value key="group" i18n:translate="">Text</value>
+    </records>
+
+
+</registry>
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index cae2cd5..4315be4 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -65,6 +65,10 @@ def _equal(context, row):
     return {row.index: {'query': row.values, }}
 
 
+def _all(context, row):
+    return {row.index: {'query': row.values, 'operator': 'and'}}
+
+
 def _isTrue(context, row):
     return {row.index: {'query': True, }}
 
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index 83f12fd..edc005c 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -41,4 +41,13 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="5"
+      destination="6"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Change subject operations to selection.oneOf and selection.all"
+        import_profile="plone.app.querystring:upgrade_to_6"
+        />
+  </genericsetup:upgradeSteps>
 </configure>


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-07-15T11:18:24+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.querystring/commit/a0eff5205f44ad581208d43fdde9222e87a0f365

Merge branch 'master' into mrtango-subject-all-operator

Conflicts:
	plone/app/querystring/profiles.zcml
	plone/app/querystring/profiles/upgrades/to_6/registry.xml
	plone/app/querystring/queryparser.py
	plone/app/querystring/upgrades.zcml

Files changed:
A plone/app/querystring/profiles/upgrades/to_7/registry.xml
A plone/app/querystring/profiles/upgrades/to_8/registry.xml
M CHANGES.rst
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/profiles/upgrades/to_6/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py
M plone/app/querystring/upgrades.zcml
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d439fea..bcbe244 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,10 +1,18 @@
 Changelog
 =========
 
-1.3.2 (unreleased)
+1.3.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Fix getObjPositionInParent be sortable by default
+  [datakurre]
+
+
+1.3.2 (2015-05-04)
+------------------
+
+- Implement ``is``, ``lessThan`` and ``largerThan`` operators for integer fields (fixes `#32`_).
+  [rodfersou]
 
 
 1.3.1 (2015-03-12)
@@ -205,3 +213,5 @@ Changelog
 ----------------
 
 * Initial release
+
+.. _`#32`: https://github.com/plone/plone.app.querystring/issues/32
diff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml
index c637d7b..d3f9949 100644
--- a/plone/app/querystring/profiles/default/metadata.xml
+++ b/plone/app/querystring/profiles/default/metadata.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>5</version>
+  <version>7</version>
   <dependencies>
       <dependency>profile-plone.app.registry:default</dependency>
   </dependencies>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index e92cf44..a6d6105 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -22,7 +22,7 @@
              prefix="plone.app.querystring.operation.int.is">
         <value key="title" i18n:translate="">Equals</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._equal</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -30,7 +30,7 @@
              prefix="plone.app.querystring.operation.int.lessThan">
         <value key="title" i18n:translate="">Less than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._lessThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -38,7 +38,7 @@
              prefix="plone.app.querystring.operation.int.largerThan">
         <value key="title" i18n:translate="">Larger than</value>
         <value key="description"></value>
-        <value key="operation">plone.app.querystring.queryparser._largerThan</value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
         <value key="widget">StringWidget</value>
     </records>
 
@@ -179,6 +179,14 @@
     </records>
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
              prefix="plone.app.querystring.operation.string.absolutePath">
         <value key="title" i18n:translate="">Absolute path</value>
         <value key="description" i18n:translate="">Location in the site structure</value>
@@ -203,8 +211,8 @@
     </records>
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
-             prefix="plone.app.querystring.operation.selection.oneOf">
-        <value key="title" i18n:translate="">Contains one of</value>
+             prefix="plone.app.querystring.operation.selection.any">
+        <value key="title" i18n:translate="">Matches any of</value>
         <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
         <value key="operation">plone.app.querystring.queryparser._contains</value>
         <value key="widget">MultipleSelectionWidget</value>
@@ -212,7 +220,7 @@
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
              prefix="plone.app.querystring.operation.selection.all">
-        <value key="title" i18n:translate="">Contains all</value>
+        <value key="title" i18n:translate="">Matches all of</value>
         <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
         <value key="operation">plone.app.querystring.queryparser._all</value>
         <value key="widget">MultipleSelectionWidget</value>
@@ -343,7 +351,7 @@
         <value key="title" i18n:translate="">Order in folder</value>
         <value key="description" i18n:translate="">The order of an item in its parent folder</value>
         <value key="enabled">False</value>
-        <value key="sortable">False</value>
+        <value key="sortable">True</value>
         <value key="operations">
             <element>plone.app.querystring.operation.int.is</element>
             <element>plone.app.querystring.operation.int.lessThan</element>
diff --git a/plone/app/querystring/profiles/upgrades/to_6/registry.xml b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
index 570be8c..35779b9 100644
--- a/plone/app/querystring/profiles/upgrades/to_6/registry.xml
+++ b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
@@ -2,34 +2,35 @@
           i18n:domain="plone">
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
-             prefix="plone.app.querystring.operation.selection.oneOf">
-        <value key="title" i18n:translate="">Contains one of</value>
-        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
-        <value key="operation">plone.app.querystring.queryparser._contains</value>
-        <value key="widget">MultipleSelectionWidget</value>
+             prefix="plone.app.querystring.operation.int.is">
+        <value key="title" i18n:translate="">Equals</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">StringWidget</value>
     </records>
 
     <records interface="plone.app.querystring.interfaces.IQueryOperation"
-             prefix="plone.app.querystring.operation.selection.all">
-        <value key="title" i18n:translate="">Contains all</value>
-        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
-        <value key="operation">plone.app.querystring.queryparser._all</value>
-        <value key="widget">MultipleSelectionWidget</value>
+             prefix="plone.app.querystring.operation.int.lessThan">
+        <value key="title" i18n:translate="">Less than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLessThan</value>
+        <value key="widget">StringWidget</value>
     </records>
 
-    <records interface="plone.app.querystring.interfaces.IQueryField"
-             prefix="plone.app.querystring.field.Subject">
-        <value key="title" i18n:translate="">Tag</value>
-        <value key="description" i18n:translate="">Tags are used for organization of content</value>
-        <value key="enabled">True</value>
-        <value key="sortable">True</value>
-        <value key="operations">
-            <element>plone.app.querystring.operation.selection.oneOf</element>
-            <element>plone.app.querystring.operation.selection.all</element>
-        </value>
-       <value key="vocabulary">plone.app.vocabularies.Keywords</value>
-       <value key="group" i18n:translate="">Text</value>
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.int.largerThan">
+        <value key="title" i18n:translate="">Larger than</value>
+        <value key="description"></value>
+        <value key="operation">plone.app.querystring.queryparser._intLargerThan</value>
+        <value key="widget">StringWidget</value>
     </records>
 
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.intselection.is">
+        <value key="title" i18n:translate="">Is</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._intEqual</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
 
-</registry>
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/profiles/upgrades/to_7/registry.xml b/plone/app/querystring/profiles/upgrades/to_7/registry.xml
new file mode 100644
index 0000000..525800f
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_7/registry.xml
@@ -0,0 +1,9 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.getObjPositionInParent">
+        <value key="sortable">True</value>
+    </records>
+
+</registry>
diff --git a/plone/app/querystring/profiles/upgrades/to_8/registry.xml b/plone/app/querystring/profiles/upgrades/to_8/registry.xml
new file mode 100644
index 0000000..b009b4d
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_8/registry.xml
@@ -0,0 +1,35 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.any">
+        <value key="title" i18n:translate="">Matches any of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._contains</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.all">
+        <value key="title" i18n:translate="">Matches all of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._all</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.Subject">
+        <value key="title" i18n:translate="">Tag</value>
+        <value key="description" i18n:translate="">Tags are used for organization of content</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+            <element>plone.app.querystring.operation.selection.all</element>
+        </value>
+       <value key="vocabulary">plone.app.vocabularies.Keywords</value>
+       <value key="group" i18n:translate="">Text</value>
+    </records>
+
+
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index 4315be4..dd5600b 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -4,7 +4,6 @@
 from Products.CMFPlone.interfaces import IPloneSiteRoot
 from Products.CMFPlone.utils import base_hasattr
 from collections import namedtuple
-from plone.app.layout.navigation.interfaces import INavigationRoot
 from plone.app.layout.navigation.root import getNavigationRoot
 from plone.registry.interfaces import IRegistry
 from zope.component import getUtility
@@ -69,6 +68,15 @@ def _all(context, row):
     return {row.index: {'query': row.values, 'operator': 'and'}}
 
 
+def _intEqual(context, row):
+    values = None
+    if type(row.values) is list:
+        values = [int(v) for v in row.values]
+    elif type(row.values) is str:
+        values = int(row.values)
+    return {row.index: {'query': values, }}
+
+
 def _isTrue(context, row):
     return {row.index: {'query': True, }}
 
@@ -97,6 +105,19 @@ def _largerThan(context, row):
     return tmp
 
 
+def _intLargerThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
+    tmp = {row.index:
+           {
+               'query': value,
+               'range': 'min',
+           },
+           }
+    return tmp
+
+
 def _lessThan(context, row):
     tmp = {row.index:
            {
@@ -107,6 +128,19 @@ def _lessThan(context, row):
     return tmp
 
 
+def _intLessThan(context, row):
+    value = None
+    if type(row.values) is str:
+        value = int(row.values)
+    tmp = {row.index:
+           {
+               'query': value,
+               'range': 'max',
+           },
+           }
+    return tmp
+
+
 def _currentUser(context, row):
     """Current user lookup"""
     mt = getToolByName(context, 'portal_membership')
@@ -218,7 +252,7 @@ def _pathByRoot(root, context, row):
             depth = int(_depth)
         except ValueError:
             pass
-    if not '/' in values:
+    if '/' not in values:
         # It must be a UID
         values = getPathByUID(context, values)
     # take care of absolute paths without root
@@ -252,7 +286,7 @@ def _relativePath(context, row):
     depthstr = ""
     if '::' in values:
         values, _depth = values.split('::', 1)
-        depthstr = "::%s"%_depth
+        depthstr = "::%s" % _depth
     for x in [r for r in values.split('/') if r]:
         if x == "..":
             if IPloneSiteRoot.providedBy(obj):
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 889fd81..23a1436 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -244,14 +244,42 @@ def test__between_reversed_dates(self):
                     'range': 'minmax'}}
         self.assertEqual(parsed, expected)
 
-    def test__largerThan(self):
+    def test__equal(self):
         data = Row(
             index='modified',
-            operator='_largerThan',
+            operator='_equal',
             values='2010/03/18'
         )
-        parsed = queryparser._largerThan(MockSite(), data)
-        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18'}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_equal',
+            values=['2010/03/18', '2010/03/19']
+        )
+        parsed = queryparser._equal(MockSite(), data)
+        expected = {'modified': {'query': ['2010/03/18', '2010/03/19']}}
+        self.assertEqual(parsed, expected)
+
+    def test__intEqual(self):
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values='20'
+        )
+        parsed = queryparser._intEqual(MockSite(), data)
+        expected = {'modified': {'query': 20}}
+        self.assertEqual(parsed, expected)
+
+        data = Row(
+            index='modified',
+            operator='_intEqual',
+            values=['20', '21']
+        )
+        parsed = queryparser._intEqual(MockSite(), data)
+        expected = {'modified': {'query': [20, 21]}}
         self.assertEqual(parsed, expected)
 
     def test__lessThan(self):
@@ -264,6 +292,36 @@ def test__lessThan(self):
         expected = {'modified': {'query': '2010/03/18', 'range': 'max'}}
         self.assertEqual(parsed, expected)
 
+    def test__intLessThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLessThan',
+            values='20'
+        )
+        parsed = queryparser._intLessThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'max'}}
+        self.assertEqual(parsed, expected)
+
+    def test__largerThan(self):
+        data = Row(
+            index='modified',
+            operator='_largerThan',
+            values='2010/03/18'
+        )
+        parsed = queryparser._largerThan(MockSite(), data)
+        expected = {'modified': {'query': '2010/03/18', 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
+    def test__intLargerThan(self):
+        data = Row(
+            index='modified',
+            operator='_intLargerThan',
+            values='20'
+        )
+        parsed = queryparser._intLargerThan(MockSite(), data)
+        expected = {'modified': {'query': 20, 'range': 'min'}}
+        self.assertEqual(parsed, expected)
+
     def test__currentUser(self):
         # Anonymous user
         u = MockUser()
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index edc005c..a261c70 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -46,8 +46,29 @@
       destination="6"
       profile="plone.app.querystring:default">
     <genericsetup:upgradeDepends
-        title="Change subject operations to selection.oneOf and selection.all"
+        title="Fix int operators"
         import_profile="plone.app.querystring:upgrade_to_6"
         />
   </genericsetup:upgradeSteps>
+
+  <genericsetup:upgradeSteps
+      source="6"
+      destination="7"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Fix getObjPositionInParent be sortable by default"
+        import_profile="plone.app.querystring:upgrade_to_7"
+        />
+  </genericsetup:upgradeSteps>
+
+  <genericsetup:upgradeSteps
+      source="7"
+      destination="8"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Change subject operations to selection.any and selection.all"
+        import_profile="plone.app.querystring:upgrade_to_8"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>
diff --git a/setup.py b/setup.py
index d28633c..d9b8938 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '1.3.2.dev0'
+version = '1.3.3.dev0'
 
 long_description = open("README.rst").read() + "\n"
 long_description += open("CHANGES.rst").read()
@@ -8,7 +8,8 @@
 setup(
     name='plone.app.querystring',
     version=version,
-    description="",
+    description=("A queryparser, querybuilder and extra helper tools, to "
+                 "parse stored queries to actual results, used in new style Plone collections"),
     long_description=long_description,
     classifiers=[
         "Framework :: Plone",


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-07-17T12:43:13+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.querystring/commit/8a55c6df4d1b758bf44fb19c3338cd4e2f866d5d

fix registry entries

Files changed:
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/registry.xml

diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index 1935bf7..c89b840 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -35,4 +35,20 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+    <genericsetup:registerProfile
+        name="upgrade_to_7"
+        title="Querystring Upgrade profile to v7"
+        description=""
+        directory="profiles/upgrades/to_7"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
+    <genericsetup:registerProfile
+        name="upgrade_to_8"
+        title="Querystring Upgrade profile to v8"
+        description=""
+        directory="profiles/upgrades/to_8"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index a6d6105..0aa4744 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -526,7 +526,7 @@
         <value key="enabled">True</value>
         <value key="sortable">True</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.oneOf</element>
+            <element>plone.app.querystring.operation.selection.any</element>
             <element>plone.app.querystring.operation.selection.all</element>
         </value>
        <value key="vocabulary">plone.app.vocabularies.Keywords</value>


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-07-17T14:13:58+02:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/3d08240a392a7cbccbe1cbfe445410687af51d61

Merge pull request #31 from plone/mrtango-subject-all-operator

Add operators selection.any and selection.all to Subject

Files changed:
A plone/app/querystring/profiles/upgrades/to_8/registry.xml
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/profiles/upgrades/to_6/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/upgrades.zcml

diff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml
index aa74fa0..c89b840 100644
--- a/plone/app/querystring/profiles.zcml
+++ b/plone/app/querystring/profiles.zcml
@@ -43,4 +43,12 @@
         provides="Products.GenericSetup.interfaces.EXTENSION"
         />
 
+    <genericsetup:registerProfile
+        name="upgrade_to_8"
+        title="Querystring Upgrade profile to v8"
+        description=""
+        directory="profiles/upgrades/to_8"
+        provides="Products.GenericSetup.interfaces.EXTENSION"
+        />
+
  </configure>
diff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml
index ed6c4b2..0aa4744 100644
--- a/plone/app/querystring/profiles/default/registry.xml
+++ b/plone/app/querystring/profiles/default/registry.xml
@@ -210,6 +210,22 @@
         <value key="widget">RelativePathWidget</value>
     </records>
 
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.any">
+        <value key="title" i18n:translate="">Matches any of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._contains</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.all">
+        <value key="title" i18n:translate="">Matches all of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._all</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
 <!-- QueryField declarations  -->
     <records interface="plone.app.querystring.interfaces.IQueryField"
              prefix="plone.app.querystring.field.path">
@@ -510,7 +526,8 @@
         <value key="enabled">True</value>
         <value key="sortable">True</value>
         <value key="operations">
-            <element>plone.app.querystring.operation.selection.is</element>
+            <element>plone.app.querystring.operation.selection.any</element>
+            <element>plone.app.querystring.operation.selection.all</element>
         </value>
        <value key="vocabulary">plone.app.vocabularies.Keywords</value>
        <value key="group" i18n:translate="">Text</value>
diff --git a/plone/app/querystring/profiles/upgrades/to_6/registry.xml b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
index 8265161..35779b9 100644
--- a/plone/app/querystring/profiles/upgrades/to_6/registry.xml
+++ b/plone/app/querystring/profiles/upgrades/to_6/registry.xml
@@ -33,4 +33,4 @@
         <value key="widget">MultipleSelectionWidget</value>
     </records>
 
-</registry>
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/profiles/upgrades/to_8/registry.xml b/plone/app/querystring/profiles/upgrades/to_8/registry.xml
new file mode 100644
index 0000000..b009b4d
--- /dev/null
+++ b/plone/app/querystring/profiles/upgrades/to_8/registry.xml
@@ -0,0 +1,35 @@
+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+          i18n:domain="plone">
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.any">
+        <value key="title" i18n:translate="">Matches any of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._contains</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryOperation"
+             prefix="plone.app.querystring.operation.selection.all">
+        <value key="title" i18n:translate="">Matches all of</value>
+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>
+        <value key="operation">plone.app.querystring.queryparser._all</value>
+        <value key="widget">MultipleSelectionWidget</value>
+    </records>
+
+    <records interface="plone.app.querystring.interfaces.IQueryField"
+             prefix="plone.app.querystring.field.Subject">
+        <value key="title" i18n:translate="">Tag</value>
+        <value key="description" i18n:translate="">Tags are used for organization of content</value>
+        <value key="enabled">True</value>
+        <value key="sortable">True</value>
+        <value key="operations">
+            <element>plone.app.querystring.operation.selection.any</element>
+            <element>plone.app.querystring.operation.selection.all</element>
+        </value>
+       <value key="vocabulary">plone.app.vocabularies.Keywords</value>
+       <value key="group" i18n:translate="">Text</value>
+    </records>
+
+
+</registry>
\ No newline at end of file
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index 87adb1f..dd5600b 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -4,7 +4,6 @@
 from Products.CMFPlone.interfaces import IPloneSiteRoot
 from Products.CMFPlone.utils import base_hasattr
 from collections import namedtuple
-from plone.app.layout.navigation.interfaces import INavigationRoot
 from plone.app.layout.navigation.root import getNavigationRoot
 from plone.registry.interfaces import IRegistry
 from zope.component import getUtility
@@ -65,6 +64,10 @@ def _equal(context, row):
     return {row.index: {'query': row.values, }}
 
 
+def _all(context, row):
+    return {row.index: {'query': row.values, 'operator': 'and'}}
+
+
 def _intEqual(context, row):
     values = None
     if type(row.values) is list:
@@ -249,7 +252,7 @@ def _pathByRoot(root, context, row):
             depth = int(_depth)
         except ValueError:
             pass
-    if not '/' in values:
+    if '/' not in values:
         # It must be a UID
         values = getPathByUID(context, values)
     # take care of absolute paths without root
@@ -283,7 +286,7 @@ def _relativePath(context, row):
     depthstr = ""
     if '::' in values:
         values, _depth = values.split('::', 1)
-        depthstr = "::%s"%_depth
+        depthstr = "::%s" % _depth
     for x in [r for r in values.split('/') if r]:
         if x == "..":
             if IPloneSiteRoot.providedBy(obj):
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index c5dcd83..a261c70 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -61,4 +61,14 @@
         />
   </genericsetup:upgradeSteps>
 
+  <genericsetup:upgradeSteps
+      source="7"
+      destination="8"
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeDepends
+        title="Change subject operations to selection.any and selection.all"
+        import_profile="plone.app.querystring:upgrade_to_8"
+        />
+  </genericsetup:upgradeSteps>
+
 </configure>


