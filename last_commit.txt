Repository: plone.app.content
Branch: refs/heads/master
Date: 2015-04-11T19:02:19+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/377ebf137787c74c9063dcc9e2b5bbaf7dc70c08

fix remaining i18n issues on folder contents

Files changed:
M plone/app/content/browser/folder.py

diff --git a/plone/app/content/browser/folder.py b/plone/app/content/browser/folder.py
index f04dc9d..fc21ffa 100644
--- a/plone/app/content/browser/folder.py
+++ b/plone/app/content/browser/folder.py
@@ -215,9 +215,13 @@ def message(self, missing=[]):
         else:
             msg = self.failure_msg
 
+        translated_msg = translate(msg, context=self.request)
+        translated_errors = [translate(error, context=self.request)
+                             for error in self.errors]
+
         return self.json({
             'status': 'success',
-            'msg': '%s: %s' % (msg, '\n'.join(self.errors))
+            'msg': '%s: %s' % (translated_msg, '\n'.join(translated_errors))
         })
 
 
@@ -424,8 +428,8 @@ def action(self, obj):
             except ConflictError:
                 raise
             except Exception:
-                self.errors.append('Could not transition: %s' % (
-                    self.objectTitle(obj)))
+                self.errors.append(_('Could not transition: ${title}',
+                    mapping={'title': self.objectTitle(obj)}))
 
 
 class PropertiesAction(FolderContentsActionView):
@@ -554,9 +558,11 @@ def __call__(self):
         for item in factories_menu:
             if item.get('title') == 'folder_add_settings':
                 continue
+            title = item.get('title', '')
             factories.append({
                 'id': item.get('id'),
-                'title': translate(item.get('title', '')),
+                'title': title and translate(title,
+                    context=self.request) or '',
                 'action': item.get('action')
                 })
 
@@ -624,5 +630,5 @@ def __call__(self):
             for idx, brain in enumerate(brains):
                 ordering.moveObjectToPosition(brain.id, idx)
         else:
-            self.errors.append(u'cannot rearrange folder')
+            self.errors.append(_(u'cannot rearrange folder'))
         return self.message()


