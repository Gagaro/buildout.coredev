Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2015-09-07T01:04:18-04:00
Author: esteele (esteele) <eric@esteele.net>
Commit: https://github.com/plone/plone.app.portlets/commit/aabd7c0a568456cc1c3885e8def8d171630c9bd1

Use registry lookup to get filter_on_workflow and workflow_states_to_show settings.

Files changed:
M CHANGES.rst
M plone/app/portlets/portlets/navigation.py
M plone/app/portlets/tests/test_navigation_portlet.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9fdc87a..1d70892 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,9 @@ Changelog
 3.0.8 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Use registry lookup to get filter_on_workflow and 
+  workflow_states_to_show settings.
+  [esteele]
 
 
 3.0.7 (2015-07-18)
diff --git a/plone/app/portlets/portlets/navigation.py b/plone/app/portlets/portlets/navigation.py
index e0ca269..03a4924 100644
--- a/plone/app/portlets/portlets/navigation.py
+++ b/plone/app/portlets/portlets/navigation.py
@@ -14,16 +14,19 @@
 from plone.i18n.normalizer.interfaces import IIDNormalizer
 from plone.memoize.instance import memoize
 from plone.portlets.interfaces import IPortletDataProvider
+from plone.registry.interfaces import IRegistry
 from Products.CMFCore.interfaces import ISiteRoot
 from Products.CMFCore.utils import getToolByName
 from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault
 from Products.CMFPlone import utils
 from Products.CMFPlone.browser.navtree import SitemapNavtreeStrategy
+from Products.CMFPlone.interfaces import INavigationSchema
 from Products.CMFPlone.interfaces import INonStructuralFolder
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zExceptions import NotFound
 from zope import schema
 from zope.component import adapts, getMultiAdapter, queryUtility
+from zope.component import getUtility
 from zope.interface import implements, Interface
 
 
@@ -362,8 +365,13 @@ def __init__(self, context, portlet):
                 query['sort_order'] = sortOrder
 
         # Filter on workflow states, if enabled
-        if navtree_properties.getProperty('enable_wf_state_filtering', False):
-            query['review_state'] = navtree_properties.getProperty('wf_states_to_show', ())
+        registry = getUtility(IRegistry)
+        navigation_settings = registry.forInterface(
+            INavigationSchema,
+            prefix="plone"
+        )
+        if navigation_settings.filter_on_workflow:
+            query['review_state'] = navigation_settings.workflow_states_to_show
 
         self.query = query
 
diff --git a/plone/app/portlets/tests/test_navigation_portlet.py b/plone/app/portlets/tests/test_navigation_portlet.py
index 4dd9b06..4068ffb 100644
--- a/plone/app/portlets/tests/test_navigation_portlet.py
+++ b/plone/app/portlets/tests/test_navigation_portlet.py
@@ -20,6 +20,8 @@
 from plone.app.portlets.tests.base import PortletsTestCase
 
 from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces import INavigationSchema
 
 from Products.CMFPlone.tests import dummy
 from plone.app.testing import TEST_USER_ID
@@ -437,10 +439,14 @@ def testCustomQuery(self):
     def testStateFiltering(self):
         # Test Navtree workflow state filtering
         setRoles(self.portal, TEST_USER_ID, ['Manager'])
+        registry = getUtility(IRegistry)
+        navigation_settings = registry.forInterface(
+            INavigationSchema,
+            prefix="plone"
+        )
         workflow = self.portal.portal_workflow
-        ntp=self.portal.portal_properties.navtree_properties
-        ntp.manage_changeProperties(wf_states_to_show=['published'])
-        ntp.manage_changeProperties(enable_wf_state_filtering=True)
+        navigation_settings.workflow_states_to_show = ('published',)
+        navigation_settings.filter_on_workflow = True
         view = self.renderer(self.portal.folder2)
         tree = view.getNavTree()
         self.assertTrue(tree)


