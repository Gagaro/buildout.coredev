Repository: Products.Archetypes
Branch: refs/heads/master
Date: 2015-03-25T15:33:44+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/Products.Archetypes/commit/3e9e4fd19f64ec1d885d17afa05dad01b74fc640

Not removing portal_languages, its not there in plone 5

Files changed:
M Products/Archetypes/tests/attestcase.py

diff --git a/Products/Archetypes/tests/attestcase.py b/Products/Archetypes/tests/attestcase.py
index 6049fbe..e4f2899 100644
--- a/Products/Archetypes/tests/attestcase.py
+++ b/Products/Archetypes/tests/attestcase.py
@@ -23,7 +23,6 @@ def setUpZope(self, app, configurationContext):
 
     def setUpPloneSite(self, portal):
         applyProfile(portal, 'Products.Archetypes:Archetypes_sampletypes')
-        portal._delObject('portal_languages', suppress_events=True)
 
 AT_FIXTURE = ATTestCaseFixture()
 AT_FUNCTIONAL_TESTING = FunctionalTesting(bases=(AT_FIXTURE,),


Repository: Products.Archetypes
Branch: refs/heads/master
Date: 2015-03-25T15:56:44+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/Products.Archetypes/commit/24a4e5bccd9401e9232c2f97864d41c0e4645116

Tests adapted to new language mechanism

Files changed:
M Products/Archetypes/config.py
M Products/Archetypes/tests/test_languagevocabulary.py

diff --git a/Products/Archetypes/config.py b/Products/Archetypes/config.py
index 962589b..529a222 100644
--- a/Products/Archetypes/config.py
+++ b/Products/Archetypes/config.py
@@ -40,7 +40,7 @@
 ATTRIBUTE_SECURITY = True
 
 # set language default for metadata, it will be overwritten by portal-settings!
-LANGUAGE_DEFAULT = u''
+LANGUAGE_DEFAULT = u'en'
 
 # Archetypes before 1.4 managed the catalog map using meta types instead of
 # portal types. If you need this old behaviour change this setting to False.
diff --git a/Products/Archetypes/tests/test_languagevocabulary.py b/Products/Archetypes/tests/test_languagevocabulary.py
index 2aa792a..9c088e1 100644
--- a/Products/Archetypes/tests/test_languagevocabulary.py
+++ b/Products/Archetypes/tests/test_languagevocabulary.py
@@ -9,6 +9,9 @@
 from Products.Archetypes.config import PKG_NAME
 from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
 from Products.Archetypes.tests.test_classgen import Dummy
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+from Products.CMFPlone.interfaces import ILanguageSchema
 
 Dummy.schema = BaseSchema
 
@@ -32,10 +35,11 @@ def test_no_combined_codes(self):
         tool = getToolByName(self.portal, 'portal_languages', None)
         defaultLanguage = 'en'
         supportedLanguages = ['en', 'de', 'no']
-        if tool is not None:
-            tool.manage_setLanguageSettings(defaultLanguage,
-                                            supportedLanguages,
-                                            setUseCombinedLanguageCodes=False)
+        settings = getUtility(IRegistry).forInterface(
+            ILanguageSchema,
+            prefix='plone')
+        settings.default_language = defaultLanguage
+        settings.available_languages = supportedLanguages
         dummy = self._dummy
         field = dummy.getField('language')
         vocab = field.Vocabulary(dummy)
@@ -45,10 +49,12 @@ def test_combined_codes(self):
         tool = getToolByName(self.portal, 'portal_languages', None)
         defaultLanguage = 'pt-br'
         supportedLanguages = ['pt-br', 'en', 'de', 'no']
-        if tool is not None:
-            tool.manage_setLanguageSettings(defaultLanguage,
-                                            supportedLanguages,
-                                            setUseCombinedLanguageCodes=True)
+        settings = getUtility(IRegistry).forInterface(
+            ILanguageSchema,
+            prefix='plone')
+        settings.use_combined_language_codes = True
+        settings.default_language = defaultLanguage
+        settings.available_languages = supportedLanguages
         dummy = self._dummy
         field = dummy.getField('language')
         vocab = field.Vocabulary(dummy)


Repository: Products.Archetypes
Branch: refs/heads/master
Date: 2015-03-25T16:25:49+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/Products.Archetypes/commit/2560bcc93774e241895b24a11b5f57f86d15a83d

More test fixing for pam  plone 5

Files changed:
M Products/Archetypes/tests/folder_marshall.txt
M Products/Archetypes/tests/test_default_mimetypes.py

diff --git a/Products/Archetypes/tests/folder_marshall.txt b/Products/Archetypes/tests/folder_marshall.txt
index 2526856..4aceeb2 100644
--- a/Products/Archetypes/tests/folder_marshall.txt
+++ b/Products/Archetypes/tests/folder_marshall.txt
@@ -112,7 +112,7 @@ like a normal resource:
   creators: test_user_1_
   effectiveDate: None
   expirationDate: None
-  language:
+  language: en
   rights:
   creation_date: ...
   modification_date: ...
@@ -190,7 +190,7 @@ like a normal resource:
   creators: test_user_1_
   effectiveDate: None
   expirationDate: None
-  language:
+  language: en
   rights:
   creation_date: ...
   modification_date: ...
diff --git a/Products/Archetypes/tests/test_default_mimetypes.py b/Products/Archetypes/tests/test_default_mimetypes.py
index ac43616..d60480d 100644
--- a/Products/Archetypes/tests/test_default_mimetypes.py
+++ b/Products/Archetypes/tests/test_default_mimetypes.py
@@ -25,15 +25,15 @@ def test_ATDocumentDefaultType(self):
         obj = self.portal.testdoc
         # its text field should have the site wide default 'text/plain'
         textfield = obj.getField('body')
-        self.assertEqual(textfield.getContentType(obj), 'text/plain')
+        self.assertEqual(textfield.getContentType(obj), 'text/html')
         # and so has the teaser field:
         teaserfield = obj.getField('teaser')
-        self.assertEqual(teaserfield.getContentType(obj), 'text/plain')
+        self.assertEqual(teaserfield.getContentType(obj), 'text/html')
 
         # then we try to change the sitewide default:
         setDefaultContentType(self.portal, "text/x-web-markdown")
         # while this raises no error it won't change the default, as we have
         # no properties tool nor properties sheet
-        self.assertEqual(getDefaultContentType(self.portal), 'text/plain')
+        self.assertEqual(getDefaultContentType(self.portal), 'text/x-web-markdown')
         self.portal['portal_properties'] = _orignal_pp
         _tool_interface_registry['portal_properties'] = ptool


Repository: Products.Archetypes
Branch: refs/heads/master
Date: 2015-03-25T22:06:16+01:00
Author: Ramon Navarro Bosch (bloodbare) <ramon.nb@gmail.com>
Commit: https://github.com/plone/Products.Archetypes/commit/f825b7b10f3a3e45656fdb191c33ae01678f97d9

Merge pull request #44 from plone/plip13091

Plip13091

Files changed:
M Products/Archetypes/config.py
M Products/Archetypes/tests/attestcase.py
M Products/Archetypes/tests/folder_marshall.txt
M Products/Archetypes/tests/test_default_mimetypes.py
M Products/Archetypes/tests/test_languagevocabulary.py

diff --git a/Products/Archetypes/config.py b/Products/Archetypes/config.py
index 962589b..529a222 100644
--- a/Products/Archetypes/config.py
+++ b/Products/Archetypes/config.py
@@ -40,7 +40,7 @@
 ATTRIBUTE_SECURITY = True
 
 # set language default for metadata, it will be overwritten by portal-settings!
-LANGUAGE_DEFAULT = u''
+LANGUAGE_DEFAULT = u'en'
 
 # Archetypes before 1.4 managed the catalog map using meta types instead of
 # portal types. If you need this old behaviour change this setting to False.
diff --git a/Products/Archetypes/tests/attestcase.py b/Products/Archetypes/tests/attestcase.py
index 6049fbe..e4f2899 100644
--- a/Products/Archetypes/tests/attestcase.py
+++ b/Products/Archetypes/tests/attestcase.py
@@ -23,7 +23,6 @@ def setUpZope(self, app, configurationContext):
 
     def setUpPloneSite(self, portal):
         applyProfile(portal, 'Products.Archetypes:Archetypes_sampletypes')
-        portal._delObject('portal_languages', suppress_events=True)
 
 AT_FIXTURE = ATTestCaseFixture()
 AT_FUNCTIONAL_TESTING = FunctionalTesting(bases=(AT_FIXTURE,),
diff --git a/Products/Archetypes/tests/folder_marshall.txt b/Products/Archetypes/tests/folder_marshall.txt
index 2526856..4aceeb2 100644
--- a/Products/Archetypes/tests/folder_marshall.txt
+++ b/Products/Archetypes/tests/folder_marshall.txt
@@ -112,7 +112,7 @@ like a normal resource:
   creators: test_user_1_
   effectiveDate: None
   expirationDate: None
-  language:
+  language: en
   rights:
   creation_date: ...
   modification_date: ...
@@ -190,7 +190,7 @@ like a normal resource:
   creators: test_user_1_
   effectiveDate: None
   expirationDate: None
-  language:
+  language: en
   rights:
   creation_date: ...
   modification_date: ...
diff --git a/Products/Archetypes/tests/test_default_mimetypes.py b/Products/Archetypes/tests/test_default_mimetypes.py
index ac43616..d60480d 100644
--- a/Products/Archetypes/tests/test_default_mimetypes.py
+++ b/Products/Archetypes/tests/test_default_mimetypes.py
@@ -25,15 +25,15 @@ def test_ATDocumentDefaultType(self):
         obj = self.portal.testdoc
         # its text field should have the site wide default 'text/plain'
         textfield = obj.getField('body')
-        self.assertEqual(textfield.getContentType(obj), 'text/plain')
+        self.assertEqual(textfield.getContentType(obj), 'text/html')
         # and so has the teaser field:
         teaserfield = obj.getField('teaser')
-        self.assertEqual(teaserfield.getContentType(obj), 'text/plain')
+        self.assertEqual(teaserfield.getContentType(obj), 'text/html')
 
         # then we try to change the sitewide default:
         setDefaultContentType(self.portal, "text/x-web-markdown")
         # while this raises no error it won't change the default, as we have
         # no properties tool nor properties sheet
-        self.assertEqual(getDefaultContentType(self.portal), 'text/plain')
+        self.assertEqual(getDefaultContentType(self.portal), 'text/x-web-markdown')
         self.portal['portal_properties'] = _orignal_pp
         _tool_interface_registry['portal_properties'] = ptool
diff --git a/Products/Archetypes/tests/test_languagevocabulary.py b/Products/Archetypes/tests/test_languagevocabulary.py
index 2aa792a..9c088e1 100644
--- a/Products/Archetypes/tests/test_languagevocabulary.py
+++ b/Products/Archetypes/tests/test_languagevocabulary.py
@@ -9,6 +9,9 @@
 from Products.Archetypes.config import PKG_NAME
 from Products.Archetypes.tests.atsitetestcase import ATSiteTestCase
 from Products.Archetypes.tests.test_classgen import Dummy
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+from Products.CMFPlone.interfaces import ILanguageSchema
 
 Dummy.schema = BaseSchema
 
@@ -32,10 +35,11 @@ def test_no_combined_codes(self):
         tool = getToolByName(self.portal, 'portal_languages', None)
         defaultLanguage = 'en'
         supportedLanguages = ['en', 'de', 'no']
-        if tool is not None:
-            tool.manage_setLanguageSettings(defaultLanguage,
-                                            supportedLanguages,
-                                            setUseCombinedLanguageCodes=False)
+        settings = getUtility(IRegistry).forInterface(
+            ILanguageSchema,
+            prefix='plone')
+        settings.default_language = defaultLanguage
+        settings.available_languages = supportedLanguages
         dummy = self._dummy
         field = dummy.getField('language')
         vocab = field.Vocabulary(dummy)
@@ -45,10 +49,12 @@ def test_combined_codes(self):
         tool = getToolByName(self.portal, 'portal_languages', None)
         defaultLanguage = 'pt-br'
         supportedLanguages = ['pt-br', 'en', 'de', 'no']
-        if tool is not None:
-            tool.manage_setLanguageSettings(defaultLanguage,
-                                            supportedLanguages,
-                                            setUseCombinedLanguageCodes=True)
+        settings = getUtility(IRegistry).forInterface(
+            ILanguageSchema,
+            prefix='plone')
+        settings.use_combined_language_codes = True
+        settings.default_language = defaultLanguage
+        settings.available_languages = supportedLanguages
         dummy = self._dummy
         field = dummy.getField('language')
         vocab = field.Vocabulary(dummy)


