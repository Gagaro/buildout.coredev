Repository: mockup
Branch: refs/heads/master
Date: 2015-03-03T00:13:05+01:00
Author: Johannes Raggam (thet) <raggam-nl@adm.at>
Commit: https://github.com/plone/mockup/commit/e1929d03ee0ead270405246f5366c5905462960f

Bring back TinyMCE sed and copy from mockup into mockup-core.  If we create bundles from an external package based on patterns from mockup, we don't want to care about the sed and copy tasks too. Instead, those should be defined on the patterns itself, but thats for a future release.

Files changed:
M CHANGES.rst
M mockup/Gruntfile.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e28141..960f140 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,12 @@ Changelog
 2.0.0 (unreleased)
 ------------------
 
+- Bring back TinyMCE ``sed`` and ``copy`` from ``mockup`` into ``mockup-core``.
+  If we create bundles from an external package based on patterns from mockup,
+  we don't want to care about the sed and copy tasks too. Instead, those should
+  be defined on the patterns itself, but thats for a future release.
+  [thet]
+
 - Add ``id`` and ``Title`` to the default available columns of the structure
   pattern.
   [thet]
diff --git a/mockup/Gruntfile.js b/mockup/Gruntfile.js
index b9ee36d..46e88cd 100644
--- a/mockup/Gruntfile.js
+++ b/mockup/Gruntfile.js
@@ -1,19 +1,13 @@
-/* Grunt software build task definitions.
- */
-
+// Grunt software build task definitions.
 /* global module:true */
-
-
 module.exports = function(grunt) {
   'use strict';
 
   var MockupGrunt = require('./bower_components/mockup-core/js/grunt'),
       requirejsOptions = require('./js/config'),
-      extend = require('./node_modules/extend/index'),
       mockup = new MockupGrunt(requirejsOptions),
       docsExtraIncludes = [];
 
-
   for (var i = 0; i < mockup.patterns.length; i = i + 1) {
     if (mockup.patterns[i].indexOf('-url') === -1) {
       docsExtraIncludes.push(mockup.patterns[i]);
@@ -21,76 +15,6 @@ module.exports = function(grunt) {
     }
   }
 
-  var copy_tinymce = function (name, path) {
-    var ret = {};
-    ret[name] = {
-      files: [
-        {
-          expand: true, cwd: 'bower_components/tinymce-builded/js/tinymce/langs', src: '*', dest: path + name + '-tinymce/langs'
-        }, {
-          expand: true, cwd: 'bower_components/tinymce-builded/js/tinymce/skins/lightgray/fonts/', src: 'tinymce*', dest: path,
-          rename: function(dest, src) { return dest + name + '-tinymce-font-' + src; }
-        }, {
-          expand: true, cwd: 'bower_components/tinymce-builded/js/tinymce/skins/lightgray/img/', src: '*', dest: path,
-          rename: function(dest, src) { return dest + name + '-tinymce-img-' + src; }
-        }, {
-          expand: true, cwd: 'bower_components/tinymce-builded/js/tinymce/skins/lightgray/', src: 'content.min.css', dest: path,
-          rename: function(dest, src) { return dest + name + '-tinymce-' + src; }
-        }
-      ]
-    };
-    return ret;
-  };
-  var sed_tinymce = function(name, path, url) {
-    var ret = {};
-
-    ret[name + '-tinymce-fonts'] = {
-      path: path + name + '.min.css',
-      pattern: 'url\\(fonts/tinymce',
-      replacement: 'url(' + url + '-tinymce-font-tinymce'
-      //pattern: 'url\\(\'?fonts/tinymce(.*)\'?',  // match urls with and without quotes
-      //replacement: 'url(\'' + url + '-tinymce-font-tinymce$1\''
-    };
-    ret[name + '-tinymce-img-loader'] = {
-      path: path + name + '.min.css',
-      pattern: 'url\\(\'?img/loader.gif\'?',  // match urls with and without quotes
-      replacement: 'url(\'' + url + '-tinymce-img-loader.gif\''
-    };
-    ret[name + '-tinymce-img-anchor'] = {
-      path: path + name + '.min.css',
-      pattern: 'url\\(\'?img/anchor.gif\'?',
-      replacement: 'url(\'' + url + '-tinymce-img-anchor.gif\''
-    };
-    ret[name + '-tinymce-img-object'] = {
-      path: path + name + '.min.css',
-      pattern: 'url\\(\'?img/object.gif\'?',
-      replacement: 'url(\'' + url + '-tinymce-img-object.gif\''
-    };
-
-    ret[name + '-tinymce-fonts2'] = {
-      path: path + name + '-tinymce-content.min.css',
-      pattern: 'url\\(fonts/tinymce',
-      replacement: 'url(' + url + '-tinymce-font-tinymce'
-    };
-    ret[name + '-tinymce-img-loader2'] = {
-      path: path + name + '-tinymce-content.min.css',
-      pattern: 'url\\(\'?img/loader.gif\'?',
-      replacement: 'url(\'' + url + '-tinymce-img-loader.gif\''
-    };
-    ret[name + '-tinymce-img-anchor2'] = {
-      path: path + name + '-tinymce-content.min.css',
-      pattern: 'url\\(\'?img/anchor.gif\'?',
-      replacement: 'url(\'' + url + '-tinymce-img-anchor.gif\''
-    };
-    ret[name + '-tinymce-img-object2'] = {
-      path: path + name + '-tinymce-content.min.css',
-      pattern: 'url\\(\'?img/object.gif\'?',
-      replacement: 'url(\'' + url + '-tinymce-img-object.gif\''
-    };
-    return ret;
-  };
-
-
   mockup.registerBundle('docs', {
     less: {
       options : {
@@ -103,43 +27,37 @@ module.exports = function(grunt) {
       }
     },
     copy: {
-      docs: extend(true,
-        {
-          files: [
-            { expand: true, src: 'index.html', dest: 'docs/dev/' },
-            { expand: true, src: '*.md', dest: 'docs/dev/' },
-            { expand: true, src: 'js/**', dest: 'docs/dev/' },
-            { expand: true, src: 'tests/**', dest: 'docs/dev/' },
-            { expand: true, src: 'lib/**', dest: 'docs/dev/' },
-            { expand: true, src: 'bower_components/**', dest: 'docs/dev/' },
-            { expand: true, src: 'node_modules/requirejs/require.js', dest: 'docs/dev/' },
-            { expand: true, src: 'build/**', dest: 'docs/dev/' },
-            { expand: true, src: 'less/**', dest: 'docs/dev/' }
-          ]
-        },
-        copy_tinymce('docs', 'docs/dev/')
-      )
+      docs: {
+        files: [
+          { expand: true, src: 'index.html', dest: 'docs/dev/' },
+          { expand: true, src: '*.md', dest: 'docs/dev/' },
+          { expand: true, src: 'js/**', dest: 'docs/dev/' },
+          { expand: true, src: 'tests/**', dest: 'docs/dev/' },
+          { expand: true, src: 'lib/**', dest: 'docs/dev/' },
+          { expand: true, src: 'bower_components/**', dest: 'docs/dev/' },
+          { expand: true, src: 'node_modules/requirejs/require.js', dest: 'docs/dev/' },
+          { expand: true, src: 'build/**', dest: 'docs/dev/' },
+          { expand: true, src: 'less/**', dest: 'docs/dev/' }
+        ]
+      },
     },
-    sed: extend(true,
-      {
-        'docs-css': {
-          path: 'docs/dev/index.html',
-          pattern: 'href="docs/dev/docs.min.css"',
-          replacement: 'href="docs.min.css"'
-        },
-        'docs-js': {
-          path: 'docs/dev/index.html',
-          pattern: '<script src="node_modules/grunt-contrib-less/node_modules/less/dist/less-1.6.1.js"></script>\n  <script src="node_modules/requirejs/require.js"></script>\n  <script src="js/config.js"></script>\n  <script>require\\(\\[\'mockup-bundles-docs\'\\]\\);</script>',
-          replacement: '<script src="docs.min.js"></script>'
-        },
-        'docs-legacy-js': {
-          path: 'docs/dev/index.html',
-          pattern: '<script src="bower_components/es5-shim/es5-shim.js"></script>\n    <script src="bower_components/es5-shim/es5-sham.js"></script>\n    <script src="bower_components/console-polyfill/index.js"></script>',
-          replacement: '<script src="docs-legacy.js"></script>'
-        }
+    sed: {
+      'docs-css': {
+        path: 'docs/dev/index.html',
+        pattern: 'href="docs/dev/docs.min.css"',
+        replacement: 'href="docs.min.css"'
       },
-      sed_tinymce('widgets', 'docs/dev/', '++resource++plone.app.widgets')
-    )
+      'docs-js': {
+        path: 'docs/dev/index.html',
+        pattern: '<script src="node_modules/grunt-contrib-less/node_modules/less/dist/less-1.6.1.js"></script>\n  <script src="node_modules/requirejs/require.js"></script>\n  <script src="js/config.js"></script>\n  <script>require\\(\\[\'mockup-bundles-docs\'\\]\\);</script>',
+        replacement: '<script src="docs.min.js"></script>'
+      },
+      'docs-legacy-js': {
+        path: 'docs/dev/index.html',
+        pattern: '<script src="bower_components/es5-shim/es5-shim.js"></script>\n    <script src="bower_components/es5-shim/es5-sham.js"></script>\n    <script src="bower_components/console-polyfill/index.js"></script>',
+        replacement: '<script src="docs-legacy.js"></script>'
+      }
+    },
   }, {
     path: 'docs/dev/',
     url: 'docs',
@@ -149,15 +67,8 @@ module.exports = function(grunt) {
   mockup.registerBundle('structure', {}, { url: '++resource++wildcard.foldercontents-structure' });
   mockup.registerBundle('filemanager', {}, { url: '++resource++plone.resourceeditor-filemanager' });
   mockup.registerBundle('resourceregistry');
-  mockup.registerBundle('plone', {
-    copy: copy_tinymce('plone', 'build/'),
-    sed: sed_tinymce('plone', 'build/', '++resource++plone')
-  }, {path: 'build/', url: '++resource++plone'});
-  mockup.registerBundle('widgets', {
-    copy: copy_tinymce('widgets', 'build/'),
-    sed: sed_tinymce('widgets', 'build/', '++resource++plone.app.widgets')
-  }, {path: 'build/', url: '++resource++plone.app.widgets'});
-
+  mockup.registerBundle('plone', {}, { path: 'build/', url: '++resource++plone' });
+  mockup.registerBundle('widgets', {}, { path: 'build/', url: '++resource++plone.app.widgets' });
 
   mockup.initGrunt(grunt, {
     sed: {


