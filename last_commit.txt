Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-09-09T10:24:21+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/Products.CMFEditions/commit/0f1485250c1320583fc9becc957486a12a70cd89

use unrestricted catalog search for storage statistics

Files changed:
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/tests/test_ZVCStorageTool.py

diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index 0152c96..02676a0 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -665,7 +665,7 @@ def zmi_getStorageStatistics(self):
             if shadowStorage is not None:
                 size, sizeState = shadowStorage.getSize()
 
-            workingCopy = hidhandler.queryObject(hid)
+            workingCopy = hidhandler.unrestrictedQueryObject(hid)
             if workingCopy is not None:
                 url = workingCopy.absolute_url()
                 path = url[portal_paths_len:]
diff --git a/Products/CMFEditions/tests/test_ZVCStorageTool.py b/Products/CMFEditions/tests/test_ZVCStorageTool.py
index e937f52..6acec0b 100755
--- a/Products/CMFEditions/tests/test_ZVCStorageTool.py
+++ b/Products/CMFEditions/tests/test_ZVCStorageTool.py
@@ -23,7 +23,7 @@
 """Test the standard archivist
 
 """
-
+from DateTime.DateTime import DateTime
 from Products.CMFEditions.tests.base import CMFEditionsBaseTestCase
 
 from zope.interface.verify import verifyObject
@@ -43,6 +43,18 @@
 class DummyOM(ObjectManager):
     pass
 
+class CMFDummy(Dummy):
+
+    def __init__(self, id, cmfuid, effective=None, expires=None):
+        super(CMFDummy, self).__init__()
+        self.id = id
+        self.cmf_uid = cmfuid
+        self.effective = effective if effective is not None else self.modification_date
+        self.expires = expires
+
+    def getPortalTypeName(self):
+        return 'Dummy'
+
 class TestZVCStorageTool(CMFEditionsBaseTestCase):
 
     def afterSetUp(self):
@@ -446,6 +458,84 @@ def test14_getHistoryMetadata(self):
         self.assertEqual(history.retrieve(2)['metadata']['sys_metadata']['comment'], "saved v3")
         self.assertEqual(history.retrieve(3)['metadata']['sys_metadata']['comment'], "saved v4")
 
+    def test15_storageStatistics(self):
+        self.maxDiff = None
+        portal_storage = self.portal.portal_historiesstorage
+
+        cmf_uid = 1
+        obj1 = CMFDummy('obj', cmf_uid)
+        obj1.text = 'v1 of text'
+        portal_storage.register(cmf_uid, ObjectData(obj1), metadata=self.buildMetadata('saved v1'))
+
+        obj2 = CMFDummy('obj', cmf_uid)
+        obj2.text = 'v2 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj2), metadata=self.buildMetadata('saved v2'))
+
+        obj3 = CMFDummy('obj', cmf_uid)
+        obj3.text = 'v3 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj3), metadata=self.buildMetadata('saved v3'))
+
+        obj4 = CMFDummy('obj', cmf_uid)
+        obj4.text = 'v4 of text'
+        self.portal._setObject('obj', obj4)
+        self.portal.portal_catalog.indexObject(self.portal.obj)
+        portal_storage.save(cmf_uid, ObjectData(obj4), metadata=self.buildMetadata('saved v4'))
+
+        cmf_uid = 2
+        tomorrow = DateTime() + 1
+        obj5 = CMFDummy('tomorrow', cmf_uid, effective=tomorrow)
+        self.portal._setObject('tomorrow', obj5)
+        self.portal.portal_catalog.indexObject(self.portal.tomorrow)
+        portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('effective tomorrow'))
+
+        cmf_uid = 3
+        yesterday = DateTime() - 1
+        obj5 = CMFDummy('yesterday', cmf_uid, expires=yesterday)
+        self.portal._setObject('yesterday', obj5)
+        self.portal.portal_catalog.indexObject(self.portal.yesterday)
+        portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('expired yesterday'))
+
+        got = portal_storage.zmi_getStorageStatistics()
+        expected = {'deleted': [], 
+                    'summaries': {
+                        'totalHistories': 3, 
+                        'deletedVersions': 0, 
+                        'existingVersions': 6, 
+                        'deletedHistories': 0, 
+                        'time': '0.00', 
+                        'totalVersions': 6, 
+                        'existingAverage': '2.0', 
+                        'existingHistories': 3, 
+                        'deletedAverage': 'n/a', 
+                        'totalAverage': '2.0'}, 
+                    'existing': [
+                        {
+                            'url': 'http://nohost/plone/obj', 
+                            'history_id': 1, 
+                            'length': 4, 
+                            'path': '/obj', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 1718
+                        }, {
+                            'url': 'http://nohost/plone/tomorrow', 
+                            'history_id': 2, 
+                            'length': 1, 
+                            'path': '/tomorrow', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 514
+                        }, {
+                            'url': 'http://nohost/plone/yesterday', 
+                            'history_id': 3, 
+                            'length': 1, 
+                            'path': '/yesterday', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 516
+                        }]}
+        self.assertEqual(expected, got)
+
 
 class TestMemoryStorage(TestZVCStorageTool):
 
@@ -453,3 +543,8 @@ def installStorageTool(self):
         # install the memory storage
         tool = MemoryStorage()
         setattr(self.portal, tool.getId(), tool)
+
+    def test15_storageStatistics(self):
+        """ MemoryStorage does not implement zmi_getStorageStatistics
+        """
+        pass


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-09-09T10:24:53+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/Products.CMFEditions/commit/4e3cd52be3d371e6a50e6649df298e30fbf568fa

more testing

Files changed:
M Products/CMFEditions/tests/test_ZVCStorageTool.py

diff --git a/Products/CMFEditions/tests/test_ZVCStorageTool.py b/Products/CMFEditions/tests/test_ZVCStorageTool.py
index 6acec0b..fdf4265 100755
--- a/Products/CMFEditions/tests/test_ZVCStorageTool.py
+++ b/Products/CMFEditions/tests/test_ZVCStorageTool.py
@@ -484,30 +484,40 @@ def test15_storageStatistics(self):
         cmf_uid = 2
         tomorrow = DateTime() + 1
         obj5 = CMFDummy('tomorrow', cmf_uid, effective=tomorrow)
+        obj5.allowedRolesAndUsers = ['Anonymous']
         self.portal._setObject('tomorrow', obj5)
         self.portal.portal_catalog.indexObject(self.portal.tomorrow)
         portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('effective tomorrow'))
 
         cmf_uid = 3
         yesterday = DateTime() - 1
-        obj5 = CMFDummy('yesterday', cmf_uid, expires=yesterday)
-        self.portal._setObject('yesterday', obj5)
+        obj6 = CMFDummy('yesterday', cmf_uid, expires=yesterday)
+        obj6.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('yesterday', obj6)
         self.portal.portal_catalog.indexObject(self.portal.yesterday)
-        portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('expired yesterday'))
+        portal_storage.register(cmf_uid, ObjectData(obj6), metadata=self.buildMetadata('expired yesterday'))
+
+        cmf_uid = 4
+        obj7 = CMFDummy('public', cmf_uid)
+        obj7.text = 'visible for everyone'
+        obj7.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('public', obj7)
+        self.portal.portal_catalog.indexObject(self.portal.public)
+        portal_storage.register(cmf_uid, ObjectData(obj7), metadata=self.buildMetadata('saved public'))
 
         got = portal_storage.zmi_getStorageStatistics()
         expected = {'deleted': [], 
                     'summaries': {
-                        'totalHistories': 3, 
+                        'totalHistories': 4, 
                         'deletedVersions': 0, 
-                        'existingVersions': 6, 
+                        'existingVersions': 7, 
                         'deletedHistories': 0, 
                         'time': '0.00', 
-                        'totalVersions': 6, 
-                        'existingAverage': '2.0', 
-                        'existingHistories': 3, 
+                        'totalVersions': 7, 
+                        'existingAverage': '1.8', 
+                        'existingHistories': 4, 
                         'deletedAverage': 'n/a', 
-                        'totalAverage': '2.0'}, 
+                        'totalAverage': '1.8'}, 
                     'existing': [
                         {
                             'url': 'http://nohost/plone/obj', 
@@ -524,7 +534,7 @@ def test15_storageStatistics(self):
                             'path': '/tomorrow', 
                             'sizeState': 'approximate', 
                             'portal_type': 'Dummy', 
-                            'size': 514
+                            'size': 555
                         }, {
                             'url': 'http://nohost/plone/yesterday', 
                             'history_id': 3, 
@@ -532,7 +542,15 @@ def test15_storageStatistics(self):
                             'path': '/yesterday', 
                             'sizeState': 'approximate', 
                             'portal_type': 'Dummy', 
-                            'size': 516
+                            'size': 557
+                        }, {
+                            'url': 'http://nohost/plone/public', 
+                            'history_id': 4, 
+                            'length': 1, 
+                            'path': '/public', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 557
                         }]}
         self.assertEqual(expected, got)
 


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-09-09T13:10:55+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/Products.CMFEditions/commit/a970aa064ce05b31625f44b8b229ffbd2f3f67b3

update changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 67dc8c7..3064ecd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,7 @@ Changelog
 2.2.15 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- use unrestricted search for storage statistics [tschorr]
 
 
 2.2.14 (2015-08-13)


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-09-14T11:07:47+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/e33382c3d77da7a219c4c58f6539b22aa0d7b668

Merge pull request #30 from tschorr/storage_statistics_pr

use unrestricted catalog search for storage statistics

Files changed:
M CHANGES.rst
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/tests/test_ZVCStorageTool.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 67dc8c7..3064ecd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,7 @@ Changelog
 2.2.15 (unreleased)
 -------------------
 
-- Nothing changed yet.
+- use unrestricted search for storage statistics [tschorr]
 
 
 2.2.14 (2015-08-13)
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index 0152c96..02676a0 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -665,7 +665,7 @@ def zmi_getStorageStatistics(self):
             if shadowStorage is not None:
                 size, sizeState = shadowStorage.getSize()
 
-            workingCopy = hidhandler.queryObject(hid)
+            workingCopy = hidhandler.unrestrictedQueryObject(hid)
             if workingCopy is not None:
                 url = workingCopy.absolute_url()
                 path = url[portal_paths_len:]
diff --git a/Products/CMFEditions/tests/test_ZVCStorageTool.py b/Products/CMFEditions/tests/test_ZVCStorageTool.py
index e937f52..fdf4265 100755
--- a/Products/CMFEditions/tests/test_ZVCStorageTool.py
+++ b/Products/CMFEditions/tests/test_ZVCStorageTool.py
@@ -23,7 +23,7 @@
 """Test the standard archivist
 
 """
-
+from DateTime.DateTime import DateTime
 from Products.CMFEditions.tests.base import CMFEditionsBaseTestCase
 
 from zope.interface.verify import verifyObject
@@ -43,6 +43,18 @@
 class DummyOM(ObjectManager):
     pass
 
+class CMFDummy(Dummy):
+
+    def __init__(self, id, cmfuid, effective=None, expires=None):
+        super(CMFDummy, self).__init__()
+        self.id = id
+        self.cmf_uid = cmfuid
+        self.effective = effective if effective is not None else self.modification_date
+        self.expires = expires
+
+    def getPortalTypeName(self):
+        return 'Dummy'
+
 class TestZVCStorageTool(CMFEditionsBaseTestCase):
 
     def afterSetUp(self):
@@ -446,6 +458,102 @@ def test14_getHistoryMetadata(self):
         self.assertEqual(history.retrieve(2)['metadata']['sys_metadata']['comment'], "saved v3")
         self.assertEqual(history.retrieve(3)['metadata']['sys_metadata']['comment'], "saved v4")
 
+    def test15_storageStatistics(self):
+        self.maxDiff = None
+        portal_storage = self.portal.portal_historiesstorage
+
+        cmf_uid = 1
+        obj1 = CMFDummy('obj', cmf_uid)
+        obj1.text = 'v1 of text'
+        portal_storage.register(cmf_uid, ObjectData(obj1), metadata=self.buildMetadata('saved v1'))
+
+        obj2 = CMFDummy('obj', cmf_uid)
+        obj2.text = 'v2 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj2), metadata=self.buildMetadata('saved v2'))
+
+        obj3 = CMFDummy('obj', cmf_uid)
+        obj3.text = 'v3 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj3), metadata=self.buildMetadata('saved v3'))
+
+        obj4 = CMFDummy('obj', cmf_uid)
+        obj4.text = 'v4 of text'
+        self.portal._setObject('obj', obj4)
+        self.portal.portal_catalog.indexObject(self.portal.obj)
+        portal_storage.save(cmf_uid, ObjectData(obj4), metadata=self.buildMetadata('saved v4'))
+
+        cmf_uid = 2
+        tomorrow = DateTime() + 1
+        obj5 = CMFDummy('tomorrow', cmf_uid, effective=tomorrow)
+        obj5.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('tomorrow', obj5)
+        self.portal.portal_catalog.indexObject(self.portal.tomorrow)
+        portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('effective tomorrow'))
+
+        cmf_uid = 3
+        yesterday = DateTime() - 1
+        obj6 = CMFDummy('yesterday', cmf_uid, expires=yesterday)
+        obj6.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('yesterday', obj6)
+        self.portal.portal_catalog.indexObject(self.portal.yesterday)
+        portal_storage.register(cmf_uid, ObjectData(obj6), metadata=self.buildMetadata('expired yesterday'))
+
+        cmf_uid = 4
+        obj7 = CMFDummy('public', cmf_uid)
+        obj7.text = 'visible for everyone'
+        obj7.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('public', obj7)
+        self.portal.portal_catalog.indexObject(self.portal.public)
+        portal_storage.register(cmf_uid, ObjectData(obj7), metadata=self.buildMetadata('saved public'))
+
+        got = portal_storage.zmi_getStorageStatistics()
+        expected = {'deleted': [], 
+                    'summaries': {
+                        'totalHistories': 4, 
+                        'deletedVersions': 0, 
+                        'existingVersions': 7, 
+                        'deletedHistories': 0, 
+                        'time': '0.00', 
+                        'totalVersions': 7, 
+                        'existingAverage': '1.8', 
+                        'existingHistories': 4, 
+                        'deletedAverage': 'n/a', 
+                        'totalAverage': '1.8'}, 
+                    'existing': [
+                        {
+                            'url': 'http://nohost/plone/obj', 
+                            'history_id': 1, 
+                            'length': 4, 
+                            'path': '/obj', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 1718
+                        }, {
+                            'url': 'http://nohost/plone/tomorrow', 
+                            'history_id': 2, 
+                            'length': 1, 
+                            'path': '/tomorrow', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 555
+                        }, {
+                            'url': 'http://nohost/plone/yesterday', 
+                            'history_id': 3, 
+                            'length': 1, 
+                            'path': '/yesterday', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 557
+                        }, {
+                            'url': 'http://nohost/plone/public', 
+                            'history_id': 4, 
+                            'length': 1, 
+                            'path': '/public', 
+                            'sizeState': 'approximate', 
+                            'portal_type': 'Dummy', 
+                            'size': 557
+                        }]}
+        self.assertEqual(expected, got)
+
 
 class TestMemoryStorage(TestZVCStorageTool):
 
@@ -453,3 +561,8 @@ def installStorageTool(self):
         # install the memory storage
         tool = MemoryStorage()
         setattr(self.portal, tool.getId(), tool)
+
+    def test15_storageStatistics(self):
+        """ MemoryStorage does not implement zmi_getStorageStatistics
+        """
+        pass


