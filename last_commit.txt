Repository: plone.app.theming
Branch: refs/heads/1.1.x
Date: 2015-03-31T13:39:43+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.theming/commit/1ed8a8b79010efe66a6c06e75f1e088610ca0441

Fix load pluginSettings for the enabled theme before calling plugins for onEnabled

Files changed:
M src/plone/app/theming/utils.py

diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index 1c28b01..42c1fe5 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -499,6 +499,15 @@ def applyTheme(theme):
             for name, plugin in plugins:
                 plugin.onDisabled(currentTheme, pluginSettings[name],
                                   pluginSettings)
+
+        themeDirectory = queryResourceDirectory(
+            THEME_RESOURCE_NAME, settings.currentTheme)
+        if themeDirectory is not None:
+            plugins = getPlugins()
+            pluginSettings = getPluginSettings(themeDirectory, plugins)
+
+        if pluginSettings is not None:
+            for name, plugin in plugins:
                 plugin.onEnabled(theme, pluginSettings[name], pluginSettings)
 
 


Repository: plone.app.theming
Branch: refs/heads/1.1.x
Date: 2015-03-31T13:42:59+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.theming/commit/f80b434fff251b93e2d86ab51311b4e748e1abf5

Fix to properly pass the theme name to onEnabled-plugins

Files changed:
M src/plone/app/theming/utils.py

diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index 42c1fe5..2a95b35 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -167,7 +167,7 @@ def findContext(request):
     context = getattr(published, '__parent__', None)
     if context is not None:
         return context
-    
+
     for parent in request.PARENTS:
         if IContentish.providedBy(parent) or ISiteRoot.providedBy(parent):
             return parent
@@ -500,15 +500,17 @@ def applyTheme(theme):
                 plugin.onDisabled(currentTheme, pluginSettings[name],
                                   pluginSettings)
 
+        currentTheme = settings.currentTheme
         themeDirectory = queryResourceDirectory(
-            THEME_RESOURCE_NAME, settings.currentTheme)
+            THEME_RESOURCE_NAME, currentTheme)
         if themeDirectory is not None:
             plugins = getPlugins()
             pluginSettings = getPluginSettings(themeDirectory, plugins)
 
         if pluginSettings is not None:
             for name, plugin in plugins:
-                plugin.onEnabled(theme, pluginSettings[name], pluginSettings)
+                plugin.onEnabled(currentTheme, pluginSettings[name],
+                                 pluginSettings)
 
 
 def createThemeFromTemplate(title, description, baseOn='template'):


Repository: plone.app.theming
Branch: refs/heads/1.1.x
Date: 2015-03-31T13:44:15+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.theming/commit/fcf9cd4b940121938e85cd6676530e0dc887fd85

Update changelog

Files changed:
M docs/HISTORY.txt

diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index f5a53ec..1f0824e 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -4,6 +4,10 @@ Changelog
 1.1.5 (unreleased)
 ------------------
 
+- Fix load pluginSettings for the enabled theme before calling plugins for
+  onEnabled and call onEnabled plugins with correct parameters
+  [datakurre]
+
 - Add an error log if the subrequest failed (probably a relative xi:include)
   instead of silently returning None (and so having a xi:include returning
   nothing).


Repository: plone.app.theming
Branch: refs/heads/1.1.x
Date: 2015-04-30T11:33:32+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/6c1fb00d73791c7bc40dedf3f42ed46e95f659f5

Merge pull request #38 from plone/datakurre-1.1.x-fix-on-enabled-pluginsupport

Fix on support for IThemePlugin.onEnabled

Files changed:
M docs/HISTORY.txt
M src/plone/app/theming/utils.py

diff --git a/docs/HISTORY.txt b/docs/HISTORY.txt
index 58068e6..fa18e76 100644
--- a/docs/HISTORY.txt
+++ b/docs/HISTORY.txt
@@ -10,6 +10,10 @@ Changelog
 1.1.5 (2015-04-28)
 ------------------
 
+- Fix load pluginSettings for the enabled theme before calling plugins for
+  onEnabled and call onEnabled plugins with correct parameters
+  [datakurre]
+
 - Add an error log if the subrequest failed (probably a relative xi:include)
   instead of silently returning None (and so having a xi:include returning
   nothing).
diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index 1c28b01..2a95b35 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -167,7 +167,7 @@ def findContext(request):
     context = getattr(published, '__parent__', None)
     if context is not None:
         return context
-    
+
     for parent in request.PARENTS:
         if IContentish.providedBy(parent) or ISiteRoot.providedBy(parent):
             return parent
@@ -499,7 +499,18 @@ def applyTheme(theme):
             for name, plugin in plugins:
                 plugin.onDisabled(currentTheme, pluginSettings[name],
                                   pluginSettings)
-                plugin.onEnabled(theme, pluginSettings[name], pluginSettings)
+
+        currentTheme = settings.currentTheme
+        themeDirectory = queryResourceDirectory(
+            THEME_RESOURCE_NAME, currentTheme)
+        if themeDirectory is not None:
+            plugins = getPlugins()
+            pluginSettings = getPluginSettings(themeDirectory, plugins)
+
+        if pluginSettings is not None:
+            for name, plugin in plugins:
+                plugin.onEnabled(currentTheme, pluginSettings[name],
+                                 pluginSettings)
 
 
 def createThemeFromTemplate(title, description, baseOn='template'):


