Repository: plone.app.contentrules


Branch: refs/heads/3.0.x
Date: 2015-10-23T10:20:26+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.contentrules/commit/16bbc24b3de5c41ece88137b18bfa48ffa39faa7

Fix a write on read situation

Only get the rule management assignable if it's going to be used.

Getting it has the side effect of creating it if it does not exist,
thus causing a write on read.

Files changed:
M CHANGES.rst
M plone/app/contentrules/browser/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3bda3bf..5964477 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 3.0.9 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- CSRF fix: safe write on read.
+  [gforcada]
 
 
 3.0.8 (2014-10-22)
diff --git a/plone/app/contentrules/browser/assignments.py b/plone/app/contentrules/browser/assignments.py
index b255c0d..884b67e 100644
--- a/plone/app/contentrules/browser/assignments.py
+++ b/plone/app/contentrules/browser/assignments.py
@@ -25,11 +25,11 @@ def __call__(self):
         request = aq_inner(self.request)
         form = request.form
         status = IStatusMessage(self.request)
-        assignable = IRuleAssignmentManager(context)
 
         operation = request.get('operation', None)
 
         if operation == 'move_up':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)
@@ -37,6 +37,7 @@ def __call__(self):
             keys.insert(idx-1, rule_id)
             assignable.updateOrder(keys)
         elif operation == 'move_down':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)


Repository: plone.app.contentrules


Branch: refs/heads/3.0.x
Date: 2015-10-28T12:49:20+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contentrules/commit/b88e94e75b5a701d712bc8d1f49d08ed3c22d993

Merge remote-tracking branch 'derFreitag/write-on-read-43' into 3.0.x

Files changed:
M CHANGES.rst
M plone/app/contentrules/browser/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9b19d59..aed29cb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- CSRF fix: safe write on read.
+  [gforcada]
 
 
 3.0.8 (2014-10-22)
diff --git a/plone/app/contentrules/browser/assignments.py b/plone/app/contentrules/browser/assignments.py
index b255c0d..884b67e 100644
--- a/plone/app/contentrules/browser/assignments.py
+++ b/plone/app/contentrules/browser/assignments.py
@@ -25,11 +25,11 @@ def __call__(self):
         request = aq_inner(self.request)
         form = request.form
         status = IStatusMessage(self.request)
-        assignable = IRuleAssignmentManager(context)
 
         operation = request.get('operation', None)
 
         if operation == 'move_up':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)
@@ -37,6 +37,7 @@ def __call__(self):
             keys.insert(idx-1, rule_id)
             assignable.updateOrder(keys)
         elif operation == 'move_down':
+            assignable = IRuleAssignmentManager(context)
             rule_id = request.get('rule_id')
             keys = list(assignable.keys())
             idx = keys.index(rule_id)


