Repository: mockup
Branch: refs/heads/master
Date: 2015-04-16T00:57:46+02:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/c56e3956e203c54c1f1e6c19c64fd4b9d0a13fd3

switch some i18n to be loaded after dom

Files changed:
M mockup/js/i18n.js
M mockup/js/ui/views/base.js
M mockup/patterns/filemanager/js/addnew.js
M mockup/patterns/filemanager/js/basepopover.js
M mockup/patterns/filemanager/js/customize.js
M mockup/patterns/filemanager/js/delete.js
M mockup/patterns/filemanager/js/newfolder.js
M mockup/patterns/filemanager/js/rename.js
M mockup/patterns/filemanager/js/upload.js
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/livesearch/pattern.js
M mockup/patterns/querystring/pattern.js
M mockup/patterns/resourceregistry/js/builder.js
M mockup/patterns/resourceregistry/js/fields.js
M mockup/patterns/resourceregistry/js/overrides.js
M mockup/patterns/resourceregistry/pattern.js
M mockup/patterns/structure/js/views/actionmenu.js
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/columns.js
M mockup/patterns/structure/js/views/delete.js
M mockup/patterns/structure/js/views/paging.js
M mockup/patterns/structure/js/views/properties.js
M mockup/patterns/structure/js/views/rearrange.js
M mockup/patterns/structure/js/views/rename.js
M mockup/patterns/structure/js/views/selectionwell.js
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/tags.js
M mockup/patterns/structure/js/views/textfilter.js
M mockup/patterns/structure/js/views/upload.js
M mockup/patterns/structure/js/views/workflow.js
M mockup/patterns/structure/pattern.js
M mockup/patterns/structure/templates/actionmenu.xml
M mockup/patterns/structure/templates/paging.xml
M mockup/patterns/structure/templates/table.xml
M mockup/patterns/upload/pattern.js
M mockup/patterns/upload/templates/upload.xml

diff --git a/mockup/js/i18n.js b/mockup/js/i18n.js
index cd9cc36..1ecd200 100644
--- a/mockup/js/i18n.js
+++ b/mockup/js/i18n.js
@@ -17,8 +17,8 @@ define([
 
   var I18N = function() {
     var self = this;
-
     self.baseUrl = $('body').attr('data-i18ncatalogurl');
+
     if (!self.baseUrl) {
       self.baseUrl = '/plonejsi18n';
     }
diff --git a/mockup/js/ui/views/base.js b/mockup/js/ui/views/base.js
index ba490f0..96b2933 100644
--- a/mockup/js/ui/views/base.js
+++ b/mockup/js/ui/views/base.js
@@ -2,8 +2,8 @@ define([
   'jquery',
   'underscore',
   'backbone',
-  'translate'
-], function($, _, Backbone, _t) {
+  'mockup-i18n'
+], function($, _, Backbone, i18n) {
   'use strict';
 
   var BaseView = Backbone.View.extend({
@@ -16,6 +16,8 @@ define([
       for (var key in this.options) {
         this[key] = this.options[key];
       }
+      i18n.loadCatalog('widgets');
+      this._t = this.options._t = i18n.MessageFactory('widgets');
     },
     render: function() {
       this.applyTemplate();
@@ -37,7 +39,7 @@ define([
     },
     applyTemplate: function() {
       if (this.template !== null) {
-        var data = $.extend({_t: _t}, this.options, this.serializedModel());
+        var data = $.extend({}, this.options, this.serializedModel());
         var template = this.template;
         if(typeof(template) === 'string'){
           template = _.template(template);
diff --git a/mockup/patterns/filemanager/js/addnew.js b/mockup/patterns/filemanager/js/addnew.js
index 020a7a6..5c05dd6 100644
--- a/mockup/patterns/filemanager/js/addnew.js
+++ b/mockup/patterns/filemanager/js/addnew.js
@@ -8,15 +8,15 @@ define([
 
   var AddNewView = PopoverView.extend({
     className: 'popover addnew',
-    title: _.template('<%= translations.add_new_file %>'),
+    title: _.template('<%= _t("Add new file") %>'),
     content: _.template(
       '<span class="current-path"></span>' +
       '<div class="form-group">' +
-        '<label for="filename-field"><%= translations.filename %></label>' +
+        '<label for="filename-field"><%= _t("Filename") %></label>' +
         '<input type="text" class="form-control" ' +
-                'id="filename-field" placeholder="<%= translations.enter_filename %>">' +
+                'id="filename-field" placeholder="<%= _t("Enter filename") %>">' +
       '</div>' +
-      '<button class="btn btn-block btn-primary"><%= translations.add %></button>'
+      '<button class="btn btn-block btn-primary"><%= _t("Add") %></button>'
     ),
     events: {
       'click button': 'addButtonClicked'
diff --git a/mockup/patterns/filemanager/js/basepopover.js b/mockup/patterns/filemanager/js/basepopover.js
index 72cfb72..1559f72 100644
--- a/mockup/patterns/filemanager/js/basepopover.js
+++ b/mockup/patterns/filemanager/js/basepopover.js
@@ -12,7 +12,6 @@ define([
     content: _.template('<div/>'),
     initialize: function(options) {
       this.app = options.app;
-      options.translations = this.app.options.translations;
       PopoverView.prototype.initialize.apply(this, [options]);
     },
     render: function() {
diff --git a/mockup/patterns/filemanager/js/customize.js b/mockup/patterns/filemanager/js/customize.js
index e75fe1a..8d28615 100644
--- a/mockup/patterns/filemanager/js/customize.js
+++ b/mockup/patterns/filemanager/js/customize.js
@@ -8,14 +8,14 @@ define([
 
   var CustomizeView = PopoverView.extend({
     className: 'popover customize',
-    title: _.template('<%= translations.add_override %>'),
+    title: _.template('<%= _t("Add new override") %>'),
     content: _.template(
       '<form>' +
         '<div class="input-group">' +
           '<input type="text" class="search form-control" ' +
-                  'id="search-field" placeholder="<%= translations.search_resources %>">' +
+                  'id="search-field" placeholder="<%= _t("Find resource in plone to override") %>">' +
           '<span class="input-group-btn">' +
-            '<input type="submit" class="btn btn-primary" value="<%= translations.search %>"/>' +
+            '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
           '</span>' +
         '</div>' +
       '</form>' +
@@ -37,7 +37,7 @@ define([
             _.each(data, function(item){
               var $item = $(
                 '<li class="list-group-item" data-id="' + item.id + '">' +
-                  '<span class="badge"><a href=#">' + self.options.transitions.customize + '</a></span>' +
+                  '<span class="badge"><a href=#">' + self.app._t('Customize') + '</a></span>' +
                   item.id +
                 '</li>');
               $('a', $item).click(function(e){
diff --git a/mockup/patterns/filemanager/js/delete.js b/mockup/patterns/filemanager/js/delete.js
index 2f4a8ce..34e6649 100644
--- a/mockup/patterns/filemanager/js/delete.js
+++ b/mockup/patterns/filemanager/js/delete.js
@@ -8,11 +8,11 @@ define([
 
   var DeleteView = PopoverView.extend({
     className: 'popover delete',
-    title: _.template('<%= translations.delete %>'),
+    title: _.template('<%= _t("Delete") %>'),
     content: _.template(
       '<span class="current-path"></span>' +
-      '<p><%= translations.delete_question %></p>' +
-      '<button class="btn btn-block btn-danger"><%= translations.yes_delete %></button>'
+      '<p><%= _t("Are you sure you want to delete this resource?") %></p>' +
+      '<button class="btn btn-block btn-danger"><%= _t("Yes, delete") %></button>'
     ),
     events: {
       'click button': 'deleteButtonClicked'
diff --git a/mockup/patterns/filemanager/js/newfolder.js b/mockup/patterns/filemanager/js/newfolder.js
index 60b9a52..57e2234 100644
--- a/mockup/patterns/filemanager/js/newfolder.js
+++ b/mockup/patterns/filemanager/js/newfolder.js
@@ -8,15 +8,15 @@ define([
 
   var AddNewView = PopoverView.extend({
     className: 'popover addfolder',
-    title: _.template('<%= translations.new_folder %>'),
+    title: _.template('<%= _t("New folder") %>'),
     content: _.template(
       '<span class="current-path"></span>' +
       '<div class="form-group">' +
-        '<label for="filename-field"><%= translations.folder_name %></label>' +
+        '<label for="filename-field"><%= _t("Add new folder to current directory") %></label>' +
         '<input type="email" class="form-control" ' +
-                'id="filename-field" placeholder="<%= translations.enter_folder_name %>">' +
+                'id="filename-field" placeholder="<%= _t("Enter folder name") %>">' +
       '</div>' +
-      '<button class="btn btn-block btn-primary"><%= translations.add %></button>'
+      '<button class="btn btn-block btn-primary"><%= _t("Add") %></button>'
     ),
     events: {
       'click button': 'addButtonClicked'
diff --git a/mockup/patterns/filemanager/js/rename.js b/mockup/patterns/filemanager/js/rename.js
index 0443256..4624431 100644
--- a/mockup/patterns/filemanager/js/rename.js
+++ b/mockup/patterns/filemanager/js/rename.js
@@ -8,15 +8,15 @@ define([
 
   var RenameView = PopoverView.extend({
     className: 'popover addnew',
-    title: _.template('<%= translations.rename %>'),
+    title: _.template('<%= _t("Rename") %>'),
     content: _.template(
       '<span class="current-path"></span>' +
       '<div class="form-group">' +
-        '<label for="filename-field"><%= translations.filename %></label>' +
+        '<label for="filename-field"><%= _t("Filename") %></label>' +
         '<input type="text" class="form-control" ' +
                 'id="filename-field">' +
       '</div>' +
-      '<button class="btn btn-block btn-primary"><%= translations.rename %></button>'
+      '<button class="btn btn-block btn-primary"><%= _t("Rename") %></button>'
     ),
     events: {
       'click button': 'renameButtonClicked'
diff --git a/mockup/patterns/filemanager/js/upload.js b/mockup/patterns/filemanager/js/upload.js
index 3d18147..6029a31 100644
--- a/mockup/patterns/filemanager/js/upload.js
+++ b/mockup/patterns/filemanager/js/upload.js
@@ -9,7 +9,7 @@ define([
 
   var UploadView = PopoverView.extend({
     className: 'popover upload',
-    title: _.template('<%= translations.upload %>'),
+    title: _.template('<%= _t("Upload") %>'),
     content: _.template(
       '<span class="current-path"></span>' +
       '<input type="text" name="upload" style="display:none" />' +
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index f52de88..4f7d9f1 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -5,7 +5,6 @@
  *    actionUrl(string): base url to get/put data. Action is passed is an a parameters, ?action=(dataTree, newFile, deleteFile, getFile, saveFile)
  *    uploadUrl(string): url to upload files to
  *    resourceSearchUrl(string): url to search for resources to customize
- *    translations(object): mapping of translation strings
  *
  * Documentation:
  *
@@ -50,12 +49,12 @@ define([
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
   'mockup-patterns-filemanager-url/js/upload',
-  'translate',
+  'mockup-i18n',
   'mockup-utils',
   'text!mockup-ui-url/templates/popover.xml'
 ], function($, Base, _, Backbone, BaseView, Tree, TextEditor, AppTemplate, Toolbar,
             ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
-            CustomizeView, RenameView, UploadView, _t, utils) {
+            CustomizeView, RenameView, UploadView, i18n, utils) {
   'use strict';
 
   var FileManager = Base.extend({
@@ -76,37 +75,17 @@ define([
       actionUrl: null,
       uploadUrl: null,
       resourceSearchUrl: null,
-      translations: {
-        add_new_file: _t('New file'),
-        add_new_file_tooltip: _t('Add new file to current folder'),
-        add_override: _t('Add new override'),
-        add_override_tooltip: _t('Find resource in plone to override'),
-        delete: _t('Delete'),
-        delete_tooltip: _t('Delete currently selected file'),
-        new_folder: _t('New folder'),
-        new_folder_tooltip: _t('Add new folder to current directory'),
-        rename: _t('Rename'),
-        rename_tooltip: _t('Rename currently selected resource'),
-        upload: _t('Upload'),
-        upload_tooltip: _t('Upload file to current directory'),
-        filename: _t('Filename'),
-        enter_filename: _t('Enter filename'),
-        add: _t('Add'),
-        search: _t('Search'),
-        search_resources: _('Search resources'),
-        customize: _t('Customize'),
-        yes_delete: _t('Yes, delete'),
-        delete_question: _t('Are you sure you want to delete this resource?'),
-        folder_name: _t('Folder name'),
-        enter_folder_name: _t('Enter folder name'),
-        save: _t('Save')
-      },
       treeConfig: {
         autoOpen: true
       }
     },
     init: function() {
       var self = this;
+
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+      var _t = self._t;
+
       if (self.options.actionUrl === null) {
         self.$el.html('Must specify actionUrl setting for pattern');
         return;
@@ -115,22 +94,19 @@ define([
         dataUrl: self.options.actionUrl + '?action=dataTree'
       });
 
-      var translations = self.options.translations;
-
       self.fileData = {};
-      self.currentPath;
 
       self.saveBtn = new ButtonView({
         id: 'save',
-        title: translations.save,
+        title: _t('Save'),
         context: 'success'
       });
 
       var newFolderView = new NewFolderView({
         triggerView: new ButtonView({
           id: 'newfolder',
-          title: translations.new_folder,
-          tooltip: translations.new_folder_tooltip,
+          title: _t('New folder'),
+          tooltip: _t('Add new folder to current directory'),
           context: 'default'
         }),
         app: self
@@ -138,8 +114,8 @@ define([
       var addNewView = new AddNewView({
         triggerView: new ButtonView({
           id: 'addnew',
-          title: translations.add_new_file,
-          tooltip: translations.add_new_file_tooltip,
+          title: _t('Add new file'),
+          tooltip: _t('Add new file to current folder'),
           context: 'default'
         }),
         app: self
@@ -147,8 +123,8 @@ define([
       var renameView = new RenameView({
         triggerView: new ButtonView({
           id: 'rename',
-          title: translations.rename,
-          tooltip: translations.rename_tooltip,
+          title: _t('Rename'),
+          tooltip: _t('Rename currently selected resource'),
           context: 'default'
         }),
         app: self
@@ -156,8 +132,8 @@ define([
       var deleteView = new DeleteView({
         triggerView: new ButtonView({
           id: 'delete',
-          title: translations.delete,
-          tooltip: translations.delete_tooltip,
+          title: _t('Delete'),
+          tooltip: _('Delete currently selected resource'),
           context: 'danger'
         }),
         app: self
@@ -178,8 +154,8 @@ define([
         var uploadView = new UploadView({
           triggerView: new ButtonView({
             id: 'upload',
-            title: translations.upload,
-            tooltip: translations.upload_tooltip,
+            title: _t('Upload'),
+            tooltip: _t('Upload file to current directory'),
             context: 'default'
           }),
           app: self
@@ -191,8 +167,8 @@ define([
         var customizeView = new CustomizeView({
           triggerView: new ButtonView({
             id: 'customize',
-            title: translations.add_override,
-            tooltip: translations.add_override_tooltip,
+            title: _t('Add new override'),
+            tooltip: _t('Find resource in plone to override'),
             context: 'default'
           }),
           app: self
@@ -229,12 +205,12 @@ define([
             _authenticator: utils.getAuthenticator()
           },
           success: function(data) {
-            $('[data-path="'+self.getNodePath()+'"]').removeClass("modified");
+            $('[data-path="' + self.getNodePath() + '"]').removeClass("modified");
           }
         });
       };
 
-      self.saveBtn.on('button:click', function(e) {
+      self.saveBtn.on('button:click', function() {
         self._save();
       });
       self.render();
@@ -252,7 +228,7 @@ define([
       self.$tree = self.$('.tree');
       self.$nav = self.$('nav');
       self.$tabs = $('ul.nav', self.$nav);
-      self.options.treeConfig.onLoad = function(tree) {
+      self.options.treeConfig.onLoad = function() {
         // on loading initial data, activate first node if available
         var node = self.$tree.tree('getNodeById', 1);
         if (node){
@@ -366,7 +342,7 @@ define([
 
       self.ace.editor.on('change', function() {
         if (self.ace.editor.curOp && self.ace.editor.curOp.command.name) {
-          $('[data-path="'+path+'"]').addClass("modified");
+          $('[data-path="' + path + '"]').addClass("modified");
         }
       });
       self.ace.editor.commands.addCommand({
diff --git a/mockup/patterns/livesearch/pattern.js b/mockup/patterns/livesearch/pattern.js
index 4203ab6..d32f966 100644
--- a/mockup/patterns/livesearch/pattern.js
+++ b/mockup/patterns/livesearch/pattern.js
@@ -26,8 +26,8 @@ define([
   'jquery',
   'mockup-patterns-base',
   'underscore',
-  'translate'
-], function ($, Base, _, _t){
+  'mockup-i18n'
+], function ($, Base, _, i18n){
   'use strict';
 
   var Livesearch = Base.extend({
@@ -75,8 +75,8 @@ define([
         self.results = {
           items: [{
             url: '',
-            title: _t('Error'),
-            description: _t('There was an error searching…'),
+            title: self._t('Error'),
+            description: self._t('There was an error searching…'),
             state: 'error',
             error: false
           }],
@@ -97,21 +97,21 @@ define([
       /* find a status message */
 
       if(self.active){
-        self.$results.append($('<li class="searching">' + _t('searching…') + '</li>'));
+        self.$results.append($('<li class="searching">' + self._t('searching…') + '</li>'));
       }else if(self.results === null){
         // no results gathered yet
-        self.$results.append($('<li class="no-results no-search">' + _t('enter search phrase') + '</li>'));
+        self.$results.append($('<li class="no-results no-search">' + self._t('enter search phrase') + '</li>'));
       } else if(self.results.total === 0){
-        self.$results.append($('<li class="no-results">' + _t('no results found') + '</li>'));
+        self.$results.append($('<li class="no-results">' + self._t('no results found') + '</li>'));
       } else{
-        self.$results.append($('<li class="results-summary">' + _t('found') +
-                               ' ' + self.results.total + ' ' + _t('results') + '</li>'));
+        self.$results.append($('<li class="results-summary">' + self._t('found') +
+                               ' ' + self.results.total + ' ' + self._t('results') + '</li>'));
       }
 
       if(self.results !== null){
         var template = _.template(self.options.itemTemplate);
         _.each(self.results.items, function(item, index){
-          var $el = $(template($.extend({_t: _t}, item)));
+          var $el = $(template($.extend({_t: self._t}, item)));
           $el.attr('data-url', item.url).on('click', function(){
             if(!item.error){
               window.location = item.url;
@@ -124,7 +124,7 @@ define([
         });
         var nav = [];
         if(self.page > 1){
-          var $prev = $('<a href="#" class="prev">' + _t('Previous') + '</a>');
+          var $prev = $('<a href="#" class="prev">' + self._t('Previous') + '</a>');
           $prev.click(function(e){
             self.disableHiding = true;
             e.preventDefault();
@@ -133,7 +133,7 @@ define([
           nav.push($prev);
         }
         if((self.page * self.options.perPage) < self.results.total){
-          var $next = $('<a href="#" class="next">' + _t('Next') + '</a>');
+          var $next = $('<a href="#" class="next">' + self._t('Next') + '</a>');
           $next.click(function(e){
             self.disableHiding = true;
             e.preventDefault();
@@ -169,6 +169,10 @@ define([
     },
     init: function(){
       var self = this;
+
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+
       self.$input = self.$el.find(self.options.inputSelector);
       self.$input.off('focusout').on('focusout', function(){
         /* we put this in a timer so click events still
diff --git a/mockup/patterns/querystring/pattern.js b/mockup/patterns/querystring/pattern.js
index c06257a..b4f321b 100644
--- a/mockup/patterns/querystring/pattern.js
+++ b/mockup/patterns/querystring/pattern.js
@@ -5,10 +5,6 @@
  *    indexOptionsUrl(string): URL to grab index option data from. Must contain "sortable_indexes" and "indexes" data in JSON object. (null)
  *    previewURL(string): URL used to pass in a plone.app.querystring-formatted HTTP querystring and get an HTML list of results ('portal_factory/@@querybuilder_html_results')
  *    previewCountURL(string): URL used to pass in a plone.app.querystring-formatted HTTP querystring and get an HTML string of the total number of records found with the query ('portal_factory/@@querybuildernumberofresults')
- *    sorttxt(string): Text to use to label the sort dropdown ('Sort On')
- *    reversetxt(string): Text to use to label the sort order checkbox ('Reversed Order')
- *    previewTitle(string): Title for the preview area ('Preview')
- *    previewDescription(string): Description for the preview area ('Preview of at most 10 items')
  *    classWrapperName(string): CSS class to apply to the wrapper element ('querystring-wrapper')
  *    classSortLabelName(string): CSS class to apply to the sort on label ('querystring-sort-label')
  *    classSortReverseName(string): CSS class to apply to the sort order label and checkbox container ('querystring-sortreverse')
@@ -49,19 +45,15 @@ define([
   'mockup-patterns-select2',
   'mockup-patterns-pickadate',
   'select2',
-  'translate'
-], function($, Base, Select2, PickADate, undefined, _t) {
+  'mockup-i18n'
+], function($, Base, Select2, PickADate, undefined, i18n) {
   'use strict';
 
   var Criteria = function() { this.init.apply(this, arguments); };
   Criteria.prototype = {
     defaults: {
       indexWidth: '20em',
-      placeholder: _t('Select criteria'),
       remove: '',
-      results: _t(' items matching your search.'),
-      days: _t('days'),
-      betweendt: _t('to'),
       classBetweenDtName: 'querystring-criteria-betweendt',
       classWrapperName: 'querystring-criteria-wrapper',
       classIndexName: 'querystring-criteria-index',
@@ -74,6 +66,9 @@ define([
     init: function($el, options, indexes, index, operator, value) {
       var self = this;
 
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+
       self.options = $.extend(true, {}, self.defaults, options);
       self.indexes = indexes;
       self.indexGroups = {};
@@ -93,7 +88,7 @@ define([
 
       // Index selection
       self.$index = $('<select><option></option></select>')
-          .attr('placeholder', self.options.placeholder);
+          .attr('placeholder', self._t('Select criteria'));
 
       // list of indexes
       $.each(self.indexes, function(value, options) {
@@ -122,7 +117,7 @@ define([
       self.$index
         .patternSelect2({
           width: self.options.indexWidth,
-          placeholder: self.options.placeholder
+          placeholder: self._t('Select criteria')
         })
         .on('change', function(e) {
           self.removeValue();
@@ -221,7 +216,7 @@ define([
           });
         $wrapper.append(
           $('<span/>')
-            .html(self.options.betweendt)
+            .html(self._t('to'))
             .addClass(self.options.classBetweenDtName)
         );
         var endwrap = $('<span/>').appendTo($wrapper);
@@ -240,7 +235,7 @@ define([
 
       } else if (widget === 'RelativeDateWidget') {
         self.$value = $('<input type="text"/>')
-                .after($('<span/>').html(self.options.days))
+                .after($('<span/>').html(self._t('days')))
                 .addClass(self.options.classValueName + '-' + widget)
                 .appendTo($wrapper)
                 .change(function() {
@@ -425,10 +420,6 @@ define([
       indexOptionsUrl: null,
       previewURL: 'portal_factory/@@querybuilder_html_results', // base url to use to request preview information from
       previewCountURL: 'portal_factory/@@querybuildernumberofresults',
-      sorttxt: _t('Sort On'),
-      reversetxt: _t('Reversed Order'),
-      previewTitle: _t('Preview'),
-      previewDescription: _t('Preview of at most 10 items'),
       classSortLabelName: 'querystring-sort-label',
       classSortReverseName: 'querystring-sortreverse',
       classSortReverseLabelName: 'querystring-sortreverse-label',
@@ -444,6 +435,9 @@ define([
     init: function() {
       var self = this;
 
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+
       // hide input element
       self.$el.hide();
 
@@ -491,11 +485,11 @@ define([
         // preview title and description
         $('<div/>')
           .addClass(self.options.classPreviewTitleName)
-          .html(self.options.previewTitle)
+          .html(self._t('Preview'))
           .appendTo(self.$previewWrapper);
         $('<div/>')
           .addClass(self.options.classPreviewDescriptionName)
-          .html(self.options.previewDescription)
+          .html(self._t('Preview of at most 10 items'))
           .appendTo(self.$previewWrapper);
       }
 
@@ -572,7 +566,7 @@ define([
 
       $('<span/>')
         .addClass(self.options.classSortLabelName)
-        .html(self.options.sorttxt)
+        .html(self._t('Sort on'))
         .appendTo(self.$sortWrapper);
       self.$sortOn = $('<select/>')
         .attr('name', 'sort_on')
@@ -609,7 +603,7 @@ define([
         .append(self.$sortOrder)
         .append(
           $('<span/>')
-            .html(self.options.reversetxt)
+            .html(self._t('Reserved Order'))
             .addClass(self.options.classSortReverseLabelName)
         );
 
diff --git a/mockup/patterns/resourceregistry/js/builder.js b/mockup/patterns/resourceregistry/js/builder.js
index 25ee193..b6aaec3 100644
--- a/mockup/patterns/resourceregistry/js/builder.js
+++ b/mockup/patterns/resourceregistry/js/builder.js
@@ -5,8 +5,8 @@ define([
   'underscore',
   'mockup-utils',
   'mockup-patterns-resourceregistry-url/js/iframe',
-  'translate'
-], function($, Modal, _, utils, IFrame, _t){
+  'mockup-i18n'
+], function($, Modal, _, utils, IFrame, i18n){
   'use strict';
 
   var Builder = function(bundleName, bundleListItem){
@@ -17,6 +17,9 @@ define([
     self.$results = null;
     self.$btnClose = null;
 
+    i18n.loadCatalog('widgets');
+    var _t = i18n.MessageFactory('widgets');
+
     self.rview.loading.show();
     self.modal = new Modal($('<div/>').appendTo(self.rview.$el), {
       html: _.template('<div id="content">' +
@@ -156,7 +159,7 @@ define([
           });
         }else if($styles.length === config.less.length){
           $styles.each(function(){$(this).remove();});
-
+          /* XXX is this dead code? */
           script = document.createElement('script');
           script.setAttribute('type', 'text/javascript');
           script.setAttribute('src', self.rview.options.data.lessModifyUrl);
diff --git a/mockup/patterns/resourceregistry/js/fields.js b/mockup/patterns/resourceregistry/js/fields.js
index 6d9ec6f..208ea3f 100644
--- a/mockup/patterns/resourceregistry/js/fields.js
+++ b/mockup/patterns/resourceregistry/js/fields.js
@@ -4,8 +4,8 @@ define([
   'mockup-ui-url/views/base',
   'mockup-patterns-sortable',
   'mockup-patterns-select2',
-  'translate'
-], function($, _, BaseView, Sortable, Select2, _t) {
+  'mockup-i18n'
+], function($, _, BaseView, Sortable, Select2, i18n) {
   'use strict';
 
 
@@ -203,7 +203,7 @@ define([
         $container.append('<li class="list-group-item"><div class="input-group">' +
           '<input class="form-control input-sm" value="' + value + '" />' +
           '<span class="input-group-btn">' +
-            '<button class="plone-btn plone-btn-default remove plone-btn-sm">' + _t('Remove') + '</button></div></li>');
+            '<button class="plone-btn plone-btn-default remove plone-btn-sm">' + self._t('Remove') + '</button></div></li>');
       });
 
       if(self.sortable){
diff --git a/mockup/patterns/resourceregistry/js/overrides.js b/mockup/patterns/resourceregistry/js/overrides.js
index d9dcd05..aba68b2 100644
--- a/mockup/patterns/resourceregistry/js/overrides.js
+++ b/mockup/patterns/resourceregistry/js/overrides.js
@@ -7,8 +7,8 @@ define([
   'mockup-patterns-texteditor',
   'mockup-utils',
   'mockup-patterns-select2',
-  'translate'
-], function($, _, BaseView, TextEditor, utils, Select2, _t) {
+  'mockup-i18n'
+], function($, _, BaseView, TextEditor, utils, Select2, i18n) {
   'use strict';
 
   var OverridesView = BaseView.extend({
@@ -46,6 +46,9 @@ define([
     initialize: function(options){
       BaseView.prototype.initialize.apply(this, [options]);
       this.tabView = options.tabView;
+
+      i18n.loadCatalog('widgets');
+      this._t = i18n.MessageFactory('widgets');
     },
 
     serializedModel: function(){
@@ -126,7 +129,7 @@ define([
 
       var format = function(data){
         if(data.override){
-          return '<span class="customized">' + data.text + ' - ' + _t('customized') + '</span>';
+          return '<span class="customized">' + data.text + ' - ' + this._t('customized') + '</span>';
         }
         return data.text;
       };
@@ -165,7 +168,7 @@ define([
             that.$el.find('.plone-btn-primary,.plone-btn-default').removeClass('disabled');
           });
         }).fail(function(){
-          alert(_t('error loading resource for editing'));
+          alert(that._t('error loading resource for editing'));
           that.tabView.loading.hide();
         });
       }
diff --git a/mockup/patterns/resourceregistry/pattern.js b/mockup/patterns/resourceregistry/pattern.js
index 93de78e..725f72a 100644
--- a/mockup/patterns/resourceregistry/pattern.js
+++ b/mockup/patterns/resourceregistry/pattern.js
@@ -99,9 +99,9 @@ define([
   'mockup-patterns-resourceregistry-url/js/overrides',
   'mockup-patterns-resourceregistry-url/js/registry',
   'mockup-patterns-resourceregistry-url/js/patternoptions',
-  'translate'
+  'mockup-i18n'
 ], function($, Base, _, BaseView, utils, LessVariablesView,
-            OverridesView,RegistryView, PatternOptionsView, _t) {
+            OverridesView,RegistryView, PatternOptionsView, i18n) {
   'use strict';
 
 
@@ -136,6 +136,10 @@ define([
     },
     initialize: function(options) {
       var self = this;
+
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+
       BaseView.prototype.initialize.apply(self, [options]);
       self.registryView = new RegistryView({
         data: options,
@@ -154,7 +158,7 @@ define([
 
     render: function(){
       var self = this;
-      self.$el.append(self.template({_t: _t}));
+      self.$el.append(self.template({_t: self._t}));
       self.loading = new utils.Loading();
       self.$tabs = self.$('ul.main-tabs');
       self.$content = self.$('.tab-content');
diff --git a/mockup/patterns/structure/js/views/actionmenu.js b/mockup/patterns/structure/js/views/actionmenu.js
index e0fac56..ac6070e 100644
--- a/mockup/patterns/structure/js/views/actionmenu.js
+++ b/mockup/patterns/structure/js/views/actionmenu.js
@@ -7,8 +7,9 @@ define([
   'mockup-ui-url/views/base',
   'mockup-utils',
   'text!mockup-patterns-structure-url/templates/actionmenu.xml',
+  'mockup-i18n',
   'bootstrap-dropdown'
-], function($, _, Backbone, BaseView, utils, ActionMenuTemplate) {
+], function($, _, Backbone, BaseView, utils, ActionMenuTemplate, i18n) {
   'use strict';
 
   var ActionMenu = BaseView.extend({
@@ -34,6 +35,8 @@ define([
       }else {
         this.canMove = true;
       }
+      i18n.loadCatalog('widgets');
+      this._t = i18n.MessageFactory('widgets');
     },
     cutClicked: function(e) {
       e.preventDefault();
@@ -128,10 +131,10 @@ define([
       data.pasteAllowed = self.app.pasteAllowed;
       data.canSetDefaultPage = self.app.setDefaultPageUrl;
       data.inQueryMode = self.app.inQueryMode();
-      data.header = self.options.header;
+      data.header = self.options.header || null;
       data.canMove = self.canMove;
 
-      self.$el.html(self.template(data));
+      self.$el.html(self.template($.extend({ _t: self._t }, data)));
 
       self.$dropdown = self.$('.dropdown-toggle');
       self.$dropdown.dropdown();
diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js
index 89f486a..ecb2035 100644
--- a/mockup/patterns/structure/js/views/app.js
+++ b/mockup/patterns/structure/js/views/app.js
@@ -22,14 +22,13 @@ define([
   'mockup-patterns-structure-url/js/views/upload',
   'mockup-patterns-structure-url/js/collections/result',
   'mockup-patterns-structure-url/js/collections/selected',
-  'translate',
   'mockup-utils',
   'jquery.cookie'
 ], function($, _, Backbone, Toolbar, ButtonGroup, ButtonView, BaseView,
             TableView, SelectionWellView, TagsView, PropertiesView,
             WorkflowView, DeleteView, RenameView, RearrangeView, SelectionButtonView,
             PagingView, AddMenu, ColumnsView, TextFilterView, UploadView,
-            ResultCollection, SelectedCollection, _t, utils) {
+            ResultCollection, SelectedCollection, utils) {
   'use strict';
 
   var DISABLE_EVENT = 'DISABLE';
@@ -66,6 +65,7 @@ define([
     additionalCriterias: [],
     pasteSelection: null,
     cookieSettingPrefix: '_fc_',
+    pasteAllowed: false,
     initialize: function(options) {
       var self = this;
       BaseView.prototype.initialize.apply(self, [options]);
@@ -97,8 +97,8 @@ define([
       self.queryHelper = self.options.queryHelper;
       self.selectedCollection = new SelectedCollection();
       self.tableView = new TableView({app: self});
+
       self.pagingView = new PagingView({app: self});
-      self.pasteAllowed = self.options.pasteAllowed;
 
       /* initialize buttons */
       self.setupButtons();
@@ -318,11 +318,10 @@ define([
       self.collection.pager();
     },
     ajaxErrorResponse: function(response, url) {
-      var self = this;
       if (response.status === 404) {
-        window.alert('operation url "' + url + '" is not valid');
+        window.alert(this._t('operation url ${url} is not valid', {url: url}));
       } else {
-        window.alert('there was an error performing action');
+        window.alert(this._t('there was an error performing action'));
       }
     },
     pasteEvent: function(button, e, data) {
@@ -340,10 +339,10 @@ define([
       var self = this;
       var txt;
       if (button.id === 'cut') {
-        txt = _t('cut ');
+        txt = self._t('cut ');
         self.pasteOperation = 'cut';
       } else {
-        txt = _t('copied ');
+        txt = self._t('copied ');
         self.pasteOperation = 'copy';
       }
 
diff --git a/mockup/patterns/structure/js/views/columns.js b/mockup/patterns/structure/js/views/columns.js
index 8b4ef8e..3dcb844 100644
--- a/mockup/patterns/structure/js/views/columns.js
+++ b/mockup/patterns/structure/js/views/columns.js
@@ -11,10 +11,10 @@ define([
     className: 'popover columns',
     title: _.template('Columns'),
     content: _.template(
-      '<label>Select columns to show, drag and drop to reorder</label>' +
+      '<label><%- _t("Select columns to show, drag and drop to reorder") %></label>' +
       '<ul>' +
       '</ul>' +
-      '<button class="btn btn-block btn-success">Save</button>'
+      '<button class="btn btn-block btn-success"><%- _t("Save") %></button>'
     ),
     itemTemplate: _.template(
       '<li>' +
diff --git a/mockup/patterns/structure/js/views/delete.js b/mockup/patterns/structure/js/views/delete.js
index 800a8ba..b770d4c 100644
--- a/mockup/patterns/structure/js/views/delete.js
+++ b/mockup/patterns/structure/js/views/delete.js
@@ -8,10 +8,10 @@ define([
 
   var DeleteView = PopoverView.extend({
     className: 'popover delete',
-    title: _.template('Delete selected items'),
+    title: _.template('<%- _t("Delete selected items") %>'),
     content: _.template(
-      '<label>Are you certain you want to delete the selected items</label>' +
-      '<button class="btn btn-block btn-danger">Yes</button>'
+      '<label><%- _t("Are you certain you want to delete the selected items") %></label>' +
+      '<button class="btn btn-block btn-danger"><%- _t("Yes") %></button>'
     ),
     events: {
       'click button': 'applyButtonClicked'
diff --git a/mockup/patterns/structure/js/views/paging.js b/mockup/patterns/structure/js/views/paging.js
index d112021..0f74d20 100644
--- a/mockup/patterns/structure/js/views/paging.js
+++ b/mockup/patterns/structure/js/views/paging.js
@@ -2,8 +2,9 @@ define([
   'jquery',
   'underscore',
   'backbone',
-  'text!mockup-patterns-structure-url/templates/paging.xml'
-], function($, _, Backbone, PagingTemplate) {
+  'text!mockup-patterns-structure-url/templates/paging.xml',
+  'mockup-i18n'
+], function($, _, Backbone, PagingTemplate, i18n) {
   'use strict';
 
 
@@ -30,16 +31,19 @@ define([
 
       this.$el.appendTo('#pagination');
 
+      i18n.loadCatalog('widgets');
+      this._t = i18n.MessageFactory('widgets');
     },
+
     render: function () {
       var data = this.collection.info();
       data.pages = this.getPages(data);
-      var html = this.template(data);
+      var html = this.template($.extend({ _t: this._t}, data));
       this.$el.html(html);
       return this;
     },
+
     getPages: function(data) {
-      var perPage = data.perPage;
       var totalPages = data.totalPages;
       if (!totalPages) {
         return [];
diff --git a/mockup/patterns/structure/js/views/properties.js b/mockup/patterns/structure/js/views/properties.js
index 1ed4de9..8f55147 100644
--- a/mockup/patterns/structure/js/views/properties.js
+++ b/mockup/patterns/structure/js/views/properties.js
@@ -10,42 +10,42 @@ define([
 
   var PropertiesView = PopoverView.extend({
     className: 'popover properties',
-    title: _.template('Modify properties on items'),
+    title: _.template('<%- _t("Modify properties on items") %>'),
     content: _.template(
       '<div class="form-group">' +
-        '<label>Publication Date</label>' +
+        '<label><%- _t("Publication Date") %></label>' +
         '<input class="form-control" name="effective" />' +
       '</div>' +
       '<div class="form-group">' +
-        '<label>Expiration Date</label>' +
+        '<label><%- _t("Expiration Date") %></label>' +
         '<input class="form-control" name="expiration" />' +
       '</div>' +
       '<div class="form-group">' +
-        '<label>Copyright</label>' +
+        '<label><%- _t("Copyright") %></label>' +
         '<textarea class="form-control" name="copyright"></textarea>' +
       '</div>' +
-      '<label>Creators</label>' +
+      '<label><%- _t("Creators") %></label>' +
       '<div class="form-group">' +
         '<input name="creators" style="width: 300px" />' +
       '</div>' +
-      '<label>Contributors</label>' +
+      '<label><%- _t("Contributors") %></label>' +
       '<div class="form-group">' +
         '<input name="contributors" style="width: 300px" />' +
       '</div>' +
-      '<label>Exclude from nav</label>' +
+      '<label><%- _t("Exclude from nav") %></label>' +
       '<div class="radio">' +
         '<label>' +
           '<input type="radio" name="exclude-from-nav" value="yes" />' +
-          'Yes' +
+          '<%- _t("Yes") %>' +
         '</label>' +
       '</div>' +
       '<div class="radio">' +
         '<label>' +
           '<input type="radio" name="exclude-from-nav" value="no" />' +
-          'No' +
+          '<%- _t("No") %>' +
         '</label>' +
       '</div>' +
-      '<button class="btn btn-block btn-primary">Apply</button>'
+      '<button class="btn btn-block btn-primary"><%- _t("Apply") %></button>'
     ),
     events: {
       'click button': 'applyButtonClicked'
@@ -93,7 +93,6 @@ define([
     },
     toggle: function(button, e) {
       PopoverView.prototype.toggle.apply(this, [button, e]);
-      var self = this;
       if (!this.opened) {
         return;
       }
diff --git a/mockup/patterns/structure/js/views/rearrange.js b/mockup/patterns/structure/js/views/rearrange.js
index 311fff4..be0d134 100644
--- a/mockup/patterns/structure/js/views/rearrange.js
+++ b/mockup/patterns/structure/js/views/rearrange.js
@@ -7,25 +7,23 @@ define([
 
   var RearrangeView = PopoverView.extend({
     className: 'popover rearrange',
-    title: _.template('Rearrange items in this folder'),
+    title: _.template('<%- _t("Rearrange items in this folder") %>'),
     content: _.template(
       '<div class="form-group">' +
-        '<label>What to rearrange on</label>' +
+        '<label><%- _t("What to rearrange on") %></label>' +
         '<select name="rearrange_on" class="form-control">' +
           '<% _.each(rearrangeProperties, function(title, property) { %>' +
             '<option value="<%- property %>"><%- title %></option>' +
           '<% }); %>' +
         '</select>' +
         '<p class="help-block">' +
-          'This permanently changes the order of items in this folder.' +
-          'This operation may take a long time depending on the size ' +
-          'of the folder.' +
+          '<%- _t("This permanently changes the order of items in this folder. This operation may take a long time depending on the size of the folder.") %>' +
         '</p>' +
       '</div>' +
       '<div class="checkbox">' +
-        '<label>Reverse <input type="checkbox" name="reversed" /></label>' +
+        '<label><%- _t("Reverse") %> <input type="checkbox" name="reversed" /></label>' +
       '</div>' +
-      '<button class="btn btn-block btn-primary">Rearrange</button>'
+      '<button class="btn btn-block btn-primary"><%- _t("Rearrange") %></button>'
     ),
     events: {
       'click button': 'rearrangeButtonClicked'
diff --git a/mockup/patterns/structure/js/views/rename.js b/mockup/patterns/structure/js/views/rename.js
index 683f9a5..c4280c3 100644
--- a/mockup/patterns/structure/js/views/rename.js
+++ b/mockup/patterns/structure/js/views/rename.js
@@ -8,18 +8,18 @@ define([
 
   var PropertiesView = PopoverView.extend({
     className: 'popover rename',
-    title: _.template('Rename items'),
+    title: _.template('<%- _t("Rename items") %>'),
     content: _.template(
       '<div class="itemstoremove"></div>' +
-      '<button class="btn btn-block btn-primary">Apply</button>'
+      '<button class="btn btn-block btn-primary"><% _t("Apply") %></button>'
     ),
     itemTemplate: _.template(
       '<div class="item">' +
         '<div class="form-group">' +
           '<input name="UID" type="hidden" value="<%- UID %>" />' +
-          '<label>Title</label>' +
+          '<label><%- _t("Title") %></label>' +
           '<input class="form-control" name="newtitle" value="<%= Title %>" />' +
-          '<label>Short name</label>' +
+          '<label><%- _t("Short name") %></label>' +
           '<input class="form-control" name="newid" value="<%= id %>" />' +
         '</div>' +
       '</div>'
diff --git a/mockup/patterns/structure/js/views/selectionwell.js b/mockup/patterns/structure/js/views/selectionwell.js
index 16de48e..90c0b25 100644
--- a/mockup/patterns/structure/js/views/selectionwell.js
+++ b/mockup/patterns/structure/js/views/selectionwell.js
@@ -11,7 +11,7 @@ define([
     className: 'popover selected',
     title: _.template('<input type="text" class="filter" placeholder="Filter" />' +
                       '<a href="#" class=" remove-all">' +
-                        '<span class="glyphicon glyphicon-remove-circle"></span> remove all</a>'),
+                        '<span class="glyphicon glyphicon-remove-circle"></span> <%- _t("remove all") %></a>'),
     content: _.template(
       '<% collection.each(function(item) { %>' +
       '<%= item_template(item.toJSON()) %>' +
diff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js
index 7d4f476..101a535 100644
--- a/mockup/patterns/structure/js/views/table.js
+++ b/mockup/patterns/structure/js/views/table.js
@@ -64,7 +64,7 @@ define([
         self.folderMenu = new ActionMenu({
           app: self.app,
           model: self.folderModel,
-          header: 'Actions on current folder',
+          header: self._t('Actions on current folder'),
           canMove: false
         });
         $('.input-group-btn', self.$breadcrumbs).empty().append(self.folderMenu.render().el);
@@ -75,6 +75,7 @@ define([
     render: function() {
       var self = this;
       self.$el.html(self.template({
+        _t: self._t,
         pathParts: _.filter(
           self.app.queryHelper.getCurrentPath().split('/').slice(1),
           function(val) {
@@ -155,7 +156,7 @@ define([
       var self = this;
       // if we have a custom query going on, we do not allow sorting.
       if (self.app.inQueryMode()) {
-        self.app.setStatus('Can not order items while querying');
+        self.app.setStatus(self._t('Can not order items while querying'));
         self.$el.removeClass('order-support');
         return;
       }
diff --git a/mockup/patterns/structure/js/views/tags.js b/mockup/patterns/structure/js/views/tags.js
index bdf140c..0fa3dd0 100644
--- a/mockup/patterns/structure/js/views/tags.js
+++ b/mockup/patterns/structure/js/views/tags.js
@@ -10,16 +10,16 @@ define([
   var TagsView = PopoverView.extend({
     title: _.template('Add/Remove tags'),
     content: _.template(
-      '<label>Tags to remove</label>' +
+      '<label><%- _t("Tags to remove") %></label>' +
       '<div class="form-group">' +
         '<select multiple class="toremove" style="width: 300px">' +
         '</select>' +
       '</div>' +
-      '<label>Tags to add</label>' +
+      '<label><%- _t("Tags to add") %></label>' +
       '<div class="form-group">' +
         '<input class="toadd" style="width:300px" />' +
       '</div>' +
-      '<button class="btn btn-block btn-primary">Apply</button>'
+      '<button class="btn btn-block btn-primary"><%- _t("Apply") %></button>'
     ),
     events: {
       'click button': 'applyButtonClicked'
diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js
index c2fb8a4..fdcefbe 100644
--- a/mockup/patterns/structure/js/views/textfilter.js
+++ b/mockup/patterns/structure/js/views/textfilter.js
@@ -14,7 +14,7 @@ define([
     className: 'navbar-search form-search ui-offset-parent',
     template: _.template(
       '<div class="input-group">' +
-      '<input type="text" class="form-control search-query" placeholder="Filter">' +
+      '<input type="text" class="form-control search-query" placeholder="<%- _t("Filter") %>">' +
       '<span class="input-group-btn">' +
       '</span>' +
       '</div>'
@@ -28,12 +28,14 @@ define([
     term: null,
     timeoutId: null,
     keyupDelay: 300,
+
     initialize: function(options) {
       BaseView.prototype.initialize.apply(this, [options]);
       this.app = this.options.app;
     },
+
     render: function() {
-      this.$el.html(this.template({}));
+      this.$el.html(this.template({_t: this._t}));
       this.button = new ButtonView({
         title: 'Query'
       });
@@ -79,6 +81,7 @@ define([
       });
       return this;
     },
+
     filter: function(event) {
       var self = this;
       if (self.timeoutId) {
diff --git a/mockup/patterns/structure/js/views/upload.js b/mockup/patterns/structure/js/views/upload.js
index 5f03a70..f9c5921 100644
--- a/mockup/patterns/structure/js/views/upload.js
+++ b/mockup/patterns/structure/js/views/upload.js
@@ -9,7 +9,7 @@ define([
 
   var UploadView = PopoverView.extend({
     className: 'popover upload',
-    title: _.template('Upload files'),
+    title: _.template('<%- _t("Upload files") %>'),
     content: _.template(
       '<input type="text" name="upload" style="display:none" />' +
       '<div class="uploadify-me"></div>'),
diff --git a/mockup/patterns/structure/js/views/workflow.js b/mockup/patterns/structure/js/views/workflow.js
index ba5d5ae..1d8352c 100644
--- a/mockup/patterns/structure/js/views/workflow.js
+++ b/mockup/patterns/structure/js/views/workflow.js
@@ -8,35 +8,32 @@ define([
 
   var WorkflowView = PopoverView.extend({
     className: 'popover workflow',
-    title: _.template('Modify dates on items'),
+    title: _.template('<%- _t("Modify dates on items") %>'),
     content: _.template(
       '<form>' +
         '<fieldset>' +
           '<div class="form-group">' +
-            '<label>Comments</label>' +
+            '<label><%- _t("Comments") %></label>' +
             '<textarea class="form-control" rows="4"></textarea>' +
-            '<p class="help-block">Select the transition to be used for ' +
-              'modifying the items state.</p>' +
+            '<p class="help-block"><%- _t("Select the transition to be used for modifying the items state.") %></p>' +
           '</div>' +
           '<div class="form-group">' +
-            '<label>Change State</label>' +
-            '<p class="help-block">Select the transition to be used for ' +
-              'modifying the items state.</p>' +
+            '<label><%- _t("Change State") %></label>' +
+            '<p class="help-block"><%- _t("Select the transition to be used for modifying the items state.") %></p>' +
             '<select class="form-control" name="transition">' +
             '</select>' +
           '</div>' +
           '<div class="checkbox">' +
             '<label>' +
               '<input type="checkbox" name="recurse" />' +
-              'Include contained items?</label>' +
+              '<%- _t("Include contained items?") %></label>' +
             '<p class="help-block">' +
-              'If checked, this will attempt to modify the status of all ' +
-              'content in any selected folders and their subfolders.' +
+              '<%- _t("If checked, this will attempt to modify the status of all content in any selected folders and their subfolders.") %>' +
             '</p>' +
           '</div>' +
         '</fieldset>' +
       '</form>' +
-      '<button class="btn btn-block btn-primary">Apply</button>'
+      '<button class="btn btn-block btn-primary"><%- _t("Apply") %></button>'
     ),
     events: {
       'click button': 'applyButtonClicked'
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index c66b64d..5586023 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -32,13 +32,12 @@ define([
   'mockup-patterns-base',
   'mockup-utils',
   'mockup-patterns-structure-url/js/views/app',
-  'translate',
   'text!mockup-patterns-structure-url/templates/paging.xml',
   'text!mockup-patterns-structure-url/templates/selection_item.xml',
   'text!mockup-patterns-structure-url/templates/tablerow.xml',
   'text!mockup-patterns-structure-url/templates/table.xml',
   'text!mockup-ui-url/templates/popover.xml',
-], function($, Base, utils, AppView, _t) {
+], function($, Base, utils, AppView) {
   'use strict';
 
   var Structure = Base.extend({
diff --git a/mockup/patterns/structure/templates/actionmenu.xml b/mockup/patterns/structure/templates/actionmenu.xml
index 783fb08..dbcb901 100644
--- a/mockup/patterns/structure/templates/actionmenu.xml
+++ b/mockup/patterns/structure/templates/actionmenu.xml
@@ -7,19 +7,19 @@
     <li class="dropdown-header"><%- header %></li>
     <li class="divider"></li>
   <% } %>
-  <li class="cutItem"><a href="#">Cut</a></li>
-  <li class="copyItem"><a href="#">Copy</a></li>
+  <li class="cutItem"><a href="#"><%- _t("Cut") %></a></li>
+  <li class="copyItem"><a href="#"><%- _t("Copy") %></a></li>
   <% if(pasteAllowed && attributes.is_folderish){ %>
-    <li class="pasteItem"><a href="#">Paste</a></li>
+    <li class="pasteItem"><a href="#"><%- _t("Paste") %></a></li>
   <% } %>
   <% if(!inQueryMode && canMove){ %>
-    <li class="move-top"><a href="#">Move to top of folder</a></li>
-    <li class="move-bottom"><a href="#">Move to bottom of folder</a></li>
+    <li class="move-top"><a href="#"><%- _t("Move to top of folder") %></a></li>
+    <li class="move-bottom"><a href="#"><%- _t("Move to bottom of folder") %></a></li>
   <% } %>
   <% if(!attributes.is_folderish && canSetDefaultPage){ %>
-    <li class="set-default-page"><a href="#">Set as default page</a></li>
+    <li class="set-default-page"><a href="#"><%- _t("Set as default page") %></a></li>
   <% } %>
-  <li class="openItem"><a href="#">Open</a></li>
-  <li class="editItem"><a href="#">Edit</a></li>
+  <li class="openItem"><a href="#"><%- _t("Open") %></a></li>
+  <li class="editItem"><a href="#"><%- _t("Edit") %></a></li>
 </ul>
 
diff --git a/mockup/patterns/structure/templates/paging.xml b/mockup/patterns/structure/templates/paging.xml
index e28a687..cc25272 100644
--- a/mockup/patterns/structure/templates/paging.xml
+++ b/mockup/patterns/structure/templates/paging.xml
@@ -27,7 +27,7 @@
   </ul>
 
   <ul class="pagination pagination-sm">
-    <li class="disabled"><a href="#">Show:</a></li>
+    <li class="disabled"><a href="#"><%- _t("Show:") %></a></li>
     <li class="serverhowmany serverhowmany15 <% if(perPage == 15){ %>disabled<% } %>">
       <a href="#" class="">15</a>
     </li>
@@ -42,10 +42,10 @@
   <ul class="pagination pagination-sm">
     <li class="disabled">
       <a href="#">
-        Page: <span class="current"><%= currentPage %></span>
-        of
+        <%- _t("Page:") %> <span class="current"><%= currentPage %></span>
+        <%- _t("of") %>
         <span class="total"><%= totalPages %></span>
-              shown
+              <%- _t("shown") %>
       </a>
     </li>
   </ul>
diff --git a/mockup/patterns/structure/templates/table.xml b/mockup/patterns/structure/templates/table.xml
index 429d67b..dfa0df9 100644
--- a/mockup/patterns/structure/templates/table.xml
+++ b/mockup/patterns/structure/templates/table.xml
@@ -37,7 +37,7 @@
           <th><%- availableColumns[column] %></th>
         <% } %>
       <% }); %>
-      <th>Actions</th>
+      <th><%- _t("Actions") %></th>
     </tr>
   </thead>
   <tbody>
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index 19fed0e..6699641 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -48,9 +48,9 @@ define([
   'dropzone',
   'text!mockup-patterns-upload-url/templates/upload.xml',
   'text!mockup-patterns-upload-url/templates/preview.xml',
-  'translate'
+  'mockup-i18n'
 ], function($, _, Base, RelatedItems, Dropzone,
-            UploadTemplate, PreviewTemplate, _t) {
+            UploadTemplate, PreviewTemplate, i18n) {
   'use strict';
 
   /* we do not want this plugin to auto discover */
@@ -86,22 +86,23 @@ define([
         basePath: '/',
         vocabularyUrl: null,
         width: 500,
-        maximumSelectionSize: 1,
-        placeholder: _t('Search for item on site...')
+        maximumSelectionSize: 1
       }
     },
 
-    //placeholder: 'Search for item on site...'
     init: function() {
       var self = this,
           template = UploadTemplate;
 
+      i18n.loadCatalog('widgets');
+      self._t = i18n.MessageFactory('widgets');
+
       // values that will change current processing
       self.currentPath = self.options.currentPath;
       self.numFiles = 0;
       self.currentFile = 0;
 
-      template = _.template(template, {_t: _t});
+      template = _.template(template, {_t: self._t});
       self.$el.addClass(self.options.className);
       self.$el.append(template);
 
@@ -364,13 +365,13 @@ define([
         chunkSize: chunkSize
       }).fail(function() {
         if(window.DEBUG){
-          console.alert(_t('Error uploading with TUS resumable uploads'));
+          console.alert(self._t('Error uploading with TUS resumable uploads'));
         }
         file.status = Dropzone.ERROR;
       }).progress(function(e, bytesUploaded, bytesTotal) {
         var percentage = (bytesUploaded / bytesTotal * 100);
         self.$progress.attr('aria-valuenow', percentage).css('width', percentage + '%');
-        self.$progress.html(_t('uploading...') + '<br />' +
+        self.$progress.html(self._t('uploading...') + '<br />' +
                             self.formatBytes(bytesUploaded) +
                             ' / ' + self.formatBytes(bytesTotal));
       }).done(function(url, file) {
diff --git a/mockup/patterns/upload/templates/upload.xml b/mockup/patterns/upload/templates/upload.xml
index b29f1ef..4531640 100644
--- a/mockup/patterns/upload/templates/upload.xml
+++ b/mockup/patterns/upload/templates/upload.xml
@@ -1,8 +1,7 @@
 <div class="upload-container upload-multiple">
-    <h2 class="title">Upload stuff here</h2>
+    <h2 class="title"><%- _t("Upload stuff here") %></h2>
     <p class="help">
-        Just drag N drop stuff on the area below
-        or press "upload" button.
+        <%- _t('Just drag N drop stuff on the area below or press "upload" button.') %>
     </p>
     <div class="upload-area">
         <div class="fallback">
@@ -13,7 +12,7 @@
             <div class="col-md-9">
                 <input
                     id="fakeUploadFile"
-                    placeholder="Choose File"
+                    placeholder="<%- _t("Choose File") %>"
                     disabled="disabled"
                     />
             </div>
@@ -30,9 +29,9 @@
             </div>
             <div class="controls">
                 <div class="path">
-                    <label>Upload to...</label>
+                    <label><%- _t("Upload to...") %></label>
                     <p class="form-help">
-                        If nothing selected files we be added to current context.
+                        <%- _t("If nothing selected files we be added to current context.") %>
                     </p>
                     <input
                         type="text"
@@ -56,7 +55,7 @@
                         <button
                             type="button"
                             class="btn btn-primary upload-all">
-                            Upload
+                            <%- _t("Upload") %>
                         </button>
                     </div>
                 </div>


